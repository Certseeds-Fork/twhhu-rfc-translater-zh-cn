{
  "title": {
    "text": "RFC 2741:  Agent Extensibility (AgentX) Protocol Version 1 ",
    "zh-CHS": "RFC 2741"
  },
  "number": 2741,
  "created_at": "2021-10-24 08:41:10.461837+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                          M. Daniele\nRequest for Comments: 2741                    Compaq Computer Corporation\nObsoletes: 2257                                                 B. Wijnen\nCategory: Standards Track          T.J. Watson Research Center, IBM Corp.\n                                                          M. Ellison, Ed.\n                                        Ellison Software Consulting, Inc.\n                                                        D. Francisco. Ed.\n                                                      Cisco Systems, Inc.\n                                                             January 2000",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Agent Extensibility (AgentX) Protocol Version 1",
      "zh-CHS": "代理扩展性（AgentX）协议版本1"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "zh-CHS": "本备忘录的状况"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "zh-CHS": "本文件规定了互联网社区的互联网标准跟踪协议，并要求进行讨论和提出改进建议。有关本协议的标准化状态和状态，请参考当前版本的“互联网官方协议标准”（STD 1）。本备忘录的分发不受限制。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "zh-CHS": "版权所有（C）互联网协会（2000年）。版权所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "This memo defines a standardized framework for extensible SNMP agents. It defines processing entities called master agents and subagents, a protocol (AgentX) used to communicate between them, and the elements of procedure by which the extensible agent processes SNMP protocol messages. This memo obsoletes RFC 2257.",
      "zh-CHS": "本备忘录定义了可扩展SNMP代理的标准化框架。它定义了称为主代理和子代理的处理实体、用于它们之间通信的协议（AgentX）以及可扩展代理处理SNMP协议消息的过程元素。本备忘录废除RFC 2257。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1. Introduction.....................................................4\n2. The SNMP Management Framework....................................4\n  2.1. A Note on Terminology........................................5\n3. Extending the MIB................................................5\n  3.1. Motivation for AgentX........................................6\n4. AgentX Framework.................................................6\n  4.1. AgentX Roles.................................................7\n  4.2. Applicability................................................8\n  4.3. Design Features of AgentX....................................9\n  4.4. Non-Goals...................................................10",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "5. AgentX Encodings................................................11\n  5.1. Object Identifier...........................................11\n  5.2. SearchRange.................................................13\n  5.3. Octet String................................................14\n  5.4. Value Representation........................................15\n6. Protocol Definitions............................................17\n  6.1. AgentX PDU Header...........................................17\n    6.1.1. Context.................................................20\n  6.2. AgentX PDUs.................................................20\n    6.2.1. The agentx-Open-PDU.....................................20\n    6.2.2. The agentx-Close-PDU....................................22\n    6.2.3. The agentx-Register-PDU.................................23\n    6.2.4. The agentx-Unregister-PDU...............................27\n    6.2.5. The agentx-Get-PDU......................................29\n    6.2.6. The agentx-GetNext-PDU..................................30\n    6.2.7. The agentx-GetBulk-PDU..................................32\n    6.2.8. The agentx-TestSet-PDU..................................34\n    6.2.9. The agentx-CommitSet, -UndoSet, -CleanupSet PDUs........35\n    6.2.10. The agentx-Notify-PDU..................................36\n    6.2.11. The agentx-Ping-PDU....................................37\n    6.2.12. The agentx-IndexAllocate-PDU...........................37\n    6.2.13. The agentx-IndexDeallocate-PDU.........................38\n    6.2.14. The agentx-AddAgentCaps-PDU............................39\n    6.2.15. The agentx-RemoveAgentCaps-PDU.........................41\n    6.2.16. The agentx-Response-PDU................................43\n7. Elements of Procedure...........................................45\n  7.1. Processing AgentX Administrative Messages...................45\n    7.1.1. Processing the agentx-Open-PDU..........................46\n    7.1.2. Processing the agentx-IndexAllocate-PDU.................47\n    7.1.3. Processing the agentx-IndexDeallocate-PDU...............49\n    7.1.4. Processing the agentx-Register-PDU......................50\n      7.1.4.1. Handling Duplicate and Overlapping Subtrees.........50\n      7.1.4.2. Registering Stuff...................................51\n        7.1.4.2.1. Registration Priority...........................51\n        7.1.4.2.2. Index Allocation................................51\n        7.1.4.2.3. Examples........................................53\n    7.1.5. Processing the agentx-Unregister-PDU....................55\n    7.1.6. Processing the agentx-AddAgentCaps-PDU..................55\n    7.1.7. Processing the agentx-RemoveAgentCaps-PDU...............55\n    7.1.8. Processing the agentx-Close-PDU.........................56\n    7.1.9. Detecting Connection Loss...............................56\n    7.1.10. Processing the agentx-Notify-PDU.......................56\n    7.1.11. Processing the agentx-Ping-PDU.........................57\n  7.2. Processing Received SNMP Protocol Messages..................58\n    7.2.1. Dispatching AgentX PDUs.................................58\n      7.2.1.1. agentx-Get-PDU......................................61\n      7.2.1.2. agentx-GetNext-PDU..................................61\n      7.2.1.3. agentx-GetBulk-PDU..................................62",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "      7.2.1.4. agentx-TestSet-PDU..................................63\n      7.2.1.5. Dispatch............................................64\n    7.2.2. Subagent Processing.....................................64\n    7.2.3. Subagent Processing of agentx-Get, GetNext, GetBulk-PDUs65\n      7.2.3.1. Subagent Processing of the agentx-Get-PDU...........65\n      7.2.3.2. Subagent Processing of the agentx-GetNext-PDU.......66\n      7.2.3.3. Subagent Processing of the agentx-GetBulk-PDU.......66\n    7.2.4. Subagent Processing of agentx-TestSet, -CommitSet,\n           -UndoSet, -CleanupSet-PDUs..............................67\n      7.2.4.1. Subagent Processing of the agentx-TestSet-PDU.......68\n      7.2.4.2. Subagent Processing of the agentx-CommitSet-PDU.....69\n      7.2.4.3. Subagent Processing of the agentx-UndoSet-PDU.......69\n      7.2.4.4. Subagent Processing of the agentx-CleanupSet-PDU....70\n    7.2.5. Master Agent Processing of AgentX Responses.............70\n      7.2.5.1. Common Processing of All AgentX Response PDUs.......70\n      7.2.5.2. Processing of Responses to agentx-Get-PDUs..........70\n      7.2.5.3. Processing of Responses to agentx-GetNext-PDU and\n               agentx-GetBulk-PDU..................................71\n      7.2.5.4. Processing of Responses to agentx-TestSet-PDUs......72\n      7.2.5.5. Processing of Responses to agentx-CommitSet-PDUs....73\n      7.2.5.6. Processing of Responses to agentx-UndoSet-PDUs......74\n    7.2.6. Sending the SNMP Response-PDU...........................74\n    7.2.7. MIB Views...............................................74\n  7.3. State Transitions...........................................75\n    7.3.1. Set Transaction States..................................75\n    7.3.2. Transport Connection States.............................77\n    7.3.3. Session States..........................................78\n8. Transport Mappings..............................................79\n  8.1. AgentX over TCP.............................................79\n    8.1.1. Well-known Values.......................................79\n    8.1.2. Operation...............................................79\n  8.2. AgentX over UNIX-domain Sockets.............................80\n    8.2.1. Well-known Values.......................................80\n    8.2.2. Operation...............................................80\n9. Security Considerations.........................................81\n10. Acknowledgements...............................................82\n11. Authors' and Editor's Addresses................................83\n12. References.....................................................84\n13. Notices........................................................86\nAppendix A. Changes relative to RFC 2257 ..........................87\nFull Copyright Statement ..........................................91",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "This memo defines a standardized framework for extensible SNMP agents. It defines processing entities called master agents and subagents, a protocol (AgentX) used to communicate between them, and the elements of procedure by which the extensible agent processes SNMP protocol messages.",
      "zh-CHS": "本备忘录定义了可扩展SNMP代理的标准化框架。它定义了称为主代理和子代理的处理实体、用于它们之间通信的协议（AgentX）以及可扩展代理处理SNMP协议消息的过程元素。"
    },
    {
      "indent": 3,
      "text": "This memo obsoletes RFC 2257. It is worth noting that most of the changes are for the purpose of clarification. The only changes affecting AgentX protocol messages on the wire are:",
      "zh-CHS": "本备忘录废除RFC 2257。值得注意的是，大多数修改都是为了澄清。影响导线上AgentX协议消息的唯一更改是："
    },
    {
      "indent": 6,
      "text": "- The agentx-Notify-PDU and agentx-Close-PDU now generate an agentx-Response-PDU",
      "zh-CHS": "- agentx Notify PDU和agentx Close PDU现在生成agentx响应PDU"
    },
    {
      "indent": 6,
      "text": "- Three new error codes are available: parseFailed(266), requestDenied(267), and processingError(268)",
      "zh-CHS": "- 有三个新的错误代码可用：parseFailed（266）、requestDenied（267）和processingError（268）"
    },
    {
      "indent": 3,
      "text": "Appendix A provides a detailed list of changes relative to RFC 2257.",
      "zh-CHS": "附录A提供了与RFC 2257相关的变更的详细列表。"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [27].",
      "zh-CHS": "本文件中的关键词“必须”、“不得”、“要求”、“应”、“不应”、“应”、“不应”、“建议”、“可”和“可选”应按照[27]中所述进行解释。"
    },
    {
      "indent": 0,
      "text": "2. The SNMP Management Framework",
      "section_title": true,
      "zh-CHS": "2. SNMP管理框架"
    },
    {
      "indent": 3,
      "text": "The SNMP Management Framework presently consists of five major components:",
      "zh-CHS": "SNMP管理框架目前由五个主要组件组成："
    },
    {
      "indent": 3,
      "text": "An overall architecture, described in RFC 2571 [1].",
      "zh-CHS": "RFC 2571[1]中描述的总体架构。"
    },
    {
      "indent": 3,
      "text": "Mechanisms for describing and naming objects and events for the purpose of management. The first version of this Structure of Management Information (SMI) is called SMIv1 and described in STD 16, RFC 1155 [2], STD 16, RFC 1212 [3] and RFC 1215 [4]. The second version, called SMIv2, is described in STD 58, RFC 2578 [5], STD 58, RFC 2579 [6] and STD 58, RFC 2580 [7].",
      "zh-CHS": "为管理目的描述和命名对象和事件的机制。这种管理信息结构（SMI）的第一个版本称为SMIv1，并在STD 16、RFC 1155[2]、STD 16、RFC 1212[3]和RFC 1215[4]中进行了描述。第二个版本称为SMIv2，在STD 58、RFC 2578[5]、STD 58、RFC 2579[6]和STD 58、RFC 2580[7]中进行了描述。"
    },
    {
      "indent": 3,
      "text": "Message protocols for transferring management information. The first version of the SNMP message protocol is called SNMPv1 and described in STD 15, RFC 1157 [8]. A second version of the SNMP message protocol, which is not an Internet standards track protocol, is called SNMPv2c and described in RFC 1901 [9] and RFC 1906 [10]. The third version of the message protocol is called SNMPv3 and described in RFC 1906 [10], RFC 2572 [11] and RFC 2574 [12].",
      "zh-CHS": "用于传输管理信息的消息协议。SNMP消息协议的第一个版本称为SNMPv1，在STD 15、RFC 1157[8]中进行了描述。SNMP消息协议的第二个版本不是互联网标准跟踪协议，称为SNMPv2c，在RFC 1901[9]和RFC 1906[10]中进行了描述。消息协议的第三个版本称为SNMPv3，在RFC 1906[10]、RFC 2572[11]和RFC 2574[12]中进行了描述。"
    },
    {
      "indent": 3,
      "text": "Protocol operations for accessing management information. The first set of protocol operations and associated PDU formats is described in",
      "zh-CHS": "访问管理信息的协议操作。中描述了第一组协议操作和相关PDU格式"
    },
    {
      "indent": 3,
      "text": "STD 15, RFC 1157 [8]. A second set of protocol operations and associated PDU formats is described in RFC 1905 [13].",
      "zh-CHS": "标准15，RFC 1157[8]。RFC 1905[13]中描述了第二组协议操作和相关PDU格式。"
    },
    {
      "indent": 3,
      "text": "A set of fundamental applications described in RFC 2573 [14] and the view-based access control mechanism described in RFC 2575 [15].",
      "zh-CHS": "RFC 2573[14]中描述的一组基本应用程序和RFC 2575[15]中描述的基于视图的访问控制机制。"
    },
    {
      "indent": 3,
      "text": "A more detailed introduction to the current SNMP Management Framework can be found in RFC 2570 [16].",
      "zh-CHS": "有关当前SNMP管理框架的更详细介绍，请参见RFC 2570[16]。"
    },
    {
      "indent": 3,
      "text": "Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB. Objects in the MIB are defined using the mechanisms defined in the SMI.",
      "zh-CHS": "托管对象通过虚拟信息存储（称为管理信息库或MIB）进行访问。MIB中的对象是使用SMI中定义的机制定义的。"
    },
    {
      "indent": 0,
      "text": "2.1. A Note on Terminology",
      "section_title": true,
      "zh-CHS": "2.1. 术语注释"
    },
    {
      "indent": 3,
      "text": "The term \"variable\" refers to an instance of a non-aggregate object type defined according to the conventions set forth in the SMIv2 (STD 58, RFC 2578, [5]) or the textual conventions based on the SMIv2 (STD 58, RFC 2579 [6]). The term \"variable binding\" normally refers to the pairing of the name of a variable and its associated value. However, if certain kinds of exceptional conditions occur during processing of a retrieval request, a variable binding will pair a name and an indication of that exception.",
      "zh-CHS": "术语“变量”是指根据SMIv2（STD 58，RFC 2578[5]）中规定的约定或基于SMIv2（STD 58，RFC 2579[6]）的文本约定定义的非聚合对象类型的实例。术语“变量绑定”通常指变量名称与其关联值的配对。但是，如果在处理检索请求期间发生某些类型的异常情况，则变量绑定会将名称与该异常的指示配对。"
    },
    {
      "indent": 3,
      "text": "A variable-binding list is a simple list of variable bindings.",
      "zh-CHS": "变量绑定列表是变量绑定的简单列表。"
    },
    {
      "indent": 3,
      "text": "The name of a variable is an OBJECT IDENTIFIER, which is the concatenation of the OBJECT IDENTIFIER of the corresponding object type together with an OBJECT IDENTIFIER fragment identifying the instance. The OBJECT IDENTIFIER of the corresponding object-type is called the OBJECT IDENTIFIER prefix of the variable.",
      "zh-CHS": "变量的名称是对象标识符，它是对应对象类型的对象标识符与标识实例的对象标识符片段的串联。相应对象类型的对象标识符称为变量的对象标识符前缀。"
    },
    {
      "indent": 0,
      "text": "3. Extending the MIB",
      "section_title": true,
      "zh-CHS": "3. 扩展MIB"
    },
    {
      "indent": 3,
      "text": "New MIB modules that extend the Internet-standard MIB are continuously being defined by various IETF working groups. It is also common for enterprises or individuals to create or extend enterprise-specific or experimental MIBs.",
      "zh-CHS": "各种IETF工作组正在不断定义扩展Internet标准MIB的新MIB模块。企业或个人创建或扩展特定于企业的或实验性的MIB也是很常见的。"
    },
    {
      "indent": 3,
      "text": "As a result, managed devices are frequently complex collections of manageable components that have been independently installed on a managed node. Each component provides instrumentation for the managed objects defined in the MIB module(s) it implements.",
      "zh-CHS": "因此，托管设备通常是独立安装在托管节点上的可管理组件的复杂集合。每个组件都为其实现的MIB模块中定义的托管对象提供检测。"
    },
    {
      "indent": 3,
      "text": "The SNMP framework does not describe how the set of managed objects supported by a particular agent may be changed dynamically.",
      "zh-CHS": "SNMP框架没有描述如何动态更改特定代理支持的托管对象集。"
    },
    {
      "indent": 0,
      "text": "3.1. Motivation for AgentX",
      "section_title": true,
      "zh-CHS": "3.1. AgentX的动机"
    },
    {
      "indent": 3,
      "text": "This very real need to dynamically extend the management objects within a node has given rise to a variety of \"extensible agents\", which typically comprise",
      "zh-CHS": "动态扩展节点内的管理对象的这种非常现实的需求已经产生了各种“可扩展代理”，它们通常包括"
    },
    {
      "indent": 6,
      "text": "- a \"master\" agent that is available on the standard transport address and that accepts SNMP protocol messages",
      "zh-CHS": "- 在标准传输地址上可用并接受SNMP协议消息的“主”代理"
    },
    {
      "indent": 6,
      "text": "- a set of \"subagents\" that each contain management instrumentation",
      "zh-CHS": "- 一组“子代理”，每个子代理都包含管理工具"
    },
    {
      "indent": 6,
      "text": "- a protocol that operates between the master agent and subagents, permitting subagents to \"connect\" to the master agent, and the master agent to multiplex received SNMP protocol messages amongst the subagents.",
      "zh-CHS": "- 一种在主代理和子代理之间运行的协议，允许子代理“连接”到主代理，主代理在子代理之间多路传输接收到的SNMP协议消息。"
    },
    {
      "indent": 6,
      "text": "- a set of tools to aid subagent development, and a runtime (API) environment that hides much of the protocol operation between a subagent and the master agent.",
      "zh-CHS": "- 一组用于辅助子代理开发的工具，以及一个运行时（API）环境，该环境隐藏了子代理和主代理之间的大部分协议操作。"
    },
    {
      "indent": 3,
      "text": "The wide deployment of extensible SNMP agents, coupled with the lack of Internet standards in this area, makes it difficult to field SNMP-manageable applications. A vendor may have to support several different subagent environments (APIs) in order to support different target platforms.",
      "zh-CHS": "可扩展SNMP代理的广泛部署，加上该领域缺乏互联网标准，使得难以部署SNMP可管理的应用程序。为了支持不同的目标平台，供应商可能必须支持多个不同的子代理环境（API）。"
    },
    {
      "indent": 3,
      "text": "It can also become quite cumbersome to configure subagents and (possibly multiple) master agents on a particular managed node.",
      "zh-CHS": "在特定的受管节点上配置子代理和（可能有多个）主代理也会变得相当麻烦。"
    },
    {
      "indent": 3,
      "text": "Specifying a standard protocol for agent extensibility (AgentX) provides the technical foundation required to solve both of these problems. Independently developed AgentX-capable master agents and subagents will be able to interoperate at the protocol level. Vendors can continue to differentiate their products in all other respects.",
      "zh-CHS": "为代理扩展性（AgTunx）指定一个标准协议提供了解决这两个问题所需的技术基础。独立开发的AgentX主代理和子代理将能够在协议级别进行互操作。供应商可以继续在所有其他方面使其产品与众不同。"
    },
    {
      "indent": 0,
      "text": "4. AgentX Framework",
      "section_title": true,
      "zh-CHS": "4. AgentX框架"
    },
    {
      "indent": 3,
      "text": "Within the SNMP framework, a managed node contains a processing entity, called an agent, which has access to management information.",
      "zh-CHS": "在SNMP框架内，受管节点包含一个处理实体，称为代理，它可以访问管理信息。"
    },
    {
      "indent": 3,
      "text": "Within the AgentX framework, an agent is further defined to consist of:",
      "zh-CHS": "在AgentX框架内，代理进一步定义为包括："
    },
    {
      "indent": 6,
      "text": "- a single processing entity called the master agent, which sends and receives SNMP protocol messages in an agent role (as specified by the SNMP framework documents) but typically has little or no direct access to management information.",
      "zh-CHS": "- 称为主代理的单个处理实体，以代理角色（由SNMP框架文档指定）发送和接收SNMP协议消息，但通常很少或没有对管理信息的直接访问。"
    },
    {
      "indent": 6,
      "text": "- zero or more processing entities called subagents, which are \"shielded\" from the SNMP protocol messages processed by the master agent, but which have access to management information.",
      "zh-CHS": "- 零个或多个被称为子代理的处理实体，这些子代理“屏蔽”主代理处理的SNMP协议消息，但可以访问管理信息。"
    },
    {
      "indent": 3,
      "text": "The master and subagent entities communicate via AgentX protocol messages, as specified in this memo. Other interfaces (if any) on these entities, and their associated protocols, are outside the scope of this document. While some of the AgentX protocol messages appear similar in syntax and semantics to the SNMP, bear in mind that AgentX is not SNMP.",
      "zh-CHS": "如本备忘录所述，主代理和子代理实体通过AgentX协议消息进行通信。这些实体上的其他接口（如有）及其相关协议不在本文档范围内。虽然有些AgentX协议消息在语法和语义上与SNMP类似，但请记住AgentX不是SNMP。"
    },
    {
      "indent": 3,
      "text": "The internal operations of AgentX are invisible to an SNMP entity operating in a manager role. From a manager's point of view, an extensible agent behaves exactly as would a non-extensible (monolithic) agent that has access to the same management instrumentation.",
      "zh-CHS": "AgentX的内部操作对于以管理员角色运行的SNMP实体不可见。从管理者的角度来看，可扩展代理的行为与可访问相同管理工具的非可扩展（单片）代理的行为完全相同。"
    },
    {
      "indent": 3,
      "text": "This transparency to managers is a fundamental requirement of AgentX, and is what differentiates AgentX subagents from SNMP proxy agents.",
      "zh-CHS": "这种对管理者的透明性是AgentX的基本要求，也是AgentX子代理与SNMP代理的区别所在。"
    },
    {
      "indent": 0,
      "text": "4.1. AgentX Roles",
      "section_title": true,
      "zh-CHS": "4.1. 代理角色"
    },
    {
      "indent": 3,
      "text": "An entity acting in a master agent role performs the following functions:",
      "zh-CHS": "担任主代理角色的实体执行以下功能："
    },
    {
      "indent": 6,
      "text": "- Accepts AgentX session establishment requests from subagents.",
      "zh-CHS": "- 接受来自子代理的AgentX会话建立请求。"
    },
    {
      "indent": 6,
      "text": "- Accepts registration of MIB regions by subagents.",
      "zh-CHS": "- 接受子代理对MIB区域的注册。"
    },
    {
      "indent": 6,
      "text": "- Sends and accepts SNMP protocol messages on the agent's specified transport addresses.",
      "zh-CHS": "- 在代理指定的传输地址上发送和接受SNMP协议消息。"
    },
    {
      "indent": 6,
      "text": "- Implements the agent role Elements of Procedure specified for the administrative framework applicable to the SNMP protocol message, except where they specify performing management operations. (The application of MIB views, and the access control policy for the managed node, are implemented by the master agent.)",
      "zh-CHS": "- 实现为适用于SNMP协议消息的管理框架指定的过程的代理角色元素，除非它们指定执行管理操作。（MIB视图的应用程序和受管节点的访问控制策略由主代理实现。）"
    },
    {
      "indent": 6,
      "text": "- Provides instrumentation for the MIB objects defined in RFC 1907 [17], and for any MIB objects relevant to any administrative framework it supports.",
      "zh-CHS": "- 为RFC 1907[17]中定义的MIB对象以及与其支持的任何管理框架相关的任何MIB对象提供检测。"
    },
    {
      "indent": 6,
      "text": "- Sends and receives AgentX protocol messages to access management information, based on the current registry of MIB regions.",
      "zh-CHS": "- 根据MIB区域的当前注册表，发送和接收AgentX协议消息以访问管理信息。"
    },
    {
      "indent": 6,
      "text": "- Forwards notifications on behalf of subagents.",
      "zh-CHS": "- 代表子代理转发通知。"
    },
    {
      "indent": 3,
      "text": "An entity acting in a subagent role performs the following functions:",
      "zh-CHS": "以子代理角色行事的实体执行以下功能："
    },
    {
      "indent": 6,
      "text": "- Initiates AgentX sessions with the master agent.",
      "zh-CHS": "- 启动与主代理的AgentX会话。"
    },
    {
      "indent": 6,
      "text": "- Registers MIB regions with the master agent.",
      "zh-CHS": "- 向主代理注册MIB区域。"
    },
    {
      "indent": 6,
      "text": "- Instantiates managed objects.",
      "zh-CHS": "- 实例化托管对象。"
    },
    {
      "indent": 6,
      "text": "- Binds OIDs within its registered MIB regions to actual variables.",
      "zh-CHS": "- 将其注册的MIB区域内的OID绑定到实际变量。"
    },
    {
      "indent": 6,
      "text": "- Performs management operations on variables.",
      "zh-CHS": "- 对变量执行管理操作。"
    },
    {
      "indent": 6,
      "text": "- Initiates notifications.",
      "zh-CHS": "- 启动通知。"
    },
    {
      "indent": 0,
      "text": "4.2. Applicability",
      "section_title": true,
      "zh-CHS": "4.2. 适用性"
    },
    {
      "indent": 3,
      "text": "It is intended that this memo specify the smallest amount of required behavior necessary to achieve the largest benefit, that is, to cover a very large number of possible MIB implementations and configurations with minimum complexity and low \"cost of entry\".",
      "zh-CHS": "本备忘录旨在规定实现最大效益所需的最小行为量，即以最小的复杂性和低“进入成本”覆盖大量可能的MIB实现和配置。"
    },
    {
      "indent": 3,
      "text": "This section discusses several typical usage scenarios.",
      "zh-CHS": "本节讨论几个典型的使用场景。"
    },
    {
      "indent": 3,
      "text": "1) Subagents implement separate MIB modules -- for example, subagent `A' implements \"mib-2\", subagent `B' implements \"host-resources\".",
      "zh-CHS": "1) 子代理实现单独的MIB模块——例如，子代理“A”实现“MIB-2”，子代理“B”实现“主机资源”。"
    },
    {
      "indent": 6,
      "text": "It is anticipated that this will be the most common subagent configuration.",
      "zh-CHS": "预计这将是最常见的子代理配置。"
    },
    {
      "indent": 3,
      "text": "2) Subagents implement rows in a \"simple table\". A simple table is one in which row creation is not specified, and for which the MIB does not define an object that counts entries in the table. Examples of simple tables are rdbmsDbTable, udpTable, and hrSWRunTable.",
      "zh-CHS": "2) 子代理在“简单表”中实现行。简单表是其中未指定行创建，并且MIB未为其定义统计表中条目的对象的表。简单表的示例有rdbmsDbTable、udpTable和hrSWRunTable。"
    },
    {
      "indent": 6,
      "text": "This is the most commonly defined type of MIB table, and probably represents the next most typical configuration that AgentX would support.",
      "zh-CHS": "这是最常见的定义类型的MIB表，可能代表了AgentX支持的下一个最典型的配置。"
    },
    {
      "indent": 3,
      "text": "3) Subagents share MIBs along non-row partitions. Subagents register \"chunks\" of the MIB that represent multiple rows, due to the nature of the MIB's index structure. Examples include registering ipNetToMediaEntry.n, where n represents the ifIndex value for an interface implemented by the subagent, and tcpConnEntry.a.b.c.d, where a.b.c.d represents an IP address on an interface implemented by the subagent.",
      "zh-CHS": "3) 子代理沿非行分区共享MIB。由于MIB索引结构的性质，子代理注册代表多行的MIB的“块”。示例包括注册ipNetToMediaEntry.n，其中n表示子代理实现的接口的ifIndex值，以及tcpconEntry.a.b.c.d，其中a.b.c.d表示子代理实现的接口上的IP地址。"
    },
    {
      "indent": 3,
      "text": "AgentX supports these three common configurations, and all permutations of them, completely. The consensus is that they comprise a very large majority of current and likely future uses of multi-vendor extensible agent configurations.",
      "zh-CHS": "AgentX完全支持这三种常见配置及其所有排列。共识是，它们构成了当前和未来可能使用的多供应商可扩展代理配置的绝大多数。"
    },
    {
      "indent": 3,
      "text": "4) Subagents implement rows in tables that permit row creation, for example, the RMON historyControlTable. To implement row creation in such tables, at least one AgentX subagent must register at a point \"higher\" in the OID tree than an individual row (per AgentX's dispatching procedure).",
      "zh-CHS": "4) 子代理在表中实现允许创建行的行，例如RMON historyControlTable。要在此类表中实现行创建，至少有一个AgentX子代理必须在OID树中比单个行“高”的位置注册（按照AgentX的调度过程）。"
    },
    {
      "indent": 3,
      "text": "5) Subagents implement rows in tables whose MIB also defines an object that counts entries in the table, for example the MIB-2 ifTable (due to ifNumber). The subagent that implements such a counter object (like ifNumber) must go beyond AgentX to correctly implement it. This is an implementation issue (and most new MIB designs no longer include such objects).",
      "zh-CHS": "5) 子代理在表中实现行，这些表的MIB还定义了一个对表中的条目进行计数的对象，例如MIB-2 ifTable（由于ifNumber）。实现此类计数器对象（如ifNumber）的子代理必须超越AgentX才能正确实现它。这是一个实现问题（大多数新的MIB设计不再包含此类对象）。"
    },
    {
      "indent": 3,
      "text": "Scenarios in these latter 2 categories were thought to occur somewhat rarely in configurations where subagents are independently implemented by different vendors. The focus of a standard protocol, however, must be in just those areas where multi-vendor interoperability must be assured.",
      "zh-CHS": "在子代理由不同供应商独立实现的配置中，后两类场景被认为很少出现。然而，标准协议的重点必须放在那些必须确保多供应商互操作性的领域。"
    },
    {
      "indent": 3,
      "text": "Note that it would be inefficient (due to AgentX registration overhead) to share a table among AgentX subagents if the table contains very dynamic instances, and each subagent registers fully qualified instances. ipRouteTable could be an example of such a table in some environments.",
      "zh-CHS": "请注意，如果表包含非常动态的实例，并且每个子代理都注册完全限定的实例，那么在AgentX子代理之间共享表将效率低下（由于AgentX注册开销）。在某些环境中，ipRouteTable可能是此类表的一个示例。"
    },
    {
      "indent": 0,
      "text": "4.3. Design Features of AgentX",
      "section_title": true,
      "zh-CHS": "4.3. AgentX的设计特点"
    },
    {
      "indent": 3,
      "text": "The primary features of the design described in this memo are:",
      "zh-CHS": "本备忘录中所述设计的主要特点是："
    },
    {
      "indent": 3,
      "text": "1) A general architectural division of labor between master agent and subagent: The master agent is MIB ignorant and SNMP omniscient, while the subagent is SNMP ignorant and MIB omniscient (for the MIB variables it instantiates). That is, master agents, exclusively, are concerned with SNMP protocol operations and the translations to and from AgentX protocol operations needed to",
      "zh-CHS": "1) 主代理和子代理之间的一般体系结构分工：主代理是MIB无知和SNMP全知的，而子代理是SNMP无知和MIB全知的（对于它实例化的MIB变量）。也就是说，主代理专门负责SNMP协议操作以及与AgentX协议操作之间的转换"
    },
    {
      "indent": 6,
      "text": "carry them out; subagents are exclusively concerned with management instrumentation; and neither should intrude on the other's territory.",
      "zh-CHS": "落实,；子代理专门负责管理仪表；任何一方都不应侵犯对方的领土。"
    },
    {
      "indent": 3,
      "text": "2) A standard protocol and \"rules of engagement\" to enable interoperability between management instrumentation and extensible agents.",
      "zh-CHS": "2) 一个标准协议和“参与规则”，用于实现管理工具和可扩展代理之间的互操作性。"
    },
    {
      "indent": 3,
      "text": "3) Mechanisms for independently developed subagents to integrate into the extensible agent on a particular managed node in such a way that they need not be aware of any other existing subagents.",
      "zh-CHS": "3) 独立开发的子代理以不需要知道任何其他现有子代理的方式集成到特定托管节点上的可扩展代理的机制。"
    },
    {
      "indent": 3,
      "text": "4) A simple, deterministic registry and dispatching algorithm. For a given extensible agent configuration, there is a single subagent who is \"authoritative\" for any particular region of the MIB (where \"region\" may extend from an entire MIB down to a single object-instance).",
      "zh-CHS": "4) 一种简单、确定的注册表和调度算法。对于给定的可扩展代理配置，有一个子代理对MIB的任何特定区域具有“权威性”（其中“区域”可以从整个MIB扩展到单个对象实例）。"
    },
    {
      "indent": 3,
      "text": "5) Performance considerations. It is likely that the master agent and all subagents will reside on the same host, and in such cases AgentX is more a form of inter-process communication than a traditional communications protocol.",
      "zh-CHS": "5) 性能考虑。主代理和所有子代理很可能驻留在同一主机上，在这种情况下，AgentX更像是进程间通信的一种形式，而不是传统的通信协议。"
    },
    {
      "indent": 6,
      "text": "Some of the design decisions made with this in mind include:",
      "zh-CHS": "考虑到这一点，一些设计决策包括："
    },
    {
      "indent": 9,
      "text": "- 32-bit alignment of data within PDUs",
      "zh-CHS": "- PDU内数据的32位对齐"
    },
    {
      "indent": 9,
      "text": "- Native byte-order encoding by subagents",
      "zh-CHS": "- 子代理的本机字节顺序编码"
    },
    {
      "indent": 9,
      "text": "- Large AgentX PDU payload sizes.",
      "zh-CHS": "- 较大的AgentX PDU有效负载大小。"
    },
    {
      "indent": 0,
      "text": "4.4. Non-Goals",
      "section_title": true,
      "zh-CHS": "4.4. 非目标"
    },
    {
      "indent": 3,
      "text": "1) Subagent-to-subagent communication. This is out of scope, due to the security ramifications and complexity involved.",
      "zh-CHS": "1) 子代理对子代理通信。由于涉及的安全影响和复杂性，这超出了范围。"
    },
    {
      "indent": 3,
      "text": "2) Subagent access (via the master agent) to MIB variables. This is not addressed, since various other mechanisms are available and it was not a fundamental requirement.",
      "zh-CHS": "2) 子代理（通过主代理）访问MIB变量。这一点没有得到解决，因为还有其他各种机制，而且这不是一项基本要求。"
    },
    {
      "indent": 3,
      "text": "3) The ability to accommodate every conceivable extensible agent configuration option. This was the most contentious aspect in the development of this protocol. In essence, certain features currently available in some commercial extensible agent products are not included in AgentX. Although useful or even vital in some implementation strategies, the rough consensus was that these features were not appropriate for an Internet Standard, or not",
      "zh-CHS": "3) 能够容纳每一个可想象的可扩展代理配置选项。这是该议定书制定过程中最具争议的方面。本质上，AgentX中不包括某些商业可扩展代理产品中当前可用的某些功能。尽管在某些实施策略中有用甚至至关重要，但大致的共识是这些特性不适合互联网标准，或者不适合"
    },
    {
      "indent": 6,
      "text": "typically required for independently developed subagents to coexist. The set of supported extensible agent configurations is described above, in Section 4.2, \"Applicability\".",
      "zh-CHS": "通常需要独立开发的子试剂共存。上述第4.2节“适用性”中描述了受支持的可扩展代理配置集。"
    },
    {
      "indent": 3,
      "text": "Some possible future version of the AgentX protocol may provide coverage for one or more of these \"non-goals\" or for new goals that might be identified after greater deployment experience.",
      "zh-CHS": "AgentX协议的某些可能的未来版本可能会覆盖一个或多个“非目标”，或者覆盖更多部署经验后可能确定的新目标。"
    },
    {
      "indent": 0,
      "text": "5. AgentX Encodings",
      "section_title": true,
      "zh-CHS": "5. AgentX编码"
    },
    {
      "indent": 3,
      "text": "AgentX PDUs consist of a common header, followed by PDU-specific data of variable length. Unlike SNMP PDUs, AgentX PDUs are not encoded using the BER (as specified in ISO 8824 [18]), but are transmitted as a contiguous byte stream. The data within this stream is organized to provide natural alignment with respect to the start of the PDU, permitting direct (integer) access by the processing entities.",
      "zh-CHS": "AgentX PDU由一个公共标头组成，后跟可变长度的PDU特定数据。与SNMP PDU不同，AgentX PDU不使用BER编码（如ISO 8824[18]中所规定），而是作为连续字节流传输。该数据流中的数据被组织为相对于PDU的开始提供自然对齐，允许处理实体直接（整数）访问。"
    },
    {
      "indent": 3,
      "text": "The first four fields in the header are single-byte values. A bit (NETWORK_BYTE_ORDER) in the third field (h.flags) is used to indicate the byte ordering of all multi-byte integer values in the PDU, including those which follow in the header itself. This is described in more detail in Section 6.1, \"AgentX PDU Header\", below.",
      "zh-CHS": "标题中的前四个字段是单字节值。第三个字段（h.flags）中的位（网络字节顺序）用于指示PDU中所有多字节整数值的字节顺序，包括标头本身后面的整数值。下文第6.1节“AgentX PDU头”对此进行了更详细的描述。"
    },
    {
      "indent": 3,
      "text": "PDUs are depicted in this memo using the following convention (where byte 1 is the first transmitted byte):",
      "zh-CHS": "本备忘录使用以下约定描述PDU（其中字节1是第一个传输的字节）："
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  byte 1       |  byte 2       |  byte 3       |  byte 4       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  byte 5       |  byte 6       |  byte 7       |  byte 8       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Fields marked \"<reserved>\" are reserved for future use and must be zero-filled.",
      "zh-CHS": "标记为“<reserved>”的字段保留供将来使用，并且必须为零填充。"
    },
    {
      "indent": 0,
      "text": "5.1. Object Identifier",
      "section_title": true,
      "zh-CHS": "5.1. 对象标识符"
    },
    {
      "indent": 3,
      "text": "An object identifier is encoded as a 4-byte header, followed by a variable number of contiguous 4-byte fields representing sub-identifiers. This representation (termed Object Identifier) is as follows:",
      "zh-CHS": "对象标识符被编码为4字节头，后跟表示子标识符的可变数量的连续4字节字段。该表示（称为对象标识符）如下所示："
    },
    {
      "indent": 3,
      "text": "Object Identifier",
      "zh-CHS": "对象标识符"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |  include      |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       sub-identifier #1                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       sub-identifier #n_subid                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Object Identifier header fields:",
      "zh-CHS": "对象标识符标头字段："
    },
    {
      "indent": 6,
      "text": "n_subid",
      "zh-CHS": "n_subid"
    },
    {
      "indent": 9,
      "text": "The number (0-128) of sub-identifiers in the object identifier. An ordered list of \"n_subid\" 4-byte sub-identifiers follows the 4-byte header.",
      "zh-CHS": "对象标识符中的子标识符的数目（0-128）。“n_subid”4字节子标识符的有序列表位于4字节头之后。"
    },
    {
      "indent": 6,
      "text": "prefix",
      "zh-CHS": "前缀"
    },
    {
      "indent": 9,
      "text": "An unsigned value used to reduce the length of object identifier encodings. A non-zero value \"x\" is interpreted as the first sub-identifier after \"internet\" (1.3.6.1), and indicates an implicit prefix \"internet.x\" to the actual sub-identifiers encoded in the Object Identifier. For example, a prefix field value 2 indicates an implicit prefix \"1.3.6.1.2\". A value of 0 in the prefix field indicates there is no prefix to the sub-identifiers.",
      "zh-CHS": "用于减少对象标识符编码长度的无符号值。非零值“x”被解释为“internet”（1.3.6.1）之后的第一个子标识符，并表示对象标识符中编码的实际子标识符的隐式前缀“internet.x”。例如，前缀字段值2表示隐式前缀“1.3.6.1.2”。前缀字段中的值为0表示子标识符没有前缀。"
    },
    {
      "indent": 6,
      "text": "include",
      "zh-CHS": "包括"
    },
    {
      "indent": 9,
      "text": "Used only when the Object Identifier is the start of a SearchRange, as described in section 5.2, \"SearchRange\".",
      "zh-CHS": "仅当对象标识符是SearchRange的开始时使用，如第5.2节“SearchRange”所述。"
    },
    {
      "indent": 6,
      "text": "sub-identifier 1, 2, ... n_subid",
      "zh-CHS": "子标识符1、2、。。。n_subid"
    },
    {
      "indent": 9,
      "text": "A 4-byte unsigned integer, encoded according to the header's NETWORK_BYTE_ORDER bit.",
      "zh-CHS": "一个4字节无符号整数，根据报头的网络字节顺序位进行编码。"
    },
    {
      "indent": 3,
      "text": "A null Object Identifier consists of the 4-byte header with all bytes set to 0.",
      "zh-CHS": "空对象标识符由4字节头组成，所有字节都设置为0。"
    },
    {
      "indent": 3,
      "text": "Examples:",
      "zh-CHS": "示例："
    },
    {
      "indent": 3,
      "text": "sysDescr.0 (1.3.6.1.2.1.1.1.0)",
      "zh-CHS": "sysDescr.0（1.3.6.1.2.1.1.1.0）"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 4             | 2             | 0             | 0             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 1                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 1                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 1                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 0                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "1.2.3.4",
      "zh-CHS": "1.2.3.4"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 4             | 0             | 0             | 0             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 1                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 2                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 3                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 4                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "5.2. SearchRange",
      "section_title": true,
      "zh-CHS": "5.2. 搜索范围"
    },
    {
      "indent": 3,
      "text": "A SearchRange consists of two Object Identifiers. In its communication with a subagent, the master agent uses a SearchRange to identify a requested variable binding, and, in GetNext and GetBulk operations, to set an upper bound on the names of managed object instances the subagent may send in reply.",
      "zh-CHS": "SearchRange由两个对象标识符组成。在与子代理的通信中，主代理使用SearchRange来标识请求的变量绑定，并在GetNext和GetBulk操作中，设置子代理可能发送的受管对象实例名称的上限。"
    },
    {
      "indent": 3,
      "text": "The first Object Identifier in a SearchRange (called the starting OID) indicates the beginning of the range. It is frequently (but not necessarily) the name of a requested variable binding.",
      "zh-CHS": "SearchRange中的第一个对象标识符（称为起始OID）指示范围的开始。它通常（但不一定）是请求的变量绑定的名称。"
    },
    {
      "indent": 3,
      "text": "The \"include\" field in this OID's header is a boolean value (0 or 1) indicating whether or not the starting OID is included in the range.",
      "zh-CHS": "此OID标题中的“包含”字段是一个布尔值（0或1），指示起始OID是否包含在范围内。"
    },
    {
      "indent": 3,
      "text": "The second object identifier (ending OID) indicates the non-inclusive end of the range, and its \"include\" field is always 0. A null value for ending OID indicates an unbounded SearchRange.",
      "zh-CHS": "第二个对象标识符（结束OID）表示范围的非包含性结束，其“包含”字段始终为0。结束OID的null值表示一个无限搜索范围。"
    },
    {
      "indent": 3,
      "text": "Example: To indicate a search range from 1.3.6.1.2.1.25.2 (inclusive) to 1.3.6.1.2.1.25.2.1 (exclusive), the SearchRange would be:",
      "zh-CHS": "示例：要指示从1.3.6.1.2.1.25.2（包括）到1.3.6.1.2.1.25.2.1（排除）的搜索范围，搜索范围应为："
    },
    {
      "indent": 3,
      "text": "(start)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 3             | 2             | 1             |       0       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 1                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 25                                                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 2                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "(end)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 4             | 2             | 0             |       0       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 1                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 25                                                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 2                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 1                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "A SearchRangeList is a contiguous list of SearchRanges.",
      "zh-CHS": "SearchRangeList是搜索范围的连续列表。"
    },
    {
      "indent": 0,
      "text": "5.3. Octet String",
      "section_title": true,
      "zh-CHS": "5.3. 八位组串"
    },
    {
      "indent": 3,
      "text": "An octet string is represented by a contiguous series of bytes, beginning with a 4-byte integer (encoded according to the header's NETWORK_BYTE_ORDER bit) whose value is the number of octets in the octet string, followed by the octets themselves. This representation is termed an Octet String. If the last octet does not end on a 4- byte offset from the start of the Octet String, padding bytes are appended to achieve alignment of following data. This padding must be added even if the Octet String is the last item in the PDU. Padding bytes must be zero filled.",
      "zh-CHS": "八位字节字符串由一系列连续的字节表示，从一个4字节整数（根据报头的网络字节顺序位编码）开始，其值为八位字节字符串中的八位字节数，然后是八位字节本身。这种表示形式称为八位字节字符串。如果最后一个八位字节不是以距八位字节字符串开头4字节的偏移量结束，则会追加填充字节以实现以下数据的对齐。即使八位字节字符串是PDU中的最后一项，也必须添加此填充。填充字节必须为零填充。"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "A null Octet String consists of a 4-byte length field set to 0.",
      "zh-CHS": "空八位字节字符串由设置为0的4字节长度字段组成。"
    },
    {
      "indent": 0,
      "text": "5.4. Value Representation",
      "section_title": true,
      "zh-CHS": "5.4. 值表示"
    },
    {
      "indent": 3,
      "text": "Variable bindings may be encoded within the variable-length portion of some PDUs. The representation of a variable binding (termed a VarBind) consists of a 2-byte type field, a name (Object Identifier), and the actual value data.",
      "zh-CHS": "变量绑定可以在某些PDU的可变长度部分中进行编码。变量绑定的表示形式（称为VarBind）由2字节类型字段、名称（对象标识符）和实际值数据组成。"
    },
    {
      "indent": 3,
      "text": "VarBind",
      "zh-CHS": "瓦宾德"
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          v.type               |          <reserved>           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "(v.name)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |      0        |       0       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       sub-identifier #1                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       sub-identifier #n_subid                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "(v.data)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       data                                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       data                                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "VarBind fields:",
      "zh-CHS": "变量绑定字段："
    },
    {
      "indent": 6,
      "text": "v.type",
      "zh-CHS": "v、 类型"
    },
    {
      "indent": 3,
      "text": "Indicates the variable binding's syntax, and must be one of the following values:",
      "zh-CHS": "指示变量绑定的语法，并且必须是以下值之一："
    },
    {
      "indent": 14,
      "text": "Integer (2), Octet String (4), Null (5), Object Identifier (6), IpAddress (64), Counter32 (65), Gauge32 (66), TimeTicks (67), Opaque (68), Counter64 (70), noSuchObject (128), noSuchInstance (129), endOfMibView (130)",
      "zh-CHS": "整数（2）、八位字节字符串（4）、Null（5）、对象标识符（6）、IP地址（64）、计数器32（65）、量规32（66）、时间刻度（67）、不透明（68）、计数器64（70）、noSuchObject（128）、noSuchInstance（129）、endOfMibView（130）"
    },
    {
      "indent": 6,
      "text": "v.name",
      "zh-CHS": "v、 名字"
    },
    {
      "indent": 9,
      "text": "The Object Identifier which names the variable.",
      "zh-CHS": "命名变量的对象标识符。"
    },
    {
      "indent": 6,
      "text": "v.data",
      "zh-CHS": "v、 资料"
    },
    {
      "indent": 9,
      "text": "The actual value, encoded as follows:",
      "zh-CHS": "实际值，编码如下："
    },
    {
      "indent": 9,
      "text": "- Integer, Counter32, Gauge32, and TimeTicks are encoded as 4 contiguous bytes, according to the header's NETWORK_BYTE_ORDER bit.",
      "zh-CHS": "- 根据报头的网络字节顺序位，整数、计数器32、计量32和时间刻度被编码为4个连续字节。"
    },
    {
      "indent": 9,
      "text": "- Counter64 is encoded as 8 contiguous bytes, according to the header's NETWORK_BYTE_ORDER bit.",
      "zh-CHS": "- 计数器64根据报头的网络字节顺序位编码为8个连续字节。"
    },
    {
      "indent": 9,
      "text": "- Object Identifiers are encoded as described in section 5.1, Object Identifier.",
      "zh-CHS": "- 对象标识符按照第5.1节“对象标识符”所述进行编码。"
    },
    {
      "indent": 9,
      "text": "- IpAddress, Opaque, and Octet String are all octet strings and are encoded as described in section 5.3, \"Octet String\", Octet String. Note that the octets used to represent IpAddress are always ordered most significant to least significant.",
      "zh-CHS": "- IpAddress、不透明和八位字节字符串均为八位字节字符串，并按照第5.3节“八位字节字符串”八位字节字符串中的说明进行编码。请注意，用于表示IpAddress的八位字节始终按从最高有效到最低有效顺序排列。"
    },
    {
      "indent": 12,
      "text": "Value data always follows v.name whenever v.type is one of the above types. These data bytes are present even if they will not be used (as, for example, in certain types of index allocation).",
      "zh-CHS": "每当v.type是上述类型之一时，值数据总是跟随v.name。即使不使用这些数据字节（例如，在某些类型的索引分配中），也会显示这些数据字节。"
    },
    {
      "indent": 9,
      "text": "- Null, noSuchObject, noSuchInstance, and endOfMibView do not contain any encoded value. Value data never follows v.name in these cases.",
      "zh-CHS": "- Null、noSuchObject、noSuchInstance和endOfMibView不包含任何编码值。在这些情况下，值数据从不跟随v.name。"
    },
    {
      "indent": 9,
      "text": "Note that the VarBind itself does not contain the value size. That information is implied for the fixed-length types, and explicitly contained in the encodings of variable-length types Object Identifier and Octet String).",
      "zh-CHS": "请注意，VarBind本身不包含值大小。该信息隐含在固定长度类型中，并显式包含在可变长度类型（对象标识符和八位字节字符串）的编码中。"
    },
    {
      "indent": 3,
      "text": "A VarBindList is a contiguous list of VarBinds. Within a VarBindList, a particular VarBind is identified by an index value. The first VarBind in a VarBindList has index value 1, the second has index value 2, and so on.",
      "zh-CHS": "VarBindList是VarBinds的连续列表。在VarBindList中，特定的VarBind由索引值标识。VarBindList中的第一个VarBind具有索引值1，第二个具有索引值2，依此类推。"
    },
    {
      "indent": 0,
      "text": "6. Protocol Definitions",
      "section_title": true,
      "zh-CHS": "6. 协议定义"
    },
    {
      "indent": 0,
      "text": "6.1. AgentX PDU Header",
      "section_title": true,
      "zh-CHS": "6.1. AgentX PDU头"
    },
    {
      "indent": 3,
      "text": "The AgentX PDU header is a fixed-format, 20-octet structure:",
      "zh-CHS": "AgentX PDU头是一种固定格式的20八位字节结构："
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   h.version   |    h.type     |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.packetID                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "An AgentX PDU header contains the following fields:",
      "zh-CHS": "AgentX PDU标头包含以下字段："
    },
    {
      "indent": 6,
      "text": "h.version",
      "zh-CHS": "h、 版本"
    },
    {
      "indent": 9,
      "text": "The version of the AgentX protocol (1 for this memo).",
      "zh-CHS": "AgentX协议的版本（本备忘录为1）。"
    },
    {
      "indent": 6,
      "text": "h.type",
      "zh-CHS": "h、 类型"
    },
    {
      "indent": 9,
      "text": "The PDU type; one of the following values:",
      "zh-CHS": "PDU型；下列值之一："
    },
    {
      "indent": 12,
      "text": "agentx-Open-PDU (1), agentx-Close-PDU (2), agentx-Register-PDU (3), agentx-Unregister-PDU (4), agentx-Get-PDU (5), agentx-GetNext-PDU (6), agentx-GetBulk-PDU (7), agentx-TestSet-PDU (8), agentx-CommitSet-PDU (9), agentx-UndoSet-PDU (10),",
      "zh-CHS": "agentx打开PDU（1）、agentx关闭PDU（2）、agentx注册PDU（3）、agentx注销PDU（4）、agentx获取PDU（5）、agentx获取下一个PDU（6）、agentx获取批量PDU（7）、agentx测试集PDU（8）、agentx提交PDU（9）、agentx撤销PDU（10），"
    },
    {
      "indent": 12,
      "text": "agentx-CleanupSet-PDU (11), agentx-Notify-PDU (12), agentx-Ping-PDU (13), agentx-IndexAllocate-PDU (14), agentx-IndexDeallocate-PDU (15), agentx-AddAgentCaps-PDU (16), agentx-RemoveAgentCaps-PDU (17), agentx-Response-PDU (18)",
      "zh-CHS": "agentx清洁不合格PDU（11）、agentx通知PDU（12）、agentx Ping PDU（13）、agentx索引不合格PDU（14）、agentx索引不合格PDU（15）、agentx添加AGENTCAPS PDU（16）、agentx移除AGENTCAPS PDU（17）、agentx响应PDU（18）"
    },
    {
      "indent": 12,
      "text": "The set of PDU types for \"administrative processing\" are 1-4 and 12-17. The set of PDU types for \"SNMP request processing\" are 5-11.",
      "zh-CHS": "“管理处理”的PDU类型集为1-4和12-17。“SNMP请求处理”的PDU类型集为5-11。"
    },
    {
      "indent": 6,
      "text": "h.flags",
      "zh-CHS": "h、 旗帜"
    },
    {
      "indent": 12,
      "text": "A bitmask, with bit 0 the least significant bit. The bit definitions are as follows:",
      "zh-CHS": "位掩码，位0为最低有效位。位定义如下："
    },
    {
      "indent": 17,
      "text": "Bit             Definition\n---             ----------\n0               INSTANCE_REGISTRATION\n1               NEW_INDEX\n2               ANY_INDEX\n3               NON_DEFAULT_CONTEXT\n4               NETWORK_BYTE_ORDER\n5-7             (reserved)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "The NETWORK_BYTE_ORDER bit applies to all multi-byte integer values in the entire AgentX packet, including the remaining header fields. If set, then network byte order (most significant byte first; \"big endian\") is used. If not set, then least significant byte first (\"little endian\") is used.",
      "zh-CHS": "网络字节顺序位应用于整个AgentX数据包中的所有多字节整数值，包括剩余的报头字段。如果设置，则使用网络字节顺序（最高有效字节优先；“big-endian”）。如果未设置，则使用最低有效字节优先（“小尾端”）。"
    },
    {
      "indent": 12,
      "text": "The NETWORK_BYTE_ORDER bit applies to all AgentX PDUs.",
      "zh-CHS": "网络字节顺序位适用于所有AgentX PDU。"
    },
    {
      "indent": 12,
      "text": "The NON_DEFAULT_CONTEXT bit is used only in the AgentX PDUs described in section 6.1.1, \"Context\".",
      "zh-CHS": "非默认上下文位仅在第6.1.1节“上下文”中描述的AgentX PDU中使用。"
    },
    {
      "indent": 12,
      "text": "The NEW_INDEX and ANY_INDEX bits are used only within the agentx-IndexAllocate-, and -IndexDeallocate-PDUs.",
      "zh-CHS": "新的_索引和任何_索引位仅在agentx IndexAllocate-和-IndexDeallocate PDU内使用。"
    },
    {
      "indent": 12,
      "text": "The INSTANCE_REGISTRATION bit is used only within the agentx-Register-PDU.",
      "zh-CHS": "实例_注册位仅在agentx寄存器PDU内使用。"
    },
    {
      "indent": 6,
      "text": "h.sessionID",
      "zh-CHS": "h、 会话ID"
    },
    {
      "indent": 12,
      "text": "The session ID uniquely identifies a session over which AgentX PDUs are exchanged between a subagent and the master agent. The session ID has no significance and no defined value in the agentx-Open-PDU sent by a subagent to open a session with the master agent; in this case, the master agent will assign a unique session ID that it will pass back in the corresponding agentx-Response-PDU. From that point on, that same session ID will appear in every AgentX PDU exchanged over that session between the master and the subagent. A subagent may establish multiple AgentX sessions by sending multiple agentx-Open-PDUs to the master agent.",
      "zh-CHS": "会话ID唯一标识子代理和主代理之间交换AgentX PDU的会话。会话ID在子代理为打开与主代理的会话而发送的agentx Open PDU中没有意义，也没有定义的值；在这种情况下，主代理将分配一个唯一的会话ID，该ID将在相应的agentx响应PDU中传回。从那时起，相同的会话ID将出现在主代理和子代理之间通过该会话交换的每个AgentX PDU中。子代理可以通过向主代理发送多个AgentX Open PDU来建立多个AgentX会话。"
    },
    {
      "indent": 12,
      "text": "In master agents that support multiple transport protocols, the sessionID should be globally unique rather than unique just to a particular transport.",
      "zh-CHS": "在支持多个传输协议的主代理中，sessionID应该是全局唯一的，而不仅仅是特定传输的唯一。"
    },
    {
      "indent": 6,
      "text": "h.transactionID",
      "zh-CHS": "h、 事务ID"
    },
    {
      "indent": 12,
      "text": "The transaction ID uniquely identifies, for a given session, the single SNMP management request (and single SNMP PDU) with which an AgentX PDU is associated. If a single SNMP management request results in multiple AgentX PDUs being sent by the master agent with the same session ID, each of these AgentX PDUs must contain the same transaction ID; conversely, AgentX PDUs sent during a particular session, that result from distinct SNMP management requests, must have distinct transaction IDs within the limits of the 32- bit field).",
      "zh-CHS": "对于给定会话，事务ID唯一标识与AgentX PDU关联的单个SNMP管理请求（和单个SNMP PDU）。如果单个SNMP管理请求导致主代理使用相同的会话ID发送多个AgentX PDU，则这些AgentX PDU中的每个都必须包含相同的事务ID；相反，由于不同的SNMP管理请求而在特定会话期间发送的AgentX PDU必须在32位字段的限制内具有不同的事务ID）。"
    },
    {
      "indent": 12,
      "text": "Note that the transaction ID is not the same as the SNMP PDU's request-id (as described in section 4.1 of RFC 1905 [13], nor is it the same as the SNMP Message's msgID (as described in section 6.2 of RFC 2572 [11]), nor can it be, since a master agent might receive SNMP requests with the same request-ids or msgIDs from different managers.",
      "zh-CHS": "请注意，事务ID与SNMP PDU的请求ID（如RFC 1905[13]第4.1节所述）不同，也与SNMP消息的msgID（如RFC 2572[11]第6.2节所述）不同，因为主代理可能从不同的管理器接收具有相同请求ID或msgID的SNMP请求。"
    },
    {
      "indent": 12,
      "text": "The transaction ID has no significance and no defined value in AgentX administrative PDUs, i.e., AgentX PDUs that are not associated with an SNMP management request.",
      "zh-CHS": "事务ID在AgentX管理PDU（即与SNMP管理请求不关联的AgentX PDU）中没有意义，也没有定义的值。"
    },
    {
      "indent": 6,
      "text": "h.packetID",
      "zh-CHS": "h、 包裹"
    },
    {
      "indent": 12,
      "text": "A packet ID generated by the sender for all AgentX PDUs except the agentx-Response-PDU. In an agentx-Response-PDU, the packet ID must be the same as that in the received AgentX PDU to which it is a response. A master agent might",
      "zh-CHS": "发送方为除AgentX响应PDU之外的所有AgentX PDU生成的数据包ID。在agentx响应PDU中，数据包ID必须与接收到的作为响应的agentx PDU中的数据包ID相同。主代理可能会"
    },
    {
      "indent": 12,
      "text": "use this field to associate subagent response PDUs with their corresponding request PDUs. A subagent might use this field to correlate responses to multiple (batched) registrations.",
      "zh-CHS": "使用此字段将子代理响应PDU与其相应的请求PDU关联。子代理可以使用此字段将响应与多个（批处理）注册关联起来。"
    },
    {
      "indent": 6,
      "text": "h.payload_length",
      "zh-CHS": "h、 有效载荷长度"
    },
    {
      "indent": 12,
      "text": "The size in octets of the PDU contents, excluding the 20- byte header. As a result of the encoding schemes and PDU layouts, this value will always be either 0, or a multiple of 4.",
      "zh-CHS": "PDU内容的大小（以八位字节为单位），不包括20字节的头。由于编码方案和PDU布局，该值将始终为0或4的倍数。"
    },
    {
      "indent": 0,
      "text": "6.1.1. Context",
      "section_title": true,
      "zh-CHS": "6.1.1. 上下文"
    },
    {
      "indent": 3,
      "text": "In the SNMPv1 or SNMPv2c, the community string may be used as an index into a local repository of configuration information that may include community profiles or more complex context information. In SNMPv3 this notion of \"context\" is formalized (see section 3.3.1 in RFC 2571 [1].",
      "zh-CHS": "在SNMPv1或SNMPv2c中，社区字符串可用作配置信息的本地存储库的索引，配置信息可以包括社区概要文件或更复杂的上下文信息。在SNMPv3中，“上下文”的概念是形式化的（见RFC 2571[1]第3.3.1节）。"
    },
    {
      "indent": 3,
      "text": "AgentX provides a mechanism for transmitting a context specification within relevant PDUs, but does not place any constraints on the content of that specification.",
      "zh-CHS": "AgentX提供了一种在相关PDU内传输上下文规范的机制，但不对该规范的内容施加任何约束。"
    },
    {
      "indent": 3,
      "text": "An optional context field may be present in the agentx-Register-, UnRegister-, AddAgentCaps-, RemoveAgentCaps-, Get-, GetNext-, GetBulk-, IndexAllocate-, IndexDeallocate-, Notify-, TestSet-, and Ping- PDUs.",
      "zh-CHS": "一个可选的上下文字段可能出现在agentx寄存器、注销、AddAgentCaps、RemoveAgentCaps、Get、GetNext、GetBulk、IndexAllocate、IndexDeallocate、Notify、TestSet和Ping-PDU中。"
    },
    {
      "indent": 3,
      "text": "If the NON_DEFAULT_CONTEXT bit in the AgentX header field h.flags is clear, then there is no context field in the PDU, and the operation refers to the default context. (This does not mean there is a zero-length Octet String, it means there is no Octet String present.) If the NON_DEFAULT_CONTEXT bit is set, then a context field immediately follows the AgentX header, and the operation refers to that specific context. The context is represented as an Octet String. There are no constraints on its length or contents.",
      "zh-CHS": "如果AgentX头字段h.flags中的非默认上下文位为清除，则PDU中没有上下文字段，操作引用默认上下文。（这并不意味着存在长度为零的八位字节字符串，而是意味着不存在八位字节字符串。）如果设置了非默认上下文位，则会在AgentX头后面紧接一个上下文字段，并且操作会引用该特定上下文。上下文表示为八位字节字符串。它的长度或内容没有限制。"
    },
    {
      "indent": 3,
      "text": "Thus, all of these AgentX PDUs (that is, those listed immediately above) refer to, or \"indicate\" a context, which is either the default context, or a non-default context explicitly named in the PDU.",
      "zh-CHS": "因此，所有这些AgentX PDU（即上面列出的那些）都引用或“指示”一个上下文，该上下文是PDU中显式命名的默认上下文或非默认上下文。"
    },
    {
      "indent": 0,
      "text": "6.2. AgentX PDUs",
      "section_title": true,
      "zh-CHS": "6.2. AgentX PDU"
    },
    {
      "indent": 0,
      "text": "6.2.1. The agentx-Open-PDU",
      "section_title": true,
      "zh-CHS": "6.2.1. 代理打开PDU"
    },
    {
      "indent": 3,
      "text": "An agentx-Open-PDU is generated by a subagent to request establishment of an AgentX session with the master agent.",
      "zh-CHS": "子代理生成agentx Open PDU，请求与主代理建立agentx会话。"
    },
    {
      "indent": 3,
      "text": "(AgentX header)\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n | h.version (1) |  h.type (1)   |    h.flags    |  <reserved>   |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |                          h.sessionID                          |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |                        h.transactionID                        |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |                           h.packetID                          |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |                        h.payload_length                       |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  o.timeout    |                     <reserved>                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(o.id)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |       0       |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             subidentifier #1                                  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             subidentifier #n_subid                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(o.descr)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "An agentx-Open-PDU contains the following fields:",
      "zh-CHS": "agentx Open PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "o.timeout",
      "zh-CHS": "o、 超时"
    },
    {
      "indent": 12,
      "text": "The length of time, in seconds, that a master agent should allow to elapse after dispatching a message on a session before it regards the subagent as not responding. This is the default value for the session, and may be overridden by",
      "zh-CHS": "在会话上调度消息后，主代理在认为子代理没有响应之前应允许经过的时间长度（秒）。这是会话的默认值，可以由"
    },
    {
      "indent": 12,
      "text": "values associated with specific registered MIB regions. The default value of 0 indicates that there is no session-wide default value.",
      "zh-CHS": "与特定注册的MIB区域关联的值。默认值0表示没有会话范围的默认值。"
    },
    {
      "indent": 6,
      "text": "o.id",
      "zh-CHS": "o、 身份证"
    },
    {
      "indent": 12,
      "text": "An Object Identifier that identifies the subagent. Subagents that do not support such an notion may send a null Object Identifier.",
      "zh-CHS": "标识子代理的对象标识符。不支持这种概念的子代理可能会发送空对象标识符。"
    },
    {
      "indent": 6,
      "text": "o.descr",
      "zh-CHS": "o、 描述"
    },
    {
      "indent": 12,
      "text": "An Octet String containing a DisplayString describing the subagent.",
      "zh-CHS": "包含描述子代理的DisplayString的八位字节字符串。"
    },
    {
      "indent": 0,
      "text": "6.2.2. The agentx-Close-PDU",
      "section_title": true,
      "zh-CHS": "6.2.2. 代理关闭PDU"
    },
    {
      "indent": 3,
      "text": "An agentx-Close-PDU issued by either a subagent or the master agent terminates an AgentX session.",
      "zh-CHS": "由子代理或主代理发出的agentx Close PDU终止agentx会话。"
    },
    {
      "indent": 3,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (2)   |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  c.reason     |                     <reserved>                |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "An agentx-Close-PDU contains the following field:",
      "zh-CHS": "agentx Close PDU包含以下字段："
    },
    {
      "indent": 11,
      "text": "c.reason",
      "zh-CHS": "c、 理由"
    },
    {
      "indent": 12,
      "text": "An enumerated value that gives the reason that the master agent or subagent closed the AgentX session. This field may take one of the following values:",
      "zh-CHS": "一个枚举值，给出主代理或子代理关闭AgentX会话的原因。此字段可以采用以下值之一："
    },
    {
      "indent": 12,
      "text": "reasonOther(1) None of the following reasons",
      "zh-CHS": "原因其他（1）以下任何原因"
    },
    {
      "indent": 12,
      "text": "reasonParseError(2) Too many AgentX parse errors from peer",
      "zh-CHS": "reasonParseError（2）来自对等方的AgentX解析错误太多"
    },
    {
      "indent": 12,
      "text": "reasonProtocolError(3) Too many AgentX protocol errors from peer",
      "zh-CHS": "reasonProtocolError（3）来自对等方的AgentX协议错误太多"
    },
    {
      "indent": 12,
      "text": "reasonTimeouts(4) Too many timeouts waiting for peer",
      "zh-CHS": "原因超时（4）等待对等方的超时太多"
    },
    {
      "indent": 12,
      "text": "reasonShutdown(5) Sending entity is shutting down",
      "zh-CHS": "reasonShutdown（5）发送实体正在关闭"
    },
    {
      "indent": 12,
      "text": "reasonByManager(6) Due to Set operation; this reason code can be used only by the master agent, in response to an SNMP management request.",
      "zh-CHS": "经理（6）因设定操作而产生的原因；此原因码只能由主代理在响应SNMP管理请求时使用。"
    },
    {
      "indent": 0,
      "text": "6.2.3. The agentx-Register-PDU",
      "section_title": true,
      "zh-CHS": "6.2.3. agentx寄存器PDU"
    },
    {
      "indent": 3,
      "text": "An agentx-Register-PDU is generated by a subagent for each region of the MIB variable naming tree (within one or more contexts) that it wishes to support.",
      "zh-CHS": "agentx寄存器PDU由子代理为MIB变量命名树的每个区域（在一个或多个上下文中）生成。"
    },
    {
      "indent": 4,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (3)   |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(r.context) (OPTIONAL)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  r.timeout    |  r.priority   | r.range_subid |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(r.subtree)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |      0        |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #1                                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #n_subid                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(r.upper_bound)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             optional upper-bound sub-identifier               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "An agentx-Register-PDU contains the following fields:",
      "zh-CHS": "agentx寄存器PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "r.context",
      "zh-CHS": "r、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 6,
      "text": "r.timeout",
      "zh-CHS": "r、 超时"
    },
    {
      "indent": 12,
      "text": "The length of time, in seconds, that a master agent should allow to elapse after dispatching a message on a session before it regards the subagent as not responding. r.timeout applies only to messages that concern MIB objects within r.subtree. It overrides both the session's default value (if any) indicated when the AgentX session with the master agent was established, and the master agent's default timeout. The default value for r.timeout is 0 (no override).",
      "zh-CHS": "在会话上调度消息后，主代理在认为子代理没有响应之前应允许经过的时间长度（秒）。r、 超时仅适用于与r.subtree中的MIB对象有关的消息。它将覆盖与主代理建立AgentX会话时指示的会话默认值（如果有）和主代理的默认超时。r.timeout的默认值为0（无覆盖）。"
    },
    {
      "indent": 6,
      "text": "r.priority",
      "zh-CHS": "r、 优先权"
    },
    {
      "indent": 12,
      "text": "A value between 1 and 255, used to achieve a desired configuration when different sessions register identical or overlapping regions. Subagents with no particular knowledge of priority should register with the default value of 127.",
      "zh-CHS": "介于1和255之间的值，用于在不同会话注册相同或重叠区域时实现所需配置。不知道优先级的子代理应使用默认值127注册。"
    },
    {
      "indent": 12,
      "text": "In the master agent's dispatching algorithm, smaller values of r.priority take precedence over larger values, as described in section 7.1.4.1, \"Handling Duplicate and Overlapping Subtrees\".",
      "zh-CHS": "在主代理的调度算法中，r.priority的较小值优先于较大值，如第7.1.4.1节“处理重复和重叠子树”所述。"
    },
    {
      "indent": 6,
      "text": "r.subtree",
      "zh-CHS": "r、 子树"
    },
    {
      "indent": 12,
      "text": "An Object Identifier that names the basic subtree of a MIB region for which a subagent indicates its support. The term \"subtree\" is used generically here, it may represent a fully-qualified instance name, a partial instance name, a MIB table, an entire MIB, etc.",
      "zh-CHS": "一种对象标识符，用于命名子代理指示其支持的MIB区域的基本子树。这里一般使用术语“子树”，它可以表示完全限定的实例名、部分实例名、MIB表、整个MIB等。"
    },
    {
      "indent": 12,
      "text": "The choice of what to register is implementation-specific; this memo does not specify permissible values. Standard practice however is for a subagent to register at the highest level of the naming tree that makes sense. Registration of fully- qualified instances is typically done only when a subagent can perform management operations only on particular rows of a conceptual table.",
      "zh-CHS": "注册内容的选择取决于具体实施；本备忘录未规定允许值。然而，标准做法是子代理在命名树的最高级别注册，这是有意义的。只有当子代理只能对概念表的特定行执行管理操作时，才会注册完全限定的实例。"
    },
    {
      "indent": 12,
      "text": "If r.subtree is in fact a fully qualified instance name, the INSTANCE_REGISTRATION bit in h.flags must be set, otherwise it must be cleared. The master agent may save this information to optimize subsequent operational dispatching.",
      "zh-CHS": "如果r.subtree实际上是一个完全限定的实例名，则必须设置h.flags中的instance_注册位，否则必须将其清除。主代理可以保存此信息以优化后续操作调度。"
    },
    {
      "indent": 6,
      "text": "r.range_subid",
      "zh-CHS": "r、 射程"
    },
    {
      "indent": 12,
      "text": "Permits specifying a range in place of one of r.subtree's sub-identifiers. If this value is 0, no range is being specified and there is no r.upper_bound field present in the PDU. In this case the MIB region being registered is the single subtree named by r.subtree.",
      "zh-CHS": "允许指定一个范围来代替r.subtree的子标识符之一。如果该值为0，则不指定范围，并且PDU中不存在r.upper_bound字段。在本例中，注册的MIB区域是由r.subtree命名的单个子树。"
    },
    {
      "indent": 12,
      "text": "Otherwise the \"r.range_subid\"-th sub-identifier in r.subtree is a range lower bound, and the range upper bound sub-identifier (r.upper_bound) immediately follows r.subtree. In this case the MIB region being registered is the union of the subtrees formed by enumerating this range.",
      "zh-CHS": "否则，“r.range_subid”-r.subtree中的第th个子标识符是范围下限，范围上限子标识符（r.upper_bound）紧跟在r.subtree之后。在这种情况下，注册的MIB区域是通过枚举此范围形成的子树的并集。"
    },
    {
      "indent": 12,
      "text": "Note that r.range_subid indicates the (1-based) index of this sub-identifier within the OID represented by r.subtree, regardless of whether or not r.subtree is encoded using a prefix. (See the example below.)",
      "zh-CHS": "请注意，r.range_subid表示由r.subtree表示的OID中该子标识符的（基于1的）索引，无论r.subtree是否使用前缀编码。（请参见下面的示例。）"
    },
    {
      "indent": 6,
      "text": "r.upper_bound",
      "zh-CHS": "r、 上界"
    },
    {
      "indent": 12,
      "text": "The upper bound of a sub-identifier's range. This field is present only if r.range_subid is not 0.",
      "zh-CHS": "子标识符范围的上限。仅当r.range_subid不为0时，此字段才存在。"
    },
    {
      "indent": 12,
      "text": "The use of r.range_subid and r.upper_bound provide a general shorthand mechanism for specifying a MIB region. For example, if r.subtree is the OID 1.3.6.1.2.1.2.2.1.1.7, r.range_subid is 10, and r.upper_bound is 22, the specified MIB region can be denoted 1.3.6.1.2.1.2.2.1.[1-22].7. Registering this region is equivalent to registering the union of subtrees",
      "zh-CHS": "r.range_subid和r.upper_bound的使用为指定MIB区域提供了一种通用的速记机制。例如，如果r.subtree是OID 1.3.6.1.2.2.1.1.7，r.range_subid是10，r.upper_bound是22，那么指定的MIB区域可以表示为1.3.6.1.2.1.2.1.[1-22]。注册此区域相当于注册子树的并集"
    },
    {
      "indent": 13,
      "text": "1.3.6.1.2.1.2.2.1.1.7 1.3.6.1.2.1.2.2.1.2.7 1.3.6.1.2.1.2.2.1.3.7 ... 1.3.6.1.2.1.2.2.1.22.7",
      "zh-CHS": "1.3.6.1.2.1.2.2.1.1.7 1.3.6.1.2.1.2.2.1.2.7 1.3.6.1.2.1.2.2.1.3.7 ... 1.3.6.1.2.1.2.2.1.22.7"
    },
    {
      "indent": 12,
      "text": "One expected use of this mechanism is registering a conceptual row with a single PDU. In the example above, the MIB region happens to be row 7 of the RFC 1573 ifTable. The actual PDU would be:",
      "zh-CHS": "此机制的一个预期用途是向单个PDU注册概念行。在上面的示例中，MIB区域恰好是RFC 1573 ifTable的第7行。实际PDU为："
    },
    {
      "indent": 3,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (3)   |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   r.timeout   |  r.priority   | 10            |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "(r.subtree)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 6             |  2            |  0            |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 1                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 2                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 2                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 1                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 1                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 7                                                             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "(r.upper_bound)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 22                                                            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Note again that here r.range_subid is 10, even though n_subid in r.subtree is only 6.",
      "zh-CHS": "再次注意，这里r.range_subid是10，即使r.subtree中的n_subid只有6。"
    },
    {
      "indent": 3,
      "text": "r.range_subid may be used at any level within a subtree, it need not represent row-level registration. This mechanism may be used in any way that is convenient for a subagent to achieve its registrations.",
      "zh-CHS": "r、 range_subid可以用于子树中的任何级别，它不需要表示行级别的注册。这种机制可以以任何方便子代理实现注册的方式使用。"
    },
    {
      "indent": 0,
      "text": "6.2.4. The agentx-Unregister-PDU",
      "section_title": true,
      "zh-CHS": "6.2.4. 代理注销PDU"
    },
    {
      "indent": 3,
      "text": "The agentx-Unregister-PDU is sent by a subagent to remove a MIB region that was previously registered on this session.",
      "zh-CHS": "agentx Unregister PDU由子代理发送，以删除以前在此会话上注册的MIB区域。"
    },
    {
      "indent": 4,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (4)   |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(u.context) OPTIONAL\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|    <reserved> |  u.priority   | u.range_subid |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(u.subtree)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |      0        |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #1                                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #n_subid                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(u.upper_bound)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             optional upper-bound sub-identifier               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "An agentx-Unregister-PDU contains the following fields:",
      "zh-CHS": "agentx注销PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "u.context",
      "zh-CHS": "u、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 6,
      "text": "u.priority",
      "zh-CHS": "u、 优先权"
    },
    {
      "indent": 12,
      "text": "The priority at which this region was originally registered.",
      "zh-CHS": "此区域最初注册的优先级。"
    },
    {
      "indent": 6,
      "text": "u.subtree",
      "zh-CHS": "u、 子树"
    },
    {
      "indent": 12,
      "text": "Indicates a previously-registered region of the MIB that a subagent no longer wishes to support.",
      "zh-CHS": "指示子代理不再希望支持的以前注册的MIB区域。"
    },
    {
      "indent": 6,
      "text": "u.range_subid",
      "zh-CHS": "u、 射程"
    },
    {
      "indent": 12,
      "text": "Indicates a sub-identifier in u.subtree is a range lower bound.",
      "zh-CHS": "指示u中的子标识符。子树是范围下限。"
    },
    {
      "indent": 6,
      "text": "u.upper_bound",
      "zh-CHS": "u、 上界"
    },
    {
      "indent": 12,
      "text": "The upper bound of the range sub-identifier. This field is present in the PDU only if u.range_subid is not 0.",
      "zh-CHS": "范围子标识符的上限。仅当u.range_subid不为0时，此字段才会出现在PDU中。"
    },
    {
      "indent": 0,
      "text": "6.2.5. The agentx-Get-PDU",
      "section_title": true,
      "zh-CHS": "6.2.5. 代理获取PDU"
    },
    {
      "indent": 4,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (5)   |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(g.context) OPTIONAL\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(g.sr)",
      "zh-CHS": "（g.sr）"
    },
    {
      "indent": 4,
      "text": "(start 1)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |  include      |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #1                                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #n_subid                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(end 1)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 0             | 0             | 0             |       0       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n(start n)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |  include      |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #1                                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #n_subid                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(end n)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| 0             | 0             | 0             |       0       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "An agentx-Get-PDU contains the following fields:",
      "zh-CHS": "agentx Get PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "g.context",
      "zh-CHS": "g、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 6,
      "text": "g.sr",
      "zh-CHS": "g、 sr"
    },
    {
      "indent": 12,
      "text": "A SearchRangeList containing the requested variables for this session. Within the agentx-Get-PDU, the Ending OIDs within SearchRanges are null-valued Object Identifiers.",
      "zh-CHS": "包含此会话请求的变量的SearchRange列表。在agentx Get PDU中，SearchRanges中的结束OID是空值对象标识符。"
    },
    {
      "indent": 0,
      "text": "6.2.6. The agentx-GetNext-PDU",
      "section_title": true,
      "zh-CHS": "6.2.6. 代理获取下一个PDU"
    },
    {
      "indent": 4,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (6)   |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(g.context) OPTIONAL\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(g.sr)",
      "zh-CHS": "（g.sr）"
    },
    {
      "indent": 4,
      "text": "(start 1)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |  include      |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #1                                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #n_subid                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(end 1)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |      0        |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #1                                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #n_subid                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(start n)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |  include      |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #1                                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #n_subid                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(end n)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |      0        |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #1                                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #n_subid                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "An agentx-GetNext-PDU contains the following fields:",
      "zh-CHS": "agentx GetNext PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "g.context",
      "zh-CHS": "g、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 6,
      "text": "g.sr",
      "zh-CHS": "g、 sr"
    },
    {
      "indent": 12,
      "text": "A SearchRangeList containing the requested variables for this session.",
      "zh-CHS": "包含此会话请求的变量的SearchRange列表。"
    },
    {
      "indent": 0,
      "text": "6.2.7. The agentx-GetBulk-PDU",
      "section_title": true,
      "zh-CHS": "6.2.7. agentx GetBulk PDU"
    },
    {
      "indent": 3,
      "text": "(AgentX header)\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n | h.version (1) |  h.type (7)   |    h.flags    |  <reserved>   |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |                          h.sessionID                          |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |                        h.transactionID                        |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |                           h.packetID                          |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n |                        h.payload_length                       |\n +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(g.context) OPTIONAL\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             g.non_repeaters   |     g.max_repetitions         |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(g.sr) ...",
      "zh-CHS": "（g.sr）。。。"
    },
    {
      "indent": 3,
      "text": "An agentx-GetBulk-PDU contains the following fields:",
      "zh-CHS": "agentx GetBulk PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "g.context",
      "zh-CHS": "g、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 6,
      "text": "g.non_repeaters",
      "zh-CHS": "g、 非无线中继器"
    },
    {
      "indent": 12,
      "text": "The number of variables in the SearchRangeList that are not repeaters.",
      "zh-CHS": "SearchRangeList中非重复变量的数量。"
    },
    {
      "indent": 6,
      "text": "g.max_repetitions",
      "zh-CHS": "g、 最大重复次数"
    },
    {
      "indent": 12,
      "text": "The maximum number of repetitions requested for repeating variables.",
      "zh-CHS": "重复变量请求的最大重复次数。"
    },
    {
      "indent": 6,
      "text": "g.sr",
      "zh-CHS": "g、 sr"
    },
    {
      "indent": 12,
      "text": "A SearchRangeList containing the requested variables for this session.",
      "zh-CHS": "包含此会话请求的变量的SearchRange列表。"
    },
    {
      "indent": 0,
      "text": "6.2.8. The agentx-TestSet-PDU",
      "section_title": true,
      "zh-CHS": "6.2.8. agentx测试集PDU"
    },
    {
      "indent": 4,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (8)   |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(t.context) OPTIONAL\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(t.vb)",
      "zh-CHS": "（t.vb）"
    },
    {
      "indent": 4,
      "text": "(VarBind 1)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          v.type               |        <reserved>             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |      0        |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       sub-identifier #1                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       sub-identifier #n_subid                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       data                                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       data                                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(VarBind n)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|          v.type               |        <reserved>             |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |      0        |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       sub-identifier #1                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       sub-identifier #n_subid                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       data                                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                       data                                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "An agentx-TestSet-PDU contains the following fields:",
      "zh-CHS": "agentx测试集PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "t.context",
      "zh-CHS": "t、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 6,
      "text": "t.vb",
      "zh-CHS": "t、 vb"
    },
    {
      "indent": 12,
      "text": "A VarBindList containing the requested VarBinds for this subagent.",
      "zh-CHS": "包含为此子代理请求的VarBinds的VarBindList。"
    },
    {
      "indent": 0,
      "text": "6.2.9. The agentx-CommitSet, -UndoSet, -CleanupSet PDUs",
      "section_title": true,
      "zh-CHS": "6.2.9. agentx CommitSet、-UndoSet、-CleanupSet PDU"
    },
    {
      "indent": 3,
      "text": "These PDUs consist of the AgentX header only.",
      "zh-CHS": "这些PDU仅由AgentX标头组成。"
    },
    {
      "indent": 3,
      "text": "The agentx-CommitSet-, -UndoSet-, and -Cleanup-PDUs are used in processing an SNMP SetRequest operation.",
      "zh-CHS": "agentx CommitSet-、-UndoSet-和-Cleanup PDU用于处理SNMP设置请求操作。"
    },
    {
      "indent": 0,
      "text": "6.2.10. The agentx-Notify-PDU",
      "section_title": true,
      "zh-CHS": "6.2.10. 代理通知PDU"
    },
    {
      "indent": 3,
      "text": "An agentx-Notify-PDU is sent by a subagent to cause the master agent to forward a notification.",
      "zh-CHS": "agentx Notify PDU由子代理发送，以使主代理转发通知。"
    },
    {
      "indent": 4,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (12)  |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(n.context) OPTIONAL\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(n.vb) ...",
      "zh-CHS": "（n.vb）。。。"
    },
    {
      "indent": 3,
      "text": "An agentx-Notify-PDU contains the following fields:",
      "zh-CHS": "agentx Notify PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "n.context",
      "zh-CHS": "n、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 6,
      "text": "n.vb",
      "zh-CHS": "n、 vb"
    },
    {
      "indent": 12,
      "text": "A VarBindList whose contents define the actual PDU to be sent. This memo places the following restrictions on its contents:",
      "zh-CHS": "VarBindList，其内容定义要发送的实际PDU。本备忘录对其内容有以下限制："
    },
    {
      "indent": 15,
      "text": "- If the subagent supplies sysUpTime.0, it must be present as the first varbind.",
      "zh-CHS": "- 如果子代理提供sysUpTime.0，则它必须作为第一个varbind出现。"
    },
    {
      "indent": 15,
      "text": "- snmpTrapOID.0 must be present, as the second varbind if sysUpTime.0 was supplied, as the first if it was not.",
      "zh-CHS": "- snmpTrapOID.0必须存在，如果提供了sysUpTime.0，则作为第二个varbind；如果没有提供，则作为第一个varbind。"
    },
    {
      "indent": 0,
      "text": "6.2.11. The agentx-Ping-PDU",
      "section_title": true,
      "zh-CHS": "6.2.11. 第二代个人数据处理单元"
    },
    {
      "indent": 3,
      "text": "The agentx-Ping-PDU is sent by a subagent to the master agent to monitor the master agent's ability to receive and send AgentX PDUs over their AgentX session.",
      "zh-CHS": "agentx Ping PDU由子代理发送到主代理，以监控主代理通过其agentx会话接收和发送agentx PDU的能力。"
    },
    {
      "indent": 4,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (13)  |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(p.context) OPTIONAL\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "An agentx-Ping-PDU may contain the following field:",
      "zh-CHS": "agentx Ping PDU可能包含以下字段："
    },
    {
      "indent": 6,
      "text": "p.context",
      "zh-CHS": "p、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 3,
      "text": "Using p.context a subagent can retrieve the sysUpTime value for a specific context, if required.",
      "zh-CHS": "如果需要，子代理可以使用p.context检索特定上下文的sysUpTime值。"
    },
    {
      "indent": 0,
      "text": "6.2.12. The agentx-IndexAllocate-PDU",
      "section_title": true,
      "zh-CHS": "6.2.12. agentx指数化PDU"
    },
    {
      "indent": 3,
      "text": "An agentx-IndexAllocate-PDU is sent by a subagent to request allocation of a value for specific index objects. Refer to section 7.1.4.2, \"Registering Stuff\", for suggested usage.",
      "zh-CHS": "agentx IndexAllocate PDU由子代理发送，以请求为特定索引对象分配值。参考第7.1.4.2节“登记材料”，了解建议的用法。"
    },
    {
      "indent": 4,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (14)  |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(i.context) OPTIONAL\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(i.vb) ...",
      "zh-CHS": "（i.vb）。。。"
    },
    {
      "indent": 3,
      "text": "An agentx-IndexAllocate-PDU contains the following fields:",
      "zh-CHS": "agentx IndexAllocate PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "i.context",
      "zh-CHS": "i、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 6,
      "text": "i.vb",
      "zh-CHS": "i、 vb"
    },
    {
      "indent": 12,
      "text": "A VarBindList containing the index names and values requested for allocation.",
      "zh-CHS": "包含请求分配的索引名和值的VarBindList。"
    },
    {
      "indent": 0,
      "text": "6.2.13. The agentx-IndexDeallocate-PDU",
      "section_title": true,
      "zh-CHS": "6.2.13. agentx IndexDeallocate PDU"
    },
    {
      "indent": 3,
      "text": "An agentx-IndexDeallocate-PDU is sent by a subagent to release previously allocated index values.",
      "zh-CHS": "子代理发送agentx IndexDeallocate PDU以释放先前分配的索引值。"
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (15)  |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(i.context) OPTIONAL\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Padding (as required)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(i.vb) ...",
      "zh-CHS": "（i.vb）。。。"
    },
    {
      "indent": 3,
      "text": "An agentx-IndexDeallocate-PDU contains the following fields:",
      "zh-CHS": "agentx IndexDeallocate PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "i.context",
      "zh-CHS": "i、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 6,
      "text": "i.vb",
      "zh-CHS": "i、 vb"
    },
    {
      "indent": 12,
      "text": "A VarBindList containing the index names and values to be released.",
      "zh-CHS": "包含要发布的索引名和值的VarBindList。"
    },
    {
      "indent": 0,
      "text": "6.2.14. The agentx-AddAgentCaps-PDU",
      "section_title": true,
      "zh-CHS": "6.2.14. agentx AddAgentCaps PDU"
    },
    {
      "indent": 3,
      "text": "An agentx-AddAgentCaps-PDU is generated by a subagent to inform the master agent of agent capabilities for the specified session.",
      "zh-CHS": "agentx AddAgentCaps PDU由子代理生成，用于通知主代理指定会话的代理功能。"
    },
    {
      "indent": 4,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (16)  |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(a.context) (OPTIONAL)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Optional Padding        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(a.id)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |      0        |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #1                                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #n_subid                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(a.descr)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Optional Padding        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "An agentx-AddAgentCaps-PDU contains the following fields:",
      "zh-CHS": "agentx AddAgentCaps PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "a.context",
      "zh-CHS": "a、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 6,
      "text": "a.id",
      "zh-CHS": "a、 身份证"
    },
    {
      "indent": 12,
      "text": "An Object Identifier containing the value of an invocation of the AGENT-CAPABILITIES macro, which the master agent exports as a value of sysORID for the indicated context. (Recall that the value of an invocation of an AGENT-CAPABILITIES macro is an object identifier that describes a precise level of support with respect to implemented MIB modules. A more complete discussion of the AGENT-CAPABILITIES macro and related sysORID values can be found in section 6 of STD 58, RFC 2580 [7].)",
      "zh-CHS": "一种对象标识符，包含对AGENT-CAPABILITIES宏的调用值，主代理将其导出为所指示上下文的sysORID值。（回想一下，调用AGENT-CAPABILITIES宏的值是一个对象标识符，它描述了所实现MIB模块的精确支持级别。STD 58 RFC 2580[7]第6节中对AGENT-CAPABILITIES宏和相关sysORID值的更完整的讨论。）"
    },
    {
      "indent": 6,
      "text": "a.descr",
      "zh-CHS": "a、 描述"
    },
    {
      "indent": 12,
      "text": "An Octet String containing a DisplayString to be used as the value of sysORDescr corresponding to the sysORID value above.",
      "zh-CHS": "一个八位字节字符串，其中包含一个DisplayString，用作与上述sysORID值相对应的sysORDescr值。"
    },
    {
      "indent": 0,
      "text": "6.2.15. The agentx-RemoveAgentCaps-PDU",
      "section_title": true,
      "zh-CHS": "6.2.15. agentx将删除代理CAPS PDU"
    },
    {
      "indent": 3,
      "text": "An agentx-RemoveAgentCaps-PDU is generated by a subagent to request that the master agent stop exporting a particular value of sysORID. This value must have previously been advertised by the subagent in an agentx-AddAgentCaps-PDU for this session.",
      "zh-CHS": "代理RemoveAgentCaps PDU由子代理生成，以请求主代理停止导出sysORID的特定值。此值以前必须由子代理在此会话的agentx AddAgentCaps PDU中公布。"
    },
    {
      "indent": 4,
      "text": "(AgentX header)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (17)  |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(a.context) (OPTIONAL)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Octet String Length (L)                   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet 1      |  Octet 2      |   Octet 3     |   Octet 4     |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Octet L - 1  |  Octet L      |       Optional Padding        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "(a.id)\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  n_subid      |  prefix       |       0       |   <reserved>  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #1                                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             sub-identifier #n_subid                           |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "An agentx-RemoveAgentCaps-PDU contains the following fields:",
      "zh-CHS": "agentx RemoveAgentCaps PDU包含以下字段："
    },
    {
      "indent": 6,
      "text": "a.context",
      "zh-CHS": "a、 上下文"
    },
    {
      "indent": 12,
      "text": "An optional non-default context.",
      "zh-CHS": "可选的非默认上下文。"
    },
    {
      "indent": 6,
      "text": "a.id",
      "zh-CHS": "a、 身份证"
    },
    {
      "indent": 12,
      "text": "An ObjectIdentifier containing the value of sysORID that should no longer be exported.",
      "zh-CHS": "包含不应再导出的sysORID值的ObjectIdentifier。"
    },
    {
      "indent": 0,
      "text": "6.2.16. The agentx-Response-PDU",
      "section_title": true,
      "zh-CHS": "6.2.16. agentx响应PDU"
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n| h.version (1) |  h.type (18)  |    h.flags    |  <reserved>   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                          h.sessionID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.transactionID                        |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                           h.packetID                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        h.payload_length                       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                        res.sysUpTime                          |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|             res.error         |     res.index                 |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n...",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "An agentx-Response-PDU contains the following fields:",
      "zh-CHS": "agentx响应PDU包含以下字段："
    },
    {
      "indent": 7,
      "text": "h.sessionID",
      "zh-CHS": "h、 会话ID"
    },
    {
      "indent": 12,
      "text": "If this is a response to an agentx-Open-PDU, then it contains the new and unique sessionID (as assigned by the master agent) for this session.",
      "zh-CHS": "如果这是对agentx Open PDU的响应，则它包含此会话的新的唯一会话ID（由主代理分配）。"
    },
    {
      "indent": 12,
      "text": "Otherwise it must be identical to the h.sessionID value in the PDU to which this PDU is a response.",
      "zh-CHS": "否则，它必须与此PDU作为响应的PDU中的h.sessionID值相同。"
    },
    {
      "indent": 6,
      "text": "h.transactionID",
      "zh-CHS": "h、 事务ID"
    },
    {
      "indent": 12,
      "text": "Must be identical to the h.transactionID value in the PDU to which this PDU is a response.",
      "zh-CHS": "必须与此PDU作为响应的PDU中的h.transactionID值相同。"
    },
    {
      "indent": 12,
      "text": "In an agentx response PDU from the master agent to the subagent, the value of h.transactionID has no significance and can be ignored by the subagent.",
      "zh-CHS": "在从主代理到子代理的agentx响应PDU中，h.transactionID的值没有意义，可以被子代理忽略。"
    },
    {
      "indent": 6,
      "text": "h.packetID",
      "zh-CHS": "h、 包裹"
    },
    {
      "indent": 12,
      "text": "Must be identical to the h.packetID value in the PDU to which this PDU is a response.",
      "zh-CHS": "必须与此PDU作为响应的PDU中的h.packetID值相同。"
    },
    {
      "indent": 6,
      "text": "res.sysUpTime",
      "zh-CHS": "res.sysUpTime"
    },
    {
      "indent": 12,
      "text": "This field contains the current value of sysUpTime for the context indicated within the PDU to which this PDU is a response. It is relevant only in agentx response PDUs sent from the master agent to a subagent in response to the set of administrative PDUs listed in section 6.1, \"AgentX PDU Header\".",
      "zh-CHS": "此字段包含此PDU作为响应的PDU中指示的上下文的sysUpTime当前值。它仅在主代理向子代理发送的agentx响应PDU中相关，以响应第6.1节“agentx PDU头”中列出的一组管理PDU。"
    },
    {
      "indent": 12,
      "text": "In an agentx response PDU from the subagent to the master agent, the value of res.sysUpTime has no significance and is ignored by the master agent.",
      "zh-CHS": "在从子代理到主代理的agentx响应PDU中，res.sysUpTime的值没有意义，并且被主代理忽略。"
    },
    {
      "indent": 6,
      "text": "res.error",
      "zh-CHS": "结果误差"
    },
    {
      "indent": 12,
      "text": "Indicates error status. Within responses to the set of \"administrative\" PDU types listed in section 6.1, \"AgentX PDU Header\", values are limited to the following:",
      "zh-CHS": "指示错误状态。在对第6.1节“AgentX PDU头”中列出的一组“管理”PDU类型的响应中，值仅限于以下内容："
    },
    {
      "indent": 15,
      "text": "noAgentXError (0), openFailed (256), notOpen (257), indexWrongType (258), indexAlreadyAllocated (259), indexNoneAvailable (260), indexNotAllocated (261), unsupportedContext (262), duplicateRegistration (263), unknownRegistration (264), unknownAgentCaps (265), parseError (266), requestDenied (267), processingError (268)",
      "zh-CHS": "noAgentXError（0）、openFailed（256）、notOpen（257）、IndexErrorType（258）、indexAlreadyAllocated（259）、indexNoneAvailable（260）、indexNotAllocated（261）、unsupportedContext（262）、duplicateRegistration（263）、unknownRegistration（264）、unknownAgentCaps（265）、parseError（266）、requestDenied（267）、processingError（268）"
    },
    {
      "indent": 12,
      "text": "Within responses to the set of \"SNMP request processing\" PDU types listed in section 6.1, \"AgentX PDU Header\", values may also include those defined for errors in the SNMPv2 PDU (RFC 1905 [13]).",
      "zh-CHS": "在对第6.1节“AgentX PDU头”中列出的一组“SNMP请求处理”PDU类型的响应中，值还可能包括为SNMPv2 PDU（RFC 1905[13]）中的错误定义的值。"
    },
    {
      "indent": 6,
      "text": "res.index",
      "zh-CHS": "资源索引"
    },
    {
      "indent": 12,
      "text": "In error cases, this is the index of the failed variable binding within a received request PDU. (Note: As explained in section 5.4, \"Value Representation\", the index values of variable bindings within a variable binding list are 1- based.)",
      "zh-CHS": "在错误情况下，这是接收到的请求PDU中失败的变量绑定的索引。（注：如第5.4节“值表示”所述，变量绑定列表中变量绑定的索引值基于1。）"
    },
    {
      "indent": 3,
      "text": "A VarBindList may follow res.index, depending on which AgentX PDU is being responded to. These data are specified in the subsequent elements of procedure.",
      "zh-CHS": "VarBindList可能位于res.index之后，具体取决于所响应的AgentX PDU。这些数据在程序的后续元素中指定。"
    },
    {
      "indent": 0,
      "text": "7. Elements of Procedure",
      "section_title": true,
      "zh-CHS": "7. 程序要素"
    },
    {
      "indent": 3,
      "text": "This section describes the actions of protocol entities (master agents and subagents) implementing the AgentX protocol. Note, however, that it is not intended to constrain the internal architecture of any conformant implementation.",
      "zh-CHS": "本节介绍实现AgentX协议的协议实体（主代理和子代理）的操作。但是，请注意，它并不打算约束任何一致性实现的内部体系结构。"
    },
    {
      "indent": 3,
      "text": "The actions of AgentX protocol entities can be broadly categorized under two headings, each of which is described separately:",
      "zh-CHS": "AgentX协议实体的行为可大致分为两个标题，每个标题分别描述："
    },
    {
      "indent": 3,
      "text": "(1) processing AgentX administrative messages (e.g., registration requests from a subagent to a master agent); and",
      "zh-CHS": "(1) 处理AgentX管理消息（例如，从子代理到主代理的注册请求）；和"
    },
    {
      "indent": 3,
      "text": "(2) processing SNMP messages (the coordinated actions of a master agent and one or more subagents in processing, for example, a received SNMP GetRequest-PDU).",
      "zh-CHS": "(2) 处理SNMP消息（主代理和一个或多个子代理在处理过程中的协调动作，例如，接收到的SNMP GetRequest PDU）。"
    },
    {
      "indent": 0,
      "text": "7.1. Processing AgentX Administrative Messages",
      "section_title": true,
      "zh-CHS": "7.1. 处理AgentX管理消息"
    },
    {
      "indent": 3,
      "text": "This subsection describes the actions of AgentX protocol entities in processing AgentX administrative messages. Such messages include those involved in establishing and terminating an AgentX session between a subagent and a master agent, those by which a subagent requests allocation of instance index values, and those by which a subagent communicates to a master agent which MIB regions it supports.",
      "zh-CHS": "本小节介绍AgentX协议实体在处理AgentX管理消息时的操作。此类消息包括在子代理和主代理之间建立和终止AgentX会话所涉及的消息、子代理请求分配实例索引值的消息以及子代理与主代理通信（其支持MIB区域）所涉及的消息。"
    },
    {
      "indent": 3,
      "text": "Processing is defined specifically for each PDU type in its own section. For the master agent, many of these PDU types require the same initial processing steps. This common processing is defined here, and referenced as needed in the PDU type-specific descriptions.",
      "zh-CHS": "处理是专门为每个PDU类型在其自己的部分中定义的。对于主代理，许多这些PDU类型需要相同的初始处理步骤。此通用处理在此处定义，并根据需要在PDU类型特定描述中引用。"
    },
    {
      "indent": 3,
      "text": "Common Processing:",
      "zh-CHS": "一般处理："
    },
    {
      "indent": 3,
      "text": "The master agent initially processes a received AgentX PDU as follows:",
      "zh-CHS": "主代理最初处理接收到的AgentX PDU，如下所示："
    },
    {
      "indent": 6,
      "text": "1) An agentx-Response-PDU is created, res.sysUpTime is set to the value of sysUpTime.0 for the default context, res.error is set to `noAgentXError', and res.index is set to 0.",
      "zh-CHS": "1) 已创建agentx响应PDU，默认上下文的res.sysUpTime设置为sysUpTime.0，res.error设置为'noAgentXError'，res.index设置为0。"
    },
    {
      "indent": 6,
      "text": "2) If the received PDU cannot be parsed, res.error is set to ` parseError'. Examples of a parse error are:",
      "zh-CHS": "2) 如果无法解析收到的PDU，则res.error设置为“parseError”。解析错误的示例有："
    },
    {
      "indent": 12,
      "text": "- PDU length (h.payload) too short to contain current construct (Object Identifier header indicates more sub-identifiers, VarBind v.type indicates data follows, etc)",
      "zh-CHS": "- PDU长度（h.payload）太短，无法包含当前构造（对象标识符标头表示更多子标识符，VarBind v.type表示数据如下，等等）"
    },
    {
      "indent": 12,
      "text": "- An unrecognized value is encountered for h.type, v.type, etc.",
      "zh-CHS": "- h.type、v.type等遇到无法识别的值。"
    },
    {
      "indent": 6,
      "text": "3) Otherwise, if h.sessionID does not correspond to a currently established session with this subagent, res.error is set to `notOpen'.",
      "zh-CHS": "3) 否则，如果h.sessionID与当前与此子代理建立的会话不对应，则res.error设置为“notOpen”。"
    },
    {
      "indent": 6,
      "text": "4) Otherwise, if the NON_DEFAULT_CONTEXT bit is set and the master agent does not support the indicated context, res.error is set to `unsupportedContext'. If the master agent does support the indicated context, the value of res.sysUpTime is set to the value of sysUpTime.0 for that context.",
      "zh-CHS": "4) 否则，如果设置了非默认上下文位，并且主代理不支持指定的上下文，则res.error将设置为“unsupportedContext”。如果主代理不支持指定的上下文，则该上下文的res.sysUpTime值设置为sysUpTime.0。"
    },
    {
      "indent": 6,
      "text": "Note: Non-default contexts might be added on the fly by the master agent, or the master agent might require such non-default contexts to be pre-configured. The choice is implementation-specific.",
      "zh-CHS": "注意：主代理可能会动态添加非默认上下文，或者主代理可能需要预先配置此类非默认上下文。选择是特定于实现的。"
    },
    {
      "indent": 6,
      "text": "5) If resources cannot be allocated or some other condition prevents processing, res.error is set to `processingError'.",
      "zh-CHS": "5) 如果无法分配资源或某些其他条件阻止处理，res.error将设置为“processingError”。"
    },
    {
      "indent": 6,
      "text": "6) At this point, if res.error is not `noAgentXError', the received PDU is not processed further. If the received PDU's header was successfully parsed, the AgentX-Response-PDU is sent in reply. If the received PDU contained a VarBindList which was successfully parsed, the AgentX-Response-PDU contains the identical VarBindList. If the received PDU's header was not successfully parsed or for some other reason the master agent cannot send a reply, processing is complete.",
      "zh-CHS": "6) 此时，如果res.error不是“noAgentXError”，则不会进一步处理接收到的PDU。如果已成功解析接收到的PDU标头，则会发送AgentX响应PDU作为回复。如果收到的PDU包含已成功解析的VarBindList，则AgentX响应PDU包含相同的VarBindList。如果接收到的PDU标头未成功解析，或由于其他原因，主代理无法发送答复，则处理完成。"
    },
    {
      "indent": 0,
      "text": "7.1.1. Processing the agentx-Open-PDU",
      "section_title": true,
      "zh-CHS": "7.1.1. 处理agentx Open PDU"
    },
    {
      "indent": 3,
      "text": "When the master agent receives an agentx-Open-PDU, it processes it as follows:",
      "zh-CHS": "当主代理收到agentx Open PDU时，它将按如下方式处理："
    },
    {
      "indent": 3,
      "text": "1) An agentx-Response-PDU is created, res.sysUpTime is set to the value of sysUpTime.0 for the default context, res.error is set to `noAgentXError', and res.index is set to 0.",
      "zh-CHS": "1) 已创建agentx响应PDU，默认上下文的res.sysUpTime设置为sysUpTime.0，res.error设置为'noAgentXError'，res.index设置为0。"
    },
    {
      "indent": 3,
      "text": "2) If the received PDU cannot be parsed, res.error is set to `parseError'.",
      "zh-CHS": "2) 如果无法解析收到的PDU，则res.error设置为“parseError”。"
    },
    {
      "indent": 3,
      "text": "3) Otherwise, if the master agent is unable to open an AgentX session for any reason, res.error is set to `openFailed'.",
      "zh-CHS": "3) 否则，如果主代理由于任何原因无法打开AgentX会话，res.error将设置为“openFailed”。"
    },
    {
      "indent": 3,
      "text": "4) Otherwise: The master agent assigns a sessionID to the new session and puts the value in the h.sessionID field of the agentx-Response-PDU. This value must be unique among all existing open sessions.",
      "zh-CHS": "4) 否则：主代理将为新会话分配sessionID，并将该值放入agentx响应PDU的h.sessionID字段中。此值在所有现有打开的会话中必须是唯一的。"
    },
    {
      "indent": 6,
      "text": "The master agent retains session-specific information from the PDU for this session:",
      "zh-CHS": "主代理保留来自PDU的此会话的特定于会话的信息："
    },
    {
      "indent": 6,
      "text": "- The NETWORK_BYTE_ORDER value in h.flags is retained. All subsequent AgentX protocol operations initiated by the master agent for this session must use this byte ordering and set this bit accordingly.",
      "zh-CHS": "- 保留h.标志中的网络字节顺序值。主代理为此会话启动的所有后续AgentX协议操作必须使用此字节顺序，并相应地设置此位。"
    },
    {
      "indent": 6,
      "text": "The subagent typically sets this bit to correspond to its native byte ordering, and typically does not vary byte ordering for an initiated session. The master agent must be able to decode each PDU according to the h.flag NETWORK_BYTE_ORDER bit in the PDU, but does not need to toggle its retained value for the session if the subagent varies its byte ordering.",
      "zh-CHS": "子代理通常将该位设置为与其本机字节顺序相对应，并且通常不会改变已启动会话的字节顺序。主代理必须能够根据PDU中的h.flag NETWORK_BYTE_ORDER位对每个PDU进行解码，但如果子代理改变其字节顺序，则不需要为会话切换其保留值。"
    },
    {
      "indent": 6,
      "text": "- The o.timeout value is used in calculating response timeout conditions for this session. This field is also referenced in the AgentX MIB (a work-in-progress) by the agentxSessionTimeout object.",
      "zh-CHS": "- o.timeout值用于计算此会话的响应超时条件。agentxSessionTimeout对象还在AgentX MIB（正在进行的工作）中引用此字段。"
    },
    {
      "indent": 6,
      "text": "- The o.id and o.descr fields are used for informational purposes. These two fields are also referenced in the AgentX MIB (a work-in-progress) by the agentxSessionObjectID object, and by the agentxSessionDescr object.",
      "zh-CHS": "- o.id和o.descr字段用于提供信息。agentxSessionObjectID对象和agentxSessionDescr对象也会在AgentX MIB（正在进行的工作）中引用这两个字段。"
    },
    {
      "indent": 3,
      "text": "5) The agentx-Response-PDU is sent with the res.error field indicating the result of the session initiation.",
      "zh-CHS": "5) agentx响应PDU随res.error字段一起发送，该字段指示会话启动的结果。"
    },
    {
      "indent": 3,
      "text": "If processing was successful, an AgentX session is considered established between the master agent and the subagent. An AgentX session is a distinct channel for the exchange of AgentX protocol messages between a master agent and one subagent, qualified by the session-specific attributes listed in 4) above. AgentX session establishment is initiated by the subagent. An AgentX session can be terminated by either the master agent or the subagent.",
      "zh-CHS": "如果处理成功，则认为在主代理和子代理之间建立了AgentX会话。AgentX会话是主代理和一个子代理之间交换AgentX协议消息的独特通道，由上面4）中列出的会话特定属性限定。AgentX会话建立由子代理启动。AgentX会话可以由主代理或子代理终止。"
    },
    {
      "indent": 0,
      "text": "7.1.2. Processing the agentx-IndexAllocate-PDU",
      "section_title": true,
      "zh-CHS": "7.1.2. 处理agentx索引PDU"
    },
    {
      "indent": 3,
      "text": "When the master agent receives an agentx-IndexAllocate-PDU, it performs the common processing described in section 7.1, \"Processing AgentX Administrative Messages\". If as a result res.error is `noAgentXError', processing continues as follows:",
      "zh-CHS": "当主代理收到agentx IndexAllocate PDU时，它将执行第7.1节“处理agentx管理消息”中描述的常见处理。如果结果res.error为“noAgentXError”，则处理将按如下方式继续："
    },
    {
      "indent": 3,
      "text": "1) Each VarBind in the VarBindList is processed until either all are successful, or one fails. If any VarBind fails, the agentx-Response-PDU is sent in reply containing the original VarBindList, with res.index set to indicate the failed VarBind, and with res.error set as described subsequently. All other VarBinds are ignored; no index values are allocated.",
      "zh-CHS": "1) VarBindList中的每个VarBind都将被处理，直到全部成功或一个失败为止。如果任何VarBind失败，则发送agentx响应PDU，其中包含原始VarBindList，设置res.index以指示失败的VarBind，并设置res.error，如下所述。忽略所有其他变量绑定；没有分配索引值。"
    },
    {
      "indent": 6,
      "text": "VarBinds are processed as follows:",
      "zh-CHS": "varbind的处理如下："
    },
    {
      "indent": 6,
      "text": "- v.name is the OID prefix of the MIB OBJECT-TYPE for which a value is to be allocated.",
      "zh-CHS": "- v、 name是要为其分配值的MIB对象类型的OID前缀。"
    },
    {
      "indent": 6,
      "text": "- v.type is the syntax of the MIB OBJECT-TYPE for which a value is to be allocated.",
      "zh-CHS": "- v、 type是要为其分配值的MIB对象类型的语法。"
    },
    {
      "indent": 6,
      "text": "- v.data indicates the specific index value requested. If the NEW_INDEX or the ANY_INDEX bit is set, the actual value in v.data is ignored and an appropriate index value is generated.",
      "zh-CHS": "- v、 数据表示请求的特定索引值。如果设置了新的索引或任意索引位，则忽略v.data中的实际值，并生成适当的索引值。"
    },
    {
      "indent": 6,
      "text": "a) If there are no currently allocated index values for v.name in the indicated context, and v.type does not correspond to a valid index type value, the VarBind fails and res.error is set to `indexWrongType'.",
      "zh-CHS": "a) 如果在指定的上下文中没有为v.name当前分配的索引值，并且v.type与有效的索引类型值不对应，则VarBind将失败，res.error将设置为“IndexErrorType”。"
    },
    {
      "indent": 6,
      "text": "b) If there are currently allocated index values for v.name in the indicated context, but the syntax of those values does not match v.type, the VarBind fails and res.error is set to `indexWrongType'.",
      "zh-CHS": "b) 如果当前在指定的上下文中为v.name分配了索引值，但这些值的语法与v.type不匹配，则VarBind将失败，res.error将设置为“IndexErrorType”。"
    },
    {
      "indent": 6,
      "text": "c) Otherwise, if both the NEW_INDEX and ANY_INDEX bits are clear, allocation of a specific index value is being requested. If the requested index is already allocated for v.name in the indicated context, the VarBind fails and res.error is set to `indexAlreadyAllocated'.",
      "zh-CHS": "c) 否则，如果新的_索引和任何_索引位都是清除的，则请求分配特定的索引值。如果已在指定的上下文中为v.name分配了请求的索引，则VarBind将失败，res.error将设置为“indexAlreadyAllocated”。"
    },
    {
      "indent": 6,
      "text": "d) Otherwise, if the NEW_INDEX bit is set, the master agent should generate the next available index value for v.name in the indicated context, with the constraint that this value must not have been allocated (even if subsequently released) to any subagent since the last re-initialization of the master agent. If no such value can be generated, the VarBind fails and res.error is set to `indexNoneAvailable'.",
      "zh-CHS": "d) 否则，如果设置了新的_索引位，则主代理应在指定的上下文中为v.name生成下一个可用的索引值，但约束条件是，自主代理上次重新初始化以来，该值不得分配（即使随后释放）给任何子代理。如果无法生成此类值，则VarBind将失败，res.error将设置为“indexNoneAvailable”。"
    },
    {
      "indent": 6,
      "text": "e) Otherwise, if the ANY_INDEX bit is set, the master agent should generate an index value for v.name in the indicated context, with the constraint that this value is not currently allocated to any subagent. If no such value can be generated, then the VarBind fails and res.error is set to `indexNoneAvailable'.",
      "zh-CHS": "e) 否则，如果设置了ANY_索引位，则主代理应在指定的上下文中为v.name生成一个索引值，并且该值当前未分配给任何子代理。如果无法生成此类值，则VarBind将失败，res.error将设置为“indexNoneAvailable”。"
    },
    {
      "indent": 3,
      "text": "2) If all VarBinds are processed successfully, the agentx-Response-PDU is sent in reply with res.error set to `noAgentXError'. A VarBindList is included that is identical to the one sent in the agentx-IndexAllocate-PDU, except that VarBinds requesting a NEW_INDEX or ANY_INDEX value are generated with an appropriate value.",
      "zh-CHS": "2) 如果成功处理了所有varbind，则会发送agentx响应PDU，并将res.error设置为“noAgentXError”。包含的VarBindList与agentx IndexAllocate PDU中发送的VarBindList相同，只是请求新的_索引或任何_索引值的VarBinds是使用适当的值生成的。"
    },
    {
      "indent": 6,
      "text": "See section 7.1.4.2, \"Registering Stuff\" for more information on how subagents should perform index allocations.",
      "zh-CHS": "有关子代理如何执行索引分配的更多信息，请参见第7.1.4.2节“注册内容”。"
    },
    {
      "indent": 0,
      "text": "7.1.3. Processing the agentx-IndexDeallocate-PDU",
      "section_title": true,
      "zh-CHS": "7.1.3. 处理agentx IndexDeallocate PDU"
    },
    {
      "indent": 3,
      "text": "When the master agent receives an agentx-IndexDeallocate-PDU, it performs the common processing described in section 7.1, \"Processing AgentX Administrative Messages\". If as a result res.error is `noAgentXError', processing continues as follows:",
      "zh-CHS": "当主代理收到agentx IndexDeallocate PDU时，它将执行第7.1节“处理agentx管理消息”中所述的常见处理。如果结果res.error为“noAgentXError”，则处理将按如下方式继续："
    },
    {
      "indent": 3,
      "text": "1) Each VarBind in the VarBindList is processed until either all are successful, or one fails. If any VarBind fails, the agentx-Response-PDU is sent in reply, containing the original VarBindList, with res.index set to indicate the failed VarBind, and with res.error set as described subsequently. All other VarBinds are ignored; no index values are released.",
      "zh-CHS": "1) VarBindList中的每个VarBind都将被处理，直到全部成功或一个失败为止。如果任何VarBind失败，agentx响应PDU将作为应答发送，其中包含原始VarBindList，设置res.index以指示失败的VarBind，并设置res.error，如下所述。忽略所有其他变量绑定；没有发布索引值。"
    },
    {
      "indent": 6,
      "text": "VarBinds are processed as follows:",
      "zh-CHS": "varbind的处理如下："
    },
    {
      "indent": 6,
      "text": "- v.name is the name of the index for which a value is to be released",
      "zh-CHS": "- v、 name是要为其释放值的索引的名称"
    },
    {
      "indent": 6,
      "text": "- v.type is the syntax of the index object",
      "zh-CHS": "- v、 类型是索引对象的语法"
    },
    {
      "indent": 6,
      "text": "- v.data indicates the specific index value to be released. The NEW_INDEX and ANY_INDEX bits are ignored.",
      "zh-CHS": "- v、 数据表示要发布的特定索引值。新的_索引和任何_索引位将被忽略。"
    },
    {
      "indent": 6,
      "text": "a) If the index value for the named index is not currently allocated to this session, the VarBind fails and res.error is set to `indexNotAllocated'.",
      "zh-CHS": "a) 如果命名索引的索引值当前未分配给此会话，则VarBind将失败，res.error将设置为“indexNotAllocated”。"
    },
    {
      "indent": 3,
      "text": "2) If all VarBinds are processed successfully, res.error is set to `noAgentXError' and the agentx-Response-PDU is sent. A VarBindList is included which is identical to the one sent in the agentx-IndexDeallocate-PDU.",
      "zh-CHS": "2) 如果成功处理所有varbind，res.error将设置为“noAgentXError”，并发送agentx响应PDU。其中包含一个VarBindList，该列表与在agentx IndexDeallocate PDU中发送的相同。"
    },
    {
      "indent": 3,
      "text": "All released index values are now available, and may be used in response to subsequent allocation requests for ANY_INDEX values and in response to subsequent allocation requests for the particular index value.",
      "zh-CHS": "所有发布的索引值现在都可用，可用于响应任何_索引值的后续分配请求以及特定索引值的后续分配请求。"
    },
    {
      "indent": 0,
      "text": "7.1.4. Processing the agentx-Register-PDU",
      "section_title": true,
      "zh-CHS": "7.1.4. 处理agentx寄存器PDU"
    },
    {
      "indent": 3,
      "text": "When the master agent receives an agentx-Register-PDU, it performs the common processing described in section 7.1, \"Processing AgentX Administrative Messages\". If as a result res.error is `noAgentXError', processing continues as follows:",
      "zh-CHS": "当主代理收到agentx寄存器PDU时，它将执行第7.1节“处理agentx管理消息”中所述的常见处理。如果结果res.error为“noAgentXError”，则处理将按如下方式继续："
    },
    {
      "indent": 3,
      "text": "If any of the union of subtrees defined by this MIB region is exactly the same as any subtree defined by a MIB region currently registered within the indicated context, those subtrees are termed \"duplicate subtrees\".",
      "zh-CHS": "如果此MIB区域定义的任何子树的并集与当前在指定上下文中注册的MIB区域定义的任何子树完全相同，则这些子树称为“重复子树”。"
    },
    {
      "indent": 3,
      "text": "If any of the union of subtrees defined by this MIB region overlaps, or is itself overlapped by, any subtree defined by a MIB region currently registered within the indicated context, those subtrees are termed \"overlapping subtrees\".",
      "zh-CHS": "如果此MIB区域定义的任何子树并集与当前在指定上下文中注册的MIB区域定义的任何子树重叠，或其自身与之重叠，则这些子树称为“重叠子树”。"
    },
    {
      "indent": 3,
      "text": "1) If this registration would result in duplicate subtrees registered with the same value of r.priority, the request fails and an agentx-Response-PDU is returned with res.error set to `duplicateRegistration'.",
      "zh-CHS": "1) 如果此注册将导致使用相同的r.priority值注册重复子树，则请求失败，并返回一个agentx响应PDU，res.error设置为“duplicateRegistration”。"
    },
    {
      "indent": 3,
      "text": "2) Otherwise, if the master agent does not wish to permit this registration for implementation-specific reasons, the request fails and an agentx-Response-PDU is returned with res.error set to `requestDenied'.",
      "zh-CHS": "2) 否则，如果主代理出于特定于实现的原因不希望允许此注册，则请求失败，并返回一个agentx响应PDU，res.error设置为“requestDenied”。"
    },
    {
      "indent": 3,
      "text": "3) Otherwise, the agentx-Response-PDU is returned with res.error set to `noAgentXError'.",
      "zh-CHS": "3) 否则，将返回agentx响应PDU，并将res.error设置为“noAgentXError”。"
    },
    {
      "indent": 6,
      "text": "The master agent adds this MIB region to its registration data store for the indicated context, to be considered during the dispatching phase for subsequently received SNMP protocol messages.",
      "zh-CHS": "主代理将此MIB区域添加到其指定上下文的注册数据存储中，以便在调度阶段考虑后续接收的SNMP协议消息。"
    },
    {
      "indent": 0,
      "text": "7.1.4.1. Handling Duplicate and Overlapping Subtrees",
      "section_title": true,
      "zh-CHS": "7.1.4.1. 处理重复和重叠子树"
    },
    {
      "indent": 3,
      "text": "As a result of this registration algorithm there are likely to be duplicate and/or overlapping subtrees within the registration data store of the master agent. Whenever the master agent's dispatching algorithm (see section 7.2.1, \"Dispatching AgentX PDUs\") determines that there are multiple subtrees that could potentially contain the same MIB object instances, the master agent selects one to use, termed the 'authoritative region', as follows:",
      "zh-CHS": "由于该注册算法，主代理的注册数据存储中可能存在重复和/或重叠的子树。当主代理的调度算法（见第7.2.1节“调度代理PDU”）确定存在多个子树，可能包含相同的MIB对象实例时，主代理会选择一个子树来使用，称为“权威区域”，如下所示："
    },
    {
      "indent": 6,
      "text": "1) Choose the one whose original agentx-Register-PDU r.subtree contained the most subids, i.e., the most specific r.subtree. Note: The presence or absence of a range subid has no bearing on how \"specific\" one object identifier is compared to another.",
      "zh-CHS": "1) 选择其原始agentx寄存器PDU r.子树包含最多子ID的一个，即最特定的r.子树。注意：范围子ID的存在与否与一个对象标识符与另一个对象标识符的“特定”比较方式无关。"
    },
    {
      "indent": 6,
      "text": "2) If still ambiguous, there were duplicate subtrees. Choose the one whose original agentx-Register-PDU specified the smaller value of r.priority.",
      "zh-CHS": "2) 如果仍然不明确，则存在重复的子树。选择其原始agentx寄存器PDU指定了较小的r.priority值的一个。"
    },
    {
      "indent": 0,
      "text": "7.1.4.2. Registering Stuff",
      "section_title": true,
      "zh-CHS": "7.1.4.2. 登记资料"
    },
    {
      "indent": 3,
      "text": "This section describes more fully how AgentX subagents use the agentx-IndexAllocate-PDU and agentx-Register-PDU to achieve desired configurations.",
      "zh-CHS": "本节更全面地描述了AgentX子代理如何使用AgentX索引分配PDU和AgentX寄存器PDU来实现所需的配置。"
    },
    {
      "indent": 0,
      "text": "7.1.4.2.1. Registration Priority",
      "section_title": true,
      "zh-CHS": "7.1.4.2.1. 注册优先权"
    },
    {
      "indent": 3,
      "text": "The r.priority field in the agentx-Register-PDU is intended to be manipulated by human administrators to achieve a desired subagent configuration. Typically this would be needed where a legacy application registers a specific subtree, and a different (configurable) application may need to become authoritative for the identical subtree.",
      "zh-CHS": "agentx寄存器PDU中的r.priority字段旨在由人工管理员进行操作，以实现所需的子代理配置。通常，当遗留应用程序注册特定子树，并且不同（可配置）的应用程序可能需要成为相同子树的权威时，就需要这样做。"
    },
    {
      "indent": 3,
      "text": "The result of this configuration (the same subtree registered on different sessions with different priorities) is that the session using the better priority (see section 7.1.4.1, \"Handling Duplicate and Overlapping Subtrees\") will be authoritative. The other session will simply never be dispatched to.",
      "zh-CHS": "此配置的结果（在不同会话上注册的相同子树具有不同的优先级）是，使用更好优先级的会话（见第7.1.4.1节“处理重复和重叠子树”）将具有权威性。另一个会话将永远不会被分派到。"
    },
    {
      "indent": 3,
      "text": "This is useful in the case described above, but is NOT useful in other cases, particularly when subagents share tables indexed by arbitrary values (see below). In general, subagents should register using the default priority (127).",
      "zh-CHS": "这在上述情况下很有用，但在其他情况下不有用，特别是当子代理共享由任意值索引的表时（请参见下文）。通常，子代理应使用默认优先级（127）进行注册。"
    },
    {
      "indent": 0,
      "text": "7.1.4.2.2. Index Allocation",
      "section_title": true,
      "zh-CHS": "7.1.4.2.2. 索引分配"
    },
    {
      "indent": 3,
      "text": "Index allocation is a service provided by an AgentX master agent. It provides generic support for sharing MIB conceptual tables among subagents who are assumed to have no knowledge of each other.",
      "zh-CHS": "索引分配是由AgentX主代理提供的服务。它为假定彼此不了解的子代理之间共享MIB概念表提供了通用支持。"
    },
    {
      "indent": 3,
      "text": "The master agent maintains a database of index objects (OIDs), and, for each index, the values that have been allocated for it. It is unaware of what MIB variables (if any) the index objects represent.",
      "zh-CHS": "主代理维护一个索引对象（OID）数据库，以及为每个索引分配的值。它不知道索引对象代表什么MIB变量（如果有的话）。"
    },
    {
      "indent": 3,
      "text": "By convention, subagents use the MIB variable listed in the INDEX clause as the index object for which values must be allocated. For tables indexed by multiple variables, values may be allocated for each index (although this is frequently unnecessary; see example 2 below). The subagent may request allocation of",
      "zh-CHS": "按照惯例，子代理使用INDEX子句中列出的MIB变量作为必须为其分配值的索引对象。对于由多个变量索引的表，可以为每个索引分配值（尽管这通常是不必要的；请参见下面的示例2）。子代理可以请求分配"
    },
    {
      "indent": 10,
      "text": "a) a specific index value b) an index value that is not currently allocated c) an index value that has never been allocated",
      "zh-CHS": "a) 特定索引值b）当前未分配的索引值c）从未分配的索引值"
    },
    {
      "indent": 3,
      "text": "The last two alternatives reflect the uniqueness and constancy requirements present in many MIB specifications for arbitrary integer indexes (e.g., ifIndex in the IF-MIB (RFC 2233 [19]), snmpFddiSMTIndex in the FDDI MIB (RFC 1285 [20]), or sysApplInstallPkgIndex in the System Application MIB (RFC 2287 [21])). The need for subagents to share tables using such indexes is the main motivation for index allocation in AgentX.",
      "zh-CHS": "最后两个备选方案反映了许多MIB规范中对任意整数索引的唯一性和一致性要求（例如，IF-MIB中的ifIndex（RFC 2233[19]）、FDDI MIB中的snmpFddiSMTIndex（RFC 1285[20]）或系统应用程序MIB中的sysApplInstallPkgIndex（RFC 2287[21]）。子代理需要使用此类索引共享表，这是AgentX中索引分配的主要动机。"
    },
    {
      "indent": 3,
      "text": "It is important to note that index allocation and MIB region registration are not coupled in the master agent. The current state of index allocations is not considered when processing registration requests, and the current registry is not considered when processing index allocation requests. (This is mainly to accommodate non-AgentX subagents.)",
      "zh-CHS": "需要注意的是，索引分配和MIB区域注册在主代理中是不耦合的。处理注册请求时不考虑索引分配的当前状态，处理索引分配请求时不考虑当前注册表。（这主要是为了容纳非AgentX子代理。）"
    },
    {
      "indent": 3,
      "text": "AgentX subagents should follow the model of \"first request allocation of an index, then register the corresponding region\". Then a successful index allocation request gives a subagent a good hint (but no guarantee) of what it should be able to register. The registration may fail (with `duplicateRegistration') because some other subagent session has already registered that row of the table.",
      "zh-CHS": "AgentX子代理应遵循“先请求分配索引，然后注册相应区域”的模式。然后，成功的索引分配请求会给子代理一个很好的提示（但不能保证）它应该能够注册什么。注册可能会失败（使用“duplicateRegistration”），因为其他一些子代理会话已经注册了表的该行。"
    },
    {
      "indent": 3,
      "text": "The recommended mechanism for subagents to register conceptual rows in a shared table is",
      "zh-CHS": "建议子代理在共享表中注册概念行的机制是"
    },
    {
      "indent": 3,
      "text": "1) Successfully allocate an index value.",
      "zh-CHS": "1) 成功分配索引值。"
    },
    {
      "indent": 3,
      "text": "2) Use that value to fully qualify the MIB region(s), and attempt to register using the default priority.",
      "zh-CHS": "2) 使用该值完全限定MIB区域，并尝试使用默认优先级进行注册。"
    },
    {
      "indent": 3,
      "text": "3) If the registration fails with `duplicateRegistration' deallocate the previously allocated index value(s) for this row and go to step 1).",
      "zh-CHS": "3) 如果使用“duplicateRegistration”注册失败，请取消分配先前为此行分配的索引值，然后转至步骤1）。"
    },
    {
      "indent": 3,
      "text": "Note that index allocation is necessary only when the index in question is an arbitrary value, and hence the subagent has no other reasonable way to determine which index values to use. When index values have intrinsic meaning it is not expected that subagents will allocate their index values.",
      "zh-CHS": "请注意，只有当所讨论的索引是任意值时，才需要进行索引分配，因此子代理没有其他合理的方法来确定要使用哪些索引值。当索引值具有内在含义时，子代理不会分配其索引值。"
    },
    {
      "indent": 3,
      "text": "For example, RFC 1514's table of running software processes (hrSWRunTable) is indexed by the system's native process identifier (pid). A subagent implementing the row of hrSWRunTable corresponding to its own process would simply register the region defining that row's object instances without allocating index values.",
      "zh-CHS": "例如，RFC 1514的运行软件进程表（hrSWRunTable）由系统的本机进程标识符（pid）索引。实现与自己的进程对应的hrSWRunTable行的子代理只需注册定义该行对象实例的区域，而无需分配索引值。"
    },
    {
      "indent": 0,
      "text": "7.1.4.2.3. Examples",
      "section_title": true,
      "zh-CHS": "7.1.4.2.3. 例子"
    },
    {
      "indent": 3,
      "text": "Example 1:",
      "zh-CHS": "例1："
    },
    {
      "indent": 6,
      "text": "A subagent implements an interface, and wishes to register a single row of the RFC 2233 ifTable. It requests an allocation for the index object \"ifIndex\", for a value that has never been allocated (since ifIndex values must be unique). The master agent returns the value \"7\".",
      "zh-CHS": "子代理实现一个接口，并希望注册RFC 2233 ifTable的一行。它请求为索引对象“ifIndex”分配一个从未分配过的值（因为ifIndex值必须是唯一的）。主代理返回值“7”。"
    },
    {
      "indent": 6,
      "text": "The subagent now attempts to register row 7 of ifTable, by specifying a MIB region in the agentx-Register-PDU of 1.3.6.1.2.1.2.2.1.[1-22].7. If the registration succeeds, no further processing is required. The master agent will dispatch to this subagent correctly.",
      "zh-CHS": "子代理现在尝试注册ifTable的第7行，方法是在agentx寄存器PDU 1.3.6.1.2.1.2.2.1.[1-22].7中指定MIB区域。如果注册成功，则无需进一步处理。主代理将正确地分派到此子代理。"
    },
    {
      "indent": 6,
      "text": "If the registration failed with `duplicateRegistration', the subagent should deallocate the failed index, request allocation of a new index i, and attempt to register ifTable.[1-22].i, until successful.",
      "zh-CHS": "如果使用“duplicateRegistration”注册失败，则子代理应取消分配失败的索引，请求分配新索引i，并尝试注册ifTable。[1-22].i，直到成功。"
    },
    {
      "indent": 3,
      "text": "Example 2:",
      "zh-CHS": "例2："
    },
    {
      "indent": 6,
      "text": "This same subagent wishes to register ipNetToMediaTable rows corresponding to its interface (ifIndex i). Due to the structure of this table, no further index allocation need be done. The subagent can register the MIB region ipNetToMediaTable.[1-4].i, It is claiming responsibility for all rows of the table whose value of ipNetToMediaIfIndex is i.",
      "zh-CHS": "该子代理希望注册与其接口（ifIndex i）对应的ipNetToMediaTable行。由于该表的结构，不需要进行进一步的索引分配。子代理可以注册MIB区域ipNetToMediaTable。[1-4]。i，它声明对ipNetToMediaIfIndex值为i的表的所有行负责。"
    },
    {
      "indent": 3,
      "text": "Example 3:",
      "zh-CHS": "例3："
    },
    {
      "indent": 6,
      "text": "A network device consists of a set of processors, each of which accepts network connections for a unique set of IP addresses. Further, each processor contains a subagent that implements tcpConnTable. In order to represent tcpConnTable for the entire managed device, the subagents need to share tcpConnTable.",
      "zh-CHS": "网络设备由一组处理器组成，每个处理器都接受一组唯一IP地址的网络连接。此外，每个处理器都包含一个子代理，用于实现tcpcontable。为了表示整个受管设备的tcpcontable，子代理需要共享tcpcontable。"
    },
    {
      "indent": 6,
      "text": "In this case, no index allocation need be done at all. Each subagent can register a MIB region of tcpConnTable.[1-5].a.b.c.d, where a.b.c.d represents an unique IP address of the individual processor.",
      "zh-CHS": "在这种情况下，根本不需要进行索引分配。每个子代理都可以注册tcpcontable[1-5].a.b.c.d的MIB区域，其中a.b.c.d表示单个处理器的唯一IP地址。"
    },
    {
      "indent": 6,
      "text": "Each subagent is claiming responsibility for the region of tcpConnTable where the value of tcpConnLocalAddress is a.b.c.d.",
      "zh-CHS": "每个子代理都声称对TCPConTable区域负责，其中tcpConnLocalAddress的值为a.b.c.d。"
    },
    {
      "indent": 3,
      "text": "Example 4:",
      "zh-CHS": "例4："
    },
    {
      "indent": 6,
      "text": "The Application Management MIB (RFC 2564 [22]) uses two objects to index several tables. A partial description of them is:",
      "zh-CHS": "应用程序管理MIB（RFC2564[22]）使用两个对象对多个表进行索引。部分描述如下："
    },
    {
      "indent": 6,
      "text": "applSrvIndex OBJECT-TYPE SYNTAX Unsigned32 (1..'ffffffff'h) MAX-ACCESS read-only STATUS current DESCRIPTION \"An applSrvIndex is the system-unique identifier of an instance of a service. The value is unique not only across all instances of a given service, but also across all services in a system.\"",
      "zh-CHS": "applSrvIndex对象类型语法Unsigned32（1..'FFFFFF'h）MAX-ACCESS只读状态当前描述“applSrvIndex是服务实例的系统唯一标识符。该值不仅在给定服务的所有实例中是唯一的，而且在系统中的所有服务中也是唯一的。”"
    },
    {
      "indent": 6,
      "text": "applSrvName OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-only STATUS current DESCRIPTION \"The human-readable name of a service. Where appropriate, as in the case where a service can be identified in terms of a single protocol, the strings should be established names such as those assigned by IANA and found in STD 2 [23], or defined by some other authority. In some cases private conventions apply and the string should in these cases be consistent with these non-standard conventions. An applicability statement may specify the service name(s) to be used.\"",
      "zh-CHS": "applSrvName对象类型语法SnmpAdminString MAX-ACCESS只读状态当前描述“服务的人类可读名称。在适当的情况下，如可以根据单个协议识别服务，字符串应为已建立的名称，如IANA分配的名称，并在STD 2[23]中找到，或由其他权威机构定义。在某些情况下，专用约定适用，在这些情况下，字符串应与这些非标准约定一致。适用性声明可指定要使用的服务名称。”"
    },
    {
      "indent": 6,
      "text": "Since applSrvIndex is an arbitrary value, it would be reasonable for subagents to allocate values for this index. applSrvName however has intrinsic meaning and any values a subagent would use should be known a priori, hence it is not reasonable for subagents to allocate values of this index.",
      "zh-CHS": "由于applSrvIndex是一个任意值，因此子代理为该索引分配值是合理的。然而，applSrvName具有内在含义，子代理将使用的任何值都应该是先验的，因此子代理分配此索引的值是不合理的。"
    },
    {
      "indent": 0,
      "text": "7.1.5. Processing the agentx-Unregister-PDU",
      "section_title": true,
      "zh-CHS": "7.1.5. 处理agentx注销PDU"
    },
    {
      "indent": 3,
      "text": "When the master agent receives an agentx-Unregister-PDU, it performs the common processing described in section 7.1, \"Processing AgentX Administrative Messages\". If as a result res.error is ` noAgentXError', processing continues as follows:",
      "zh-CHS": "当主代理收到agentx注销PDU时，它将执行第7.1节“处理agentx管理消息”中描述的常见处理。如果结果res.error为“noAgentXError”，则处理将按如下方式继续："
    },
    {
      "indent": 3,
      "text": "1) If u.subtree, u.priority, u.range_subid (and if u.range_subid is not 0, u.upper_bound), and the indicated context do not match an existing registration made during this session, the agentx-Response-PDU is returned with res.error set to ` unknownRegistration'.",
      "zh-CHS": "1) 如果u.subtree、u.priority、u.range_subid（如果u.range_subid不是0，u.upper_bound）和指示的上下文与此会话期间进行的现有注册不匹配，则返回agentx响应PDU，res.error设置为“unknownRegistration”。"
    },
    {
      "indent": 3,
      "text": "2) Otherwise, the agentx-Response-PDU is sent in reply with res.error set to `noAgentXError', and the previous registration is removed from the registration data store.",
      "zh-CHS": "2) 否则，将发送agentx响应PDU，并将res.error设置为“noAgentXError”，然后从注册数据存储中删除以前的注册。"
    },
    {
      "indent": 0,
      "text": "7.1.6. Processing the agentx-AddAgentCaps-PDU",
      "section_title": true,
      "zh-CHS": "7.1.6. 处理agentx AddAgentCaps PDU"
    },
    {
      "indent": 3,
      "text": "When the master agent receives an agentx-AddAgentCaps-PDU, it performs the common processing described in section 7.1, \"Processing AgentX Administrative Messages\". If as a result res.error is ` noAgentXError', processing continues as follows:",
      "zh-CHS": "当主代理收到agentx ADAGENTCAPS PDU时，它将执行第7.1节“处理agentx管理消息”中描述的公共处理。如果结果res.error为“noAgentXError”，则处理将按如下方式继续："
    },
    {
      "indent": 3,
      "text": "1) The master agent adds this agent capabilities information to the sysORTable for the indicated context. An agentx-Response-PDU is sent in reply with res.error set to `noAgentXError'.",
      "zh-CHS": "1) 主代理将此代理功能信息添加到指定上下文的sysORTable中。发送agentx响应PDU作为回复，res.error设置为“noAgentXError”。"
    },
    {
      "indent": 0,
      "text": "7.1.7. Processing the agentx-RemoveAgentCaps-PDU",
      "section_title": true,
      "zh-CHS": "7.1.7. 处理agentx RemoveAgentCaps PDU"
    },
    {
      "indent": 3,
      "text": "When the master agent receives an agentx-RemoveAgentCaps-PDU, it performs the common processing described in section 7.1, \"Processing AgentX Administrative Messages\". If as a result res.error is `noAgentXError', processing continues as follows:",
      "zh-CHS": "当主代理收到agentx RemoveAgentCaps PDU时，它将执行第7.1节“处理agentx管理消息”中所述的常见处理。如果结果res.error为“noAgentXError”，则处理将按如下方式继续："
    },
    {
      "indent": 3,
      "text": "1) If the combination of a.id and the optional a.context does not represent a sysORTable entry that was added by this subagent during this session, the agentx-Response-PDU is returned with res.error set to `unknownAgentCaps'.",
      "zh-CHS": "1) 如果a.id和可选a.context的组合不表示此子代理在此会话期间添加的sysORTable条目，则返回agentx响应PDU，并将res.error设置为“Unknownangentcaps”。"
    },
    {
      "indent": 3,
      "text": "2) Otherwise the master agent deletes the corresponding sysORTable entry and sends in reply the agentx-Response-PDU, with res.error set to `noAgentXError'.",
      "zh-CHS": "2) 否则，主代理将删除相应的sysORTable条目，并发送agentx响应PDU作为响应，res.error设置为“noAgentXError”。"
    },
    {
      "indent": 0,
      "text": "7.1.8. Processing the agentx-Close-PDU",
      "section_title": true,
      "zh-CHS": "7.1.8. 正在处理agentx Close PDU"
    },
    {
      "indent": 3,
      "text": "When the master agent receives an agentx-Close-PDU, it performs the common processing described in section 7.1, \"Processing AgentX Administrative Messages\", with the exception that step 4) is not performed since the agentx-Close-PDU does may not contain a context field. If as a result res.error is `noAgentXError', processing continues as follows:",
      "zh-CHS": "当主代理收到agentx Close PDU时，它将执行第7.1节“处理agentx管理消息”中描述的常见处理，但由于agentx Close PDU可能不包含上下文字段，因此未执行步骤4）。如果结果res.error为“noAgentXError”，则处理将按如下方式继续："
    },
    {
      "indent": 3,
      "text": "1) The master agent closes the AgentX session as described below, and sends in reply the agentx-Response-PDU with res.error set to `noAgentXError':",
      "zh-CHS": "1) 主代理关闭AgentX会话，如下所述，并发送AgentX响应PDU，res.error设置为“noAgentXError”："
    },
    {
      "indent": 6,
      "text": "- All MIB regions that have been registered during this session are unregistered, as described in section 7.1.5, \"Processing the agentx-Unregister-PDU\".",
      "zh-CHS": "- 如第7.1.5节“处理agentx注销PDU”所述，在此会话期间注册的所有MIB区域都将被注销。"
    },
    {
      "indent": 6,
      "text": "- All index values allocated during this session are freed, as described in section 7.1.3, \"Processing the agentx-IndexDeallocate-PDU\".",
      "zh-CHS": "- 如第7.1.3节“处理agentx IndexDeallocate PDU”所述，释放此会话期间分配的所有索引值。"
    },
    {
      "indent": 6,
      "text": "- All sysORID values that were registered during this session are removed, as described in section 7.1.7, \"Processing the agentx-RemoveAgentCaps-PDU\".",
      "zh-CHS": "- 如第7.1.7节“处理agentx RemoveAgentCaps PDU”所述，删除在此会话期间注册的所有sysORID值。"
    },
    {
      "indent": 3,
      "text": "The master agent does not maintain state for closed sessions. If a subagent wishes to re-establish a session after it has been closed, it needs to re-register MIB regions, agent capabilities, etc.",
      "zh-CHS": "主代理不维护已关闭会话的状态。如果子代理希望在会话关闭后重新建立会话，则需要重新注册MIB区域、代理功能等。"
    },
    {
      "indent": 0,
      "text": "7.1.9. Detecting Connection Loss",
      "section_title": true,
      "zh-CHS": "7.1.9. 检测连接丢失"
    },
    {
      "indent": 3,
      "text": "If a master agent is able to detect (from the underlying transport) that a subagent cannot receive AgentX PDUs, it should close all affected AgentX sessions as described in section 7.1.8, \"Processing the agentx-Close-PDU\", step 1).",
      "zh-CHS": "如果主代理能够（从基础传输）检测到子代理无法接收AgentX PDU，则应按照第7.1.8节“处理AgentX close PDU”（步骤1）中的说明关闭所有受影响的AgentX会话。"
    },
    {
      "indent": 0,
      "text": "7.1.10. Processing the agentx-Notify-PDU",
      "section_title": true,
      "zh-CHS": "7.1.10. 处理agentx Notify PDU"
    },
    {
      "indent": 3,
      "text": "A subagent sending SNMPv1 trap information must map this into (minimally) a value of snmpTrapOID.0, as described in 3.1.2 of RFC 1908 [24].",
      "zh-CHS": "发送SNMPv1陷阱信息的子代理必须（至少）将其映射为snmpTrapOID.0的值，如RFC 1908[24]的3.1.2所述。"
    },
    {
      "indent": 3,
      "text": "When the master agent receives an agentx-Notify-PDU, it performs the common processing described in section 7.1, \"Processing AgentX Administrative Messages\". If as a result res.error is `noAgentXError', processing continues as follows:",
      "zh-CHS": "当主代理收到agentx Notify PDU时，它将执行第7.1节“处理agentx管理消息”中所述的常见处理。如果结果res.error为“noAgentXError”，则处理将按如下方式继续："
    },
    {
      "indent": 3,
      "text": "1) If the first VarBind is sysUpTime.0;",
      "zh-CHS": "1) 如果第一个VarBind是sysUpTime.0；"
    },
    {
      "indent": 6,
      "text": "(a) if the second VarBind is not snmpTrapOID.0, res.error is set to `processingError' and res.index to 2",
      "zh-CHS": "(a) 如果第二个VarBind不是snmpTrapOID.0，则res.error设置为'processingError'，res.index设置为2"
    },
    {
      "indent": 6,
      "text": "(b) otherwise these two VarBinds are used as the first two VarBinds within the generated notification.",
      "zh-CHS": "(b) 否则，这两个varbind将用作生成的通知中的前两个varbind。"
    },
    {
      "indent": 3,
      "text": "2) If the first VarBind is not sysUpTime.0;",
      "zh-CHS": "2) 如果第一个VarBind不是sysUpTime.0；"
    },
    {
      "indent": 6,
      "text": "(a) if the first VarBind is not snmpTrapOID.0, res.error is set to `processingError' and res.index to 1",
      "zh-CHS": "(a) 如果第一个VarBind不是snmpTrapOID.0，则res.error设置为'processingError'，res.index设置为1"
    },
    {
      "indent": 6,
      "text": "(b) otherwise this VarBind is used for snmpTrapOID.0 within the generated notification, and the master agent uses the current value of sysUpTime.0 for the indicated context as sysUpTime.0 within the notification.",
      "zh-CHS": "(b) 否则，此VarBind将用于生成的通知中的snmpTrapOID.0，主代理将当前值sysUpTime.0用于通知中指定的上下文sysUpTime.0。"
    },
    {
      "indent": 3,
      "text": "3) An agentx-Response-PDU is sent containing the original VarBindList, and with res.error and res.index set as described above. If res.error is `noAgentXError', notifications are sent according to the implementation-specific configuration of the master agent. If SNMPv1 Trap PDUs are generated, the recommended mapping is as described in RFC 2089 [25]. If res.error indicates an error in processing, no notifications are generated.",
      "zh-CHS": "3) 发送一个agentx响应PDU，其中包含原始VarBindList，并如上所述设置res.error和res.index。如果res.error为“noAgentXError”，则根据主代理的特定于实现的配置发送通知。如果生成SNMPv1陷阱PDU，建议的映射如RFC 2089[25]所述。如果res.error指示处理中存在错误，则不会生成通知。"
    },
    {
      "indent": 6,
      "text": "Note that the master agent's successful response indicates the agentx-Notify-PDU was received and validated. It does not indicate that any particular notifications were actually generated or received by notification targets.",
      "zh-CHS": "请注意，主代理的成功响应表示已接收并验证agentx Notify PDU。它并不表示通知目标实际生成或接收了任何特定的通知。"
    },
    {
      "indent": 0,
      "text": "7.1.11. Processing the agentx-Ping-PDU",
      "section_title": true,
      "zh-CHS": "7.1.11. 正在处理代理Ping PDU"
    },
    {
      "indent": 3,
      "text": "When the master agent receives an agentx-Ping-PDU, it performs the common processing described in section 7.1, \"Processing AgentX Administrative Messages\". If as a result res.error is ` noAgentXError', processing continues as follows:",
      "zh-CHS": "当主代理收到agentx Ping PDU时，它将执行第7.1节“处理agentx管理消息”中所述的常见处理。如果结果res.error为“noAgentXError”，则处理将按如下方式继续："
    },
    {
      "indent": 6,
      "text": "1) An agentx-Response-PDU is sent in reply.",
      "zh-CHS": "1) 将发送agentx响应PDU作为响应。"
    },
    {
      "indent": 3,
      "text": "If a subagent does not receive a response to its pings, or if it is able to detect (from the underlying transport) that the master agent is not able to receive AgentX messages, then it eventually must initiate a new AgentX session, re-register its MIB regions, etc.",
      "zh-CHS": "如果子代理没有收到对其ping的响应，或者如果它能够检测到（从底层传输）主代理无法接收AgentX消息，那么它最终必须启动新的AgentX会话，重新注册其MIB区域，等等。"
    },
    {
      "indent": 0,
      "text": "7.2. Processing Received SNMP Protocol Messages",
      "section_title": true,
      "zh-CHS": "7.2. 处理收到的SNMP协议消息"
    },
    {
      "indent": 3,
      "text": "When an SNMP GetRequest, GetNextRequest, GetBulkRequest, or SetRequest protocol message is received by the master agent, the master agent applies its access control policy.",
      "zh-CHS": "当主代理收到SNMP GetRequest、GetNextRequest、GetBulkRequest或SetRequest协议消息时，主代理将应用其访问控制策略。"
    },
    {
      "indent": 3,
      "text": "In particular, for SNMPv1 or SNMPv2c protocol messages, the master agent applies the Elements of Procedure defined in section 4.1 of STD 15, RFC 1157 [8] that apply to receiving entities. For SNMPv3, the master agent applies an Access Control Model, possibly the View-based Access Control Model (see RFC 2575 [15]), as described in section 3.1.2 and section 4.3 of RFC 2571 [1].",
      "zh-CHS": "特别是，对于SNMPv1或SNMPv2c协议消息，主代理应用STD 15 RFC 1157[8]第4.1节中定义的适用于接收实体的程序元素。对于SNMPv3，主代理应用访问控制模型，可能是基于视图的访问控制模型（参见RFC 2575[15]），如RFC 2571[1]第3.1.2节和第4.3节所述。"
    },
    {
      "indent": 3,
      "text": "For SNMPv1 and SNMPv2c, the master agent uses the community string as an index into a local repository of configuration information that may include community profiles or more complex context information. For SNMPv3, the master agent uses the SNMP Context (see section 3.3.1 of RFC 2571 [1]) for these purposes.",
      "zh-CHS": "对于SNMPv1和SNMPv2c，主代理使用社区字符串作为本地配置信息存储库的索引，配置信息存储库可能包括社区配置文件或更复杂的上下文信息。对于SNMPv3，主代理使用SNMP上下文（参见RFC 2571[1]第3.3.1节）实现这些目的。"
    },
    {
      "indent": 3,
      "text": "If application of the access control policy results in a valid SNMP request PDU, then an SNMP Response-PDU is constructed from information gathered in the exchange of AgentX PDUs between the master agent and one or more subagents. Upon receipt and initial validation of an SNMP request PDU, a master agent uses the procedures described below to dispatch AgentX PDUs to the proper subagents, marshal the subagent responses, and construct an SNMP response PDU.",
      "zh-CHS": "如果访问控制策略的应用导致有效的SNMP请求PDU，则根据主代理和一个或多个子代理之间的AgentX PDU交换中收集的信息构造SNMP响应PDU。在收到SNMP请求PDU并对其进行初始验证后，主代理使用下面描述的过程将AgentX PDU分派给适当的子代理，封送子代理响应，并构建SNMP响应PDU。"
    },
    {
      "indent": 0,
      "text": "7.2.1. Dispatching AgentX PDUs",
      "section_title": true,
      "zh-CHS": "7.2.1. 调度代理程序PDU"
    },
    {
      "indent": 3,
      "text": "Upon receipt and initial validation of an SNMP request PDU, a master agent uses the procedures described below to dispatch AgentX PDUs to the proper subagents.",
      "zh-CHS": "在收到SNMP请求PDU并对其进行初始验证后，主代理使用下面描述的过程将AgentX PDU分派给适当的子代理。"
    },
    {
      "indent": 3,
      "text": "General Rules of Procedure",
      "zh-CHS": "一般议事规则"
    },
    {
      "indent": 3,
      "text": "While processing a particular SNMP request, the master agent may send one or more AgentX PDUs on one or more subagent sessions. The following rules of procedure apply in general to the AgentX master agent. PDU-specific rules are listed in the applicable sections.",
      "zh-CHS": "在处理特定SNMP请求时，主代理可以在一个或多个子代理会话上发送一个或多个AgentX PDU。以下程序规则一般适用于AgentX主代理。适用章节中列出了PDU特定规则。"
    },
    {
      "indent": 3,
      "text": "1) Honoring the registry",
      "zh-CHS": "1) 向注册处致敬"
    },
    {
      "indent": 6,
      "text": "Because AgentX supports registration of duplicate and overlapping regions, it is possible for the master agent to obtain a value for a requested varbind from within multiple registered MIB regions.",
      "zh-CHS": "由于AgentX支持重复和重叠区域的注册，因此主代理可以从多个注册的MIB区域中获取请求的varbind的值。"
    },
    {
      "indent": 6,
      "text": "The master agent must ensure that the value (or exception) actually returned in the SNMP response PDU is taken from the authoritative region (as defined in section 7.1.4.1, \"Handling Duplicate and Overlapping Subtrees\").",
      "zh-CHS": "主代理必须确保SNMP响应PDU中实际返回的值（或异常）取自权威区域（如第7.1.4.1节“处理重复和重叠子树”中的定义）。"
    },
    {
      "indent": 3,
      "text": "2) GetNext and GetBulk Processing",
      "zh-CHS": "2) GetNext和GetBulk处理"
    },
    {
      "indent": 6,
      "text": "The master agent may choose to send agentx-Get-PDUs while servicing an SNMP GetNextRequest-PDU. The master agent may choose to send agentx-Get-PDUs or agentx-GetNext-PDUs while servicing an SNMP GetBulkRequest-PDU. One possible reason for this would be if the current iteration has targeted instance-level registrations.",
      "zh-CHS": "在为SNMP GetNextRequest PDU提供服务时，主代理可以选择发送agentx Get PDU。在为SNMP GetBulkRequest PDU提供服务时，主代理可以选择发送agentx Get PDU或agentx GENEXT PDU。其中一个可能的原因是当前迭代是否有目标实例级注册。"
    },
    {
      "indent": 6,
      "text": "The master agent may choose to \"scope\" the possible instances returned by a subagent by specifying an ending OID in the SearchRange. If such scoping is used, typically the ending OID would be the first lexicographical successor to the target region that was registered on a session other than the target session. Regardless of this choice, rule (1) must be obeyed.",
      "zh-CHS": "主代理可以通过在SearchRange中指定结束OID来选择“范围”子代理返回的可能实例。如果使用这种作用域，通常结束OID将是在目标会话以外的会话上注册的目标区域的第一个词典后续。无论这种选择如何，都必须遵守规则（1）。"
    },
    {
      "indent": 6,
      "text": "The master agent may require multiple request-response iterations on the same subagent session, to determine the final value of all requested variables.",
      "zh-CHS": "主代理可能需要在同一子代理会话上进行多次请求-响应迭代，以确定所有请求变量的最终值。"
    },
    {
      "indent": 6,
      "text": "All AgentX PDUs sent on the session while processing a given SNMP request must contain identical values of transactionID. Each different SNMP request processed by the master agent must present a unique value of transactionID (within the limits of the 32-bit field) to the session.",
      "zh-CHS": "处理给定SNMP请求时在会话上发送的所有AgentX PDU必须包含相同的transactionID值。主代理处理的每个不同SNMP请求必须向会话提供唯一的transactionID值（在32位字段的限制范围内）。"
    },
    {
      "indent": 3,
      "text": "3) Number and order of variables sent per AgentX PDU",
      "zh-CHS": "3) 每个AgentX PDU发送的变量数量和顺序"
    },
    {
      "indent": 6,
      "text": "For Get/GetNext/GetBulk operations, at any stage of the possibly iterative process, the master agent may need to dispatch several SearchRanges to a particular subagent session. The master agent may send one, some, or all of the SearchRanges in a single AgentX PDU.",
      "zh-CHS": "对于Get/GetNext/GetBulk操作，在可能的迭代过程的任何阶段，主代理可能需要向特定的子代理会话分派多个搜索范围。主代理可以在单个AgentX PDU中发送一个、部分或所有搜索范围。"
    },
    {
      "indent": 6,
      "text": "The master agent must ensure that the correct contents and ordering of the VarBindList in the SNMP Response-PDU are maintained.",
      "zh-CHS": "主代理必须确保维护SNMP响应PDU中VarBindList的正确内容和顺序。"
    },
    {
      "indent": 6,
      "text": "The following rules govern the number of VarBinds in a given AgentX PDU:",
      "zh-CHS": "以下规则控制给定AgentX PDU中的VARBIND数："
    },
    {
      "indent": 9,
      "text": "a) The subagent must support processing of AgentX PDUs with multiple VarBinds.",
      "zh-CHS": "a) 子代理必须支持使用多个varbind处理AgentX pdu。"
    },
    {
      "indent": 9,
      "text": "b) When processing an SNMP Set request, the master agent must send all of the VarBinds applicable to a particular subagent session in a single agentx-TestSet-PDU.",
      "zh-CHS": "b) 处理SNMP集请求时，主代理必须在单个agentx测试集PDU中发送适用于特定子代理会话的所有VARBIND。"
    },
    {
      "indent": 9,
      "text": "c) When processing an SNMP Get, GetNext, or GetBulk request, the master agent may send a single AgentX PDU on the session with all applicable VarBinds, or multiple PDUs with single VarBinds, or something in between those extremes. The determination of which method to use in a particular case is implementation-specific.",
      "zh-CHS": "c) 在处理SNMP Get、GetNext或GetBulk请求时，主代理可能会在会话上发送一个带有所有适用变量绑定的AgentX PDU，或多个带有单个变量绑定的PDU，或介于这两个极端之间的某些东西。确定在特定情况下使用哪种方法是特定于实现的。"
    },
    {
      "indent": 3,
      "text": "4) Timeout Values",
      "zh-CHS": "4) 超时值"
    },
    {
      "indent": 6,
      "text": "The master agent chooses a timeout value for each MIB region being queried, which is",
      "zh-CHS": "主代理为要查询的每个MIB区域选择一个超时值，即"
    },
    {
      "indent": 9,
      "text": "a) the value specified during registration of the MIB region, if it was non-zero",
      "zh-CHS": "a) 注册MIB区域期间指定的值（如果该值非零）"
    },
    {
      "indent": 9,
      "text": "b) otherwise, the value specified during establishment of the session in which this region was subsequently registered, if that value was non-zero",
      "zh-CHS": "b) 否则，在随后注册此区域的会话建立期间指定的值（如果该值非零）"
    },
    {
      "indent": 9,
      "text": "c) otherwise, or, if the specified value is not practical, the master agent's implementaton-specific default value",
      "zh-CHS": "c) 否则，或者，如果指定的值不实用，则主代理的实现为特定的默认值"
    },
    {
      "indent": 6,
      "text": "When an AgentX PDU that references multiple MIB regions is dispatched, the timeout value used for the PDU is the maximum value of the timeouts so determined for each of the referenced MIB regions.",
      "zh-CHS": "调度引用多个MIB区域的AgentX PDU时，PDU使用的超时值是为每个引用的MIB区域确定的超时的最大值。"
    },
    {
      "indent": 3,
      "text": "5) Context",
      "zh-CHS": "5) 上下文"
    },
    {
      "indent": 6,
      "text": "If the master agent has determined that a specific non-default context is associated with the SNMP request PDU, that context is encoded into the AgentX PDU's context field and the NON_DEFAULT_CONTEXT bit is set in h.flags.",
      "zh-CHS": "如果主代理已确定特定的非默认上下文与SNMP请求PDU关联，则该上下文将被编码到AgentX PDU的上下文字段中，并且非默认上下文位在h.flags中设置。"
    },
    {
      "indent": 6,
      "text": "Otherwise, no context Octet String is added to the PDU, and the NON_DEFAULT_CONTEXT bit is cleared.",
      "zh-CHS": "否则，不会向PDU添加上下文八位字符串，并且会清除非默认上下文位。"
    },
    {
      "indent": 0,
      "text": "7.2.1.1. agentx-Get-PDU",
      "section_title": true,
      "zh-CHS": "7.2.1.1. 代理获取PDU"
    },
    {
      "indent": 3,
      "text": "Each variable binding in the SNMP request PDU is processed as follows:",
      "zh-CHS": "SNMP请求PDU中的每个变量绑定处理如下："
    },
    {
      "indent": 3,
      "text": "(1) Identify the target MIB region.",
      "zh-CHS": "(1) 识别目标MIB区域。"
    },
    {
      "indent": 8,
      "text": "Within a lexicographically ordered set of registered MIB regions, valid for the indicated context, locate the authoritative region (according to section 7.1.4.1, \"Handling Duplicate and Overlapping Subtrees\") that contains the binding's name.",
      "zh-CHS": "在对指定上下文有效的已注册MIB区域的字典顺序集合中，找到包含绑定名称的权威区域（根据第7.1.4.1节“处理重复和重叠子树”）。"
    },
    {
      "indent": 3,
      "text": "(2) If no such region exists, the variable binding is not processed further, and its value is set to `noSuchObject'.",
      "zh-CHS": "(2) 如果不存在这样的区域，则不进一步处理变量绑定，并将其值设置为“noSuchObject”。"
    },
    {
      "indent": 3,
      "text": "(3) Identify the subagent session in which this region was registered, termed the target session.",
      "zh-CHS": "(3) 确定注册此区域的子代理会话，称为目标会话。"
    },
    {
      "indent": 3,
      "text": "(4) If this is the first variable binding to be dispatched over the target session in a request-response exchange entailed in the processing of this management request:",
      "zh-CHS": "(4) 如果这是在处理此管理请求过程中产生的请求-响应交换中通过目标会话调度的第一个变量绑定："
    },
    {
      "indent": 9,
      "text": "- Create an agentx-Get-PDU for this session, with the header fields initialized as described above (see section 6.1, \"AgentX PDU Header\").",
      "zh-CHS": "- 为该会话创建一个agentx Get PDU，标题字段如上所述初始化（请参阅第6.1节“agentx PDU标题”）。"
    },
    {
      "indent": 3,
      "text": "(5) Add a SearchRange to the end of the target session's PDU for this variable binding.",
      "zh-CHS": "(5) 为此变量绑定将SearchRange添加到目标会话的PDU末尾。"
    },
    {
      "indent": 8,
      "text": "- The variable binding's name is encoded into the starting OID.",
      "zh-CHS": "- 变量绑定的名称被编码到起始OID中。"
    },
    {
      "indent": 8,
      "text": "- The ending OID is encoded as null.",
      "zh-CHS": "- 结束OID编码为null。"
    },
    {
      "indent": 0,
      "text": "7.2.1.2. agentx-GetNext-PDU",
      "section_title": true,
      "zh-CHS": "7.2.1.2. agentx GetNext PDU"
    },
    {
      "indent": 3,
      "text": "Each variable binding in the SNMP request PDU is processed as follows:",
      "zh-CHS": "SNMP请求PDU中的每个变量绑定处理如下："
    },
    {
      "indent": 3,
      "text": "(1) Identify the target MIB region.",
      "zh-CHS": "(1) 识别目标MIB区域。"
    },
    {
      "indent": 8,
      "text": "Within a lexicographically ordered set of registered MIB regions, valid for the indicated context, locate the authoritative region (according to section 7.1.4.1, \"Handling Duplicate and Overlapping Subtrees\") that",
      "zh-CHS": "在一组按字典顺序排列的已注册MIB区域（对指定上下文有效）内，找到以下权威区域（根据第7.1.4.1节“处理重复和重叠子树”）"
    },
    {
      "indent": 8,
      "text": "a) contains the variable binding's name and is not a fully qualified instance, or",
      "zh-CHS": "a) 包含变量绑定的名称，并且不是完全限定的实例，或者"
    },
    {
      "indent": 8,
      "text": "b) is the first lexicographical successor to the variable binding's name.",
      "zh-CHS": "b) 是变量绑定名称的第一个词典继承者。"
    },
    {
      "indent": 3,
      "text": "(2) If no such region exists, the variable binding is not processed further, and its value is set to `endOfMibView'.",
      "zh-CHS": "(2) 如果不存在这样的区域，则不进一步处理变量绑定，并将其值设置为“endOfMibView”。"
    },
    {
      "indent": 3,
      "text": "(3) Identify the subagent session in which this region was registered, termed the target session.",
      "zh-CHS": "(3) 确定注册此区域的子代理会话，称为目标会话。"
    },
    {
      "indent": 3,
      "text": "(4) If this is the first variable binding to be dispatched over the target session in a request-response exchange entailed in the processing of this management request:",
      "zh-CHS": "(4) 如果这是在处理此管理请求过程中产生的请求-响应交换中通过目标会话调度的第一个变量绑定："
    },
    {
      "indent": 8,
      "text": "- Create an agentx-GetNext-PDU for the session, with the header fields initialized as described above (see section 6.1, \"AgentX PDU Header\").",
      "zh-CHS": "- 为会话创建一个agentx GetNext PDU，标题字段如上所述初始化（请参阅第6.1节“agentx PDU标题”）。"
    },
    {
      "indent": 3,
      "text": "(5) Add a SearchRange to the end of the target session's agentx-GetNext-PDU for this variable binding.",
      "zh-CHS": "(5) 为此变量绑定将SearchRange添加到目标会话的agentx GetNext PDU的末尾。"
    },
    {
      "indent": 8,
      "text": "- if (1a) applies, the variable binding's name is encoded into the starting OID, and the OID's \"include\" field is set to 0.",
      "zh-CHS": "- 如果（1a）适用，变量绑定的名称将编码到起始OID中，OID的“include”字段设置为0。"
    },
    {
      "indent": 8,
      "text": "- if (1b) applies, the target region's r.subtree is encoded into the starting OID, and its \"include\" field is set to 1. (This is the recommended method. An implementation may choose to use a Starting OID value that precedes r.subtree, in which case the include bit must be 0. A starting OID value that succeeds r.subtree is not permitted.)",
      "zh-CHS": "- 如果（1b）适用，则目标区域的r.子树编码到起始OID中，其“include”字段设置为1。（这是推荐的方法。实现可以选择使用在r.subtree之前的起始OID值，在这种情况下，包含位必须为0。不允许使用在r.subtree之后的起始OID值。）"
    },
    {
      "indent": 8,
      "text": "- the Ending OID for the SearchRange is encoded to be either NULL, or a value that lexicographically succeeds the Starting OID. This is an implementation-specific choice depending on how the master agent wishes to \"scope\" the possible returned instances.",
      "zh-CHS": "- SearchRange的结束OID被编码为NULL，或者是一个按字典顺序继承起始OID的值。这是一个特定于实现的选择，具体取决于主代理希望如何“范围化”可能返回的实例。"
    },
    {
      "indent": 0,
      "text": "7.2.1.3. agentx-GetBulk-PDU",
      "section_title": true,
      "zh-CHS": "7.2.1.3. agentx GetBulk PDU"
    },
    {
      "indent": 3,
      "text": "(Note: The outline of the following procedure is based closely on section 4.2.3, \"The GetBulkRequest-PDU\" of RFC 1905 [13]. Please refer to it for details on the format of the SNMP GetBulkRequest-PDU itself.)",
      "zh-CHS": "（注意：以下过程的概要是基于RFC 1905[13]第4.2.3节“GetBulkRequest PDU”。有关SNMP GetBulkRequest PDU本身格式的详细信息，请参阅。）"
    },
    {
      "indent": 3,
      "text": "Each variable binding in the request PDU is processed as follows:",
      "zh-CHS": "请求PDU中的每个变量绑定处理如下："
    },
    {
      "indent": 3,
      "text": "(1) Identify the authoritative target region and target session, exactly as described for the agentx-GetNext-PDU (see section 7.2.1.2, \"agentx-GetNext-PDU\").",
      "zh-CHS": "(1) 按照agentx GetNext PDU（参见第7.2.1.2节“agentx GetNext PDU”）的描述，确定权威目标区域和目标会话。"
    },
    {
      "indent": 3,
      "text": "(2) If this is the first variable binding to be dispatched over the target session in a request-response exchange entailed in the processing of this management request:",
      "zh-CHS": "(2) 如果这是在处理此管理请求过程中产生的请求-响应交换中通过目标会话调度的第一个变量绑定："
    },
    {
      "indent": 8,
      "text": "- Create an agentx-GetBulk-PDU for the session, with the header fields initialized as described above (see section 6.1, \"AgentX PDU Header\").",
      "zh-CHS": "- 为会话创建agentx GetBulk PDU，标题字段如上所述初始化（请参阅第6.1节“agentx PDU标题”）。"
    },
    {
      "indent": 3,
      "text": "(3) Add a SearchRange to the end of the target session's agentx-GetBulk-PDU for this variable binding, as described for the agentx-GetNext-PDU. If the variable binding was a non-repeater in the original request PDU, it must be a non-repeater in the agentx-GetBulk-PDU.",
      "zh-CHS": "(3) 为此变量绑定将SearchRange添加到目标会话的agentx GetBulk PDU的末尾，如agentx GetNext PDU所述。如果变量绑定是原始请求PDU中的非中继器，则它必须是agentx GetBulk PDU中的非中继器。"
    },
    {
      "indent": 3,
      "text": "The value of g.max_repetitions in the agentx-GetBulk-PDU may be less than (but not greater than) the value in the original request PDU.",
      "zh-CHS": "agentx GetBulk PDU中的g.max_重复值可能小于（但不大于）原始请求PDU中的值。"
    },
    {
      "indent": 3,
      "text": "The master agent may make such alterations due to simple sanity checking, optimizations for the current iteration based on the registry, the maximum possible size of a potential Response-PDU, known constraints of the AgentX transport, or any other implementation-specific constraint.",
      "zh-CHS": "主代理可以由于简单的健全性检查、基于注册表的当前迭代优化、潜在响应PDU的最大可能大小、AgentX传输的已知约束或任何其他特定于实现的约束而进行此类更改。"
    },
    {
      "indent": 0,
      "text": "7.2.1.4. agentx-TestSet-PDU",
      "section_title": true,
      "zh-CHS": "7.2.1.4. agentx测试集PDU"
    },
    {
      "indent": 3,
      "text": "AgentX employs test-commit-undo-cleanup phases to achieve \"as if simultaneous\" semantics of the SNMP SetRequest-PDU within the extensible agent. The initial phase involves the agentx-TestSet-PDU.",
      "zh-CHS": "AgentX使用测试提交-撤消清理阶段来实现可扩展代理中SNMP SetRequest PDU的“仿佛同时”语义。初始阶段涉及agentx测试集PDU。"
    },
    {
      "indent": 3,
      "text": "Each variable binding in the SNMP request PDU is processed in order, as follows:",
      "zh-CHS": "SNMP请求PDU中的每个变量绑定按顺序处理，如下所示："
    },
    {
      "indent": 3,
      "text": "(1) Identify the target MIB region and target session exactly as described in section 7.2.1.1, \"agentx-Get-PDU\", step 1).",
      "zh-CHS": "(1) 按照第7.2.1.1节“agentx获取PDU”，步骤1）中的描述，准确识别目标MIB区域和目标会话。"
    },
    {
      "indent": 8,
      "text": "Within a lexicographically ordered set of OID ranges, valid for the indicated context, locate the authoritative range that contains the variable binding's name.",
      "zh-CHS": "在对指定上下文有效的按字典顺序排列的OID范围集中，找到包含变量绑定名称的权威范围。"
    },
    {
      "indent": 3,
      "text": "(2) If no such target region exists, this variable binding fails with an error of `notWritable'. Processing is complete for this request.",
      "zh-CHS": "(2) 如果不存在这样的目标区域，此变量绑定将失败，错误为“notWritable”。此请求的处理已完成。"
    },
    {
      "indent": 3,
      "text": "(3) If this is the first variable binding to be dispatched over the target session in a request-response exchange entailed in the processing of this management request:",
      "zh-CHS": "(3) 如果这是在处理此管理请求过程中产生的请求-响应交换中通过目标会话调度的第一个变量绑定："
    },
    {
      "indent": 8,
      "text": "- create an agentx-TestSet-PDU for the session, with the header fields initialized as described above (see section 6.1, \"AgentX PDU Header\").",
      "zh-CHS": "- 为会话创建一个agentx测试集PDU，标题字段如上所述初始化（参见第6.1节“agentx PDU标题”）。"
    },
    {
      "indent": 3,
      "text": "(4) Add a VarBind to the end of the target session's PDU for this variable binding, as described in section 5.4, \"Value Representation\".",
      "zh-CHS": "(4) 如第5.4节“值表示”所述，将变量绑定添加到目标会话的PDU末尾。"
    },
    {
      "indent": 3,
      "text": "Note that all VarBinds applicable to a given session must be sent in a single agentx-TestSet-PDU.",
      "zh-CHS": "请注意，适用于给定会话的所有varbind必须在单个agentx测试集PDU中发送。"
    },
    {
      "indent": 0,
      "text": "7.2.1.5. Dispatch",
      "section_title": true,
      "zh-CHS": "7.2.1.5. 派遣"
    },
    {
      "indent": 3,
      "text": "A timeout value is calculated for each PDU to be sent, which is the maximum value of the timeouts determined for each of the PDU's SearchRanges (as described above in section 7.2.1, \"Dispatching AgentX PDUs\", item 4). Each pending PDU is mapped (via its h.sessionID value) to a particular transport domain/endpoint, as described in section 8 (Transport Mappings).",
      "zh-CHS": "为每个要发送的PDU计算超时值，这是为每个PDU的搜索范围确定的超时的最大值（如上第7.2.1节“调度代理PDU”，第4项所述）。如第8节（传输映射）所述，每个挂起的PDU（通过其h.sessionID值）映射到特定的传输域/端点。"
    },
    {
      "indent": 0,
      "text": "7.2.2. Subagent Processing",
      "section_title": true,
      "zh-CHS": "7.2.2. 亚剂处理"
    },
    {
      "indent": 3,
      "text": "A subagent initially processes a received AgentX PDU as follows:",
      "zh-CHS": "子代理最初处理接收到的AgentX PDU，如下所示："
    },
    {
      "indent": 3,
      "text": "- If the received PDU is an agentx-Response-PDU:",
      "zh-CHS": "- 如果收到的PDU是agentx响应PDU："
    },
    {
      "indent": 3,
      "text": "1) If there are any errors parsing or interpreting the PDU, it is silently dropped.",
      "zh-CHS": "1) 如果在解析或解释PDU时出现任何错误，则会自动删除该PDU。"
    },
    {
      "indent": 3,
      "text": "2) Otherwise the response is matched to the original request via h.packetID, and handled in an implementation-specific manner. For example, if this response indicates an error attempting to register a MIB region, the subagent may wish to register a different region, or log an error and halt, etc.",
      "zh-CHS": "2) 否则，响应将通过h.packetID与原始请求匹配，并以特定于实现的方式进行处理。例如，如果此响应指示尝试注册MIB区域时出错，则子代理可能希望注册其他区域，或记录错误并停止，等等。"
    },
    {
      "indent": 3,
      "text": "- If the received PDU is any other type:",
      "zh-CHS": "- 如果收到的PDU为任何其他类型："
    },
    {
      "indent": 3,
      "text": "1) an agentx-Response-PDU is created whose header fields are identical to the received request PDU except that h.type is set to Response, res.error to `noError', res.index to 0, and the VarBindList to null.",
      "zh-CHS": "1) 创建了一个agentx响应PDU，其头字段与接收到的请求PDU相同，只是h.type设置为Response，res.error设置为'noError'，res.index设置为0，VarBindList设置为null。"
    },
    {
      "indent": 3,
      "text": "2) If the received PDU cannot be parsed, res.error is set to `parseError'.",
      "zh-CHS": "2) 如果无法解析收到的PDU，则res.error设置为“parseError”。"
    },
    {
      "indent": 3,
      "text": "3) Otherwise, if h.sessionID does not correspond to a currently established session, res.error is set to `notOpen'.",
      "zh-CHS": "3) 否则，如果h.sessionID与当前建立的会话不对应，res.error将设置为“notOpen”。"
    },
    {
      "indent": 3,
      "text": "4) At this point, if res.error is not `noError', the received PDU is not processed further. If the received PDU's header was successfully parsed, the AgentX-Response-PDU is sent in reply. If the received PDU's header was not successfully parsed or for some other reason the subagent cannot send a reply, processing is complete.",
      "zh-CHS": "4) 此时，如果res.error不是“noError”，则不会进一步处理接收到的PDU。如果已成功解析接收到的PDU标头，则会发送AgentX响应PDU作为回复。如果接收到的PDU标头未成功解析，或者由于其他原因，子代理无法发送回复，则处理完成。"
    },
    {
      "indent": 0,
      "text": "7.2.3. Subagent Processing of agentx-Get, GetNext, GetBulk-PDUs",
      "section_title": true,
      "zh-CHS": "7.2.3. agentx Get、GetNext、GetBulk PDU的子代理处理"
    },
    {
      "indent": 3,
      "text": "A conformant AgentX subagent must support the agentx-Get, -GetNext, and -GetBulk PDUs, and must support multiple variables being supplied in each PDU.",
      "zh-CHS": "一致的AgentX子代理必须支持AgentX Get、-GetNext和-GetBulk PDU，并且必须支持每个PDU中提供的多个变量。"
    },
    {
      "indent": 3,
      "text": "When a subagent receives an agentx-Get-, GetNext-, or GetBulk-PDU, it performs the indicated management operations and returns an agentx-Response-PDU.",
      "zh-CHS": "当子代理收到agentx Get、GetNext或GetBulk PDU时，它将执行指示的管理操作并返回agentx响应PDU。"
    },
    {
      "indent": 3,
      "text": "Each SearchRange in the request PDU's SearchRangeList is processed as described below, and a VarBind is added in the corresponding location of the agentx-Response-PDU's VarbindList. If processing should fail for any reason not described below, res.error is set to `genErr', res.index to the index of the failed SearchRange, the VarBindList is reset to null, and this agentx-Response-PDU is returned to the master agent.",
      "zh-CHS": "请求PDU的SearchRangeList中的每个SearchRange都按如下所述进行处理，并在agentx响应PDU的VarbindList的相应位置添加一个VarBind。如果处理因以下未描述的任何原因而失败，则res.error设置为“gener”，res.index设置为失败搜索范围的索引，VarBindList重置为null，此agentx响应PDU返回给主代理。"
    },
    {
      "indent": 0,
      "text": "7.2.3.1. Subagent Processing of the agentx-Get-PDU",
      "section_title": true,
      "zh-CHS": "7.2.3.1. agentx Get PDU的子代理处理"
    },
    {
      "indent": 3,
      "text": "Upon the subagent's receipt of an agentx-Get-PDU, each SearchRange in the request is processed as follows:",
      "zh-CHS": "子代理收到agentx Get PDU后，请求中的每个搜索范围将按如下方式处理："
    },
    {
      "indent": 3,
      "text": "(1) The starting OID is copied to v.name.",
      "zh-CHS": "(1) 起始OID将复制到v.name。"
    },
    {
      "indent": 3,
      "text": "(2) If the starting OID exactly matches the name of a variable instantiated by this subagent within the indicated context and session, v.type and v.data are encoded to represent the variable's syntax and value, as described in section 5.4, \"Value Representation\".",
      "zh-CHS": "(2) 如果起始OID与指定上下文和会话中该子代理实例化的变量名称完全匹配，则v.type和v.data将被编码以表示变量的语法和值，如第5.4节“值表示”所述。"
    },
    {
      "indent": 3,
      "text": "(3) Otherwise, if the starting OID does not match the object identifier prefix of any variable instantiated within the indicated context and session, the VarBind is set to `noSuchObject', in the manner described in section 5.4, \"Value Representation\".",
      "zh-CHS": "(3) 否则，如果起始OID与指定上下文和会话中实例化的任何变量的对象标识符前缀不匹配，则VarBind将按照第5.4节“值表示”中所述的方式设置为“noSuchObject”。"
    },
    {
      "indent": 3,
      "text": "(4) Otherwise, the VarBind is set to `noSuchInstance' in the manner described in section 5.4, \"Value Representation\".",
      "zh-CHS": "(4) 否则，VarBind将按照第5.4节“值表示”中所述的方式设置为“noSuchInstance”。"
    },
    {
      "indent": 0,
      "text": "7.2.3.2. Subagent Processing of the agentx-GetNext-PDU",
      "section_title": true,
      "zh-CHS": "7.2.3.2. agentx GetNext PDU的子代理处理"
    },
    {
      "indent": 3,
      "text": "Upon the subagent's receipt of an agentx-GetNext-PDU, each SearchRange in the request is processed as follows:",
      "zh-CHS": "在子代理收到agentx GetNext PDU后，请求中的每个搜索范围将按如下方式处理："
    },
    {
      "indent": 3,
      "text": "(1) The subagent searches for a variable within the lexicographically ordered list of variable names for all variables it instantiates (without regard to registration of regions) within the indicated context and session, as follows:",
      "zh-CHS": "(1) 子代理在指定的上下文和会话中为其实例化的所有变量（不考虑区域注册）在按字典顺序排列的变量名列表中搜索变量，如下所示："
    },
    {
      "indent": 8,
      "text": "- if the \"include\" field of the starting OID is 0, the variable's name is the closest lexicographical successor to the starting OID.",
      "zh-CHS": "- 如果起始OID的“include”字段为0，则该变量的名称是起始OID最接近的后续词典。"
    },
    {
      "indent": 8,
      "text": "- if the \"include\" field of the starting OID is 1, the variable's name is either equal to, or the closest lexicographical successor to, the starting OID.",
      "zh-CHS": "- 如果起始OID的“include”字段为1，则该变量的名称等于起始OID，或者是该OID的最接近词典的后续变量。"
    },
    {
      "indent": 8,
      "text": "- If the ending OID is not null, the variable's name lexicographically precedes the ending OID.",
      "zh-CHS": "- 如果结束OID不为null，则变量名称按字典顺序位于结束OID之前。"
    },
    {
      "indent": 8,
      "text": "If a variable is successfully located, v.name is set to that variable's name. v.type and v.data are encoded to represent the variable's syntax and value, as described in section 5.4, \"Value Representation\".",
      "zh-CHS": "如果成功定位变量，则v.name将设置为该变量的名称。v、 如第5.4节“值表示”所述，对类型和v.data进行编码以表示变量的语法和值。"
    },
    {
      "indent": 3,
      "text": "(2) If the subagent cannot locate an appropriate variable, v.name is set to the starting OID, and the VarBind is set to ` endOfMibView', in the manner described in section 5.4, \"Value Representation\".",
      "zh-CHS": "(2) 如果子代理找不到合适的变量，则v.name将设置为起始OID，VarBind将按照第5.4节“值表示”中所述的方式设置为“endOfMibView”。"
    },
    {
      "indent": 0,
      "text": "7.2.3.3. Subagent Processing of the agentx-GetBulk-PDU",
      "section_title": true,
      "zh-CHS": "7.2.3.3. agentx GetBulk PDU的子代理处理"
    },
    {
      "indent": 3,
      "text": "A maximum of N + (M * R) VarBinds are returned, where",
      "zh-CHS": "返回的最大值为N+（M*R）varbind，其中"
    },
    {
      "indent": 6,
      "text": "N equals g.non_repeaters, M equals g.max_repetitions, and R is (number of SearchRanges in the GetBulk request) - N.",
      "zh-CHS": "N等于g.non_中继器，M等于g.max_重复次数，R是（GetBulk请求中的搜索范围数）-N。"
    },
    {
      "indent": 3,
      "text": "The first N SearchRanges are processed exactly as for the agentx-GetNext-PDU.",
      "zh-CHS": "前N个搜索范围的处理与agentx GetNext PDU的处理完全相同。"
    },
    {
      "indent": 3,
      "text": "If M and R are both non-zero, the remaining R SearchRanges are processed iteratively to produce potentially many VarBinds. For each iteration i, such that i is greater than zero and less than or equal",
      "zh-CHS": "如果M和R都非零，则对剩余的R搜索范围进行迭代处理，以产生潜在的多个varbind。对于每次迭代i，使得i大于零且小于或等于"
    },
    {
      "indent": 3,
      "text": "to M, and for each repeated SearchRange s, such that s is greater than zero and less than or equal to R, the (N+((i-1)*R)+s)-th VarBind is added to the agentx-Response-PDU as follows:",
      "zh-CHS": "对于M，并且对于每个重复的搜索范围s，例如s大于零且小于或等于R，将（N+（（i-1）*R）+s）-th VarBind添加到agentx响应PDU中，如下所示："
    },
    {
      "indent": 6,
      "text": "1) The subagent searches for a variable within the lexicographically ordered list of variable names for all variables it instantiates (without regard to registration of regions) within the indicated context and session, for which the following are all true:",
      "zh-CHS": "1) 子代理在指定的上下文和会话中，针对其实例化的所有变量（不考虑区域注册），在按字典顺序排列的变量名列表中搜索变量，对于这些变量，以下各项均为真："
    },
    {
      "indent": 9,
      "text": "- The variable's name is the (i)-th lexicographical successor to the (N+s)-th requested OID.",
      "zh-CHS": "- 该变量的名称是第（N+s）个请求OID的第（i）个词典继承者。"
    },
    {
      "indent": 12,
      "text": "(Note that if i is 0 and the \"include\" field is 1, the variable's name may be equivalent to, or the first lexicographical successor to, the (N+s)-th requested OID.)",
      "zh-CHS": "（请注意，如果i为0，且“include”字段为1，则变量名称可能等同于（N+s）-th请求的OID，或者是该OID的第一个词典继承者。）"
    },
    {
      "indent": 9,
      "text": "- If the ending OID is not null, the variable's name lexicographically precedes the ending OID.",
      "zh-CHS": "- 如果结束OID不为null，则变量名称按字典顺序位于结束OID之前。"
    },
    {
      "indent": 6,
      "text": "If all of these conditions are met, v.name is set to the located variable's name. v.type and v.data are encoded to represent the variable's syntax and value, as described in section 5.4, \"Value Representation\".",
      "zh-CHS": "如果满足所有这些条件，v.name将设置为定位变量的名称。v、 如第5.4节“值表示”所述，对类型和v.data进行编码以表示变量的语法和值。"
    },
    {
      "indent": 6,
      "text": "2) If no such variable exists, the VarBind is set to ` endOfMibView' as described in section 5.4, \"Value Representation\". v.name is set to v.name of the (N+((i-2)*R)+s)-th VarBind unless i is currently 1, in which case it is set to the value of the starting OID in the (N+s)-th SearchRange.",
      "zh-CHS": "2) 如果不存在此类变量，则将VarBind设置为“endOfMibView”，如第5.4节“值表示”所述。v、 name设置为v.name（N+（（i-2）*R）+s）-th VarBind，除非i当前为1，在这种情况下，它设置为（N+s）-th SearchRange中起始OID的值。"
    },
    {
      "indent": 3,
      "text": "Note that further iterative processing should stop if",
      "zh-CHS": "请注意，如果"
    },
    {
      "indent": 9,
      "text": "- For any iteration i, all s values of v.type are ` endOfMibView'.",
      "zh-CHS": "- 对于任何迭代i，v.type的所有s值都是“endOfMibView”。"
    },
    {
      "indent": 9,
      "text": "- An AgentX transport constraint or other implementation-specific constraint is reached.",
      "zh-CHS": "- 达到AgentX传输约束或其他特定于实现的约束。"
    },
    {
      "indent": 0,
      "text": "7.2.4. Subagent Processing of agentx-TestSet, -CommitSet, -UndoSet, -CleanupSet-PDUs",
      "zh-CHS": "7.2.4. agentx测试集、-CommitSet、-UndoSet、-PDU的子代理处理"
    },
    {
      "indent": 3,
      "text": "A conformant AgentX subagent must support the agentx-TestSet, -CommitSet, -UndoSet, and -CleanupSet PDUs, and must support multiple variables being supplied in the agentx-TestSet-PDU.",
      "zh-CHS": "一致的AgentX子代理必须支持AgentX测试集、-CommitSet、-UndoSet和-CleanupSet PDU，并且必须支持AgentX测试集PDU中提供的多个变量。"
    },
    {
      "indent": 3,
      "text": "These four PDUs are used to collectively perform the indicated management operation. An agentx-Response-PDU is sent in reply to each of the PDUs (except -CleanupSet), to inform the master agent of the state of the operation.",
      "zh-CHS": "这四个PDU用于共同执行指示的管理操作。一个agentx响应PDU被发送给每个PDU（除-CleanUpper外），以通知主代理操作的状态。"
    },
    {
      "indent": 3,
      "text": "The master agent must serialize Set transactions for each session. That is, a session need not handle multiple concurrent Set transactions.",
      "zh-CHS": "主代理必须序列化每个会话的Set事务。也就是说，会话不需要处理多个并发集合事务。"
    },
    {
      "indent": 3,
      "text": "These Response-PDUs do not contain a VarBindList.",
      "zh-CHS": "这些响应PDU不包含VarBindList。"
    },
    {
      "indent": 0,
      "text": "7.2.4.1. Subagent Processing of the agentx-TestSet-PDU",
      "section_title": true,
      "zh-CHS": "7.2.4.1. agentx测试集PDU的子代理处理"
    },
    {
      "indent": 3,
      "text": "Upon the subagent's receipt of an agentx-TestSet-PDU, each VarBind in the PDU is validated until they are all successful, or until one fails, as described in section 4.2.5 of RFC 1905 [13]. The subagent validates variables with respect to the context and session indicated in the testSet-PDU.",
      "zh-CHS": "子代理收到agentx测试集PDU后，将验证PDU中的每个VarBind，直到它们全部成功，或直到其中一个失败，如RFC 1905[13]第4.2.5节所述。子代理验证与testSet PDU中指示的上下文和会话相关的变量。"
    },
    {
      "indent": 3,
      "text": "If each VarBind is successful, the subagent has a further responsibility to ensure the availability of all resources (memory, write access, etc.) required for successfully carrying out a subsequent agentx-CommitSet operation. If this cannot be guaranteed, the subagent should set res.error to `resourceUnavailable'. As a result of this validation step, an agentx-Response-PDU is sent in reply whose res.error field is set to one of the following SNMPv2 PDU error-status values (see section 3, \"Definitions\", in RFC 1905 [13]):",
      "zh-CHS": "如果每个VarBind都成功，则子代理将进一步负责确保成功执行后续agentx CommitSet操作所需的所有资源（内存、写访问等）的可用性。如果无法保证这一点，则子代理应将res.error设置为“resourceUnavailable”。作为该验证步骤的结果，发送agentx响应PDU作为回复，其res.error字段设置为以下SNMPv2 PDU错误状态值之一（参见RFC 1905[13]中的第3节“定义”）："
    },
    {
      "indent": 12,
      "text": "noError (0), genErr (5), noAccess (6), wrongType (7), wrongLength (8), wrongEncoding (9), wrongValue (10), noCreation (11), inconsistentValue (12), resourceUnavailable (13), notWritable (17), inconsistentName (18)",
      "zh-CHS": "noError（0）、genErr（5）、noAccess（6）、ErrorType（7）、ErrorLength（8）、ErrorEncoding（9）、ErrorValue（10）、noCreation（11）、inconsistentValue（12）、resourceUnavailable（13）、notWritable（17）、inconsistentName（18）"
    },
    {
      "indent": 3,
      "text": "If this value is not `noError', the res.index field must be set to the index of the VarBind for which validation failed.",
      "zh-CHS": "如果此值不是“noError”，则res.index字段必须设置为验证失败的VarBind的索引。"
    },
    {
      "indent": 3,
      "text": "Implementation of rigorous validation code may be one of the most demanding aspects of subagent development. Implementors are strongly encouraged to do this right, so as to avoid if at all possible the extensible agent's having to return `commitFailed' or `undoFailed' during subsequent processing.",
      "zh-CHS": "严格验证代码的实现可能是子代理开发中要求最高的方面之一。强烈鼓励实现者正确地执行此操作，以便尽可能避免可扩展代理在后续处理过程中返回“commitFailed”或“undoFailed”。"
    },
    {
      "indent": 0,
      "text": "7.2.4.2. Subagent Processing of the agentx-CommitSet-PDU",
      "section_title": true,
      "zh-CHS": "7.2.4.2. agentx CommitSet PDU的子代理处理"
    },
    {
      "indent": 3,
      "text": "The agentx-CommitSet-PDU indicates that the subagent should actually perform (as described in the post-validation sections of 4.2.5 of RFC 1905 [13]) the management operation indicated by the previous TestSet-PDU. After carrying out the management operation, the subagent sends in reply an agentx-Response-PDU whose res.error field is set to one of the following SNMPv2 PDU error-status values (see section 3, \"Definitions\", in RFC 1905 [13]):",
      "zh-CHS": "agentx CommitSet PDU指出，子代理应实际执行（如RFC 1905[13]第4.2.5节验证后部分所述）先前测试集PDU指示的管理操作。执行管理操作后，子代理发送一个agentx响应PDU作为响应，其res.error字段设置为以下SNMPv2 PDU错误状态值之一（参见RFC 1905[13]中的第3节“定义”）："
    },
    {
      "indent": 12,
      "text": "noError (0), commitFailed (14)",
      "zh-CHS": "无错误（0），提交失败（14）"
    },
    {
      "indent": 3,
      "text": "If this value is `commitFailed', the res.index field must be set to the index of the VarBind (as it occurred in the agentx-TestSet-PDU) for which the operation failed. Otherwise res.index is set to 0.",
      "zh-CHS": "如果此值为“commitFailed”，则必须将res.index字段设置为操作失败的VarBind的索引（正如在agentx TestSet PDU中发生的那样）。否则，res.index设置为0。"
    },
    {
      "indent": 0,
      "text": "7.2.4.3. Subagent Processing of the agentx-UndoSet-PDU",
      "section_title": true,
      "zh-CHS": "7.2.4.3. agentx UndoSet PDU的子代理处理"
    },
    {
      "indent": 3,
      "text": "The agentx-UndoSet-PDU indicates that the subagent should undo the management operation requested in a preceding CommitSet-PDU. The undo process is as described in section 4.2.5 of RFC 1905 [13].",
      "zh-CHS": "agentx UndoSet PDU指示子代理应撤消在前面的CommitSet PDU中请求的管理操作。撤销过程如RFC 1905[13]第4.2.5节所述。"
    },
    {
      "indent": 3,
      "text": "After carrying out the undo process, the subagent sends in reply an agentx-Response-PDU whose res.error field is set to one of the following SNMPv2 PDU error-status values (see section 3, \"Definitions\", in RFC 1905 [13]):",
      "zh-CHS": "执行撤销过程后，子代理发送一个agentx响应PDU作为回复，其res.error字段设置为以下SNMPv2 PDU错误状态值之一（参见RFC 1905[13]中的第3节“定义”）："
    },
    {
      "indent": 12,
      "text": "noError (0), undoFailed (15)",
      "zh-CHS": "无错误（0），撤消失败（15）"
    },
    {
      "indent": 3,
      "text": "If this value is `undoFailed', the res.index field must be set to the index of the VarBind (as it occurred in the agentx-TestSet-PDU) for which the operation failed. Otherwise res.index is set to 0.",
      "zh-CHS": "如果此值为“undoFailed”，则必须将res.index字段设置为操作失败的VarBind的索引（正如在agentx TestSet PDU中发生的那样）。否则，res.index设置为0。"
    },
    {
      "indent": 3,
      "text": "This PDU also signals the end of processing of the management operation initiated by the previous TestSet-PDU. The subagent should release resources, etc. as described in section 7.2.4.4, \"Subagent Processing of the agentx-CleanupSet-PDU\".",
      "zh-CHS": "此PDU还表示由前一个测试集PDU启动的管理操作的处理结束。子代理应释放资源等，如第7.2.4.4节“代理PDU的子代理处理”所述。"
    },
    {
      "indent": 0,
      "text": "7.2.4.4. Subagent Processing of the agentx-CleanupSet-PDU",
      "section_title": true,
      "zh-CHS": "7.2.4.4. agentx PDU的子代理处理"
    },
    {
      "indent": 3,
      "text": "The agentx-CleanupSet-PDU signals the end of processing of the management operation requested in the previous TestSet-PDU. This is an indication to the subagent that it may now release any resources it may have reserved in order to carry out the management request. No response is sent by the subagent.",
      "zh-CHS": "agentx PDU向上一个测试集PDU中请求的管理操作的处理结束发出信号。这表示子代理现在可以释放其为执行管理请求而保留的任何资源。子代理不发送响应。"
    },
    {
      "indent": 0,
      "text": "7.2.5. Master Agent Processing of AgentX Responses",
      "section_title": true,
      "zh-CHS": "7.2.5. AgentX响应的主代理处理"
    },
    {
      "indent": 3,
      "text": "The master agent now marshals all subagent AgentX response PDUs and builds an SNMP response PDU. In the next several subsections, the initial processing of all subagent AgentX response PDUs is described, followed by descriptions of subsequent processing for each specific subagent Response.",
      "zh-CHS": "主代理现在封送所有子代理AgentX响应PDU并构建SNMP响应PDU。在接下来的几个小节中，将描述所有子代理AgentX响应PDU的初始处理，然后描述每个特定子代理响应的后续处理。"
    },
    {
      "indent": 0,
      "text": "7.2.5.1. Common Processing of All AgentX Response PDUs",
      "section_title": true,
      "zh-CHS": "7.2.5.1. 所有AgentX响应PDU的通用处理"
    },
    {
      "indent": 3,
      "text": "1) If a response is not received on a session within the timeout interval for this dispatch, it is treated as if the subagent had returned `genErr' and processed as described below.",
      "zh-CHS": "1) 如果在此调度的超时间隔内未在会话上收到响应，则将其视为子代理已返回“genErr”并按如下所述进行处理。"
    },
    {
      "indent": 6,
      "text": "A timeout may be due to a variety of reasons, and does not necessarily denote a failed or malfunctioning subagent. As such, the master agent's response to a subagent timeout is implementation-specific, but with the following constraint:",
      "zh-CHS": "超时可能是由于多种原因造成的，不一定表示子代理出现故障或故障。因此，主代理对子代理超时的响应是特定于实现的，但有以下限制："
    },
    {
      "indent": 6,
      "text": "A session that times out on three consecutive AgentX requests is considered unable to respond, and the master agent must close the AgentX session as described in section 7.1.8, \"Processing the agentx-Close-PDU\", step (2).",
      "zh-CHS": "连续三次AgentX请求超时的会话被视为无法响应，主代理必须按照第7.1.8节“处理AgentX close PDU”中的步骤（2）关闭AgentX会话。"
    },
    {
      "indent": 3,
      "text": "2) Otherwise, the h.packetID, h.sessionID, and h.transactionID fields of the AgentX response PDU are used to correlate subagent responses. If the response does not pertain to this SNMP operation, it is ignored.",
      "zh-CHS": "2) 否则，AgentX响应PDU的h.packetID、h.sessionID和h.transactionID字段将用于关联子代理响应。如果响应与此SNMP操作无关，则将忽略该响应。"
    },
    {
      "indent": 3,
      "text": "3) Otherwise, the responses are processed jointly to form the SNMP response PDU.",
      "zh-CHS": "3) 否则，将联合处理响应以形成SNMP响应PDU。"
    },
    {
      "indent": 0,
      "text": "7.2.5.2. Processing of Responses to agentx-Get-PDUs",
      "section_title": true,
      "zh-CHS": "7.2.5.2. 处理对agentx Get PDU的响应"
    },
    {
      "indent": 3,
      "text": "After common processing of the subagent's response to an agentx-Get-PDU (see section 7.2.5.1, \"Common Processing of All AgentX Response PDUs\", above), processing continues with the following steps:",
      "zh-CHS": "对子代理对agentx Get PDU的响应进行公共处理后（见上文第7.2.5.1节“所有agentx响应PDU的公共处理”），处理继续执行以下步骤："
    },
    {
      "indent": 3,
      "text": "1) For any received AgentX response PDU, if res.error is not `noError', the SNMP response PDU's error code is set to this value. If res.error contains an AgentX specific value (e.g. `parseError'), the SNMP response PDU's error code is set to a value of genErr instead. Also, the SNMP response PDU's error index is set to the index of the variable binding corresponding to the failed VarBind in the subagent's AgentX response PDU.",
      "zh-CHS": "1) 对于任何接收到的AgentX响应PDU，如果res.error不是“noError”，则SNMP响应PDU的错误代码设置为该值。如果res.error包含特定于AgentX的值（例如“parseError”），则SNMP响应PDU的错误代码将改为gener的值。此外，SNMP响应PDU的错误索引设置为与子代理的AgentX响应PDU中失败的VarBind对应的变量绑定的索引。"
    },
    {
      "indent": 6,
      "text": "All other AgentX response PDUs received due to processing this SNMP request are ignored. Processing is complete; the SNMP Response PDU is ready to be sent (see section 7.2.6, \"Sending the SNMP Response-PDU\").",
      "zh-CHS": "由于处理此SNMP请求而收到的所有其他AgentX响应PDU将被忽略。处理完成；SNMP响应PDU已准备好发送（请参阅第7.2.6节“发送SNMP响应PDU”）。"
    },
    {
      "indent": 3,
      "text": "2) Otherwise, the content of each VarBind in the AgentX response PDU is used to update the corresponding variable binding in the SNMP Response-PDU.",
      "zh-CHS": "2) 否则，AgentX响应PDU中每个VarBind的内容将用于更新SNMP响应PDU中相应的变量绑定。"
    },
    {
      "indent": 0,
      "text": "7.2.5.3. Processing of Responses to agentx-GetNext-PDU and agentx-GetBulk-PDU",
      "zh-CHS": "7.2.5.3. 处理对agentx GetNext PDU和agentx GetBulk PDU的响应"
    },
    {
      "indent": 3,
      "text": "After common processing of the subagent's response to an agentx-GetNext-PDU or agentx-GetBulk-PDU (see section 7.2.5.1, \"Common Processing of All AgentX Response PDUs\", above), processing continues with the following steps:",
      "zh-CHS": "子代理对agentx GetNext PDU或agentx GetBulk PDU的响应进行公共处理后（参见上文第7.2.5.1节“所有agentx响应PDU的公共处理”），处理继续执行以下步骤："
    },
    {
      "indent": 3,
      "text": "1) For any received AgentX response PDU, if res.error is not `noError', the SNMP response PDU's error code is set to this value. If res.error contains an AgentX specific value (e.g. `parseError'), the SNMP response PDU's error code is set to a value of genErr instead. Also, the SNMP response PDU's error index is set to the index of the variable binding corresponding to the failed VarBind in the subagent's AgentX response PDU.",
      "zh-CHS": "1) 对于任何接收到的AgentX响应PDU，如果res.error不是“noError”，则SNMP响应PDU的错误代码设置为该值。如果res.error包含特定于AgentX的值（例如“parseError”），则SNMP响应PDU的错误代码将改为gener的值。此外，SNMP响应PDU的错误索引设置为与子代理的AgentX响应PDU中失败的VarBind对应的变量绑定的索引。"
    },
    {
      "indent": 6,
      "text": "All other AgentX response PDUs received due to processing this SNMP request are ignored. Processing is complete; the SNMP response PDU is ready to be sent (see section 7.2.6, \"Sending the SNMP Response-PDU\").",
      "zh-CHS": "由于处理此SNMP请求而收到的所有其他AgentX响应PDU将被忽略。处理完成；SNMP响应PDU已准备好发送（请参阅第7.2.6节“发送SNMP响应PDU”）。"
    },
    {
      "indent": 3,
      "text": "2) Otherwise, the content of each VarBind in the AgentX response PDU is used to update the corresponding VarBind in the SNMP response PDU.",
      "zh-CHS": "2) 否则，AgentX响应PDU中每个VarBind的内容将用于更新SNMP响应PDU中相应的VarBind。"
    },
    {
      "indent": 3,
      "text": "After all expected AgentX response PDUs have been processed, if any VarBinds still contain the value `endOfMibView' in their v.type fields, processing must continue:",
      "zh-CHS": "处理完所有预期的AgentX响应PDU后，如果任何VARBIND在其v.type字段中仍然包含值“endOfMibView”，则处理必须继续："
    },
    {
      "indent": 3,
      "text": "3) A new iteration of AgentX request dispatching is initiated (as described in section 7.2.1.2, \"agentx-GetNext-PDU\"), in which only those VarBinds whose v.type is `endOfMibView' are processed.",
      "zh-CHS": "3) 启动AgentX请求调度的新迭代（如第7.2.1.2节“AgentX GetNext PDU”所述），其中仅处理v.type为“endOfMibView”的VARBIND。"
    },
    {
      "indent": 3,
      "text": "4) For each such VarBind, an authoritative target MIB region is identified in which the master agent expects to find suitable MIB variables. The target session is the one on which this new target region was registered.",
      "zh-CHS": "4) 对于每个这样的VarBind，都会标识一个权威的目标MIB区域，主代理希望在其中找到合适的MIB变量。目标会话是注册此新目标区域的会话。"
    },
    {
      "indent": 6,
      "text": "The starting OID in each SearchRange is set to the value of v.name for the corresponding VarBind, and its \"include\" field is set to 0.",
      "zh-CHS": "每个SearchRange中的起始OID都设置为对应VarBind的v.name值，其“include”字段设置为0。"
    },
    {
      "indent": 3,
      "text": "5) The value of transactionID must be identical to the value used during the previous iteration.",
      "zh-CHS": "5) transactionID的值必须与上一次迭代中使用的值相同。"
    },
    {
      "indent": 3,
      "text": "6) The AgentX PDUs are sent on the target session(s), and the responses are received and processed according to the steps described in section 7.2.5, \"Master Agent Processing of AgentX Responses\".",
      "zh-CHS": "6) 在目标会话上发送AgentX PDU，并根据第7.2.5节“AgentX响应的主代理处理”中描述的步骤接收和处理响应。"
    },
    {
      "indent": 3,
      "text": "7) This process continues iteratively until a complete SNMP Response-PDU has been built, or until there remain no authoritative MIB regions to query.",
      "zh-CHS": "7) 此过程将迭代进行，直到生成完整的SNMP响应PDU，或者直到没有要查询的权威MIB区域为止。"
    },
    {
      "indent": 3,
      "text": "Note that r.subtree for the new target region identified in step 4) may not lexicographically succeed r.subtree for the region that has returned `endOfMibView'. For example, consider the following registry:",
      "zh-CHS": "请注意，步骤4）中标识的新目标区域的r.subtree可能不会在词典学上继承返回“endOfMibView”的区域的r.subtree。例如，考虑以下注册表："
    },
    {
      "indent": 8,
      "text": "session A `mib-2' (1.3.6.1.2.1) session B `ip' (1.3.6.1.2.1.4) session C `tcp' (1.3.6.1.2.1.6)",
      "zh-CHS": "会话A“mib-2”（1.3.6.1.2.1）会话B“ip”（1.3.6.1.2.1.4）会话C“tcp”（1.3.6.1.2.1.6）"
    },
    {
      "indent": 3,
      "text": "If while processing a GetNext-Request-PDU session B returns `endOfMibView' for a variable name within 1.3.6.1.2.1.4, the target MIB region identified in step 4) would be 1.3.6.1.2.1 (since it may contain variables whose names precede 1.3.6.1.2.1.6).",
      "zh-CHS": "如果在处理GetNext请求时，PDU会话B为1.3.6.1.2.1.4中的变量名返回“endOfMibView”，则步骤4）中标识的目标MIB区域将为1.3.6.1.2.1（因为它可能包含名称在1.3.6.1.2.1.6之前的变量）。"
    },
    {
      "indent": 3,
      "text": "Note also that if session A returned variables from within 1.3.6.1.2.1.6, they must be discarded since session A is NOT authoritative for that region.",
      "zh-CHS": "还请注意，如果会话A从1.3.6.1.2.1.6中返回变量，则必须丢弃这些变量，因为会话A对该区域不具有权威性。"
    },
    {
      "indent": 0,
      "text": "7.2.5.4. Processing of Responses to agentx-TestSet-PDUs",
      "section_title": true,
      "zh-CHS": "7.2.5.4. 处理对agentx测试集PDU的响应"
    },
    {
      "indent": 3,
      "text": "After common processing of the subagent's response to an agentx-TestSet-PDU (see section 7.2.5.1, \"Common Processing of All AgentX Response PDUs\", above), processing continues with the further",
      "zh-CHS": "子代理对agentx测试集PDU的响应进行共同处理后（见上文第7.2.5.1节“所有agentx响应PDU的共同处理”），处理继续进行进一步的处理"
    },
    {
      "indent": 3,
      "text": "exchange of AgentX PDUs. The value of h.transactionID in the agentx-CommitSet, -UndoSet, and -CleanupSet-PDUs must be identical to the value sent in the testSet-PDU.",
      "zh-CHS": "交换AgentX PDU。agentx CommitSet、-UndoSet和-CleanupSet PDU中h.transactionID的值必须与testSet PDU中发送的值相同。"
    },
    {
      "indent": 3,
      "text": "The state transitions and PDU sequences are depicted in section 7.3, \"State Transitions\".",
      "zh-CHS": "第7.3节“状态转换”中描述了状态转换和PDU序列。"
    },
    {
      "indent": 3,
      "text": "The set of all sessions who have been sent an agentx-TestSet-PDU for this particular transaction are referred to below as \"involved sessions\".",
      "zh-CHS": "已为此特定事务发送agentx测试集PDU的所有会话集在下文中称为“相关会话”。"
    },
    {
      "indent": 3,
      "text": "1) If any target session's response is not `noError', all other agentx-Response-PDUs received due to processing this SNMP request are ignored.",
      "zh-CHS": "1) 如果任何目标会话的响应不是“noError”，则会忽略由于处理此SNMP请求而收到的所有其他agentx响应PDU。"
    },
    {
      "indent": 6,
      "text": "An agentx-CleanupSet-PDU is sent to all involved sessions. Processing is complete; the SNMP response PDU is constructed as described below in 7.2.6, \"Sending the SNMP Response-PDU\".",
      "zh-CHS": "将向所有相关会话发送一个agentx PDU。处理完成；SNMP响应PDU的构造如7.2.6“发送SNMP响应PDU”中所述。"
    },
    {
      "indent": 3,
      "text": "2) Otherwise an agentx-CommitSet-PDU is sent to all involved sessions.",
      "zh-CHS": "2) 否则，将向所有相关会话发送agentx CommitSet PDU。"
    },
    {
      "indent": 0,
      "text": "7.2.5.5. Processing of Responses to agentx-CommitSet-PDUs",
      "section_title": true,
      "zh-CHS": "7.2.5.5. 处理对agentx CommitSet PDU的响应"
    },
    {
      "indent": 3,
      "text": "After common processing of the subagent's response to an agentx-CommitSet-PDU (see section 7.2.5.1, \"Common Processing of All AgentX Response PDUs\", above), processing continues with the following steps:",
      "zh-CHS": "子代理对agentx CommitSet PDU的响应进行共同处理后（见上文第7.2.5.1节“所有agentx响应PDU的共同处理”），处理继续执行以下步骤："
    },
    {
      "indent": 3,
      "text": "1) If any response is not `noError', the SNMP response PDU's error code is set to this value. If res.error contains an AgentX specific value (e.g. `parseError'), the SNMP response PDU's error code is set to a value of genErr instead. Also, the SNMP response PDU's error index is set to the index of the VarBind corresponding to the failed VarBind in the agentx-TestSet-PDU.",
      "zh-CHS": "1) 如果任何响应不是“noError”，则SNMP响应PDU的错误代码将设置为此值。如果res.error包含特定于AgentX的值（例如“parseError”），则SNMP响应PDU的错误代码将改为gener的值。此外，SNMP响应PDU的错误索引设置为与agentx测试集PDU中失败的VarBind对应的VarBind索引。"
    },
    {
      "indent": 6,
      "text": "An agentx-UndoSet-PDU is sent to each target session that has been sent an agentx-CommitSet-PDU. An agentx-CleanupSet-PDU is sent to the remainder of the involved sessions.",
      "zh-CHS": "agentx UndoSet PDU将发送到已发送agentx CommitSet PDU的每个目标会话。一个agentx PDU被发送到其余的相关会话。"
    },
    {
      "indent": 3,
      "text": "2) Otherwise an agentx-CleanupSet-PDU is sent to all involved sessions. Processing is complete; the SNMP response PDU is constructed as described below in section 7.2.6, \"Sending the SNMP Response-PDU\".",
      "zh-CHS": "2) 否则，将向所有相关会话发送一个agentx PDU。处理完成；SNMP响应PDU的构造如第7.2.6节“发送SNMP响应PDU”中所述。"
    },
    {
      "indent": 0,
      "text": "7.2.5.6. Processing of Responses to agentx-UndoSet-PDUs",
      "section_title": true,
      "zh-CHS": "7.2.5.6. 处理对agentx UndoSet PDU的响应"
    },
    {
      "indent": 3,
      "text": "After common processing of the subagent's response to an agentx-UndoSet-PDU (see section 7.2.5.1, \"Common Processing of All AgentX Response PDUs\", above), processing continues with the following steps:",
      "zh-CHS": "子代理对agentx撤销集PDU的响应进行公共处理后（见上文第7.2.5.1节“所有agentx响应PDU的公共处理”），处理继续执行以下步骤："
    },
    {
      "indent": 3,
      "text": "1) If any response is `undoFailed' the SNMP response PDU's error code is set to this value. Also, the SNMP response PDU's error index is set to 0.",
      "zh-CHS": "1) 如果任何响应为“undoFailed”，则SNMP响应PDU的错误代码将设置为此值。此外，SNMP响应PDU的错误索引设置为0。"
    },
    {
      "indent": 3,
      "text": "2) Otherwise, if any response is not `noError' the SNMP response PDU's error code is set to this value. Also, the SNMP response PDU's error index is set to the index of the VarBind corresponding to the failed VarBind in the agentx-TestSet-PDU. If res.error is an AgentX specific value (e.g. `parseError'), the SNMP response PDU's error code is set to a value of genErr instead.",
      "zh-CHS": "2) 否则，如果任何响应不是“无错误”，则SNMP响应PDU的错误代码将设置为此值。此外，SNMP响应PDU的错误索引设置为与agentx测试集PDU中失败的VarBind对应的VarBind索引。如果res.error是特定于AgentX的值（例如“parseError”），则SNMP响应PDU的错误代码将改为gener的值。"
    },
    {
      "indent": 3,
      "text": "3) Otherwise the SNMP response PDU's error code and error index were set in section 7.2.5.5 step 1)",
      "zh-CHS": "3) 否则，SNMP响应PDU的错误代码和错误索引在第7.2.5.5节（步骤1）中设置"
    },
    {
      "indent": 0,
      "text": "7.2.6. Sending the SNMP Response-PDU",
      "section_title": true,
      "zh-CHS": "7.2.6. 发送SNMP响应PDU"
    },
    {
      "indent": 3,
      "text": "Once the processing described in section 7.2.5, \"Master Agent Processing of AgentX Responses\" is complete, there is an SNMP response PDU available. The master agent now implements the Elements of Procedure for the applicable version of the SNMP protocol in order to encapsulate the PDU into a message, and transmit it to the originator of the SNMP management request. Note that this may involve altering the PDU contents (for instance, to replace the original VarBinds if an error condition is to be returned).",
      "zh-CHS": "完成第7.2.5节“AgentX响应的主代理处理”中描述的处理后，将有一个SNMP响应PDU可用。主代理现在实现适用版本的SNMP协议的过程元素，以便将PDU封装到消息中，并将其传输给SNMP管理请求的发起人。请注意，这可能涉及更改PDU内容（例如，如果返回错误条件，则替换原始的varbind）。"
    },
    {
      "indent": 3,
      "text": "The response PDU may also be altered in order to support the SNMPv1 PDU. In such cases the required PDU mapping is that defined in RFC 2089 [25]. (Note in particular that the rules for handling Counter64 syntax may require re-sending AgentX GetBulk or GetNext PDUs until a VarBind of suitable syntax is returned.)",
      "zh-CHS": "还可以改变响应PDU以支持SNMPv1 PDU。在这种情况下，所需的PDU映射是RFC 2089[25]中定义的映射。（请特别注意，处理Counter64语法的规则可能需要重新发送AgentX GetBulk或GetNext pdu，直到返回合适语法的VarBind。）"
    },
    {
      "indent": 0,
      "text": "7.2.7. MIB Views",
      "section_title": true,
      "zh-CHS": "7.2.7. MIB视图"
    },
    {
      "indent": 3,
      "text": "AgentX subagents are not aware of MIB views, since view information is not contained in AgentX PDUs.",
      "zh-CHS": "AgentX子代理不知道MIB视图，因为视图信息不包含在AgentX PDU中。"
    },
    {
      "indent": 3,
      "text": "As stated above, the descriptions of procedures in section 7, \"Elements of Procedure\", of this memo are not intended to constrain the internal architecture of any conformant implementation. In particular, the master agent procedures described in section 7.2.1,",
      "zh-CHS": "如上所述，本备忘录第7节“程序要素”中的程序描述无意约束任何符合性实施的内部架构。特别是第7.2.1节所述的主代理程序，"
    },
    {
      "indent": 3,
      "text": "\"Dispatching AgentX PDUs\" and in section 7.2.5, \"Master Agent Processing of AgentX Responses\" may be altered so as to optimize AgentX exchanges when implementing MIB views.",
      "zh-CHS": "“调度AgentX PDU”和第7.2.5节“AgentX响应的主代理处理”可能会被修改，以便在实施MIB视图时优化AgentX交换。"
    },
    {
      "indent": 3,
      "text": "Such optimizations are beyond the scope of this memo. But note that section 7.2.3, \"Subagent Processing of agentx-Get, GetNext, GetBulk-PDUs\", defines subagent behavior in such a way that alteration of SearchRanges may be used in such optimizations.",
      "zh-CHS": "此类优化超出了本备忘录的范围。但请注意，第7.2.3节“agentx-Get、GetNext、GetBulk-pdu的子代理处理”定义了子代理行为，从而可以在此类优化中使用搜索范围的更改。"
    },
    {
      "indent": 0,
      "text": "7.3. State Transitions",
      "section_title": true,
      "zh-CHS": "7.3. 状态迁移"
    },
    {
      "indent": 3,
      "text": "State diagrams are presented from the master agent's perspective for transport connection and session establishment, and from the subagent's perspective for Set transaction processing.",
      "zh-CHS": "状态图是从主代理的角度显示的，用于传输连接和会话建立，以及从子代理的角度显示的，用于集合事务处理。"
    },
    {
      "indent": 0,
      "text": "7.3.1. Set Transaction States",
      "section_title": true,
      "zh-CHS": "7.3.1. 设置事务状态"
    },
    {
      "indent": 3,
      "text": "The following table presents, from the subagent's perspective, the state transitions involved in Set transaction processing:",
      "zh-CHS": "下表从子代理的角度显示了集合事务处理中涉及的状态转换："
    },
    {
      "indent": 3,
      "text": "                                    STATE\n         +---------------+--------------+---------+--------+--------\n         |       A       |      B       |   C     |   D    |   E\n         |   (Initial    |    TestOK    | Commit  | Test   | Commit\n         |     State)    |              |  OK     | Fail   |  Fail\n         |               |              |         |        |\n EVENT   |               |              |         |        |\n---------+---------------+--------------+---------+--------+--------\n         | 7.2.4.1       |              |         |        |\nReceive  | All varbinds  |              |         |        |\nTestSet  | OK?           |      X       |    X    |   X    |    X\nPDU      |   Yes ->B     |              |         |        |\n         |   No  ->D     |              |         |        |\n---------+---------------+--------------+---------+--------+--------\n         |               |  7.2.4.2     |         |        |\nReceive  |               |  NoError?    |         |        |\nCommit-  |       X       |   Yes ->C    |    X    |   X    |    X\nSet PDU  |               |   No  ->E    |         |        |\n---------+---------------+--------------+---------+--------+--------\nReceive  |               |              | 7.2.4.3 |        |7.2.4.3\nUndoSet  |       X       |       X      | ->done  |   X    | ->done\nPDU      |               |              |         |        |\n---------+---------------+--------------+---------+--------+--------\nReceive  |               |  7.2.4.4     | 7.2.4.4 |7.2.4.4 |\nCleanup- |       X       |   ->done     | ->done  | ->done |   X\nSet PDU  |               |              |         |        |\n---------+---------------+--------------+---------+--------+--------\nSession  |               | rollback     | undo    |        |\nLoss     |  ->done       |  ->done      |  ->done | ->done | ->done\n---------+---------------+--------------+---------+--------+--------",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "There are three possible sequences that a subagent may follow for a particular set transaction:",
      "zh-CHS": "对于特定的集合事务，子代理可能遵循三种可能的顺序："
    },
    {
      "indent": 6,
      "text": "1) TestSet CommitSet CleanupSet 2) TestSet CommitSet UndoSet 3) TestSet CleanupSet",
      "zh-CHS": "1) TestSet CommitSet CleanupSet 2）TestSet CommitSet UndoSet 3）TestSet CleanupSet"
    },
    {
      "indent": 3,
      "text": "Note that a single PDU sequence may result in multiple paths through the finite state machine (FSM). For example, the sequence",
      "zh-CHS": "请注意，单个PDU序列可能导致通过有限状态机（FSM）的多条路径。例如，序列"
    },
    {
      "indent": 6,
      "text": "TestSet CommitSet UndoSet",
      "zh-CHS": "TestSet CommitSet撤消集"
    },
    {
      "indent": 3,
      "text": "may walk through either of these two state sequences:",
      "zh-CHS": "可以遍历这两个状态序列中的任意一个："
    },
    {
      "indent": 6,
      "text": "(initial) TestOK CommitOK (done) (initial) TestOK CommitFail (done)",
      "zh-CHS": "（初始）TestOK CommitTok（完成）（初始）TestOK CommitFail（完成）"
    },
    {
      "indent": 0,
      "text": "7.3.2. Transport Connection States",
      "section_title": true,
      "zh-CHS": "7.3.2. 传输连接状态"
    },
    {
      "indent": 3,
      "text": "The following table presents, from the master agent's perspective,\nthe state transitions involved in transport connection setup and\nteardown:\n                 STATE\n                +--------------+--------------\n                |      A       |      B\n                | No transport |  Transport\n                |              |  connected\n                |              |\nEVENT           |              |\n----------------+--------------+--------------\nTransport       |              |\nconnect         |     ->B      |      X\nindication      |              |\n----------------+--------------+--------------\nReceive         |              | if no resources\nOpen-PDU        |              | available\n                |              | reject, else\n                |      X       | establish\n                |              | session\n                |              |\n                |              |     ->B\n----------------+--------------+--------------\nReceive         |              | if matching\nResponse-PDU    |              | session id,\n                |              | feed to that\n                |      X       | session's FSM\n                |              | else ignore\n                |              |\n                |              |     ->B\n----------------+--------------+--------------\nReceive other   |              | if matching\nPDUs            |              | session id,\n                |              | feed to that\n                |      X       | session's FSM\n                |              | else reject\n                |              |\n                |              |     ->B\n----------------+--------------+--------------\nTransport       |              |notify all\ndisconnect      |              |sessions on\nindication      |      X       |this transport\n                |              |\n                |              |     ->A\n----------------+--------------+--------------",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "7.3.3. Session States",
      "section_title": true,
      "zh-CHS": "7.3.3. 届会国家"
    },
    {
      "indent": 3,
      "text": "The following table presents, from the master agent's perspective, the state transitions involved in session setup and teardown:",
      "zh-CHS": "下表从主代理的角度显示了会话设置和拆卸中涉及的状态转换："
    },
    {
      "indent": 3,
      "text": "                           STATE\n               +-------------+----------------\n               |     A       |      B\n               |  No session |  Session\n               |             |  established\nEVENT          |             |\n---------------+-------------+----------------\n               |  7.1.1      |\nReceive        |             |      X\nOpen PDU       |    ->B      |\n---------------+-------------+----------------\n               |             |  7.1.8\nReceive        |      X      |\nClose PDU      |             |    ->A\n---------------+-------------+----------------\nReceive        |             |  7.1.4\nRegister PDU   |      X      |\n               |             |    ->B\n---------------+-------------+----------------\nReceive        |             |  7.1.5\nUnregister     |      X      |\nPDU            |             |    ->B\n---------------+-------------+----------------\nReceive        |             |\nGet PDU        |             |\nGetNext PDU    |             |\nGetBulk PDU    |      X      |       X\nTestSet PDU    |             |\nCommitSet PDU  |             |\nUndoSet PDU    |             |\nCleanupSet PDU |             |\n---------------+-------------+----------------\nReceive        |             |  7.1.10\nNotify PDU     |      X      |\n               |             |    ->B\n---------------+-------------+----------------\nReceive Ping   |             |  7.1.11\nPDU            |      X      |\n               |             |    ->B\n---------------+-------------+----------------\n(continued next page)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "---------------+-------------+----------------\nReceive        |             |  7.1.2\nIndexAllocate  |      X      |\nPDU            |             |    ->B\n---------------+-------------+----------------\nReceive        |             |  7.1.3\nIndexDeallocate|      X      |\nPDU            |             |    ->B\n---------------+-------------+----------------\nReceive        |             |  7.1.6\nAddAgentxCaps  |      X      |\nPDU            |             |    ->B\n---------------+-------------+----------------\nReceive        |             |  7.1.7\nRemoveAgentxCap|      X      |\nPDU            |             |    ->B\n---------------+-------------+----------------\nReceive        |             |  7.2.5\nResponse PDU   |      X      |\n               |             |    ->B\n---------------+-------------+----------------\nReceive        |             |\nOther PDU      |      X      |       X\n---------------+-------------+----------------",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "8. Transport Mappings",
      "section_title": true,
      "zh-CHS": "8. 传输映射"
    },
    {
      "indent": 3,
      "text": "The same AgentX PDU formats, encodings, and elements of procedure are used regardless of the underlying transport.",
      "zh-CHS": "无论底层传输是什么，都会使用相同的AgentX PDU格式、编码和过程元素。"
    },
    {
      "indent": 0,
      "text": "8.1. AgentX over TCP",
      "section_title": true,
      "zh-CHS": "8.1. TCP上的AgentX"
    },
    {
      "indent": 0,
      "text": "8.1.1. Well-known Values",
      "section_title": true,
      "zh-CHS": "8.1.1. 众所周知的价值观"
    },
    {
      "indent": 3,
      "text": "The master agent accepts TCP connection requests for the well-known port 705. Subagents connect to the master agent using this port number.",
      "zh-CHS": "主代理接受已知端口705的TCP连接请求。子代理使用此端口号连接到主代理。"
    },
    {
      "indent": 0,
      "text": "8.1.2. Operation",
      "section_title": true,
      "zh-CHS": "8.1.2. 活动"
    },
    {
      "indent": 3,
      "text": "Once a TCP connection has been established, the AgentX peers use this connection to carry all AgentX PDUs. Multiple AgentX sessions may be established using the same TCP connection. AgentX PDUs are sent within an AgentX session. AgentX peers are responsible for mapping the h.sessionID to a particular TCP connection.",
      "zh-CHS": "一旦建立TCP连接，AgentX对等方将使用此连接承载所有AgentX PDU。可以使用相同的TCP连接建立多个AgentX会话。AgentX PDU在AgentX会话中发送。AgentX对等方负责将h.sessionID映射到特定的TCP连接。"
    },
    {
      "indent": 3,
      "text": "The AgentX entity must not \"interleave\" AgentX PDUs within the TCP byte stream. All the bytes of one PDU must be sent before any bytes of a different PDU. The receiving entity must be prepared for TCP to deliver byte sequences that do not coincide with AgentX PDU boundaries.",
      "zh-CHS": "AgentX实体不得在TCP字节流中“交错”AgentX PDU。一个PDU的所有字节必须在另一个PDU的任何字节之前发送。接收实体必须为TCP做好准备，以交付与AgentX PDU边界不一致的字节序列。"
    },
    {
      "indent": 0,
      "text": "8.2. AgentX over UNIX-domain Sockets",
      "section_title": true,
      "zh-CHS": "8.2. UNIX域套接字上的AgentX"
    },
    {
      "indent": 3,
      "text": "Many (BSD-derived) implementations of the UNIX operating system support the UNIX pathname address family (AF_UNIX) for socket communications. This provides a convenient method of sending and receiving data between processes on the same host.",
      "zh-CHS": "UNIX操作系统的许多（BSD派生的）实现都支持用于套接字通信的UNIX路径名地址系列（AF_UNIX）。这为在同一主机上的进程之间发送和接收数据提供了一种方便的方法。"
    },
    {
      "indent": 3,
      "text": "Mapping AgentX to this transport is useful for environments that",
      "zh-CHS": "将AgentX映射到此传输对于以下环境非常有用："
    },
    {
      "indent": 6,
      "text": "- wish to guarantee subagents are running on the same managed node as the master agent, and where",
      "zh-CHS": "- 希望确保子代理与主代理在同一托管节点上运行，以及"
    },
    {
      "indent": 6,
      "text": "- sockets provide better performance than TCP or UDP, especially in the presence of heavy network I/O",
      "zh-CHS": "- 套接字提供比TCP或UDP更好的性能，尤其是在存在大量网络I/O的情况下"
    },
    {
      "indent": 0,
      "text": "8.2.1. Well-known Values",
      "section_title": true,
      "zh-CHS": "8.2.1. 众所周知的价值观"
    },
    {
      "indent": 3,
      "text": "The master agent creates a well-known UNIX-domain socket endpoint called \"/var/agentx/master\". (It may create other, implementation-specific endpoints.)",
      "zh-CHS": "主代理创建一个著名的UNIX域套接字端点，名为“/var/agentx/master”。（它可以创建其他特定于实现的端点。）"
    },
    {
      "indent": 3,
      "text": "This endpoint name uses the character set encoding native to the managed node, and represents a UNIX-domain stream (SOCK_STREAM) socket.",
      "zh-CHS": "此端点名称使用托管节点本机的字符集编码，并表示UNIX域流（SOCK_流）套接字。"
    },
    {
      "indent": 0,
      "text": "8.2.2. Operation",
      "section_title": true,
      "zh-CHS": "8.2.2. 活动"
    },
    {
      "indent": 3,
      "text": "Once a connection has been established, the AgentX peers use this connection to carry all AgentX PDUs.",
      "zh-CHS": "一旦建立连接，AgentX对等方将使用此连接承载所有AgentX PDU。"
    },
    {
      "indent": 3,
      "text": "Multiple AgentX sessions may be established using the same connection. AgentX PDUs are sent within an AgentX session. AgentX peers are responsible for mapping the h.sessionID to a particular connection.",
      "zh-CHS": "可以使用同一连接建立多个AgentX会话。AgentX PDU在AgentX会话中发送。AgentX对等方负责将h.sessionID映射到特定连接。"
    },
    {
      "indent": 3,
      "text": "The AgentX entity must not \"interleave\" AgentX PDUs within the socket byte stream. All the bytes of one PDU must be sent before any bytes of a different PDU. The receiving entity must be prepared for the socket to deliver byte sequences that do not coincide with AgentX PDU boundaries.",
      "zh-CHS": "AgentX实体不得在套接字字节流中“交错”AgentX PDU。一个PDU的所有字节必须在另一个PDU的任何字节之前发送。接收实体必须为套接字准备好，以交付与AgentX PDU边界不一致的字节序列。"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "zh-CHS": "9. 安全考虑"
    },
    {
      "indent": 3,
      "text": "This memo defines a protocol between two processing entities, one of which (the master agent) is assumed to perform authentication of received SNMP requests and to control access to management information. The master agent performs these security operations independently of the other processing entity (the subagent).",
      "zh-CHS": "此备忘录定义了两个处理实体之间的协议，其中一个（主代理）被假定为对接收到的SNMP请求执行身份验证并控制对管理信息的访问。主代理独立于其他处理实体（子代理）执行这些安全操作。"
    },
    {
      "indent": 3,
      "text": "Security considerations require three questions to be answered:",
      "zh-CHS": "出于安全考虑，需要回答三个问题："
    },
    {
      "indent": 6,
      "text": "1. Is a particular subagent allowed to initiate a session with a particular master agent?",
      "zh-CHS": "1. 是否允许特定子代理启动与特定主代理的会话？"
    },
    {
      "indent": 6,
      "text": "2. During an AgentX session, is any SNMP security-related information (for example, community names) passed from the master agent to the subagent?",
      "zh-CHS": "2. 在AgentX会话期间，是否有任何SNMP安全相关信息（例如，团体名称）从主代理传递给子代理？"
    },
    {
      "indent": 6,
      "text": "3. During an AgentX session, what part of the MIB tree is this subagent allowed to register?",
      "zh-CHS": "3. 在AgentX会话期间，允许该子代理注册MIB树的哪个部分？"
    },
    {
      "indent": 3,
      "text": "The answer to the third question is: A subagent can register any subtree (subject to AgentX elements of procedure, section 7.1.4, \"Processing the agentx-Register-PDU\"). Currently there is no access control mechanism defined in AgentX. A concern here is that a malicious subagent that registers an unauthorized \"sensitive\" subtree, could see modification requests to those objects, or by giving its own clever answer to NMS queries, could cause the NMS to do something that leads to information disclosure or other damage.",
      "zh-CHS": "第三个问题的答案是：子代理可以注册任何子树（根据程序的AgentX元素，第7.1.4节，“处理AgentX注册PDU”）。目前，AgentX中未定义访问控制机制。这里的一个问题是，注册未经授权的“敏感”子树的恶意子代理可能会看到对这些对象的修改请求，或者通过对NMS查询给出自己的聪明答案，可能会导致NMS执行导致信息泄露或其他损害的操作。"
    },
    {
      "indent": 3,
      "text": "The answer to the second question is: No.",
      "zh-CHS": "第二个问题的答案是：没有。"
    },
    {
      "indent": 3,
      "text": "Now we can answer the first question. AgentX does not contain a mechanism for authorizing/refusing session initiations. Thus, controlling subagent access to the master agent may only be done at a lower layer (e.g., transport).",
      "zh-CHS": "现在我们可以回答第一个问题。AgentX不包含授权/拒绝会话启动的机制。因此，控制子代理对主代理的访问只能在较低层（例如，传输）上完成。"
    },
    {
      "indent": 3,
      "text": "An AgentX subagent can connect to a master agent using either a network transport mechanism (e.g., TCP), or a \"local\" mechanism (e.g., shared memory, named pipes).",
      "zh-CHS": "AgentX子代理可以使用网络传输机制（如TCP）或“本地”机制（如共享内存、命名管道）连接到主代理。"
    },
    {
      "indent": 3,
      "text": "In the case where a local transport mechanism is used and both subagent and master agent are running on the same host, connection authorization can be delegated to the operating system features. The answer to the first security question then becomes: \"If and only if the subagent has sufficient privileges, then the operating system will allow the connection\".",
      "zh-CHS": "在使用本地传输机制且子代理和主代理都在同一主机上运行的情况下，可以将连接授权委托给操作系统功能。第一个安全问题的答案是：“如果且仅当子代理具有足够的权限，则操作系统将允许连接”。"
    },
    {
      "indent": 3,
      "text": "If a network transport is used, currently there is no inherent security. Transport Layer Security, SSL, or IPsec SHOULD be used to control and protect subagent connections in this mode of operation.",
      "zh-CHS": "如果使用网络传输，目前没有固有的安全性。在这种操作模式下，应使用传输层安全性、SSL或IPsec来控制和保护子代理连接。"
    },
    {
      "indent": 3,
      "text": "However, we RECOMMEND that subagents always run on the same host as the master agent and that operating system features be used to ensure that only properly authorized subagents can establish connections to the master agent.",
      "zh-CHS": "但是，我们建议子代理始终与主代理在同一主机上运行，并使用操作系统功能确保只有经过适当授权的子代理才能建立到主代理的连接。"
    },
    {
      "indent": 0,
      "text": "10. Acknowledgements",
      "section_title": true,
      "zh-CHS": "10. 致谢"
    },
    {
      "indent": 3,
      "text": "The initial development of this memo was heavily influenced by the DPI 2.0 specification RFC 1592 [26].",
      "zh-CHS": "本备忘录的初始开发受到DPI 2.0规范RFC 1592[26]的严重影响。"
    },
    {
      "indent": 3,
      "text": "This document was produced by the IETF Agent Extensibility (AgentX) Working Group, and benefited especially from the contributions of the following working group members:",
      "zh-CHS": "本文件由IETF代理可扩展性（AgentX）工作组编制，特别得益于以下工作组成员的贡献："
    },
    {
      "indent": 6,
      "text": "David Battle, Uri Blumenthal, Jeff Case, Maria Greene, Lauren Heintz, Dave Keeney, Harmen van der Linde, Bob Natale, Aleksey Romanov, Don Ryan, and Juergen Schoenwaelder.",
      "zh-CHS": "大卫·巴特、乌里·布卢门塔尔、杰夫·凯斯、玛丽亚·格林、劳伦·海因茨、戴夫·基尼、哈门·范德林德、鲍勃·纳塔尔、阿列克西·罗曼诺夫、唐·瑞安和尤尔根·舍恩瓦埃尔德。"
    },
    {
      "indent": 3,
      "text": "An honorable mention is extended to Randy Presuhn in recognition for his numerous technical contributions to this specification; for his many answers provided on (and hosting of) the AgentX e-mail list and ftp site, and, for the valued support and guidance Randy provided to the Working Group chair.",
      "zh-CHS": "为了表彰Randy Presohn对本规范做出的众多技术贡献，谨向他致以崇高的敬意；感谢Randy在AgentX电子邮件列表和ftp站点上提供（和托管）的众多答案，感谢Randy向工作组主席提供的宝贵支持和指导。"
    },
    {
      "indent": 3,
      "text": "The AgentX Working Group is chaired by:",
      "zh-CHS": "AgentX工作组由以下人员担任主席："
    },
    {
      "indent": 3,
      "text": "Bob Natale ACE*COMM Corporation 704 Quince Orchard Road Gaithersburg, MD 20878",
      "zh-CHS": "马里兰州盖瑟斯堡昆斯乌节路704号Bob Natale ACE*通信公司20878"
    },
    {
      "indent": 3,
      "text": "Phone: +1-301-721-3000\nFax:   +1-301-721-3001\nEMail: bnatale@acecomm.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "11. Authors' and Editor's Addresses",
      "section_title": true,
      "zh-CHS": "11. 作者和编辑地址"
    },
    {
      "indent": 3,
      "text": "Mike Daniele Compaq Computer Corporation 110 Spit Brook Rd Nashua, NH 03062",
      "zh-CHS": "迈克·达涅利·康柏计算机公司，地址：新罕布什尔州纳舒亚市斯皮布鲁克路110号，邮编：03062"
    },
    {
      "indent": 3,
      "text": "Phone: +1-603-881-1423\nEMail: daniele@zk3.dec.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Bert Wijnen IBM T.J.Watson Research Schagen 33 3461 GL Linschoten Netherlands",
      "zh-CHS": "Bert Wijnen IBM T.J.Watson Research Schagen 33 3461德国林肖顿荷兰"
    },
    {
      "indent": 3,
      "text": "Phone: +31-348-432-794\nEMail: wijnen@vnet.ibm.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Mark Ellison (WG editor) Ellison Software Consulting, Inc. 38 Salem Road Atkinson, NH 03811",
      "zh-CHS": "马克·埃里森（工作组编辑）埃里森软件咨询公司，地址：新罕布什尔州阿特金森塞勒姆路38号，邮编：03811"
    },
    {
      "indent": 3,
      "text": "Phone: +1-603-362-9270\nEMail: ellison@world.std.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Dale Francisco (editor) Cisco Systems 150 Castilian Dr Goleta CA 93117",
      "zh-CHS": "戴尔·弗朗西斯科（编辑）思科系统150卡斯蒂利亚戈莱塔博士CA 93117"
    },
    {
      "indent": 3,
      "text": "Phone: +1-805-961-3642\nFax:   +1-805-961-3600\nEMail: dfrancis@cisco.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "12. References",
      "section_title": true,
      "zh-CHS": "12. 工具书类"
    },
    {
      "indent": 3,
      "text": "[1] Harrington, D., Presuhn, R. and B. Wijnen, \"An Architecture for Describing SNMP Management Frameworks\", RFC 2571, April 1999.",
      "zh-CHS": "[1] Harrington，D.，Presohn，R.和B.Wijnen，“描述SNMP管理框架的体系结构”，RFC 2571，1999年4月。"
    },
    {
      "indent": 3,
      "text": "[2] Rose, M. and K. McCloghrie, \"Structure and Identification of Management Information for TCP/IP-based Internets\", STD 16, RFC 1155, May 1990.",
      "zh-CHS": "[2] Rose，M.和K.McCloghrie，“基于TCP/IP的互联网管理信息的结构和识别”，STD 16，RFC 1155，1990年5月。"
    },
    {
      "indent": 3,
      "text": "[3] Rose, M. and K. McCloghrie, \"Concise MIB Definitions\", STD 16, RFC 1212, March 1991.",
      "zh-CHS": "[3] Rose，M.和K.McCloghrie，“简明MIB定义”，STD 16，RFC 1212，1991年3月。"
    },
    {
      "indent": 3,
      "text": "[4] Rose, M., \"A Convention for Defining Traps for use with the SNMP\", RFC 1215, March 1991.",
      "zh-CHS": "[4] Rose，M.“定义用于SNMP的陷阱的约定”，RFC1215，1991年3月。"
    },
    {
      "indent": 3,
      "text": "[5] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, M. and S. Waldbusser, \"Structure of Management Information Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.",
      "zh-CHS": "[5] McCloghrie，K.，Perkins，D.，Schoenwaeld，J.，Case，J.，Rose，M.和S.Waldbusser，“管理信息的结构版本2（SMIv2）”，STD 58，RFC 2578，1999年4月。"
    },
    {
      "indent": 3,
      "text": "[6] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, M. and S. Waldbusser, \"Textual Conventions for SMIv2\", STD 58, RFC 2579, April 1999.",
      "zh-CHS": "[6] McCloghrie，K.，Perkins，D.，Schoenwaeld，J.，Case，J.，Rose，M.和S.Waldbusser，“SMIv2的文本约定”，STD 58，RFC 2579，1999年4月。"
    },
    {
      "indent": 3,
      "text": "[7] McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J., Rose, M. and S. Waldbusser, \"Conformance Statements for SMIv2\", STD 58, RFC 2580, April 1999.",
      "zh-CHS": "[7] McCloghrie，K.，Perkins，D.，Schoenwaeld，J.，Case，J.，Rose，M.和S.Waldbusser，“SMIv2的一致性声明”，STD 58，RFC 25801999年4月。"
    },
    {
      "indent": 3,
      "text": "[8] Case, J., Fedor, M., Schoffstall, M. and J. Davin, \"Simple Network Management Protocol\", STD 15, RFC 1157, May 1990.",
      "zh-CHS": "[8] Case，J.，Fedor，M.，Schoffstall，M.和J.Davin，“简单网络管理协议”，STD 15，RFC 1157，1990年5月。"
    },
    {
      "indent": 3,
      "text": "[9] Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, \"Introduction to Community-based SNMPv2\", RFC 1901, January 1996.",
      "zh-CHS": "[9] Case，J.，McCloghrie，K.，Rose，M.和S.Waldbusser，“基于社区的SNMPv2简介”，RFC 19011996年1月。"
    },
    {
      "indent": 3,
      "text": "[10] Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, \"Transport Mappings for Version 2 of the Simple Network Management Protocol (SNMPv2)\", RFC 1906, January 1996.",
      "zh-CHS": "[10] Case，J.，McCloghrie，K.，Rose，M.和S.Waldbusser，“简单网络管理协议（SNMPv2）版本2的传输映射”，RFC 1906，1996年1月。"
    },
    {
      "indent": 3,
      "text": "[11] Case, J., Harrington D., Presuhn R. and B. Wijnen, \"Message Processing and Dispatching for the Simple Network Management Protocol (SNMP)\", RFC 2572, April 1999.",
      "zh-CHS": "[11] Case，J.，Harrington D.，Presohn R.和B.Wijnen，“简单网络管理协议（SNMP）的消息处理和调度”，RFC 2572，1999年4月。"
    },
    {
      "indent": 3,
      "text": "[12] Blumenthal, U. and B. Wijnen, \"User-based Security Model (USM) for version 3 of the Simple Network Management Protocol (SNMPv3)\", RFC 2574, April 1999.",
      "zh-CHS": "[12] Blumenthal，U.和B.Wijnen，“简单网络管理协议（SNMPv3）第3版的基于用户的安全模型（USM）”，RFC 2574，1999年4月。"
    },
    {
      "indent": 3,
      "text": "[13] Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, \"Protocol Operations for Version 2 of the Simple Network Management Protocol (SNMPv2)\", RFC 1905, January 1996.",
      "zh-CHS": "[13] Case，J.，McCloghrie，K.，Rose，M.和S.Waldbusser，“简单网络管理协议（SNMPv2）版本2的协议操作”，RFC 1905，1996年1月。"
    },
    {
      "indent": 3,
      "text": "[14] Levi, D., Meyer, P. and B. Stewart, \"SNMPv3 Applications\", RFC 2573, April 1999.",
      "zh-CHS": "[14] Levi，D.，Meyer，P.和B.Stewart，“SNMPv3应用”，RFC2573，1999年4月。"
    },
    {
      "indent": 3,
      "text": "[15] Wijnen, B., Presuhn, R. and K. McCloghrie, \"View-based Access Control Model (VACM) for the Simple Network Management Protocol (SNMP)\", RFC 2575, April 1999.",
      "zh-CHS": "[15] Wijnen，B.，Presuhn，R.和K.McCloghrie，“用于简单网络管理协议（SNMP）的基于视图的访问控制模型（VACM）”，RFC2575，1999年4月。"
    },
    {
      "indent": 3,
      "text": "[16] Case, J., Mundy, R., Partain, D. and B. Stewart, \"Introduction to Version 3 of the Internet-standard Network Management Framework\", RFC 2570, April 1999.",
      "zh-CHS": "[16] Case，J.，Mundy，R.，Partain，D.和B.Stewart，“互联网标准网络管理框架第3版简介”，RFC 25701999年4月。"
    },
    {
      "indent": 3,
      "text": "[17] Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, \"Management Information Base for Version 2 of the Simple Network Management Protocol (SNMPv2)\", RFC 1907, January 1996.",
      "zh-CHS": "[17] Case，J.，McCloghrie，K.，Rose，M.和S.Waldbusser，“简单网络管理协议（SNMPv2）版本2的管理信息库”，RFC 1907，1996年1月。"
    },
    {
      "indent": 3,
      "text": "[18] Information processing systems - Open Systems Interconnection - Specification of Abstract Syntax Notation One (ASN.1), International Organization for Standardization. International Standard 8824, (December, 1987).",
      "zh-CHS": "[18] 信息处理系统.开放系统互连.国际标准化组织抽象语法符号1（ASN.1）规范。国际标准8824（1987年12月）。"
    },
    {
      "indent": 3,
      "text": "[19] McCloghrie, K. and F. Kastenholz, \"The Interfaces Group MIB using SMIv2\", RFC 2233, November 1997.",
      "zh-CHS": "[19] McCloghrie，K.和F.Kastenholz，“使用SMIv2的接口组MIB”，RFC 2233，1997年11月。"
    },
    {
      "indent": 3,
      "text": "[20] Case, J., \"FDDI Management Information Base\", RFC 1285, January 1992.",
      "zh-CHS": "[20] Case，J.，“FDDI管理信息库”，RFC 1285，1992年1月。"
    },
    {
      "indent": 3,
      "text": "[21] Krupczak, C. and J. Saperia, \"Definitions of System-Level Managed Objects for Applications\", RFC 2287, April 1997.",
      "zh-CHS": "[21] Krupczak，C.和J.Saperia，“应用程序系统级托管对象的定义”，RFC 2287，1997年4月。"
    },
    {
      "indent": 3,
      "text": "[22] Kalbfleisch, C., Krupczak, C., Presuhn, R. and J. Saperia, \"Application Management MIB\", RFC 2564, May 1999.",
      "zh-CHS": "[22] Kalbflesch，C.，Krupczak，C.，Presohn，R.和J.Saperia，“应用程序管理MIB”，RFC 2564，1999年5月。"
    },
    {
      "indent": 3,
      "text": "[23] Reynolds, J. and J. Postel, \"Assigned Numbers\", STD 2, RFC 1700, October 1994.",
      "zh-CHS": "[23] Reynolds，J.和J.Postel，“分配的数字”，标准2，RFC 1700，1994年10月。"
    },
    {
      "indent": 3,
      "text": "[24] Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, \"Coexistence between Version 1 and Version 2 of the Internet-standard Network Management Framework\", RFC 1908, January 1996.",
      "zh-CHS": "[24] Case，J.，McCloghrie，K.，Rose，M.和S.Waldbusser，“互联网标准网络管理框架第1版和第2版之间的共存”，RFC 1908，1996年1月。"
    },
    {
      "indent": 3,
      "text": "[25] Wijnen, B. and D. Levi, \"V2ToV1: Mapping SNMPv2 onto SNMPv1 Within a Bilingual SNMP Agent\", RFC 2089, January 1997.",
      "zh-CHS": "[25] Wijnen，B.和D.Levi，“V2ToV1：在双语SNMP代理中将SNMPv2映射到SNMPv1”，RFC 2089，1997年1月。"
    },
    {
      "indent": 3,
      "text": "[26] Wijnen, B., Carpenter, G., Curran, K., Sehgal, A. and G. Waters, \"Simple Network Management Protocol: Distributed Protocol Interface, Version 2.0\", RFC 1592, March 1994.",
      "zh-CHS": "[26] Wijnen，B.，Carpenter，G.，Curran，K.，Sehgal，A.和G.Waters，“简单网络管理协议：分布式协议接口，版本2.0”，RFC 1592，1994年3月。"
    },
    {
      "indent": 3,
      "text": "[27] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "zh-CHS": "[27] Bradner，S.，“RFC中用于表示需求水平的关键词”，BCP 14，RFC 2119，1997年3月。"
    },
    {
      "indent": 0,
      "text": "13. Notices",
      "section_title": true,
      "zh-CHS": "13. 通知"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights. Information on the IETF's procedures with respect to rights in standards-track and standards-related documentation can be found in BCP-11. Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementors or users of this specification can be obtained from the IETF Secretariat.",
      "zh-CHS": "IETF对可能声称与本文件所述技术的实施或使用有关的任何知识产权或其他权利的有效性或范围，或此类权利下的任何许可可能或可能不可用的程度，不采取任何立场；它也不表示它已作出任何努力来确定任何此类权利。有关IETF在标准跟踪和标准相关文件中权利的程序信息，请参见BCP-11。可从IETF秘书处获得可供发布的权利声明副本和任何许可证保证，或本规范实施者或用户试图获得使用此类专有权利的一般许可证或许可的结果。"
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to practice this standard. Please address the information to the IETF Executive Director.",
      "zh-CHS": "IETF邀请任何相关方提请其注意任何版权、专利或专利申请，或其他可能涉及实施本标准所需技术的专有权利。请将信息发送给IETF执行董事。"
    },
    {
      "indent": 0,
      "text": "A. Changes relative to RFC 2257",
      "zh-CHS": "A.与RFC 2257相关的变更"
    },
    {
      "indent": 3,
      "text": "Changes on the wire:",
      "zh-CHS": "电线上的变化："
    },
    {
      "indent": 6,
      "text": "- The agentx-Notify-PDU and agentx-Close-PDU now generate an agentx-Response-PDU.",
      "zh-CHS": "- agentx Notify PDU和agentx Close PDU现在生成agentx响应PDU。"
    },
    {
      "indent": 6,
      "text": "- The res.error field may contain three new error codes: parseFailed(266), requestDenied(267), and processingError(268).",
      "zh-CHS": "- res.error字段可能包含三个新的错误代码：parseFailed（266）、requestDenied（267）和processingError（268）。"
    },
    {
      "indent": 3,
      "text": "Clarifications to the text of the memo:",
      "zh-CHS": "对备忘录文本的澄清："
    },
    {
      "indent": 6,
      "text": "- Modified the text of step (4) in section 4.2, \"Applicability\" to separate the two concerns of row creation, and counters that count rows.",
      "zh-CHS": "- 修改了第4.2节“适用性”中步骤（4）的文本，以分离行创建的两个关注点和计算行的计数器。"
    },
    {
      "indent": 6,
      "text": "- The use of the r.range_subid field is more clearly defined in section 6.2.3, \"The agentx-Register-PDU\".",
      "zh-CHS": "- 第6.2.3节“agentx寄存器PDU”对r.range_subid字段的使用作了更明确的定义。"
    },
    {
      "indent": 6,
      "text": "- Default priority (127) for registration added to the description of r.priority in section 6.2.3, \"The agentx-Register-PDU\".",
      "zh-CHS": "- 注册的默认优先级（127）添加到第6.2.3节“agentx寄存器PDU”中的r.优先级描述中。"
    },
    {
      "indent": 6,
      "text": "- Made the distinction of \"administrative processing\" PDUs and \"SNMP request processing\" PDUs in section 6.1, \"AgentX PDU Header\" description of h.type. This distinction is used in the Elements of Procedure relative to the res.sysuptime and res.error fields.",
      "zh-CHS": "- 在第6.1节h.type的“AgentX PDU头”说明中对“管理处理”PDU和“SNMP请求处理”PDU进行了区分。此区别在与res.sysuptime和res.error字段相关的过程元素中使用。"
    },
    {
      "indent": 6,
      "text": "- Rewrote portions of text in section 6.2.3, \"The agentx-Register-PDU\" to be more explicit about the following points:",
      "zh-CHS": "- 重写第6.2.3节“agentx寄存器PDU”中的部分文本，以便更明确地说明以下几点："
    },
    {
      "indent": 12,
      "text": "- There is a default registration priority of 127. - Improved the description of r.range_subid, independent of the prefix in r.region. - Improved description and examples of how to use the registration mechanism. - Added a description for r.upper_bound. - changed r.region to r.subtree (because the text used the terms \"region\", \"range\", and \"OID range\" in too loose a fashion. r.subtree can not represent anything more by itself than a simple subtree. In conjunction with r.range_subid and r.upper_bound, it can represent a \"region\", that is, a union of subtrees)",
      "zh-CHS": "- 默认注册优先级为127。-改进了r.range_subid的描述，与r.region中的前缀无关。-关于如何使用注册机制的改进说明和示例。-添加了对r.上限的描述。-将r.region更改为r.subtree（因为文本中使用的术语“region”、“range”和“OID range”过于宽松。r.subtree本身不能表示简单的子树。与r.range_subid和r.upper_bound一起，它可以表示“region”，即子树的并集）"
    },
    {
      "indent": 3,
      "text": "- Modified the text in section 6.2.4, \"The agentx-Unregister-PDU\" to include a description of u.range_subid and u.upper_bound",
      "zh-CHS": "- 修改了第6.2.4节“代理注销PDU”中的文本，以包括u.range_subid和u.upper_bound的说明"
    },
    {
      "indent": 3,
      "text": "- Added use of the `requestDenied' error code in section 7.1.4, \"Processing the agentx-Register-PDU\".",
      "zh-CHS": "- 在第7.1.4节“处理agentx寄存器PDU”中增加了“requestDenied”错误代码的使用。"
    },
    {
      "indent": 3,
      "text": "- Removed text in section 7, \"Elements of Procedure\" on parse errors and protocol errors.",
      "zh-CHS": "- 删除了第7节“过程元素”中有关分析错误和协议错误的文本。"
    },
    {
      "indent": 3,
      "text": "- Added a new section, 7.1, \"Processing AgentX Administrative Messages\" which defines common processing and how to use the `parseError' and `processingError' instead of closing a session, and how to handle context.",
      "zh-CHS": "- 新增了第7.1节“Processing AgentX Administrative Messages”，该节定义了常见处理以及如何使用“parseError”和“processingError”来代替关闭会话，以及如何处理上下文。"
    },
    {
      "indent": 3,
      "text": "- Removed the common processing text from the other administrative processing Elements of Procedure sections, and added a reference to section 7.1, \"Processing AgentX Administrative Messages\". The affected sections are:",
      "zh-CHS": "- 从程序章节的其他管理处理元素中删除了通用处理文本，并添加了对第7.1节“处理代理TX管理消息”的参考。受影响的路段包括："
    },
    {
      "indent": 12,
      "text": "- 7.1.2, \"Processing the agentx-IndexAllocate-PDU\" - 7.1.3, \"Processing the agentx-IndexDeallocate-PDU\" - 7.1.4, \"Processing the agentx-Register-PDU\" - 7.1.5, \"Processing the agentx-Unregister-PDU\" - 7.1.6, \"Processing the agentx-AddAgentCaps-PDU\" - 7.1.7, \"Processing the agentx-RemoveAgentCaps-PDU\" - 7.1.8, \"Processing the agentx-Close-PDU\" - 7.1.10, \"Processing the agentx-Notify-PDU\" - 7.1.11, \"Processing the agentx-Ping-PDU\"",
      "zh-CHS": "- 7.1.2，“处理agentx索引分配PDU”-7.1.3，“处理agentx索引分配PDU”-7.1.4，“处理agentx寄存器PDU”-7.1.5，“处理agentx注销PDU”-7.1.6，“处理agentx添加AGENTCAPS PDU”-7.1.7，“处理agentx移除AGENTCAPS PDU”-7.1.8，“处理agentx关闭PDU”-7.1.10，“处理agentx通知PDU”-7.1.11，“处理agentx Ping PDU”"
    },
    {
      "indent": 3,
      "text": "- Reworked the text in section 7.1.1, \"Processing the agentx-Open-PDU\" to include new error codes, and, to eliminate reference to an indicated context.",
      "zh-CHS": "- 修改了第7.1.1节“处理agentx Open PDU”中的文本，以包括新的错误代码，并消除对指定上下文的引用。"
    },
    {
      "indent": 3,
      "text": "- Modified the text in Section 7.1.10, \"Processing the agentx-Notify-PDU\" to state that context checking is performed.",
      "zh-CHS": "- 修改了第7.1.10节“处理agentx通知PDU”中的文本，以说明已执行上下文检查。"
    },
    {
      "indent": 3,
      "text": "- Substantially modified the text in section 7.1.4.1, \"Handling Duplicate and Overlapping Subtrees\".",
      "zh-CHS": "- 实质性修改了第7.1.4.1节“处理重复和重叠子树”中的文本。"
    },
    {
      "indent": 3,
      "text": "- Removed the section on \"Using the agentx-IndexAllocate-PDU\" and added section 7.1.4.2, \"Registering Stuff\". This change is intended to provide a more concise and a more cohesive description of how things are supposed to work.",
      "zh-CHS": "- 删除了“使用agentx IndexAllocate PDU”一节，并添加了第7.1.4.2节“注册材料”。这一变化旨在提供一个更简洁、更连贯的描述，说明事情应该如何运作。"
    },
    {
      "indent": 3,
      "text": "- Modified the test in section 7.1.5, \"Processing the agentx-Unregister-PDU\" to require a match on u.range_subid and on u.upper_bound when these fields were applicable in the corresponding agentx-Register-PDU.",
      "zh-CHS": "- 修改了第7.1.5节“处理agentx注销PDU”中的测试，当这些字段适用于相应的agentx寄存器PDU时，要求u.range_subid和u.upper_bound匹配。"
    },
    {
      "indent": 3,
      "text": "- Removed all references to \"splitting\", and all uses of the term \"OID range\". The text now refers to regions or subtrees directly, and relies on rule (1), \"Honoring the Registry\", in section 7.2.1, \"Dispatching AgentX PDUs\".",
      "zh-CHS": "- 删除了对“拆分”的所有引用，以及“OID范围”一词的所有用法。该文本现在直接指区域或子树，并依赖于第7.2.1节“调度AgentX PDU”中的规则（1）“尊重注册表”。"
    },
    {
      "indent": 3,
      "text": "- Modified text in clause 4(c) of section 7.2.1, \"Dispatching AgentX PDUs\", clarifying that the master agent can use its implementation-specific default timeout value when the timeout value registered by the subagent is impractical.",
      "zh-CHS": "- 第7.2.1节“Dispatching AgentX PDU”第4（c）条中的修改文本，阐明了当子代理注册的超时值不可行时，主代理可以使用其特定于实现的默认超时值。"
    },
    {
      "indent": 3,
      "text": "- Added text in section 7.2.2, \"Subagent Processing\" describing common processing.",
      "zh-CHS": "- 在第7.2.2节“子代理处理”中添加了描述常见处理的文本。"
    },
    {
      "indent": 3,
      "text": "- Added an example to the text in section 7.2.5.3, \"Processing of Responses to agentx-GetNext-PDU and agentx-GetBulk-PDU\", and, removed the definition of \"contains\" from this section.",
      "zh-CHS": "- 在第7.2.5.3节“对agentx GetNext PDU和agentx GetBulk PDU响应的处理”中添加了一个示例，并从本节中删除了“包含”的定义。"
    },
    {
      "indent": 3,
      "text": "- Modified text in step (1) of section 7.2.5.5, \"Processing of Responses to agentx-CommitSet-PDUs\", eliminating directive for master agent to ignore additional responses to agentx-CommitSet-PDUs after the first error response.",
      "zh-CHS": "- 修改了第7.2.5.5节“处理对agentx CommitSet PDU的响应”步骤（1）中的文本，删除了主代理在第一次错误响应后忽略对agentx CommitSet PDU的其他响应的指令。"
    },
    {
      "indent": 3,
      "text": "- Modified text in section 7.2.5.6, \"Processing of Responses to agentx-UndoSet-PDUs\", cleaning up commit/undo elements of procedure per feedback received on the AgentX email list.",
      "zh-CHS": "- 修改了第7.2.5.6节“处理对agentx UndoSet PDU的响应”中的文本，根据收到的agentx电子邮件列表上的反馈，清理程序的提交/撤销元素。"
    },
    {
      "indent": 3,
      "text": "- Modified the text in section 8.1.2, \"Operation\" to explicitly prohibit interleaved sends, and, added a caution about exchanging AgentX messages via TCP.",
      "zh-CHS": "- 修改了第8.1.2节“操作”中的文本，以明确禁止交错发送，并添加了关于通过TCP交换AgentX消息的警告。"
    },
    {
      "indent": 3,
      "text": "- Modified text to be more explicit that the OID in the agentx-Allocate-PDU is an OBJECT-TYPE and does not contain any instance sub-identifiers.",
      "zh-CHS": "- 修改文本，使其更加明确，agentx Allocate PDU中的OID是对象类型，不包含任何实例子标识符。"
    },
    {
      "indent": 3,
      "text": "- Replaced the term \"subagent\" with the term \"session\" in many places throughout the text.",
      "zh-CHS": "- 在全文的许多地方，将术语“子代理”替换为术语“会话”。"
    },
    {
      "indent": 3,
      "text": "- Modified the text relative to master agent processing of the agentx-TestSet-PDU, agentx-CommitSet-PDU, and the agentx-UndoSet-PDU to explicitly state that only \"involved\" sessions receive an agentx-CommitSet-PDU, and possibly, an agentx-UndoSet-PDU.",
      "zh-CHS": "- 修改了与agentx测试集PDU、agentx CommitSet PDU和agentx UndoSet PDU的主代理处理相关的文本，以明确说明只有“涉及的”会话才会接收agentx CommitSet PDU，可能还会接收agentx UndoSet PDU。"
    },
    {
      "indent": 3,
      "text": "- Modified the text to use the term \"transaction\", instead of \"packet\" (and others), where appropriate. This helps distinguish the overall transaction from a particular sequence of packets or PDUs.",
      "zh-CHS": "- 修改文本，在适当情况下使用术语“交易”，而不是“数据包”（和其他）。这有助于区分整个事务与特定的数据包序列或PDU。"
    },
    {
      "indent": 3,
      "text": "- Modified the text to explicitly state that a session is not required to support concurrent sets.",
      "zh-CHS": "- 修改文本以明确声明不需要会话来支持并发集。"
    },
    {
      "indent": 3,
      "text": "- Added section 13, \"Notices\".",
      "zh-CHS": "- 增加第13节“通知”。"
    },
    {
      "indent": 3,
      "text": "- Added text to section 1, Introduction, relative to BCP 14 key words.",
      "zh-CHS": "- 在第1节“引言”中添加了与BCP 14关键词相关的文本。"
    },
    {
      "indent": 3,
      "text": "- Modified text to section 9, Security Considerations, to include use of BCP 14 key words.",
      "zh-CHS": "- 修改第9节“安全注意事项”的文本，包括使用BCP 14关键字。"
    },
    {
      "indent": 3,
      "text": "- Modified text to section 9, Security Considerations, to include IPSEC as a suggested Transport Layer Security.",
      "zh-CHS": "- 将文本修改为第9节“安全注意事项”，将IPSEC作为建议的传输层安全。"
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "zh-CHS": "完整版权声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2000). All Rights Reserved.",
      "zh-CHS": "版权所有（C）互联网协会（2000年）。版权所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "zh-CHS": "本文件及其译本可复制并提供给他人，对其进行评论或解释或协助其实施的衍生作品可全部或部分编制、复制、出版和分发，不受任何限制，前提是上述版权声明和本段包含在所有此类副本和衍生作品中。但是，不得以任何方式修改本文件本身，例如删除版权通知或对互联网协会或其他互联网组织的引用，除非出于制定互联网标准的需要，在这种情况下，必须遵循互联网标准过程中定义的版权程序，或根据需要将其翻译成英语以外的其他语言。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "zh-CHS": "上述授予的有限许可是永久性的，互联网协会或其继承人或受让人不会撤销。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "zh-CHS": "本文件和其中包含的信息是按“原样”提供的，互联网协会和互联网工程任务组否认所有明示或暗示的保证，包括但不限于任何保证，即使用本文中的信息不会侵犯任何权利，或对适销性或特定用途适用性的任何默示保证。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "zh-CHS": "确认"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "zh-CHS": "RFC编辑功能的资金目前由互联网协会提供。"
    }
  ]
}