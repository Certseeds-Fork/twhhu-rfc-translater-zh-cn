{
  "title": {
    "text": "RFC 3032:  MPLS Label Stack Encoding ",
    "zh-CHS": "RFC 3032"
  },
  "number": 3032,
  "created_at": "2021-10-15 23:52:23.288195+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                           E. Rosen\nRequest for Comments: 3032                                     D. Tappan\nCategory: Standards Track                                    G. Fedorkow\n                                                     Cisco Systems, Inc.\n                                                              Y. Rekhter\n                                                        Juniper Networks\n                                                            D. Farinacci\n                                                                   T. Li\n                                                  Procket Networks, Inc.\n                                                                A. Conta\n                                                  TranSwitch Corporation\n                                                            January 2001",
      "raw": true,
      "zh-CHS": "translate error, please retry"
    },
    {
      "indent": 23,
      "text": "MPLS Label Stack Encoding",
      "zh-CHS": "标签栈编码"
    },
    {
      "indent": 0,
      "text": "Status of this Memo",
      "zh-CHS": "本备忘录的状况"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "zh-CHS": "本文件规定了互联网社区的互联网标准跟踪协议，并要求进行讨论和提出改进建议。有关本协议的标准化状态和状态，请参考当前版本的“互联网官方协议标准”（STD 1）。本备忘录的分发不受限制。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2001). All Rights Reserved.",
      "zh-CHS": "版权所有（C）互联网协会（2001年）。版权所有。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "\"Multi-Protocol Label Switching (MPLS)\" [1] requires a set of procedures for augmenting network layer packets with \"label stacks\", thereby turning them into \"labeled packets\". Routers which support MPLS are known as \"Label Switching Routers\", or \"LSRs\". In order to transmit a labeled packet on a particular data link, an LSR must support an encoding technique which, given a label stack and a network layer packet, produces a labeled packet. This document specifies the encoding to be used by an LSR in order to transmit labeled packets on Point-to-Point Protocol (PPP) data links, on LAN data links, and possibly on other data links as well. On some data links, the label at the top of the stack may be encoded in a different manner, but the techniques described here MUST be used to encode the remainder of the label stack. This document also specifies rules and procedures for processing the various fields of the label stack encoding.",
      "zh-CHS": "“多协议标签交换（MPLS）”[1]需要一套程序，用“标签堆栈”扩充网络层数据包，从而将它们转换为“标签数据包”。支持MPLS的路由器称为“标签交换路由器”或“LSR”。为了在特定数据链路上传输带标签的数据包，LSR必须支持一种编码技术，该技术在给定标签堆栈和网络层数据包的情况下，产生带标签的数据包。本文件规定了LSR使用的编码，以便在点对点协议（PPP）数据链路、LAN数据链路以及可能的其他数据链路上传输带标签的数据包。在某些数据链路上，堆栈顶部的标签可能以不同的方式进行编码，但必须使用此处描述的技术对标签堆栈的其余部分进行编码。本文档还规定了处理标签堆栈编码各个字段的规则和过程。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": " 1      Introduction  ...........................................  2\n 1.1    Specification of Requirements  ..........................  3\n 2      The Label Stack  ........................................  3\n 2.1    Encoding the Label Stack  ...............................  3\n 2.2    Determining the Network Layer Protocol  .................  5\n 2.3    Generating ICMP Messages for Labeled IP Packets  ........  6\n 2.3.1  Tunneling through a Transit Routing Domain  .............  7\n 2.3.2  Tunneling Private Addresses through a Public Backbone  ..  7\n 2.4    Processing the Time to Live Field  ......................  8\n 2.4.1  Definitions  ............................................  8\n 2.4.2  Protocol-independent rules  .............................  8\n 2.4.3  IP-dependent rules  .....................................  9\n 2.4.4  Translating Between Different Encapsulations  ...........  9\n 3      Fragmentation and Path MTU Discovery  ................... 10\n 3.1    Terminology  ............................................ 11\n 3.2    Maximum Initially Labeled IP Datagram Size  ............. 12\n 3.3    When are Labeled IP Datagrams Too Big?  ................. 13\n 3.4    Processing Labeled IPv4 Datagrams which are Too Big  .... 13\n 3.5    Processing Labeled IPv6 Datagrams which are Too Big  .... 14\n 3.6    Implications with respect to Path MTU Discovery  ........ 15\n 4      Transporting Labeled Packets over PPP  .................. 16\n 4.1    Introduction  ........................................... 16\n 4.2    A PPP Network Control Protocol for MPLS  ................ 17\n 4.3    Sending Labeled Packets  ................................ 18\n 4.4    Label Switching Control Protocol Configuration Options  . 18\n 5      Transporting Labeled Packets over LAN Media  ............ 18\n 6      IANA Considerations  .................................... 19\n 7      Security Considerations  ................................ 19\n 8      Intellectual Property  .................................. 19\n 9      Authors' Addresses  ..................................... 20\n10      References  ............................................. 22\n11      Full Copyright Statement  ............................... 23",
      "raw": true,
      "toc": true,
      "zh-CHS": "translate error, please retry"
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "\"Multi-Protocol Label Switching (MPLS)\" [1] requires a set of procedures for augmenting network layer packets with \"label stacks\", thereby turning them into \"labeled packets\". Routers which support MPLS are known as \"Label Switching Routers\", or \"LSRs\". In order to transmit a labeled packet on a particular data link, an LSR must support an encoding technique which, given a label stack and a network layer packet, produces a labeled packet.",
      "zh-CHS": "“多协议标签交换（MPLS）”[1]需要一套程序，用“标签堆栈”扩充网络层数据包，从而将它们转换为“标签数据包”。支持MPLS的路由器称为“标签交换路由器”或“LSR”。为了在特定数据链路上传输带标签的数据包，LSR必须支持一种编码技术，该技术在给定标签堆栈和网络层数据包的情况下，产生带标签的数据包。"
    },
    {
      "indent": 3,
      "text": "This document specifies the encoding to be used by an LSR in order to transmit labeled packets on PPP data links and on LAN data links. The specified encoding may also be useful for other data links as well.",
      "zh-CHS": "本文件规定了LSR使用的编码，以便在PPP数据链路和LAN数据链路上传输带标签的数据包。指定的编码也可能对其他数据链路有用。"
    },
    {
      "indent": 3,
      "text": "This document also specifies rules and procedures for processing the various fields of the label stack encoding. Since MPLS is independent of any particular network layer protocol, the majority of such procedures are also protocol-independent. A few, however, do differ for different protocols. In this document, we specify the protocol-independent procedures, and we specify the protocol-dependent procedures for IPv4 and IPv6.",
      "zh-CHS": "本文档还规定了处理标签堆栈编码各个字段的规则和过程。由于MPLS独立于任何特定的网络层协议，因此大多数此类过程也独立于协议。然而，对于不同的协议，有一些协议是不同的。在本文档中，我们指定了与协议无关的过程，并为IPv4和IPv6指定了与协议相关的过程。"
    },
    {
      "indent": 3,
      "text": "LSRs that are implemented on certain switching devices (such as ATM switches) may use different encoding techniques for encoding the top one or two entries of the label stack. When the label stack has additional entries, however, the encoding technique described in this document MUST be used for the additional label stack entries.",
      "zh-CHS": "在某些交换设备（例如ATM交换机）上实现的LSR可以使用不同的编码技术来编码标签堆栈的顶部一个或两个条目。但是，当标签堆栈具有附加项时，必须将本文档中描述的编码技术用于附加标签堆栈项。"
    },
    {
      "indent": 0,
      "text": "1.1. Specification of Requirements",
      "section_title": true,
      "zh-CHS": "1.1. 需求说明"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [2].",
      "zh-CHS": "本文件中的关键词“必须”、“不得”、“要求”、“应”、“不应”、“应”、“不应”、“建议”、“可”和“可选”应按照RFC 2119[2]中所述进行解释。"
    },
    {
      "indent": 0,
      "text": "2. The Label Stack",
      "section_title": true,
      "zh-CHS": "2. 标签堆栈"
    },
    {
      "indent": 0,
      "text": "2.1. Encoding the Label Stack",
      "section_title": true,
      "zh-CHS": "2.1. 对标签堆栈进行编码"
    },
    {
      "indent": 3,
      "text": "The label stack is represented as a sequence of \"label stack entries\". Each label stack entry is represented by 4 octets. This is shown in Figure 1.",
      "zh-CHS": "标签堆栈表示为一系列“标签堆栈条目”。每个标签堆栈条目由4个八位字节表示。这如图1所示。"
    },
    {
      "indent": 0,
      "text": " 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ Label\n|                Label                  | Exp |S|       TTL     | Stack\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ Entry",
      "raw": true,
      "zh-CHS": "translate error, please retry"
    },
    {
      "indent": 20,
      "text": "Label: Label Value, 20 bits Exp: Experimental Use, 3 bits S: Bottom of Stack, 1 bit TTL: Time to Live, 8 bits",
      "zh-CHS": "标签：标签值，20位Exp：实验使用，3位S：堆栈底部，1位TTL：生存时间，8位"
    },
    {
      "indent": 30,
      "text": "Figure 1",
      "zh-CHS": "图1"
    },
    {
      "indent": 3,
      "text": "The label stack entries appear AFTER the data link layer headers, but BEFORE any network layer headers. The top of the label stack appears earliest in the packet, and the bottom appears latest. The network layer packet immediately follows the label stack entry which has the S bit set.",
      "zh-CHS": "标签堆栈条目出现在数据链路层标题之后，但出现在任何网络层标题之前。标签堆栈的顶部在数据包中最早出现，底部最晚出现。网络层数据包紧跟着设置了S位的标签堆栈条目。"
    },
    {
      "indent": 3,
      "text": "Each label stack entry is broken down into the following fields:",
      "zh-CHS": "每个标签堆栈条目被分解为以下字段："
    },
    {
      "indent": 6,
      "text": "1. Bottom of Stack (S)",
      "zh-CHS": "1. 堆栈底部（S）"
    },
    {
      "indent": 9,
      "text": "This bit is set to one for the last entry in the label stack (i.e., for the bottom of the stack), and zero for all other label stack entries.",
      "zh-CHS": "对于标签堆栈中的最后一个条目（即，对于堆栈的底部），该位设置为1，对于所有其他标签堆栈条目，该位设置为0。"
    },
    {
      "indent": 6,
      "text": "2. Time to Live (TTL)",
      "zh-CHS": "2. 生存时间（TTL）"
    },
    {
      "indent": 9,
      "text": "This eight-bit field is used to encode a time-to-live value. The processing of this field is described in section 2.4.",
      "zh-CHS": "此八位字段用于对生存时间值进行编码。第2.4节描述了该字段的处理。"
    },
    {
      "indent": 6,
      "text": "3. Experimental Use",
      "zh-CHS": "3. 实验用途"
    },
    {
      "indent": 9,
      "text": "This three-bit field is reserved for experimental use.",
      "zh-CHS": "此三位字段保留供实验使用。"
    },
    {
      "indent": 6,
      "text": "4. Label Value",
      "zh-CHS": "4. 标签值"
    },
    {
      "indent": 9,
      "text": "This 20-bit field carries the actual value of the Label.",
      "zh-CHS": "此20位字段携带标签的实际值。"
    },
    {
      "indent": 9,
      "text": "When a labeled packet is received, the label value at the top of the stack is looked up. As a result of a successful lookup one learns:",
      "zh-CHS": "当接收到带标签的数据包时，将查找堆栈顶部的标签值。通过成功查找，您可以了解："
    },
    {
      "indent": 9,
      "text": "a) the next hop to which the packet is to be forwarded;",
      "zh-CHS": "a) 分组要转发到的下一跳；"
    },
    {
      "indent": 9,
      "text": "b) the operation to be performed on the label stack before forwarding; this operation may be to replace the top label stack entry with another, or to pop an entry off the label stack, or to replace the top label stack entry and then to push one or more additional entries on the label stack.",
      "zh-CHS": "b) 转发前在标签堆栈上执行的操作；此操作可能是将顶部标签堆栈条目替换为另一个条目，或从标签堆栈弹出一个条目，或替换顶部标签堆栈条目，然后在标签堆栈上推送一个或多个附加条目。"
    },
    {
      "indent": 9,
      "text": "In addition to learning the next hop and the label stack operation, one may also learn the outgoing data link encapsulation, and possibly other information which is needed in order to properly forward the packet.",
      "zh-CHS": "除了学习下一跳和标签堆栈操作之外，还可以学习传出数据链路封装，以及可能需要的其他信息，以便正确地转发分组。"
    },
    {
      "indent": 9,
      "text": "There are several reserved label values:",
      "zh-CHS": "有几个保留标签值："
    },
    {
      "indent": 11,
      "text": "i. A value of 0 represents the \"IPv4 Explicit NULL Label\". This label value is only legal at the bottom of the label stack. It indicates that the label stack must be popped, and the forwarding of the packet must then be based on the IPv4 header.",
      "zh-CHS": "i. 值0表示“IPv4显式空标签”。此标签值仅在标签堆栈底部合法。它表示必须弹出标签堆栈，然后数据包的转发必须基于IPv4报头。"
    },
    {
      "indent": 10,
      "text": "ii. A value of 1 represents the \"Router Alert Label\". This label value is legal anywhere in the label stack except at the bottom. When a received packet contains this label value at the top of the label stack, it is delivered to a local software module for processing. The actual forwarding of the packet is determined by the label beneath it in the stack. However, if the packet is forwarded further, the Router Alert Label should be pushed back onto the label stack before forwarding. The use of this label is analogous to the use of the \"Router Alert Option\" in IP packets [5]. Since this label cannot occur at the bottom of the stack, it is not associated with a particular network layer protocol.",
      "zh-CHS": "二,。值1表示“路由器警报标签”。此标签值在标签堆栈中除底部以外的任何位置都是合法的。当接收到的数据包在标签堆栈顶部包含此标签值时，它将被传送到本地软件模块进行处理。数据包的实际转发由堆栈中数据包下面的标签决定。但是，如果数据包被进一步转发，则在转发之前，路由器警报标签应该被推回到标签堆栈上。此标签的使用类似于IP数据包中“路由器警报选项”的使用[5]。由于此标签不能出现在堆栈的底部，因此它与特定的网络层协议没有关联。"
    },
    {
      "indent": 9,
      "text": "iii. A value of 2 represents the \"IPv6 Explicit NULL Label\". This label value is only legal at the bottom of the label stack. It indicates that the label stack must be popped, and the forwarding of the packet must then be based on the IPv6 header.",
      "zh-CHS": "iii.值2表示“IPv6显式空标签”。此标签值仅在标签堆栈底部合法。它表示必须弹出标签堆栈，然后数据包的转发必须基于IPv6报头。"
    },
    {
      "indent": 10,
      "text": "iv. A value of 3 represents the \"Implicit NULL Label\". This is a label that an LSR may assign and distribute, but which never actually appears in the encapsulation. When an LSR would otherwise replace the label at the top of the stack with a new label, but the new label is \"Implicit NULL\", the LSR will pop the stack instead of doing the replacement. Although this value may never appear in the encapsulation, it needs to be specified in the Label Distribution Protocol, so a value is reserved.",
      "zh-CHS": "iv.值3表示“隐式空标签”。这是一个LSR可以分配和分发的标签，但它实际上从未出现在封装中。如果LSR以其他方式使用新标签替换堆栈顶部的标签，但新标签为“隐式NULL”，则LSR将弹出堆栈，而不是进行替换。尽管此值可能永远不会出现在封装中，但需要在标签分发协议中指定，因此保留一个值。"
    },
    {
      "indent": 11,
      "text": "v. Values 4-15 are reserved.",
      "zh-CHS": "v. 保留值4-15。"
    },
    {
      "indent": 0,
      "text": "2.2. Determining the Network Layer Protocol",
      "section_title": true,
      "zh-CHS": "2.2. 确定网络层协议"
    },
    {
      "indent": 3,
      "text": "When the last label is popped from a packet's label stack (resulting in the stack being emptied), further processing of the packet is based on the packet's network layer header. The LSR which pops the last label off the stack must therefore be able to identify the packet's network layer protocol. However, the label stack does not contain any field which explicitly identifies the network layer",
      "zh-CHS": "当最后一个标签从数据包的标签堆栈弹出时（导致堆栈清空），数据包的进一步处理基于数据包的网络层报头。因此，从堆栈中弹出最后一个标签的LSR必须能够识别数据包的网络层协议。但是，标签堆栈不包含任何明确标识网络层的字段"
    },
    {
      "indent": 3,
      "text": "protocol. This means that the identity of the network layer protocol must be inferable from the value of the label which is popped from the bottom of the stack, possibly along with the contents of the network layer header itself.",
      "zh-CHS": "协议这意味着网络层协议的标识必须可以从堆栈底部弹出的标签值推断出来，可能还有网络层头本身的内容。"
    },
    {
      "indent": 3,
      "text": "Therefore, when the first label is pushed onto a network layer packet, either the label must be one which is used ONLY for packets of a particular network layer, or the label must be one which is used ONLY for a specified set of network layer protocols, where packets of the specified network layers can be distinguished by inspection of the network layer header. Furthermore, whenever that label is replaced by another label value during a packet's transit, the new value must also be one which meets the same criteria. If these conditions are not met, the LSR which pops the last label off a packet will not be able to identify the packet's network layer protocol.",
      "zh-CHS": "因此，当第一标签被推到网络层分组上时，标签必须是仅用于特定网络层分组的标签，或者标签必须是仅用于指定网络层协议集的标签，其中，可以通过检查网络层报头来区分指定网络层的分组。此外，每当该标签在数据包传输期间被另一标签值替换时，新值也必须是满足相同标准的值。如果不满足这些条件，则从数据包上弹出最后一个标签的LSR将无法识别数据包的网络层协议。"
    },
    {
      "indent": 3,
      "text": "Adherence to these conditions does not necessarily enable intermediate nodes to identify a packet's network layer protocol. Under ordinary conditions, this is not necessary, but there are error conditions under which it is desirable. For instance, if an intermediate LSR determines that a labeled packet is undeliverable, it may be desirable for that LSR to generate error messages which are specific to the packet's network layer. The only means the intermediate LSR has for identifying the network layer is inspection of the top label and the network layer header. So if intermediate nodes are to be able to generate protocol-specific error messages for labeled packets, all labels in the stack must meet the criteria specified above for labels which appear at the bottom of the stack.",
      "zh-CHS": "遵守这些条件并不一定能使中间节点识别数据包的网络层协议。在一般情况下，这是不必要的，但在某些错误条件下，这是可取的。例如，如果中间LSR确定标记的分组不可递送，则该LSR可能希望生成特定于分组的网络层的错误消息。中间LSR用于识别网络层的唯一方法是检查顶部标签和网络层标头。因此，如果中间节点要能够为标记的数据包生成特定于协议的错误消息，堆栈中的所有标签必须满足上面为出现在堆栈底部的标签指定的标准。"
    },
    {
      "indent": 3,
      "text": "If a packet cannot be forwarded for some reason (e.g., it exceeds the data link MTU), and either its network layer protocol cannot be identified, or there are no specified protocol-dependent rules for handling the error condition, then the packet MUST be silently discarded.",
      "zh-CHS": "如果数据包由于某种原因（例如，它超出了数据链路MTU）而无法转发，并且其网络层协议无法识别，或者没有指定的协议相关规则来处理错误情况，则必须以静默方式丢弃该数据包。"
    },
    {
      "indent": 0,
      "text": "2.3. Generating ICMP Messages for Labeled IP Packets",
      "section_title": true,
      "zh-CHS": "2.3. 为标记的IP数据包生成ICMP消息"
    },
    {
      "indent": 3,
      "text": "Section 2.4 and section 3 discuss situations in which it is desirable to generate ICMP messages for labeled IP packets. In order for a particular LSR to be able to generate an ICMP packet and have that packet sent to the source of the IP packet, two conditions must hold:",
      "zh-CHS": "第2.4节和第3节讨论了需要为标记的IP数据包生成ICMP消息的情况。为了使特定LSR能够生成ICMP数据包并将该数据包发送到IP数据包的源，必须满足两个条件："
    },
    {
      "indent": 6,
      "text": "1. it must be possible for that LSR to determine that a particular labeled packet is an IP packet;",
      "zh-CHS": "1. LSR必须能够确定特定标记的分组是IP分组；"
    },
    {
      "indent": 6,
      "text": "2. it must be possible for that LSR to route to the packet's IP source address.",
      "zh-CHS": "2. LSR必须能够路由到数据包的IP源地址。"
    },
    {
      "indent": 3,
      "text": "Condition 1 is discussed in section 2.2. The following two subsections discuss condition 2. However, there will be some cases in which condition 2 does not hold at all, and in these cases it will not be possible to generate the ICMP message.",
      "zh-CHS": "第2.2节讨论了条件1。以下两小节讨论条件2。但是，在某些情况下，条件2根本不成立，在这些情况下，将无法生成ICMP消息。"
    },
    {
      "indent": 0,
      "text": "2.3.1. Tunneling through a Transit Routing Domain",
      "section_title": true,
      "zh-CHS": "2.3.1. 通过传输路由域的隧道"
    },
    {
      "indent": 3,
      "text": "Suppose one is using MPLS to \"tunnel\" through a transit routing domain, where the external routes are not leaked into the domain's interior routers. For example, the interior routers may be running OSPF, and may only know how to reach destinations within that OSPF domain. The domain might contain several Autonomous System Border Routers (ASBRs), which talk BGP to each other. However, in this example the routes from BGP are not distributed into OSPF, and the LSRs which are not ASBRs do not run BGP.",
      "zh-CHS": "假设其中一个使用MPLS通过传输路由域进行“隧道”，其中外部路由不会泄漏到域的内部路由器中。例如，内部路由器可能正在运行OSPF，并且可能只知道如何到达该OSPF域内的目的地。该域可能包含多个自治系统边界路由器（ASBR），这些路由器可以相互通信BGP。然而，在本例中，来自BGP的路由不分布到OSPF中，并且不是ASBR的LSR不运行BGP。"
    },
    {
      "indent": 3,
      "text": "In this example, only an ASBR will know how to route to the source of some arbitrary packet. If an interior router needs to send an ICMP message to the source of an IP packet, it will not know how to route the ICMP message.",
      "zh-CHS": "在本例中，只有ASBR知道如何路由到某个任意数据包的源。如果内部路由器需要向IP数据包的源发送ICMP消息，它将不知道如何路由ICMP消息。"
    },
    {
      "indent": 3,
      "text": "One solution is to have one or more of the ASBRs inject \"default\" into the IGP. (N.B.: this does NOT require that there be a \"default\" carried by BGP.) This would then ensure that any unlabeled packet which must leave the domain (such as an ICMP packet) gets sent to a router which has full routing information. The routers with full routing information will label the packets before sending them back through the transit domain, so the use of default routing within the transit domain does not cause any loops.",
      "zh-CHS": "一种解决方案是让一个或多个ASBR将“默认”注入IGP。（注意：这并不要求BGP携带“默认值”）这将确保任何必须离开域的未标记数据包（如ICMP数据包）被发送到具有完整路由信息的路由器。具有完整路由信息的路由器将在通过传输域将数据包发送回之前标记数据包，因此在传输域内使用默认路由不会导致任何循环。"
    },
    {
      "indent": 3,
      "text": "This solution only works for packets which have globally unique addresses, and for networks in which all the ASBRs have complete routing information. The next subsection describes a solution which works when these conditions do not hold.",
      "zh-CHS": "此解决方案仅适用于具有全局唯一地址的数据包，以及所有ASBR具有完整路由信息的网络。下一小节描述了当这些条件不成立时有效的解决方案。"
    },
    {
      "indent": 0,
      "text": "2.3.2. Tunneling Private Addresses through a Public Backbone",
      "section_title": true,
      "zh-CHS": "2.3.2. 通过公共主干网隧道传输私有地址"
    },
    {
      "indent": 3,
      "text": "In some cases where MPLS is used to tunnel through a routing domain, it may not be possible to route to the source address of a fragmented packet at all. This would be the case, for example, if the IP addresses carried in the packet were private (i.e., not globally unique) addresses, and MPLS were being used to tunnel those packets through a public backbone. Default routing to an ASBR will not work in this environment.",
      "zh-CHS": "在使用MPLS通过路由域进行隧道的某些情况下，可能根本不可能路由到碎片数据包的源地址。例如，如果包中携带的IP地址是私有（即，不是全局唯一的）地址，并且MPLS正被用于通过公共主干对这些包进行隧道传输，则情况就是这样。到ASBR的默认路由在此环境中不起作用。"
    },
    {
      "indent": 3,
      "text": "In this environment, in order to send an ICMP message to the source of a packet, one can copy the label stack from the original packet to the ICMP message, and then label switch the ICMP message. This will",
      "zh-CHS": "在此环境中，为了向数据包源发送ICMP消息，可以将标签堆栈从原始数据包复制到ICMP消息，然后对ICMP消息进行标签切换。这将"
    },
    {
      "indent": 3,
      "text": "cause the message to proceed in the direction of the original packet's destination, rather than its source. Unless the message is label switched all the way to the destination host, it will end up, unlabeled, in a router which does know how to route to the source of original packet, at which point the message will be sent in the proper direction.",
      "zh-CHS": "使消息沿着原始数据包的目的地而不是其源的方向进行。除非消息一直被标签交换到目的主机，否则它将在一个不知道如何路由到原始数据包源的路由器中结束，没有标签，此时消息将以正确的方向发送。"
    },
    {
      "indent": 3,
      "text": "This technique can be very useful if the ICMP message is a \"Time Exceeded\" message or a \"Destination Unreachable because fragmentation needed and DF set\" message.",
      "zh-CHS": "如果ICMP消息是“超时”消息或“由于需要碎片和DF set而无法到达目的地”消息，则此技术非常有用。"
    },
    {
      "indent": 3,
      "text": "When copying the label stack from the original packet to the ICMP message, the label values must be copied exactly, but the TTL values in the label stack should be set to the TTL value that is placed in the IP header of the ICMP message. This TTL value should be long enough to allow the circuitous route that the ICMP message will need to follow.",
      "zh-CHS": "将标签堆栈从原始数据包复制到ICMP消息时，必须准确复制标签值，但标签堆栈中的TTL值应设置为放置在ICMP消息IP头中的TTL值。此TTL值应足够长，以允许ICMP消息需要遵循的迂回路线。"
    },
    {
      "indent": 3,
      "text": "Note that if a packet's TTL expiration is due to the presence of a routing loop, then if this technique is used, the ICMP message may loop as well. Since an ICMP message is never sent as a result of receiving an ICMP message, and since many implementations throttle the rate at which ICMP messages can be generated, this is not expected to pose a problem.",
      "zh-CHS": "请注意，如果数据包的TTL过期是由于存在路由循环，那么如果使用此技术，ICMP消息也可能会循环。由于接收ICMP消息时不会发送ICMP消息，而且由于许多实现会限制ICMP消息的生成速率，因此预计这不会造成问题。"
    },
    {
      "indent": 0,
      "text": "2.4. Processing the Time to Live Field",
      "section_title": true,
      "zh-CHS": "2.4. 处理生存时间字段"
    },
    {
      "indent": 0,
      "text": "2.4.1. Definitions",
      "section_title": true,
      "zh-CHS": "2.4.1. 定义"
    },
    {
      "indent": 3,
      "text": "The \"incoming TTL\" of a labeled packet is defined to be the value of the TTL field of the top label stack entry when the packet is received.",
      "zh-CHS": "标签数据包的“传入TTL”定义为接收数据包时顶部标签堆栈条目的TTL字段的值。"
    },
    {
      "indent": 3,
      "text": "The \"outgoing TTL\" of a labeled packet is defined to be the larger of:",
      "zh-CHS": "标记数据包的“传出TTL”定义为以下两者中的较大值："
    },
    {
      "indent": 6,
      "text": "a) one less than the incoming TTL, b) zero.",
      "zh-CHS": "a) 比输入TTL小一个，b）零。"
    },
    {
      "indent": 0,
      "text": "2.4.2. Protocol-independent rules",
      "section_title": true,
      "zh-CHS": "2.4.2. 协议无关规则"
    },
    {
      "indent": 3,
      "text": "If the outgoing TTL of a labeled packet is 0, then the labeled packet MUST NOT be further forwarded; nor may the label stack be stripped off and the packet forwarded as an unlabeled packet. The packet's lifetime in the network is considered to have expired.",
      "zh-CHS": "如果标记数据包的传出TTL为0，则标记数据包不得进一步转发；也不能剥离标签堆栈，并将数据包作为未标记数据包转发。该数据包在网络中的生存期被视为已过期。"
    },
    {
      "indent": 3,
      "text": "Depending on the label value in the label stack entry, the packet MAY be simply discarded, or it may be passed to the appropriate \"ordinary\" network layer for error processing (e.g., for the generation of an ICMP error message, see section 2.3).",
      "zh-CHS": "根据标签堆栈条目中的标签值，可以简单地丢弃数据包，或者将其传递到适当的“普通”网络层进行错误处理（例如，对于ICMP错误消息的生成，请参见第2.3节）。"
    },
    {
      "indent": 3,
      "text": "When a labeled packet is forwarded, the TTL field of the label stack entry at the top of the label stack MUST be set to the outgoing TTL value.",
      "zh-CHS": "转发带标签的数据包时，标签堆栈顶部标签堆栈项的TTL字段必须设置为传出TTL值。"
    },
    {
      "indent": 3,
      "text": "Note that the outgoing TTL value is a function solely of the incoming TTL value, and is independent of whether any labels are pushed or popped before forwarding. There is no significance to the value of the TTL field in any label stack entry which is not at the top of the stack.",
      "zh-CHS": "请注意，传出TTL值仅是传入TTL值的函数，与转发前是否推送或弹出任何标签无关。在任何不在堆栈顶部的标签堆栈条目中，TTL字段的值没有意义。"
    },
    {
      "indent": 0,
      "text": "2.4.3. IP-dependent rules",
      "section_title": true,
      "zh-CHS": "2.4.3. IP相关规则"
    },
    {
      "indent": 3,
      "text": "We define the \"IP TTL\" field to be the value of the IPv4 TTL field, or the value of the IPv6 Hop Limit field, whichever is applicable.",
      "zh-CHS": "我们将“IP TTL”字段定义为IPv4 TTL字段的值，或IPv6跃点限制字段的值，以适用的为准。"
    },
    {
      "indent": 3,
      "text": "When an IP packet is first labeled, the TTL field of the label stack entry MUST BE set to the value of the IP TTL field. (If the IP TTL field needs to be decremented, as part of the IP processing, it is assumed that this has already been done.)",
      "zh-CHS": "首次标记IP数据包时，标签堆栈项的TTL字段必须设置为IP TTL字段的值。（如果作为IP处理的一部分，需要减少IP TTL字段，则假定已完成此操作。）"
    },
    {
      "indent": 3,
      "text": "When a label is popped, and the resulting label stack is empty, then the value of the IP TTL field SHOULD BE replaced with the outgoing TTL value, as defined above. In IPv4 this also requires modification of the IP header checksum.",
      "zh-CHS": "当弹出标签时，结果标签堆栈为空，则IP TTL字段的值应替换为传出TTL值，如上所述。在IPv4中，这还需要修改IP报头校验和。"
    },
    {
      "indent": 3,
      "text": "It is recognized that there may be situations where a network administration prefers to decrement the IPv4 TTL by one as it traverses an MPLS domain, instead of decrementing the IPv4 TTL by the number of LSP hops within the domain.",
      "zh-CHS": "可以认识到，可能存在这样的情况，即网络管理在IPv4 TTL穿越MPLS域时倾向于将其递减1，而不是将IPv4 TTL递减域内的LSP跳数。"
    },
    {
      "indent": 0,
      "text": "2.4.4. Translating Between Different Encapsulations",
      "section_title": true,
      "zh-CHS": "2.4.4. 不同封装之间的转换"
    },
    {
      "indent": 3,
      "text": "Sometimes an LSR may receive a labeled packet over, e.g., a label switching controlled ATM (LC-ATM) interface [9], and may need to send it out over a PPP or LAN link. Then the incoming packet will not be received using the encapsulation specified in this document, but the outgoing packet will be sent using the encapsulation specified in this document.",
      "zh-CHS": "有时，LSR可能通过标签交换控制的ATM（LC-ATM）接口[9]接收标签数据包，并且可能需要通过PPP或LAN链路将其发送出去。然后，将不会使用本文档中指定的封装接收传入数据包，而是使用本文档中指定的封装发送传出数据包。"
    },
    {
      "indent": 3,
      "text": "In this case, the value of the \"incoming TTL\" is determined by the procedures used for carrying labeled packets on, e.g., LC-ATM interfaces. TTL processing then proceeds as described above.",
      "zh-CHS": "在这种情况下，“传入TTL”的值由用于在例如LC-ATM接口上承载标记分组的过程确定。然后，TTL处理如上所述进行。"
    },
    {
      "indent": 3,
      "text": "Sometimes an LSR may receive a labeled packet over a PPP or a LAN link, and may need to send it out, say, an LC-ATM interface. Then the incoming packet will be received using the encapsulation specified in this document, but the outgoing packet will not be sent using the encapsulation specified in this document. In this case, the procedure for carrying the value of the \"outgoing TTL\" is determined by the procedures used for carrying labeled packets on, e.g., LC-ATM interfaces.",
      "zh-CHS": "有时，LSR可能通过PPP或LAN链路接收带标签的数据包，并且可能需要将其发送出去，例如，LC-ATM接口。然后，将使用本文档中指定的封装接收传入数据包，但不会使用本文档中指定的封装发送传出数据包。在这种情况下，承载“传出TTL”值的过程由用于在例如LC-ATM接口上承载标记分组的过程确定。"
    },
    {
      "indent": 0,
      "text": "3. Fragmentation and Path MTU Discovery",
      "section_title": true,
      "zh-CHS": "3. 碎片和路径MTU发现"
    },
    {
      "indent": 3,
      "text": "Just as it is possible to receive an unlabeled IP datagram which is too large to be transmitted on its output link, it is possible to receive a labeled packet which is too large to be transmitted on its output link.",
      "zh-CHS": "正如可以接收太大而无法在其输出链路上传输的未标记IP数据报一样，也可以接收太大而无法在其输出链路上传输的标记数据包。"
    },
    {
      "indent": 3,
      "text": "It is also possible that a received packet (labeled or unlabeled) which was originally small enough to be transmitted on that link becomes too large by virtue of having one or more additional labels pushed onto its label stack. In label switching, a packet may grow in size if additional labels get pushed on. Thus if one receives a labeled packet with a 1500-byte frame payload, and pushes on an additional label, one needs to forward it as frame with a 1504-byte payload.",
      "zh-CHS": "由于将一个或多个附加标签推到其标签堆栈上，接收到的数据包（带标签或未带标签）原本小到足以在该链路上传输，也可能变得过大。在标签交换中，如果附加标签被推上，数据包的大小可能会增加。因此，如果接收到一个带有1500字节帧有效载荷的标记数据包，并推送一个额外的标签，则需要将其作为带有1504字节有效载荷的帧转发。"
    },
    {
      "indent": 3,
      "text": "This section specifies the rules for processing labeled packets which are \"too large\". In particular, it provides rules which ensure that hosts implementing Path MTU Discovery [4], and hosts using IPv6 [7,8], will be able to generate IP datagrams that do not need fragmentation, even if those datagrams get labeled as they traverse the network.",
      "zh-CHS": "本节规定了处理“过大”标记数据包的规则。特别是，它提供了一些规则，确保实现路径MTU发现[4]的主机和使用IPv6[7,8]的主机能够生成不需要分段的IP数据报，即使这些数据报在穿越网络时被标记。"
    },
    {
      "indent": 3,
      "text": "In general, IPv4 hosts which do not implement Path MTU Discovery [4] send IP datagrams which contain no more than 576 bytes. Since the MTUs in use on most data links today are 1500 bytes or more, the probability that such datagrams will need to get fragmented, even if they get labeled, is very small.",
      "zh-CHS": "通常，未实现路径MTU发现[4]的IPv4主机发送不超过576字节的IP数据报。由于目前在大多数数据链路上使用的MTU为1500字节或更多，因此此类数据报需要碎片化的可能性非常小，即使它们被标记。"
    },
    {
      "indent": 3,
      "text": "Some hosts that do not implement Path MTU Discovery [4] will generate IP datagrams containing 1500 bytes, as long as the IP Source and Destination addresses are on the same subnet. These datagrams will not pass through routers, and hence will not get fragmented.",
      "zh-CHS": "一些未实现路径MTU发现[4]的主机将生成包含1500字节的IP数据报，只要IP源地址和目标地址位于同一子网上。这些数据报不会通过路由器，因此不会被分割。"
    },
    {
      "indent": 3,
      "text": "Unfortunately, some hosts will generate IP datagrams containing 1500 bytes, as long the IP Source and Destination addresses have the same classful network number. This is the one case in which there is any risk of fragmentation when such datagrams get labeled. (Even so,",
      "zh-CHS": "不幸的是，一些主机将生成包含1500字节的IP数据报，只要IP源地址和目标地址具有相同的类别网络号。这是这样一种情况，当这些数据报被标记时，存在任何碎片风险。（尽管如此，"
    },
    {
      "indent": 3,
      "text": "fragmentation is not likely unless the packet must traverse an ethernet of some sort between the time it first gets labeled and the time it gets unlabeled.)",
      "zh-CHS": "除非数据包必须在第一次标记和未标记之间通过某种以太网，否则不可能出现碎片。）"
    },
    {
      "indent": 3,
      "text": "This document specifies procedures which allow one to configure the network so that large datagrams from hosts which do not implement Path MTU Discovery get fragmented just once, when they are first labeled. These procedures make it possible (assuming suitable configuration) to avoid any need to fragment packets which have already been labeled.",
      "zh-CHS": "本文档规定了允许用户配置网络的程序，以便在首次标记时，来自未实现路径MTU发现的主机的大型数据报仅碎片化一次。这些过程使得（假设配置合适）可以避免对已经标记的数据包进行分段。"
    },
    {
      "indent": 0,
      "text": "3.1. Terminology",
      "section_title": true,
      "zh-CHS": "3.1. 术语"
    },
    {
      "indent": 3,
      "text": "With respect to a particular data link, we can use the following terms:",
      "zh-CHS": "对于特定数据链路，我们可以使用以下术语："
    },
    {
      "indent": 6,
      "text": "- Frame Payload:",
      "zh-CHS": "- 帧有效载荷："
    },
    {
      "indent": 9,
      "text": "The contents of a data link frame, excluding any data link layer headers or trailers (e.g., MAC headers, LLC headers, 802.1Q headers, PPP header, frame check sequences, etc.).",
      "zh-CHS": "数据链路帧的内容，不包括任何数据链路层报头或拖车（例如，MAC报头、LLC报头、802.1Q报头、PPP报头、帧检查序列等）。"
    },
    {
      "indent": 9,
      "text": "When a frame is carrying an unlabeled IP datagram, the Frame Payload is just the IP datagram itself. When a frame is carrying a labeled IP datagram, the Frame Payload consists of the label stack entries and the IP datagram.",
      "zh-CHS": "当帧承载未标记的IP数据报时，帧有效负载只是IP数据报本身。当帧承载有标记的IP数据报时，帧有效载荷由标签堆栈条目和IP数据报组成。"
    },
    {
      "indent": 6,
      "text": "- Conventional Maximum Frame Payload Size:",
      "zh-CHS": "- 常规最大帧有效负载大小："
    },
    {
      "indent": 9,
      "text": "The maximum Frame Payload size allowed by data link standards. For example, the Conventional Maximum Frame Payload Size for ethernet is 1500 bytes.",
      "zh-CHS": "数据链路标准允许的最大帧有效负载大小。例如，以太网的传统最大帧有效负载大小为1500字节。"
    },
    {
      "indent": 6,
      "text": "- True Maximum Frame Payload Size:",
      "zh-CHS": "- 真实最大帧有效负载大小："
    },
    {
      "indent": 9,
      "text": "The maximum size frame payload which can be sent and received properly by the interface hardware attached to the data link.",
      "zh-CHS": "连接到数据链路的接口硬件可以正确发送和接收的最大帧有效负载。"
    },
    {
      "indent": 9,
      "text": "On ethernet and 802.3 networks, it is believed that the True Maximum Frame Payload Size is 4-8 bytes larger than the Conventional Maximum Frame Payload Size (as long as neither an 802.1Q header nor an 802.1p header is present, and as long as neither can be added by a switch or bridge while a packet is in transit to its next hop). For example, it is believed that most ethernet equipment could correctly send and receive packets carrying a payload of 1504 or perhaps even 1508 bytes, at least, as long as the ethernet header does not have an 802.1Q or 802.1p field.",
      "zh-CHS": "在以太网和802.3网络上，人们认为真正的最大帧有效负载大小比传统的最大帧有效负载大小大4-8字节（只要802.1Q报头和802.1p报头都不存在，并且只要在数据包传输到下一跳时交换机或网桥都不能添加）。例如，据信，只要以太网报头不具有802.1Q或802.1p字段，大多数以太网设备至少可以正确地发送和接收承载1504或甚至1508字节的有效载荷的分组。"
    },
    {
      "indent": 9,
      "text": "On PPP links, the True Maximum Frame Payload Size may be virtually unbounded.",
      "zh-CHS": "在PPP链路上，真正的最大帧有效负载大小实际上可能是无界的。"
    },
    {
      "indent": 6,
      "text": "- Effective Maximum Frame Payload Size for Labeled Packets:",
      "zh-CHS": "- 已标记数据包的有效最大帧有效负载大小："
    },
    {
      "indent": 9,
      "text": "This is either the Conventional Maximum Frame Payload Size or the True Maximum Frame Payload Size, depending on the capabilities of the equipment on the data link and the size of the data link header being used.",
      "zh-CHS": "这是传统的最大帧有效负载大小或真实的最大帧有效负载大小，取决于数据链路上设备的能力和所使用的数据链路报头的大小。"
    },
    {
      "indent": 6,
      "text": "- Initially Labeled IP Datagram:",
      "zh-CHS": "- 最初标记为IP数据报："
    },
    {
      "indent": 9,
      "text": "Suppose that an unlabeled IP datagram is received at a particular LSR, and that the the LSR pushes on a label before forwarding the datagram. Such a datagram will be called an Initially Labeled IP Datagram at that LSR.",
      "zh-CHS": "假设在特定LSR接收到未标记的IP数据报，并且LSR在转发数据报之前推送标签。这样的数据报将在该LSR处被称为初始标记的IP数据报。"
    },
    {
      "indent": 6,
      "text": "- Previously Labeled IP Datagram:",
      "zh-CHS": "- 以前标记的IP数据报："
    },
    {
      "indent": 9,
      "text": "An IP datagram which had already been labeled before it was received by a particular LSR.",
      "zh-CHS": "一种IP数据报，在特定的LSR接收到它之前，它已经被标记。"
    },
    {
      "indent": 0,
      "text": "3.2. Maximum Initially Labeled IP Datagram Size",
      "section_title": true,
      "zh-CHS": "3.2. 初始标记的最大IP数据报大小"
    },
    {
      "indent": 3,
      "text": "Every LSR which is capable of",
      "zh-CHS": "每个能够"
    },
    {
      "indent": 6,
      "text": "a) receiving an unlabeled IP datagram, b) adding a label stack to the datagram, and c) forwarding the resulting labeled packet,",
      "zh-CHS": "a) 接收未标记的IP数据报，b）向数据报添加标签堆栈，以及c）转发产生的标记数据包，"
    },
    {
      "indent": 3,
      "text": "SHOULD support a configuration parameter known as the \"Maximum Initially Labeled IP Datagram Size\", which can be set to a non-negative value.",
      "zh-CHS": "应支持称为“初始标记的最大IP数据报大小”的配置参数，该参数可设置为非负值。"
    },
    {
      "indent": 3,
      "text": "If this configuration parameter is set to zero, it has no effect.",
      "zh-CHS": "如果此配置参数设置为零，则无效。"
    },
    {
      "indent": 3,
      "text": "If it is set to a positive value, it is used in the following way. If:",
      "zh-CHS": "如果设置为正值，则按以下方式使用。如果："
    },
    {
      "indent": 3,
      "text": " a) an unlabeled IP datagram is received, and b) that datagram does not have the DF bit set in its IP header, and c) that datagram needs to be labeled before being forwarded, and d) the size of the datagram (before labeling) exceeds the value of the parameter, then a) the datagram must be broken into fragments, each of whose size is no greater than the value of the parameter, and",
      "zh-CHS": "a） 接收到未标记的IP数据报，b）该数据报在其IP报头中未设置DF位，c）该数据报需要在转发之前进行标记，d）该数据报的大小（在标记之前）超过参数值，然后a）该数据报必须分解为碎片，每个参数的大小不大于参数的值，以及"
    },
    {
      "indent": 6,
      "text": "b) each fragment must be labeled and then forwarded.",
      "zh-CHS": "b) 每个片段都必须标记，然后转发。"
    },
    {
      "indent": 3,
      "text": "For example, if this configuration parameter is set to a value of 1488, then any unlabeled IP datagram containing more than 1488 bytes will be fragmented before being labeled. Each fragment will be capable of being carried on a 1500-byte data link, without further fragmentation, even if as many as three labels are pushed onto its label stack.",
      "zh-CHS": "例如，如果此配置参数设置为值1488，则任何包含1488字节以上的未标记IP数据报将在标记之前被分段。每个片段将能够在1500字节的数据链路上传输，而不会进一步碎片化，即使将多达三个标签推到其标签堆栈上。"
    },
    {
      "indent": 3,
      "text": "In other words, setting this parameter to a non-zero value allows one to eliminate all fragmentation of Previously Labeled IP Datagrams, but it may cause some unnecessary fragmentation of Initially Labeled IP Datagrams.",
      "zh-CHS": "换句话说，将此参数设置为非零值可以消除先前标记的IP数据报的所有碎片，但它可能会导致初始标记的IP数据报出现一些不必要的碎片。"
    },
    {
      "indent": 3,
      "text": "Note that the setting of this parameter does not affect the processing of IP datagrams that have the DF bit set; hence the result of Path MTU discovery is unaffected by the setting of this parameter.",
      "zh-CHS": "注意，该参数的设置不影响设置了DF位的IP数据报的处理；因此，路径MTU发现的结果不受此参数设置的影响。"
    },
    {
      "indent": 0,
      "text": "3.3. When are Labeled IP Datagrams Too Big?",
      "section_title": true,
      "zh-CHS": "3.3. 什么时候标记的IP数据报太大？"
    },
    {
      "indent": 3,
      "text": "A labeled IP datagram whose size exceeds the Conventional Maximum Frame Payload Size of the data link over which it is to be forwarded MAY be considered to be \"too big\".",
      "zh-CHS": "标记的IP数据报的大小超过其将被转发的数据链路的常规最大帧有效载荷大小，可被视为“太大”。"
    },
    {
      "indent": 3,
      "text": "A labeled IP datagram whose size exceeds the True Maximum Frame Payload Size of the data link over which it is to be forwarded MUST be considered to be \"too big\".",
      "zh-CHS": "如果标记的IP数据报的大小超过要转发的数据链路的实际最大帧有效负载大小，则必须将其视为“太大”。"
    },
    {
      "indent": 3,
      "text": "A labeled IP datagram which is not \"too big\" MUST be transmitted without fragmentation.",
      "zh-CHS": "不“太大”的标记IP数据报必须在无碎片的情况下传输。"
    },
    {
      "indent": 0,
      "text": "3.4. Processing Labeled IPv4 Datagrams which are Too Big",
      "section_title": true,
      "zh-CHS": "3.4. 处理太大的标记IPv4数据报"
    },
    {
      "indent": 3,
      "text": "If a labeled IPv4 datagram is \"too big\", and the DF bit is not set in its IP header, then the LSR MAY silently discard the datagram.",
      "zh-CHS": "如果标记的IPv4数据报“太大”，且其IP报头中未设置DF位，则LSR可能会自动丢弃该数据报。"
    },
    {
      "indent": 3,
      "text": "Note that discarding such datagrams is a sensible procedure only if the \"Maximum Initially Labeled IP Datagram Size\" is set to a non-zero value in every LSR in the network which is capable of adding a label stack to an unlabeled IP datagram.",
      "zh-CHS": "请注意，只有当网络中的每个LSR（能够向未标记的IP数据报添加标签堆栈）中的“初始标记的最大IP数据报大小”设置为非零值时，丢弃此类数据报才是合理的过程。"
    },
    {
      "indent": 3,
      "text": "If the LSR chooses not to discard a labeled IPv4 datagram which is too big, or if the DF bit is set in that datagram, then it MUST execute the following algorithm:",
      "zh-CHS": "如果LSR选择不丢弃太大的标记IPv4数据报，或者如果在该数据报中设置了DF位，则必须执行以下算法："
    },
    {
      "indent": 6,
      "text": "1. Strip off the label stack entries to obtain the IP datagram.",
      "zh-CHS": "1. 剥离标签堆栈条目以获取IP数据报。"
    },
    {
      "indent": 6,
      "text": "2. Let N be the number of bytes in the label stack (i.e, 4 times the number of label stack entries).",
      "zh-CHS": "2. 设N为标签堆栈中的字节数（即，标签堆栈项数的4倍）。"
    },
    {
      "indent": 6,
      "text": "3. If the IP datagram does NOT have the \"Don't Fragment\" bit set in its IP header:",
      "zh-CHS": "3. 如果IP数据报的IP报头中未设置“不分段”位："
    },
    {
      "indent": 9,
      "text": "a. convert it into fragments, each of which MUST be at least N bytes less than the Effective Maximum Frame Payload Size.",
      "zh-CHS": "a. 将其转换为片段，每个片段必须至少比有效最大帧有效负载大小小N个字节。"
    },
    {
      "indent": 9,
      "text": "b. Prepend each fragment with the same label header that would have been on the original datagram had fragmentation not been necessary.",
      "zh-CHS": "b. 使用与原始数据报相同的标签头预先结束每个片段，如果不需要分段的话。"
    },
    {
      "indent": 9,
      "text": "c. Forward the fragments",
      "zh-CHS": "c. 转发碎片"
    },
    {
      "indent": 6,
      "text": "4. If the IP datagram has the \"Don't Fragment\" bit set in its IP header:",
      "zh-CHS": "4. 如果IP数据报在其IP报头中设置了“不分段”位："
    },
    {
      "indent": 9,
      "text": "a. the datagram MUST NOT be forwarded",
      "zh-CHS": "a. 不得转发数据报"
    },
    {
      "indent": 9,
      "text": "b. Create an ICMP Destination Unreachable Message:",
      "zh-CHS": "b. 创建无法访问的ICMP目标消息："
    },
    {
      "indent": 13,
      "text": "i. set its Code field [3] to \"Fragmentation Required and DF Set\",",
      "zh-CHS": "i. 将其代码字段[3]设置为“需要碎片并设置DF”，"
    },
    {
      "indent": 12,
      "text": "ii. set its Next-Hop MTU field [4] to the difference between the Effective Maximum Frame Payload Size and the value of N",
      "zh-CHS": "二,。将其下一跳MTU字段[4]设置为有效最大帧有效负载大小与N值之间的差值"
    },
    {
      "indent": 9,
      "text": "c. If possible, transmit the ICMP Destination Unreachable Message to the source of the of the discarded datagram.",
      "zh-CHS": "c. 如果可能，将ICMP目的地不可到达消息传输到丢弃数据报的源。"
    },
    {
      "indent": 0,
      "text": "3.5. Processing Labeled IPv6 Datagrams which are Too Big",
      "section_title": true,
      "zh-CHS": "3.5. 处理太大的标记IPv6数据报"
    },
    {
      "indent": 3,
      "text": "To process a labeled IPv6 datagram which is too big, an LSR MUST execute the following algorithm:",
      "zh-CHS": "要处理太大的标记IPv6数据报，LSR必须执行以下算法："
    },
    {
      "indent": 6,
      "text": "1. Strip off the label stack entries to obtain the IP datagram.",
      "zh-CHS": "1. 剥离标签堆栈条目以获取IP数据报。"
    },
    {
      "indent": 6,
      "text": "2. Let N be the number of bytes in the label stack (i.e., 4 times the number of label stack entries).",
      "zh-CHS": "2. 设N为标签堆栈中的字节数（即标签堆栈项数的4倍）。"
    },
    {
      "indent": 6,
      "text": "3. If the IP datagram contains more than 1280 bytes (not counting the label stack entries), or if it does not contain a fragment header, then:",
      "zh-CHS": "3. 如果IP数据报包含超过1280个字节（不包括标签堆栈条目），或者不包含片段头，则："
    },
    {
      "indent": 9,
      "text": "a. Create an ICMP Packet Too Big Message, and set its Next-Hop MTU field to the difference between the Effective Maximum Frame Payload Size and the value of N",
      "zh-CHS": "a. 创建一个ICMP数据包过大消息，并将其下一跳MTU字段设置为有效最大帧有效负载大小和N值之间的差值"
    },
    {
      "indent": 9,
      "text": "b. If possible, transmit the ICMP Packet Too Big Message to the source of the datagram.",
      "zh-CHS": "b. 如果可能，将ICMP数据包过大消息传输到数据报源。"
    },
    {
      "indent": 9,
      "text": "c. discard the labeled IPv6 datagram.",
      "zh-CHS": "c. 丢弃标记的IPv6数据报。"
    },
    {
      "indent": 6,
      "text": "4. If the IP datagram is not larger than 1280 octets, and it contains a fragment header, then",
      "zh-CHS": "4. 如果IP数据报不大于1280个八位字节，并且它包含一个片段头，那么"
    },
    {
      "indent": 9,
      "text": "a. Convert it into fragments, each of which MUST be at least N bytes less than the Effective Maximum Frame Payload Size.",
      "zh-CHS": "a. 将其转换为片段，每个片段必须至少比有效最大帧有效负载大小小N个字节。"
    },
    {
      "indent": 9,
      "text": "b. Prepend each fragment with the same label header that would have been on the original datagram had fragmentation not been necessary.",
      "zh-CHS": "b. 使用与原始数据报相同的标签头预先结束每个片段，如果不需要分段的话。"
    },
    {
      "indent": 9,
      "text": "c. Forward the fragments.",
      "zh-CHS": "c. 转发碎片。"
    },
    {
      "indent": 9,
      "text": "Reassembly of the fragments will be done at the destination host.",
      "zh-CHS": "碎片的重新组装将在目标主机上完成。"
    },
    {
      "indent": 0,
      "text": "3.6. Implications with respect to Path MTU Discovery",
      "section_title": true,
      "zh-CHS": "3.6. 关于路径MTU发现的含义"
    },
    {
      "indent": 3,
      "text": "The procedures described above for handling datagrams which have the DF bit set, but which are \"too large\", have an impact on the Path MTU Discovery procedures of RFC 1191 [4]. Hosts which implement these procedures will discover an MTU which is small enough to allow n labels to be pushed on the datagrams, without need for fragmentation, where n is the number of labels that actually get pushed on along the path currently in use.",
      "zh-CHS": "上述用于处理设置了DF位但“太大”的数据报的程序对RFC 1191的路径MTU发现程序有影响[4]。实现这些过程的主机将发现一个MTU，该MTU足够小，可以在不需要碎片的情况下在数据报上推送n个标签，其中n是在当前使用的路径上实际推送的标签数。"
    },
    {
      "indent": 3,
      "text": "In other words, datagrams from hosts that use Path MTU Discovery will never need to be fragmented due to the need to put on a label header, or to add new labels to an existing label header. (Also, datagrams from hosts that use Path MTU Discovery generally have the DF bit set, and so will never get fragmented anyway.)",
      "zh-CHS": "换句话说，来自使用路径MTU发现的主机的数据报将永远不需要分段，因为需要放在标签头上，或者需要向现有标签头添加新标签。（此外，来自使用路径MTU发现的主机的数据报通常设置了DF位，因此无论如何都不会碎片化。）"
    },
    {
      "indent": 3,
      "text": "Note that Path MTU Discovery will only work properly if, at the point where a labeled IP Datagram's fragmentation needs to occur, it is possible to cause an ICMP Destination Unreachable message to be routed to the packet's source address. See section 2.3.",
      "zh-CHS": "请注意，路径MTU发现只有在需要发生标记的IP数据报碎片的点上，可能导致ICMP目的地不可到达消息路由到数据包的源地址时才能正常工作。见第2.3节。"
    },
    {
      "indent": 3,
      "text": "If it is not possible to forward an ICMP message from within an MPLS \"tunnel\" to a packet's source address, but the network configuration makes it possible for the LSR at the transmitting end of the tunnel to receive packets that must go through the tunnel, but are too large to pass through the tunnel unfragmented, then:",
      "zh-CHS": "如果无法将ICMP消息从MPLS“隧道”内转发到数据包的源地址，但网络配置使隧道发送端的LSR能够接收必须通过隧道但太大而无法通过隧道的数据包，则："
    },
    {
      "indent": 6,
      "text": "- The LSR at the transmitting end of the tunnel MUST be able to determine the MTU of the tunnel as a whole. It MAY do this by sending packets through the tunnel to the tunnel's receiving endpoint, and performing Path MTU Discovery with those packets.",
      "zh-CHS": "- 隧道传输端的LSR必须能够确定整个隧道的MTU。它可以通过将数据包通过隧道发送到隧道的接收端点，并使用这些数据包执行路径MTU发现来实现这一点。"
    },
    {
      "indent": 6,
      "text": "- Any time the transmitting endpoint of the tunnel needs to send a packet into the tunnel, and that packet has the DF bit set, and it exceeds the tunnel MTU, the transmitting endpoint of the tunnel MUST send the ICMP Destination Unreachable message to the source, with code \"Fragmentation Required and DF Set\", and the Next-Hop MTU Field set as described above.",
      "zh-CHS": "- 当隧道的传输端点需要将数据包发送到隧道中，并且该数据包设置了DF位，并且超过了隧道MTU时，隧道的传输端点必须向源发送ICMP目的地不可到达消息，代码为“需要碎片并设置DF”，以及如上所述设置的下一跳MTU字段。"
    },
    {
      "indent": 0,
      "text": "4. Transporting Labeled Packets over PPP",
      "section_title": true,
      "zh-CHS": "4. 通过PPP传输带标签的数据包"
    },
    {
      "indent": 3,
      "text": "The Point-to-Point Protocol (PPP) [6] provides a standard method for transporting multi-protocol datagrams over point-to-point links. PPP defines an extensible Link Control Protocol, and proposes a family of Network Control Protocols for establishing and configuring different network-layer protocols.",
      "zh-CHS": "点到点协议（PPP）[6]提供了通过点到点链路传输多协议数据报的标准方法。PPP定义了一个可扩展的链路控制协议，并提出了一系列用于建立和配置不同网络层协议的网络控制协议。"
    },
    {
      "indent": 3,
      "text": "This section defines the Network Control Protocol for establishing and configuring label Switching over PPP.",
      "zh-CHS": "本节定义了用于通过PPP建立和配置标签交换的网络控制协议。"
    },
    {
      "indent": 0,
      "text": "4.1. Introduction",
      "section_title": true,
      "zh-CHS": "4.1. 介绍"
    },
    {
      "indent": 3,
      "text": "PPP has three main components:",
      "zh-CHS": "PPP有三个主要组成部分："
    },
    {
      "indent": 6,
      "text": "1. A method for encapsulating multi-protocol datagrams.",
      "zh-CHS": "1. 一种封装多协议数据报的方法。"
    },
    {
      "indent": 6,
      "text": "2. A Link Control Protocol (LCP) for establishing, configuring, and testing the data-link connection.",
      "zh-CHS": "2. 一种链路控制协议（LCP），用于建立、配置和测试数据链路连接。"
    },
    {
      "indent": 6,
      "text": "3. A family of Network Control Protocols for establishing and configuring different network-layer protocols.",
      "zh-CHS": "3. 用于建立和配置不同网络层协议的一系列网络控制协议。"
    },
    {
      "indent": 3,
      "text": "In order to establish communications over a point-to-point link, each end of the PPP link must first send LCP packets to configure and test the data link. After the link has been established and optional facilities have been negotiated as needed by the LCP, PPP must send \"MPLS Control Protocol\" packets to enable the transmission of labeled packets. Once the \"MPLS Control Protocol\" has reached the Opened state, labeled packets can be sent over the link.",
      "zh-CHS": "为了在点到点链路上建立通信，PPP链路的每一端必须首先发送LCP数据包以配置和测试数据链路。链路建立并根据LCP的需要协商可选设施后，PPP必须发送“MPLS控制协议”数据包，以便能够传输带标签的数据包。一旦“MPLS控制协议”达到打开状态，就可以通过链路发送带标签的数据包。"
    },
    {
      "indent": 3,
      "text": "The link will remain configured for communications until explicit LCP or MPLS Control Protocol packets close the link down, or until some external event occurs (an inactivity timer expires or network administrator intervention).",
      "zh-CHS": "链路将保持通信配置，直到显式LCP或MPLS控制协议数据包关闭链路，或者直到发生某些外部事件（非活动计时器过期或网络管理员干预）。"
    },
    {
      "indent": 0,
      "text": "4.2. A PPP Network Control Protocol for MPLS",
      "section_title": true,
      "zh-CHS": "4.2. 一种用于MPLS的PPP网络控制协议"
    },
    {
      "indent": 3,
      "text": "The MPLS Control Protocol (MPLSCP) is responsible for enabling and disabling the use of label switching on a PPP link. It uses the same packet exchange mechanism as the Link Control Protocol (LCP). MPLSCP packets may not be exchanged until PPP has reached the Network-Layer Protocol phase. MPLSCP packets received before this phase is reached should be silently discarded.",
      "zh-CHS": "MPLS控制协议（MPLSCP）负责启用和禁用PPP链路上标签切换的使用。它使用与链路控制协议（LCP）相同的数据包交换机制。在PPP达到网络层协议阶段之前，不得交换MPLSCP数据包。到达此阶段之前收到的MPLSCP数据包应被静默丢弃。"
    },
    {
      "indent": 3,
      "text": "The MPLS Control Protocol is exactly the same as the Link Control Protocol [6] with the following exceptions:",
      "zh-CHS": "MPLS控制协议与链路控制协议[6]完全相同，但有以下例外："
    },
    {
      "indent": 6,
      "text": "1. Frame Modifications",
      "zh-CHS": "1. 帧修改"
    },
    {
      "indent": 9,
      "text": "The packet may utilize any modifications to the basic frame format which have been negotiated during the Link Establishment phase.",
      "zh-CHS": "分组可以利用在链路建立阶段期间协商的对基本帧格式的任何修改。"
    },
    {
      "indent": 6,
      "text": "2. Data Link Layer Protocol Field",
      "zh-CHS": "2. 数据链路层协议字段"
    },
    {
      "indent": 9,
      "text": "Exactly one MPLSCP packet is encapsulated in the PPP Information field, where the PPP Protocol field indicates type hex 8281 (MPLS).",
      "zh-CHS": "PPP信息字段中仅封装了一个MPLSCP数据包，其中PPP协议字段指示hex 8281（MPLS）类型。"
    },
    {
      "indent": 6,
      "text": "3. Code field",
      "zh-CHS": "3. 代码字段"
    },
    {
      "indent": 9,
      "text": "Only Codes 1 through 7 (Configure-Request, Configure-Ack, Configure-Nak, Configure-Reject, Terminate-Request, Terminate-Ack and Code-Reject) are used. Other Codes should be treated as unrecognized and should result in Code-Rejects.",
      "zh-CHS": "仅使用代码1至7（配置请求、配置确认、配置Nak、配置拒绝、终止请求、终止确认和代码拒绝）。其他代码应视为无法识别，并应导致代码拒绝。"
    },
    {
      "indent": 6,
      "text": "4. Timeouts",
      "zh-CHS": "4. 超时"
    },
    {
      "indent": 9,
      "text": "MPLSCP packets may not be exchanged until PPP has reached the Network-Layer Protocol phase. An implementation should be prepared to wait for Authentication and Link Quality Determination to finish before timing out waiting for a Configure-Ack or other response. It is suggested that an implementation give up only after user intervention or a configurable amount of time.",
      "zh-CHS": "在PPP达到网络层协议阶段之前，不得交换MPLSCP数据包。在等待配置Ack或其他响应超时之前，实现应该准备等待身份验证和链路质量确定完成。建议只有在用户干预或可配置的时间量之后，实现才会放弃。"
    },
    {
      "indent": 6,
      "text": "5. Configuration Option Types",
      "zh-CHS": "5. 配置选项类型"
    },
    {
      "indent": 9,
      "text": "None.",
      "zh-CHS": "没有一个"
    },
    {
      "indent": 0,
      "text": "4.3. Sending Labeled Packets",
      "section_title": true,
      "zh-CHS": "4.3. 发送带标签的数据包"
    },
    {
      "indent": 3,
      "text": "Before any labeled packets may be communicated, PPP must reach the Network-Layer Protocol phase, and the MPLS Control Protocol must reach the Opened state.",
      "zh-CHS": "在传输任何标记的数据包之前，PPP必须达到网络层协议阶段，MPLS控制协议必须达到打开状态。"
    },
    {
      "indent": 3,
      "text": "Exactly one labeled packet is encapsulated in the PPP Information field, where the PPP Protocol field indicates either type hex 0281 (MPLS Unicast) or type hex 0283 (MPLS Multicast). The maximum length of a labeled packet transmitted over a PPP link is the same as the maximum length of the Information field of a PPP encapsulated packet.",
      "zh-CHS": "PPP信息字段中封装了一个贴有标签的数据包，其中PPP协议字段表示hex 0281类型（MPLS单播）或hex 0283类型（MPLS多播）。通过PPP链路传输的标记包的最大长度与PPP封装包的信息字段的最大长度相同。"
    },
    {
      "indent": 3,
      "text": "The format of the Information field itself is as defined in section 2.",
      "zh-CHS": "信息字段本身的格式如第2节所定义。"
    },
    {
      "indent": 3,
      "text": "Note that two codepoints are defined for labeled packets; one for multicast and one for unicast. Once the MPLSCP has reached the Opened state, both label switched multicasts and label switched unicasts can be sent over the PPP link.",
      "zh-CHS": "请注意，为标记的数据包定义了两个代码点；一个用于多播，一个用于单播。一旦MPLSCP达到打开状态，标签交换多播和标签交换单播都可以通过PPP链路发送。"
    },
    {
      "indent": 0,
      "text": "4.4. Label Switching Control Protocol Configuration Options",
      "section_title": true,
      "zh-CHS": "4.4. 标签交换控制协议配置选项"
    },
    {
      "indent": 3,
      "text": "There are no configuration options.",
      "zh-CHS": "没有配置选项。"
    },
    {
      "indent": 0,
      "text": "5. Transporting Labeled Packets over LAN Media",
      "section_title": true,
      "zh-CHS": "5. 通过LAN介质传输带标签的数据包"
    },
    {
      "indent": 3,
      "text": "Exactly one labeled packet is carried in each frame.",
      "zh-CHS": "每帧中只携带一个带标签的数据包。"
    },
    {
      "indent": 3,
      "text": "The label stack entries immediately precede the network layer header, and follow any data link layer headers, including, e.g., any 802.1Q headers that may exist.",
      "zh-CHS": "标签堆栈条目紧跟在网络层报头之前，并紧跟在任何数据链路层报头之后，包括例如可能存在的任何802.1Q报头。"
    },
    {
      "indent": 3,
      "text": "The ethertype value 8847 hex is used to indicate that a frame is carrying an MPLS unicast packet.",
      "zh-CHS": "ethertype值8847 hex用于指示帧正在承载MPLS单播数据包。"
    },
    {
      "indent": 3,
      "text": "The ethertype value 8848 hex is used to indicate that a frame is carrying an MPLS multicast packet.",
      "zh-CHS": "ethertype值8848 hex用于指示帧正在承载MPLS多播数据包。"
    },
    {
      "indent": 3,
      "text": "These ethertype values can be used with either the ethernet encapsulation or the 802.3 LLC/SNAP encapsulation to carry labeled packets. The procedure for choosing which of these two encapsulations to use is beyond the scope of this document.",
      "zh-CHS": "这些ethertype值可与ethernet封装或802.3 LLC/SNAP封装一起使用，以携带带标签的数据包。选择使用这两个封装中的哪一个的过程超出了本文档的范围。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "zh-CHS": "6. IANA考虑"
    },
    {
      "indent": 3,
      "text": "Label values 0-15 inclusive have special meaning, as specified in this document, or as further assigned by IANA.",
      "zh-CHS": "标签值0-15（含0-15）具有特殊含义，如本文件规定或IANA进一步指定。"
    },
    {
      "indent": 3,
      "text": "In this document, label values 0-3 are specified in section 2.1.",
      "zh-CHS": "在本文件中，第2.1节规定了标签值0-3。"
    },
    {
      "indent": 3,
      "text": "Label values 4-15 may be assigned by IANA, based on IETF Consensus.",
      "zh-CHS": "IANA可根据IETF共识分配标签值4-15。"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "zh-CHS": "7. 安全考虑"
    },
    {
      "indent": 3,
      "text": "The MPLS encapsulation that is specified herein does not raise any security issues that are not already present in either the MPLS architecture [1] or in the architecture of the network layer protocol contained within the encapsulation.",
      "zh-CHS": "本文中指定的MPLS封装不会引起MPLS体系结构[1]或封装中包含的网络层协议的体系结构中尚未存在的任何安全问题。"
    },
    {
      "indent": 3,
      "text": "There are two security considerations inherited from the MPLS architecture which may be pointed out here:",
      "zh-CHS": "从MPLS体系结构中继承了两个安全注意事项，可在此处指出："
    },
    {
      "indent": 6,
      "text": "- Some routers may implement security procedures which depend on the network layer header being in a fixed place relative to the data link layer header. These procedures will not work when the MPLS encapsulation is used, because that encapsulation is of a variable size.",
      "zh-CHS": "- 一些路由器可以实现安全过程，这取决于网络层报头处于相对于数据链路层报头的固定位置。当使用MPLS封装时，这些过程将不起作用，因为该封装的大小是可变的。"
    },
    {
      "indent": 6,
      "text": "- An MPLS label has its meaning by virtue of an agreement between the LSR that puts the label in the label stack (the \"label writer\"), and the LSR that interprets that label (the \"label reader\"). However, the label stack does not provide any means of determining who the label writer was for any particular label. If labeled packets are accepted from untrusted sources, the result may be that packets are routed in an illegitimate manner.",
      "zh-CHS": "- MPLS标签的含义取决于将标签放入标签堆栈的LSR（“标签写入器”）和解释该标签的LSR（“标签读取器”）之间的协议。但是，标签堆栈不提供任何方法来确定任何特定标签的标签编写器。如果接受来自不可信来源的标记数据包，结果可能是数据包以非法方式路由。"
    },
    {
      "indent": 0,
      "text": "8. Intellectual Property",
      "section_title": true,
      "zh-CHS": "8. 知识产权"
    },
    {
      "indent": 3,
      "text": "The IETF has been notified of intellectual property rights claimed in regard to some or all of the specification contained in this document. For more information consult the online list of claimed rights.",
      "zh-CHS": "IETF已收到关于本文件所含部分或全部规范的知识产权声明。有关更多信息，请查阅在线权利主张列表。"
    },
    {
      "indent": 0,
      "text": "9. Authors' Addresses",
      "section_title": true,
      "zh-CHS": "9. 作者地址"
    },
    {
      "indent": 3,
      "text": "Eric C. Rosen Cisco Systems, Inc. 250 Apollo Drive Chelmsford, MA, 01824",
      "zh-CHS": "Eric C.Rosen Cisco Systems，Inc.马萨诸塞州切姆斯福德阿波罗大道250号，邮编01824"
    },
    {
      "indent": 3,
      "text": "EMail: erosen@cisco.com",
      "raw": true,
      "zh-CHS": "translate error, please retry"
    },
    {
      "indent": 3,
      "text": "Dan Tappan Cisco Systems, Inc. 250 Apollo Drive Chelmsford, MA, 01824",
      "zh-CHS": "Dan Tappan Cisco Systems，Inc.马萨诸塞州切姆斯福德阿波罗大道250号，邮编01824"
    },
    {
      "indent": 3,
      "text": "EMail: tappan@cisco.com",
      "raw": true,
      "zh-CHS": "translate error, please retry"
    },
    {
      "indent": 3,
      "text": "Yakov Rekhter Juniper Networks 1194 N. Mathilda Avenue Sunnyvale, CA 94089",
      "zh-CHS": "加利福尼亚州桑尼维尔市马蒂尔达大道北1194号雅科夫·雷克特·杜松网络公司，邮编94089"
    },
    {
      "indent": 3,
      "text": "EMail: yakov@juniper.net",
      "raw": true,
      "zh-CHS": "translate error, please retry"
    },
    {
      "indent": 3,
      "text": "Guy Fedorkow Cisco Systems, Inc. 250 Apollo Drive Chelmsford, MA, 01824",
      "zh-CHS": "盖伊·费多尔科夫思科系统公司，马萨诸塞州切姆斯福德阿波罗大道250号，邮编01824"
    },
    {
      "indent": 3,
      "text": "EMail: fedorkow@cisco.com",
      "raw": true,
      "zh-CHS": "translate error, please retry"
    },
    {
      "indent": 3,
      "text": "Dino Farinacci Procket Networks, Inc. 3910 Freedom Circle, Ste. 102A Santa Clara, CA 95054",
      "zh-CHS": "迪诺·法里纳奇·普罗克特网络公司，地址：美国佛罗里达州自由圈3910号。加利福尼亚州圣克拉拉市102A，邮编95054"
    },
    {
      "indent": 3,
      "text": "EMail: dino@procket.com",
      "raw": true,
      "zh-CHS": "translate error, please retry"
    },
    {
      "indent": 3,
      "text": "Tony Li Procket Networks, Inc. 3910 Freedom Circle, Ste. 102A Santa Clara, CA 95054",
      "zh-CHS": "Tony Li Procket Networks，Inc.位于美国佛罗里达州自由圈3910号。加利福尼亚州圣克拉拉市102A，邮编95054"
    },
    {
      "indent": 3,
      "text": "EMail: tli@procket.com",
      "raw": true,
      "zh-CHS": "translate error, please retry"
    },
    {
      "indent": 3,
      "text": "Alex Conta TranSwitch Corporation 3 Enterprise Drive Shelton, CT, 06484",
      "zh-CHS": "Alex Conta TranSwitch Corporation 3企业大道谢尔顿，CT，06484"
    },
    {
      "indent": 3,
      "text": "EMail: aconta@txc.com",
      "raw": true,
      "zh-CHS": "translate error, please retry"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "zh-CHS": "10. 工具书类"
    },
    {
      "indent": 3,
      "text": "[1] Rosen, E., Viswanathan, A., and R. Callon, \"Multiprotocol Label Switching Architecture\", RFC 3031, January 2001.",
      "zh-CHS": "[1] Rosen，E.，Viswanathan，A.，和R.Callon，“多协议标签交换体系结构”，RFC 30312001年1月。"
    },
    {
      "indent": 3,
      "text": "[2] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "zh-CHS": "[2] Bradner，S.，“RFC中用于表示需求水平的关键词”，BCP 14，RFC 2119，1997年3月。"
    },
    {
      "indent": 3,
      "text": "[3] Postel, J., \"Internet Control Message Protocol\", STD 5, RFC 792, September 1981.",
      "zh-CHS": "[3] Postel，J.，“互联网控制消息协议”，STD 5，RFC 792，1981年9月。"
    },
    {
      "indent": 3,
      "text": "[4] Mogul, J. and S. Deering, \"Path MTU Discovery\", RFC 1191, November 1990.",
      "zh-CHS": "[4] Mogul，J.和S.Deering，“MTU发现路径”，RFC191990年11月。"
    },
    {
      "indent": 3,
      "text": "[5] Katz, D., \"IP Router Alert Option\", RFC 2113, February 1997.",
      "zh-CHS": "[5] Katz，D.，“IP路由器警报选项”，RFC 2113，1997年2月。"
    },
    {
      "indent": 3,
      "text": "[6] Simpson, W., Editor, \"The Point-to-Point Protocol (PPP)\", STD 51, RFC 1661, July 1994.",
      "zh-CHS": "[6] 辛普森，W.，编辑，“点对点协议（PPP）”，STD 51，RFC 1661994年7月。"
    },
    {
      "indent": 3,
      "text": "[7] Conta, A. and S. Deering, \"Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6) Specification\", RFC 1885, December 1995.",
      "zh-CHS": "[7] Conta，A.和S.Deering，“互联网协议版本6（IPv6）规范的互联网控制消息协议（ICMPv6）”，RFC 18851995年12月。"
    },
    {
      "indent": 3,
      "text": "[8] McCann, J., Deering, S. and J. Mogul, \"Path MTU Discovery for IP version 6\", RFC 1981, August 1996.",
      "zh-CHS": "[8] McCann，J.，Deering，S.和J.Mogul，“IP版本6的路径MTU发现”，RFC 1981，1996年8月。"
    },
    {
      "indent": 3,
      "text": "[9] Davie, B., Lawrence, J., McCloghrie, K., Rekhter, Y., Rosen, E. and G. Swallow, \"MPLS Using LDP and ATM VC Switching\", RFC 3035, January 2001.",
      "zh-CHS": "[9] Davie，B.，Lawrence，J.，McCloghrie，K.，Rekhter，Y.，Rosen，E.和G.Swallow，“使用LDP和ATM VC交换的MPLS”，RFC 3035，2001年1月。"
    },
    {
      "indent": 0,
      "text": "11. Full Copyright Statement",
      "section_title": true,
      "zh-CHS": "11. 完整版权声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2001). All Rights Reserved.",
      "zh-CHS": "版权所有（C）互联网协会（2001年）。版权所有。"
    },
    {
      "indent": 3,
      "text": "This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the Internet Society or other Internet organizations, except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed, or as required to translate it into languages other than English.",
      "zh-CHS": "本文件及其译本可复制并提供给他人，对其进行评论或解释或协助其实施的衍生作品可全部或部分编制、复制、出版和分发，不受任何限制，前提是上述版权声明和本段包含在所有此类副本和衍生作品中。但是，不得以任何方式修改本文件本身，例如删除版权通知或对互联网协会或其他互联网组织的引用，除非出于制定互联网标准的需要，在这种情况下，必须遵循互联网标准过程中定义的版权程序，或根据需要将其翻译成英语以外的其他语言。"
    },
    {
      "indent": 3,
      "text": "The limited permissions granted above are perpetual and will not be revoked by the Internet Society or its successors or assigns.",
      "zh-CHS": "上述授予的有限许可是永久性的，互联网协会或其继承人或受让人不会撤销。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein is provided on an \"AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "zh-CHS": "本文件和其中包含的信息是按“原样”提供的，互联网协会和互联网工程任务组否认所有明示或暗示的保证，包括但不限于任何保证，即使用本文中的信息不会侵犯任何权利，或对适销性或特定用途适用性的任何默示保证。"
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "zh-CHS": "确认"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "zh-CHS": "RFC编辑功能的资金目前由互联网协会提供。"
    }
  ]
}