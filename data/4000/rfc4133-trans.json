{
  "title": {
    "text": "RFC 4133: Entity MIB (Version 3)",
    "zh-CHS": "RFC 4133"
  },
  "number": 4133,
  "created_at": "2021-11-12 22:43:43.945950+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                         A. Bierman\nRequest for Comments: 4133                                 K. McCloghrie\nObsoletes: 2737                                      Cisco Systems, Inc.\nCategory: Standards Track                                    August 2005",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 25,
      "text": "Entity MIB (Version 3)",
      "zh-CHS": "实体MIB（版本3）"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "zh-CHS": "关于下段备忘"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "zh-CHS": "本文件规定了互联网社区的互联网标准跟踪协议，并要求进行讨论和提出改进建议。有关本协议的标准化状态和状态，请参考当前版本的“互联网官方协议标准”（STD 1）。本备忘录的分发不受限制。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "zh-CHS": "版权所有（C）互联网协会（2005年）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community. In particular, it describes managed objects used for managing multiple logical and physical entities managed by a single SNMP agent. This document specifies version 3 of the Entity MIB, which obsoletes version 2 (RFC 2737).",
      "zh-CHS": "此备忘录定义了管理信息库（MIB）的一部分，用于Internet社区中的网络管理协议。特别是，它描述了用于管理由单个SNMP代理管理的多个逻辑和物理实体的托管对象。本文件规定了实体MIB的第3版，该版本淘汰了第2版（RFC 2737）。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1. The SNMP Management Framework ...................................3\n2. Overview ........................................................3\n   2.1. Terms ......................................................4\n   2.2. Relationship to Community Strings ..........................5\n   2.3. Relationship to SNMP Contexts ..............................5\n   2.4. Relationship to Proxy Mechanisms ...........................6\n   2.5. Relationship to a Chassis MIB ..............................6\n   2.6. Relationship to the Interfaces MIB .........................6\n   2.7. Relationship to the Other MIBs .............................7\n   2.8. Relationship to Naming Scopes ..............................7\n   2.9. Multiple Instances of the Entity MIB .......................7\n   2.10. Re-Configuration of Entities ..............................8\n   2.11. Textual Convention Change .................................8\n   2.12. MIB Structure .............................................8\n         2.12.1. entityPhysical Group ..............................9\n         2.12.2. entityLogical Group ..............................11\n         2.12.3. entityMapping Group ..............................11\n         2.12.4. entityGeneral Group ..............................12\n         2.12.5. entityNotifications Group ........................12\n   2.13. Multiple Agents ..........................................12\n   2.14. Changes Since RFC 2037 ...................................12\n         2.14.1. Textual Conventions ..............................12\n         2.14.2. New entPhysicalTable Objects .....................13\n         2.14.3. New entLogicalTable Objects ......................13\n         2.14.4. Bug Fixes ........................................13\n   2.15. Changes Since RFC 2737 ...................................13\n         2.15.1. Textual Conventions ..............................13\n         2.15.2. New Objects ......................................14\n         2.15.3. Bug Fixes ........................................14\n3. Definitions ....................................................14\n4. Usage Examples .................................................44\n   4.1. Router/Bridge .............................................44\n   4.2. Repeaters .................................................50\n5. Security Considerations ........................................57\n6. IANA Considerations ............................................58\n7. Acknowledgements ...............................................59\n8. References .....................................................59\n   8.1. Normative References ......................................59\n   8.2. Informative References ....................................59",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. The SNMP Management Framework",
      "section_title": true,
      "zh-CHS": "1. SNMP管理框架"
    },
    {
      "indent": 3,
      "text": "For a detailed overview of the documents that describe the current Internet-Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].",
      "zh-CHS": "有关描述当前互联网标准管理框架的文件的详细概述，请参阅RFC 3410[RFC3410]第7节。"
    },
    {
      "indent": 3,
      "text": "Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB. MIB objects are generally accessed through the Simple Network Management Protocol (SNMP). Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI). This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580 [RFC2580].",
      "zh-CHS": "托管对象通过虚拟信息存储（称为管理信息库或MIB）进行访问。MIB对象通常通过简单网络管理协议（SNMP）进行访问。MIB中的对象是使用管理信息结构（SMI）中定义的机制定义的。本备忘录规定了符合SMIv2的MIB模块，如STD 58、RFC 2578[RFC2578]、STD 58、RFC 2579[RFC2579]和STD 58、RFC 2580[RFC2580]所述。"
    },
    {
      "indent": 0,
      "text": "2. Overview",
      "section_title": true,
      "zh-CHS": "2. 概述"
    },
    {
      "indent": 3,
      "text": "There is a need for a standardized way of representing a single agent, which supports multiple instances of one MIB. This is presently true for at least 3 standard MIBs, and is likely to become true for more and more MIBs as time passes. For example:",
      "zh-CHS": "需要一种表示单个代理的标准化方法，它支持一个MIB的多个实例。目前至少有3个标准MIB是这样，随着时间的推移，越来越多的MIB可能会这样。例如："
    },
    {
      "indent": 3,
      "text": "- multiple instances of a bridge supported within a single device that has a single agent;",
      "zh-CHS": "- 具有单个代理的单个设备内支持的网桥的多个实例；"
    },
    {
      "indent": 3,
      "text": "- multiple repeaters supported by a single agent;",
      "zh-CHS": "- 由单个代理支持的多个中继器；"
    },
    {
      "indent": 3,
      "text": "- multiple OSPF backbone areas, each operating as part of its own Autonomous System, and each identified by the same area-id (e.g., 0.0.0.0), supported inside a single router with one agent.",
      "zh-CHS": "- 多个OSPF主干区域，每个区域作为其自身自治系统的一部分运行，并且每个区域由同一个区域id（例如，0.0.0.0）标识，在一个路由器内支持一个代理。"
    },
    {
      "indent": 3,
      "text": "The single agent present in each of these cases implies a relationship binds these entities. Effectively, there is some \"overall\" physical entity which houses the sum of the things managed by that one agent, i.e., there are multiple \"logical\" entities within a single physical entity. Sometimes, the overall physical entity contains multiple (smaller) physical entities, and each logical entity is associated with a particular physical entity. Sometimes, the overall physical entity is a \"compound\" of multiple physical entities (e.g., a stack of stackable hubs).",
      "zh-CHS": "在每种情况下，存在的单个代理意味着这些实体之间存在一种关系。实际上，存在一些“整体”物理实体，其中包含由该代理管理的事物的总和，即，在单个物理实体中存在多个“逻辑”实体。有时，整个物理实体包含多个（较小）物理实体，并且每个逻辑实体与特定物理实体相关联。有时，整个物理实体是多个物理实体的“复合物”（例如，一堆可堆叠的集线器）。"
    },
    {
      "indent": 3,
      "text": "What is needed is a way to determine exactly which logical entities are managed by the agent (with some version of SNMP) in order to communicate with the agent about a particular logical entity. When different logical entities are associated with different physical entities within the overall physical entity, it is also useful to be able to use this information to distinguish between logical entities.",
      "zh-CHS": "需要的是一种方法来准确地确定代理（使用某些版本的SNMP）管理哪些逻辑实体，以便与代理就特定逻辑实体进行通信。当不同的逻辑实体与整个物理实体中的不同物理实体相关联时，能够使用此信息来区分逻辑实体也很有用。"
    },
    {
      "indent": 3,
      "text": "In these situations, there is no need for varbinds for multiple logical entities to be referenced in the same SNMP message (although that might be useful in the future). Rather, it is sufficient, and in some situations preferable, to have the context/community in the message identify the logical entity to which the varbinds apply.",
      "zh-CHS": "在这些情况下，在同一个SNMP消息中引用多个逻辑实体不需要varbinds（尽管这在将来可能有用）。相反，让消息中的上下文/社区标识varbind应用的逻辑实体就足够了，而且在某些情况下更可取。"
    },
    {
      "indent": 3,
      "text": "Version 2 of this MIB addresses new requirements, which have emerged since the publication of the first Entity MIB (RFC 2037 [RFC2037]). There is a need for a standardized way of providing non-volatile, administratively-assigned identifiers for physical components represented with the Entity MIB. There is also a need to align the Entity MIB with the SNMPv3 administrative framework (STD 62, RFC 3411 [RFC3411]). Implementation experience has shown that additional physical component attributes are also desirable.",
      "zh-CHS": "该MIB的第2版解决了自发布第一个实体MIB（RFC 2037[RFC2037]）以来出现的新需求。需要一种标准化的方法，为实体MIB表示的物理组件提供非易失性的、管理分配的标识符。还需要将实体MIB与SNMPv3管理框架（STD 62，RFC 3411[RFC3411]）对齐。实施经验表明，附加的物理组件属性也是可取的。"
    },
    {
      "indent": 3,
      "text": "Version 3 of this MIB addresses new requirements, which have emerged since the publication of the second Entity MIB (RFC 2737 [RFC2737]). There is a need to identify physical entities that are central processing units (CPUs) and a need to provide a textual convention that identifies an entPhysicalIndex value or zero, where the value zero has application-specific semantics. Two new objects have been added to the entPhysicalTable to identify the manufacturing date and provide additional URIs for a particular physical entity.",
      "zh-CHS": "该MIB的第3版解决了自第二个实体MIB（RFC 2737[RFC2737]）发布以来出现的新需求。需要识别作为中央处理器（CPU）的物理实体，并且需要提供一个文本约定来识别entPhysicalIndex值或零，其中值零具有特定于应用程序的语义。entPhysicalTable中添加了两个新对象，以标识制造日期并为特定物理实体提供附加URI。"
    },
    {
      "indent": 0,
      "text": "2.1. Terms",
      "section_title": true,
      "zh-CHS": "2.1. 条款"
    },
    {
      "indent": 3,
      "text": "Some new terms are used throughout this document:",
      "zh-CHS": "本文件中使用了一些新术语："
    },
    {
      "indent": 3,
      "text": "- Naming Scope A \"naming scope\" represents the set of information that may be potentially accessed through a single SNMP operation. All instances within the naming scope share the same unique identifier space. For SNMPv1, a naming scope is identified by the value of the associated 'entLogicalCommunity' instance. For SNMPv3, the term 'context' is used instead of 'naming scope'. The complete definition of an SNMP context can be found in section 3.3.1 of RFC 3411 [RFC3411].",
      "zh-CHS": "- 命名范围“命名范围”表示可能通过单个SNMP操作访问的信息集。命名范围内的所有实例共享相同的唯一标识符空间。对于SNMPv1，命名范围由关联的“entLogicalCommunity”实例的值标识。对于SNMPv3，使用术语“上下文”而不是“命名范围”。SNMP上下文的完整定义见RFC 3411[RFC3411]第3.3.1节。"
    },
    {
      "indent": 3,
      "text": "- Multi-Scoped Object A MIB object, for which identical instance values identify different managed information in different naming scopes, is called a \"multi-scoped\" MIB object.",
      "zh-CHS": "- 多作用域对象MIB对象称为“多作用域”MIB对象，其相同的实例值标识不同命名作用域中的不同托管信息。"
    },
    {
      "indent": 3,
      "text": "- Single-Scoped Object A MIB object, for which identical instance values identify the same managed information in different naming scopes, is called a \"single-scoped\" MIB object.",
      "zh-CHS": "- 单作用域对象MIB对象称为“单作用域”MIB对象，其相同的实例值标识不同命名作用域中相同的托管信息。"
    },
    {
      "indent": 3,
      "text": "- Logical Entity A managed system contains one or more logical entities, each represented by at most one instantiation of each of a particular set of MIB objects. A set of management functions is associated with each logical entity. Examples of logical entities include routers, bridges, print-servers, etc.",
      "zh-CHS": "- 逻辑实体受管系统包含一个或多个逻辑实体，每个逻辑实体最多由一组特定MIB对象的一个实例化表示。一组管理功能与每个逻辑实体相关联。逻辑实体的示例包括路由器、网桥、打印服务器等。"
    },
    {
      "indent": 3,
      "text": "- Physical Entity A \"physical entity\" or \"physical component\" represents an identifiable physical resource within a managed system. Zero or more logical entities may utilize a physical resource at any given time. Determining which physical components are represented by an agent in the EntPhysicalTable is an implementation-specific matter. Typically, physical resources (e.g., communications ports, backplanes, sensors, daughter-cards, power supplies, the overall chassis), which can be managed via functions associated with one or more logical entities, are included in the MIB.",
      "zh-CHS": "- 物理实体“物理实体”或“物理组件”表示管理系统内的可识别物理资源。零个或多个逻辑实体可在任何给定时间使用物理资源。确定哪些物理组件由EntPhysicalTable中的代理表示是一个特定于实现的问题。通常，MIB中包括可通过与一个或多个逻辑实体相关联的功能进行管理的物理资源（例如，通信端口、背板、传感器、子卡、电源、整个机箱）。"
    },
    {
      "indent": 3,
      "text": "- Containment Tree Each physical component may be modeled as 'contained' within another physical component. A \"containment-tree\" is the conceptual sequence of entPhysicalIndex values that uniquely specifies the exact physical location of a physical component within the managed system. It is generated by 'following and recording' each 'entPhysicalContainedIn' instance 'up the tree towards the root', until a value of zero indicating no further containment is found.",
      "zh-CHS": "- 包含树每个物理组件可以建模为“包含”在另一个物理组件中。“包含树”是entPhysicalIndex值的概念序列，它唯一地指定了托管系统中物理组件的确切物理位置。它是通过“跟踪并记录”树上指向根的“实例”中的每个“entPhysicalContainedIn”生成的，直到值为零表示未找到进一步的包含。"
    },
    {
      "indent": 0,
      "text": "2.2. Relationship to Community Strings",
      "section_title": true,
      "zh-CHS": "2.2. 与社区字符串的关系"
    },
    {
      "indent": 3,
      "text": "For community-based SNMP, differentiating logical entities is one (but not the only) purpose of the community string (RFC 1157 [RFC1157]). This is accommodated by representing each community string as a logical entity.",
      "zh-CHS": "对于基于社区的SNMP，区分逻辑实体是社区字符串（RFC 1157[RFC1157]）的一个（但不是唯一）目的。这可以通过将每个社区字符串表示为逻辑实体来实现。"
    },
    {
      "indent": 3,
      "text": "Note that different logical entities may share the same naming scope and, therefore, the same values of entLogicalCommunity. This is possible, providing they have no need for the same instance of a MIB object to represent different managed information.",
      "zh-CHS": "请注意，不同的逻辑实体可能共享相同的命名范围，因此entLogicalCommunity的值相同。这是可能的，前提是它们不需要MIB对象的同一实例来表示不同的托管信息。"
    },
    {
      "indent": 0,
      "text": "2.3. Relationship to SNMP Contexts",
      "section_title": true,
      "zh-CHS": "2.3. 与SNMP上下文的关系"
    },
    {
      "indent": 3,
      "text": "Version 2 of the Entity MIB contains support for associating SNMPv3 contexts with logical entities. Two new MIB objects, defining an SnmpEngineID and ContextName pair, are used together to identify an SNMP context associated with a logical entity. This context can be used (in conjunction with the entLogicalTAddress and entLogicalTDomain MIB objects) to send SNMPv3 messages on behalf of a particular logical entity.",
      "zh-CHS": "实体MIB的版本2支持将SNMPv3上下文与逻辑实体关联。两个新的MIB对象（定义SnmpEngineID和ContextName对）一起用于标识与逻辑实体关联的SNMP上下文。此上下文可用于（与EntLogicalAddress和EntLogicalDomain MIB对象一起）代表特定逻辑实体发送SNMPv3消息。"
    },
    {
      "indent": 0,
      "text": "2.4. Relationship to Proxy Mechanisms",
      "section_title": true,
      "zh-CHS": "2.4. 与代理机制的关系"
    },
    {
      "indent": 3,
      "text": "The Entity MIB is designed to allow functional component discovery. The administrative relationships between different logical entities are not visible in any Entity MIB tables. A Network Management System (NMS) cannot determine whether MIB instances in different naming scopes are realized locally or remotely (e.g., via some proxy mechanism) by examining any particular Entity MIB objects.",
      "zh-CHS": "实体MIB旨在允许功能组件发现。不同逻辑实体之间的管理关系在任何实体MIB表中都不可见。网络管理系统（NMS）无法通过检查任何特定实体MIB对象来确定不同命名范围内的MIB实例是本地实现还是远程实现（例如，通过某种代理机制）。"
    },
    {
      "indent": 3,
      "text": "The management of administrative framework functions is not an explicit goal of the Entity MIB WG at this time. This new area of functionality may be revisited after some operational experience with the Entity MIB is gained.",
      "zh-CHS": "目前，管理框架职能的管理不是实体MIB工作组的明确目标。在获得实体MIB的一些操作经验后，可以重新访问这个新的功能领域。"
    },
    {
      "indent": 3,
      "text": "Note that for community-based versions of SNMP, a network administrator will likely be able to associate community strings with naming scopes that have proprietary mechanisms, as a matter of configuration. There are no mechanisms for managing naming scopes defined in this MIB.",
      "zh-CHS": "请注意，对于基于社区的SNMP版本，网络管理员可能能够将社区字符串与具有专有机制的命名范围相关联，这是一个配置问题。没有管理此MIB中定义的命名范围的机制。"
    },
    {
      "indent": 0,
      "text": "2.5. Relationship to a Chassis MIB",
      "section_title": true,
      "zh-CHS": "2.5. 与机箱MIB的关系"
    },
    {
      "indent": 3,
      "text": "Some readers may recall that a previous IETF working group attempted to define a Chassis MIB. No consensus was reached by that working group, possibly because its scope was too broad. As such, it is not the purpose of this MIB to be a \"Chassis MIB replacement\", nor is it within the scope of this MIB to contain all the information which might be necessary to manage a \"chassis\". On the other hand, the entities represented by an implementation of this MIB might well be contained in a chassis.",
      "zh-CHS": "一些读者可能还记得，以前的IETF工作组曾试图定义机箱MIB。该工作组没有达成共识，可能是因为其范围太广。因此，此MIB的目的不是“机箱MIB替换”，也不在此MIB的范围内，包含管理“机箱”所需的所有信息。另一方面，此MIB的实现所表示的实体很可能包含在机箱中。"
    },
    {
      "indent": 0,
      "text": "2.6. Relationship to the Interfaces MIB",
      "section_title": true,
      "zh-CHS": "2.6. 与接口MIB的关系"
    },
    {
      "indent": 3,
      "text": "The Entity MIB contains a mapping table identifying physical components that have 'external values' (e.g., ifIndex) associated with them within a given naming scope. This table can be used to identify the physical location of each interface in the ifTable (RFC 2863 [RFC2863]). Because ifIndex values in different contexts are not related to one another, the interface to physical component associations are relative to the same logical entity within the agent.",
      "zh-CHS": "实体MIB包含一个映射表，标识在给定命名范围内具有与其关联的“外部值”（如ifIndex）的物理组件。此表可用于确定ifTable（RFC 2863[RFC2863]）中每个接口的物理位置。由于不同上下文中的iIndex值彼此不相关，因此物理组件关联的接口相对于代理中的同一逻辑实体。"
    },
    {
      "indent": 3,
      "text": "The Entity MIB also contains 'entPhysicalName' and 'entPhysicalAlias' objects, which approximate the semantics of the 'ifName' and 'ifAlias' objects (respectively) from the Interfaces MIB [RFC2863], for all types of physical components.",
      "zh-CHS": "实体MIB还包含“entPhysicalName”和“entPhysicalAlias”对象，它们近似于接口MIB[RFC2863]中所有类型物理组件的“ifName”和“ifAlias”对象（分别）的语义。"
    },
    {
      "indent": 0,
      "text": "2.7. Relationship to the Other MIBs",
      "section_title": true,
      "zh-CHS": "2.7. 与其他MIB的关系"
    },
    {
      "indent": 3,
      "text": "The Entity MIB contains a mapping table identifying physical components that have identifiers from other standard MIBs associated with them. For example, this table can be used along with the physical mapping table to identify the physical location of each repeater port in the rptrPortTable, or each interface in the ifTable.",
      "zh-CHS": "实体MIB包含一个映射表，用于标识物理组件，这些物理组件具有与之关联的其他标准MIB的标识符。例如，此表可与物理映射表一起使用，以标识rptrPortTable中每个中继器端口或ifTable中每个接口的物理位置。"
    },
    {
      "indent": 0,
      "text": "2.8. Relationship to Naming Scopes",
      "section_title": true,
      "zh-CHS": "2.8. 与命名范围的关系"
    },
    {
      "indent": 3,
      "text": "There is some question as to which MIB objects may be returned within a given naming scope. MIB objects which are not multi-scoped within a managed system are likely to ignore context information in implementation. In such a case, it is likely such objects will be returned in all naming scopes (e.g., not just the 'default' naming scope or the SNMPv3 default context).",
      "zh-CHS": "关于在给定的命名范围内可以返回哪些MIB对象，存在一些问题。在托管系统中不是多作用域的MIB对象在实现中可能会忽略上下文信息。在这种情况下，很可能会在所有命名范围（例如，不只是“默认”命名范围或SNMPv3默认上下文）中返回此类对象。"
    },
    {
      "indent": 3,
      "text": "For example, a community string used to access the management information for logical device 'bridge2' may allow access to all the non-bridge related objects in the 'default' naming scope, as well as a second instance of the Bridge MIB (RFC 1493 [RFC1493]).",
      "zh-CHS": "例如，用于访问逻辑设备“bridge2”的管理信息的社区字符串可能允许访问“默认”命名范围内的所有非网桥相关对象，以及网桥MIB的第二个实例（RFC 1493[RFC1493]）。"
    },
    {
      "indent": 3,
      "text": "The isolation of single-scoped MIB objects by the agent is an implementation-specific matter. An agent may wish to limit the objects returned in a particular naming scope to only the multi-scoped objects in that naming scope (e.g., system group and the Bridge MIB). In this case, all single-scoped management information would belong to a common naming scope (e.g., 'default'), which itself may contain some multi-scoped objects (e.g., system group).",
      "zh-CHS": "代理对单作用域MIB对象的隔离是一个特定于实现的问题。代理可能希望将特定命名范围内返回的对象限制为该命名范围内的多作用域对象（例如，系统组和网桥MIB）。在这种情况下，所有单作用域管理信息将属于一个公共命名作用域（例如，“默认”），该命名作用域本身可能包含一些多作用域对象（例如，系统组）。"
    },
    {
      "indent": 0,
      "text": "2.9. Multiple Instances of the Entity MIB",
      "section_title": true,
      "zh-CHS": "2.9. 实体MIB的多个实例"
    },
    {
      "indent": 3,
      "text": "It is possible that more than one agent may exist in a managed system. In such cases, multiple instances of the Entity MIB (representing the same managed objects) may be available to an NMS.",
      "zh-CHS": "托管系统中可能存在多个代理。在这种情况下，NMS可以使用实体MIB的多个实例（表示相同的托管对象）。"
    },
    {
      "indent": 3,
      "text": "In order to reduce complexity for agent implementation, multiple instances of the Entity MIB are not required to be equivalent or even consistent. An NMS may be able to 'align' instances returned by different agents by examining the columns of each table, but vendor-specific identifiers and (especially) index values are likely to be different. Each agent may be managing different subsets of the entire chassis as well.",
      "zh-CHS": "为了降低代理实现的复杂性，实体MIB的多个实例不需要等价甚至一致。NMS可能能够通过检查每个表的列来“对齐”不同代理返回的实例，但供应商特定的标识符和（特别是）索引值可能不同。每个代理也可以管理整个机箱的不同子集。"
    },
    {
      "indent": 3,
      "text": "When all of a physically-modular device is represented by a single agent, the entry (for which entPhysicalContainedIn has the value zero) would likely have 'chassis' as the value of its entPhysicalClass. Alternatively, for an agent on a module where the",
      "zh-CHS": "当所有物理模块化设备都由单个代理表示时，条目（entPhysicalContainedIn的值为零）可能将“机箱”作为其entPhysicalClass的值。或者，对于模块上的代理"
    },
    {
      "indent": 3,
      "text": "agent represents only the physical entities on that module (not those on other modules), the entry (for which entPhysicalContainedIn has the value zero) would likely have 'module' as the value of its entPhysicalClass.",
      "zh-CHS": "代理仅表示该模块上的物理实体（而不是其他模块上的实体），条目（entPhysicalContainedIn的值为零）可能将“module”作为其entPhysicalClass的值。"
    },
    {
      "indent": 3,
      "text": "An agent implementation of the entLogicalTable is not required to contain information about logical entities managed primarily by other agents. That is, the entLogicalTAddress and entLogicalTDomain objects in the entLogicalTable are provided to support an historical multiplexing mechanism, not to identify other SNMP agents.",
      "zh-CHS": "entLogicalTable的代理实现不需要包含主要由其他代理管理的逻辑实体的信息。也就是说，提供entLogicalTable中的EntLogicalAddress和EntLogicalDomain对象是为了支持历史多路复用机制，而不是为了识别其他SNMP代理。"
    },
    {
      "indent": 3,
      "text": "Note that the Entity MIB is a single-scoped MIB, in the event an agent represents the MIB in different naming scopes.",
      "zh-CHS": "请注意，实体MIB是单作用域MIB，如果代理在不同的命名作用域中表示MIB。"
    },
    {
      "indent": 0,
      "text": "2.10. Re-Configuration of Entities",
      "section_title": true,
      "zh-CHS": "2.10. 实体的重新配置"
    },
    {
      "indent": 3,
      "text": "Most of the MIB objects defined in this MIB have, at most, a read-only MAX-ACCESS clause. This is a conscious decision by the working group to limit this MIB's scope. The second version of the Entity MIB allows a network administrator to configure some common attributes of physical components.",
      "zh-CHS": "此MIB中定义的大多数MIB对象最多有一个只读MAX-ACCESS子句。这是工作组有意识地决定限制MIB的范围。实体MIB的第二个版本允许网络管理员配置物理组件的一些公共属性。"
    },
    {
      "indent": 0,
      "text": "2.11. Textual Convention Change",
      "section_title": true,
      "zh-CHS": "2.11. 文本约定变更"
    },
    {
      "indent": 3,
      "text": "Version 1 of the Entity MIB contains three MIB objects defined with the (now obsolete) DisplayString textual convention. In version 2 of the Entity MIB, the syntax for these objects has been updated to use the (now preferred) SnmpAdminString textual convention.",
      "zh-CHS": "实体MIB的版本1包含三个MIB对象，它们是用（现已过时的）DisplayString文本约定定义的。在实体MIB的版本2中，这些对象的语法已更新为使用（现在首选）SNMPAdministring文本约定。"
    },
    {
      "indent": 3,
      "text": "The working group realizes that this change is not strictly supported by SMIv2. In our judgment, the alternative of deprecating the old objects and defining new objects would have a more adverse impact on backward compatibility and interoperability, given the particular semantics of these objects.",
      "zh-CHS": "工作组意识到，SMIv2并不严格支持此更改。根据我们的判断，考虑到这些对象的特定语义，弃用旧对象和定义新对象的替代方案将对向后兼容性和互操作性产生更不利的影响。"
    },
    {
      "indent": 0,
      "text": "2.12. MIB Structure",
      "section_title": true,
      "zh-CHS": "2.12. MIB结构"
    },
    {
      "indent": 3,
      "text": "The Entity MIB contains five groups of MIB objects:",
      "zh-CHS": "实体MIB包含五组MIB对象："
    },
    {
      "indent": 3,
      "text": "- entityPhysical group Describes the physical entities managed by a single agent.",
      "zh-CHS": "- entityPhysical group描述由单个代理管理的物理实体。"
    },
    {
      "indent": 3,
      "text": "- entityLogical group Describes the logical entities managed by a single agent.",
      "zh-CHS": "- entityLogical group描述由单个代理管理的逻辑实体。"
    },
    {
      "indent": 3,
      "text": "- entityMapping group Describes the associations between the physical entities, logical entities, interfaces, and non-interface ports managed by a single agent.",
      "zh-CHS": "- entityMapping组描述由单个代理管理的物理实体、逻辑实体、接口和非接口端口之间的关联。"
    },
    {
      "indent": 3,
      "text": "- entityGeneral group Describes general system attributes shared by potentially all types of entities managed by a single agent.",
      "zh-CHS": "- entityGeneral group描述由单个代理管理的所有类型实体共享的常规系统属性。"
    },
    {
      "indent": 3,
      "text": "- entityNotifications group Contains status indication notifications.",
      "zh-CHS": "- entityNotifications组包含状态指示通知。"
    },
    {
      "indent": 0,
      "text": "2.12.1. entityPhysical Group",
      "section_title": true,
      "zh-CHS": "2.12.1. 实体物理组"
    },
    {
      "indent": 3,
      "text": "This group contains a single table to identify physical system components, called the entPhysicalTable.",
      "zh-CHS": "此组包含一个用于标识物理系统组件的表，称为entPhysicalTable。"
    },
    {
      "indent": 3,
      "text": "The entPhysicalTable contains one row per physical entity, and must always contain at least one row for an \"overall\" physical entity, which should have an entPhysicalClass value of 'stack(11)', 'chassis(3)' or 'module(9)'.",
      "zh-CHS": "entPhysicalTable每个物理实体包含一行，并且对于“总体”物理实体，必须始终至少包含一行，其entPhysicalClass值应为“堆栈（11）”、“机箱（3）”或“模块（9）”。"
    },
    {
      "indent": 3,
      "text": "Each row is indexed by an arbitrary, small integer, and contains a description and type of the physical entity. It also optionally contains the index number of another entPhysicalEntry, indicating a containment relationship between the two.",
      "zh-CHS": "每一行都由一个任意的小整数索引，并包含物理实体的描述和类型。它还可以选择包含另一个entPhysicalEntry的索引号，指示两者之间的包含关系。"
    },
    {
      "indent": 3,
      "text": "Version 2 of the Entity MIB provides additional MIB objects for each physical entity. Some common read-only attributes have been added, as well as three writable string objects.",
      "zh-CHS": "实体MIB的版本2为每个物理实体提供了额外的MIB对象。添加了一些常见的只读属性，以及三个可写字符串对象。"
    },
    {
      "indent": 3,
      "text": "- entPhysicalAlias This string can be used by an NMS as a non-volatile identifier for the physical component. Maintaining a non-volatile string for every physical component represented in the entPhysicalTable can be costly and unnecessary. An agent may algorithmically generate 'entPhysicalAlias' strings for particular entries (e.g., based on the entPhysicalClass value).",
      "zh-CHS": "- entPhysicalAlias此字符串可由NMS用作物理组件的非易失性标识符。为entPhysicalTable中表示的每个物理组件维护一个非易失性字符串可能代价高昂且不必要。代理可以通过算法为特定条目生成“entPhysicalAlias”字符串（例如，基于entPhysicalClass值）。"
    },
    {
      "indent": 3,
      "text": "- entPhysicalAssetID This string is provided to store a user-specific asset identifier for removable physical components. In order to reduce the non-volatile storage needed by a particular agent, a network administrator should only assign asset identifiers to physical entities that are field-replaceable (i.e., not permanently contained within another physical entity).",
      "zh-CHS": "- entPhysicalAssetID此字符串用于存储可移动物理组件的用户特定资产标识符。为了减少特定代理所需的非易失性存储，网络管理员应仅将资产标识符分配给可现场更换的物理实体（即，不永久包含在另一个物理实体中）。"
    },
    {
      "indent": 3,
      "text": "- entPhysicalSerialNum This string is provided to store a vendor-specific serial number string for physical components. This writable object is used when an agent cannot identify the serial numbers of all installed physical entities, and a network administrator wishes to configure the non-volatile serial number strings manually (via an NMS application).",
      "zh-CHS": "- entPhysicalSerialNum此字符串用于存储物理组件的特定于供应商的序列号字符串。当代理无法识别所有已安装物理实体的序列号，并且网络管理员希望手动（通过NMS应用程序）配置非易失性序列号字符串时，将使用此可写对象。"
    },
    {
      "indent": 3,
      "text": "Version 3 of the Entity MIB provides two additional MIB objects for each physical entity:",
      "zh-CHS": "实体MIB的版本3为每个物理实体提供了两个额外的MIB对象："
    },
    {
      "indent": 3,
      "text": "- entPhysicalMfgDate This object contains the date of manufacturing of the managed entity. If the manufacturing date is unknown or not supported the object is not instantiated. The special value '0000000000000000'H may also be returned in this case.",
      "zh-CHS": "- EntPhysicalFGDate此对象包含受管实体的制造日期。如果制造日期未知或不受支持，则不会实例化对象。在这种情况下，还可能返回特殊值“0000000000000000”。"
    },
    {
      "indent": 3,
      "text": "- entPhysicalUris This object provides additional identification information about the physical entity.",
      "zh-CHS": "- entPhysicalUris此对象提供有关物理实体的附加标识信息。"
    },
    {
      "indent": 5,
      "text": "This object contains one or more Uniform Resource Identifiers (URIs) and, therefore, the syntax of this object must conform to RFC 3986 [RFC3986] section 2. Uniform Resource Names (URNs), RFC 3406 [RFC3406], are resource identifiers with the specific requirements for enabling location independent identification of a resource, as well as longevity of reference. URNs are part of the larger URI family with the specific goal of providing persistent naming of resources. URI schemes and URN name spaces are registered by IANA (see http://www.iana.org/assignments/uri-schemes and http://www.iana.org/assignments/urn-namespaces).",
      "zh-CHS": "此对象包含一个或多个统一资源标识符（URI），因此，此对象的语法必须符合RFC 3986[RFC3986]第2节的规定。统一资源名称（URN）（RFC 3406[RFC3406]）是资源标识符，具有实现资源位置独立标识以及引用寿命的特定要求。URN是更大的URI系列的一部分，其具体目标是提供资源的持久命名。URI方案和URN名称空间由IANA注册（请参阅http://www.iana.org/assignments/uri-schemes 和http://www.iana.org/assignments/urn-namespaces)."
    },
    {
      "indent": 5,
      "text": "For example, the entPhysicalUris object may be used to encode a URI containing a Common Language Equipment Identifier (CLEI) URN for the managed physical entity. The URN name space for CLEIs is defined in [RFC4152], and the CLEI format is defined in [T1.213][T1.213a]. For example, an entPhysicalUris instance may have the value of",
      "zh-CHS": "例如，EntPhysicalURI对象可用于编码包含托管物理实体的公共语言设备标识符（CLEI）URN的URI。CLEI的URN名称空间在[RFC4152]中定义，CLEI格式在[T1.213][T1.213a]中定义。例如，EntPhysicalURI实例的值可能为"
    },
    {
      "indent": 8,
      "text": "URN:CLEI:D4CE18B7AA",
      "zh-CHS": "URN:CLEI:D4CE18B7AA"
    },
    {
      "indent": 5,
      "text": "[RFC3986] and [RFC4152] identify this as a URI in the CLEI URN name space. The specific CLEI code, D4CE18B7AA, is based on the example provided in [T1.213a].",
      "zh-CHS": "[RFC3986]和[RFC4152]将其标识为CLEI URN名称空间中的URI。具体的CLEI代码D4CE18B7AA基于[T1.213a]中提供的示例。"
    },
    {
      "indent": 5,
      "text": "Multiple URIs may be present and are separated by white space characters. Leading and trailing white space characters are ignored.",
      "zh-CHS": "可能存在多个URI，并由空格字符分隔。忽略前导和尾随空格字符。"
    },
    {
      "indent": 5,
      "text": "If no additional identification information is known about the physical entity or supported, the object is not instantiated.",
      "zh-CHS": "如果不知道或不支持有关物理实体的其他标识信息，则不会实例化该对象。"
    },
    {
      "indent": 0,
      "text": "2.12.2. entityLogical Group",
      "section_title": true,
      "zh-CHS": "2.12.2. 实体逻辑组"
    },
    {
      "indent": 3,
      "text": "This group contains a single table to identify logical entities, called the entLogicalTable.",
      "zh-CHS": "该组包含一个用于标识逻辑实体的表，称为entLogicalTable。"
    },
    {
      "indent": 3,
      "text": "The entLogicalTable contains one row per logical entity. Each row is indexed by an arbitrary, small integer and contains a name, description, and type of the logical entity. It also contains information to allow access to the MIB information for the logical entity. This includes SNMP versions that use a community name (with some form of implied context representation) and SNMP versions that use the SNMP ARCH [RFC3411] method of context identification.",
      "zh-CHS": "entLogicalTable每个逻辑实体包含一行。每一行都由一个任意的小整数索引，并包含逻辑实体的名称、描述和类型。它还包含允许访问逻辑实体的MIB信息的信息。这包括使用团体名称（具有某种形式的隐含上下文表示）的SNMP版本和使用上下文标识的SNMP ARCH[RFC3411]方法的SNMP版本。"
    },
    {
      "indent": 3,
      "text": "If an agent represents multiple logical entities with this MIB, then this group must be implemented for all logical entities known to the agent.",
      "zh-CHS": "如果代理使用此MIB表示多个逻辑实体，则必须为代理已知的所有逻辑实体实现此组。"
    },
    {
      "indent": 3,
      "text": "If an agent represents a single logical entity, or multiple logical entities within a single naming scope, then implementation of this group may be omitted by the agent.",
      "zh-CHS": "如果代理表示单个逻辑实体或单个命名范围内的多个逻辑实体，则代理可能会忽略此组的实现。"
    },
    {
      "indent": 0,
      "text": "2.12.3. entityMapping Group",
      "section_title": true,
      "zh-CHS": "2.12.3. 实体映射组"
    },
    {
      "indent": 3,
      "text": "This group contains three tables to identify associations between different system components.",
      "zh-CHS": "此组包含三个表，用于标识不同系统组件之间的关联。"
    },
    {
      "indent": 3,
      "text": "- entLPMappingTable This table contains mappings between entLogicalIndex values (logical entities) and entPhysicalIndex values (the physical components supporting that entity). A logical entity can map to more than one physical component, and more than one logical entity can map to (share) the same physical component. If an agent represents a single logical entity, or multiple logical entities within a single naming scope, then implementation of this table may be omitted by the agent.",
      "zh-CHS": "- entLPMappingTable此表包含entLogicalIndex值（逻辑实体）和entPhysicalIndex值（支持该实体的物理组件）之间的映射。一个逻辑实体可以映射到多个物理组件，多个逻辑实体可以映射（共享）同一个物理组件。如果代理表示单个逻辑实体或单个命名范围内的多个逻辑实体，则代理可能会忽略此表的实现。"
    },
    {
      "indent": 3,
      "text": "- entAliasMappingTable This table contains mappings between entLogicalIndex, entPhysicalIndex pairs, and 'alias' object identifier values. This allows resources managed with other MIBs (e.g., repeater ports, bridge ports, physical and logical interfaces) to be identified in the physical entity hierarchy. Note that each alias identifier is only relevant in a particular naming scope. If an agent represents",
      "zh-CHS": "- entAliasMappingTable此表包含entLogicalIndex、entPhysicalIndex对和“alias”对象标识符值之间的映射。这允许在物理实体层次结构中标识使用其他MIB（例如，中继器端口、网桥端口、物理和逻辑接口）管理的资源。请注意，每个别名标识符仅与特定命名范围相关。如果代理代表"
    },
    {
      "indent": 5,
      "text": "a single logical entity, or multiple logical entities within a single naming scope, then implementation of this table may be omitted by the agent.",
      "zh-CHS": "单个逻辑实体，或单个命名范围内的多个逻辑实体，则代理可以省略此表的实现。"
    },
    {
      "indent": 3,
      "text": "- entPhysicalContainsTable This table contains simple mappings between 'entPhysicalContainedIn' values for each container/'containee' relationship in the managed system. The indexing of this table allows an NMS to quickly discover the 'entPhysicalIndex' values for all children of a given physical entity.",
      "zh-CHS": "- EntPhysicalContainedStable此表包含托管系统中每个容器/容器对象关系的“entPhysicalContainedIn”值之间的简单映射。此表的索引允许NMS快速发现给定物理实体的所有子级的“entPhysicalIndex”值。"
    },
    {
      "indent": 0,
      "text": "2.12.4. entityGeneral Group",
      "section_title": true,
      "zh-CHS": "2.12.4. 实体通用组"
    },
    {
      "indent": 3,
      "text": "This group contains general information relating to the other object groups.",
      "zh-CHS": "此组包含与其他对象组相关的一般信息。"
    },
    {
      "indent": 3,
      "text": "At this time, the entGeneral group contains a single scalar object (entLastChangeTime), which represents the value of sysUptime when any part of the Entity MIB configuration last changed.",
      "zh-CHS": "此时，entGeneral组包含一个标量对象（entLastChangeTime），它表示实体MIB配置的任何部分上次更改时的sysUptime值。"
    },
    {
      "indent": 0,
      "text": "2.12.5. entityNotifications Group",
      "section_title": true,
      "zh-CHS": "2.12.5. 实体通知组"
    },
    {
      "indent": 3,
      "text": "This group contains notification definitions relating to the overall status of the Entity MIB instantiation.",
      "zh-CHS": "此组包含与实体MIB实例化的总体状态相关的通知定义。"
    },
    {
      "indent": 0,
      "text": "2.13. Multiple Agents",
      "section_title": true,
      "zh-CHS": "2.13. 多代理"
    },
    {
      "indent": 3,
      "text": "Even though a primary motivation for this MIB is to represent the multiple logical entities supported by a single agent, another motivation is to represent multiple logical entities supported by multiple agents (in the same \"overall\" physical entity). Indeed, it is implicit in the SNMP architecture that the number of agents is transparent to a network management station.",
      "zh-CHS": "尽管此MIB的主要动机是表示单个代理支持的多个逻辑实体，但另一个动机是表示多个代理支持的多个逻辑实体（在同一个“整体”物理实体中）。实际上，在SNMP体系结构中，代理的数量对网络管理站是透明的。"
    },
    {
      "indent": 3,
      "text": "However, there is no agreement at this time as to the degree of cooperation that should be expected for agent implementations. Therefore, multiple agents within the same managed system are free to implement the Entity MIB independently. (For more information, refer to Section 2.9, \"Multiple Instances of the Entity MIB\".)",
      "zh-CHS": "然而，对于代理实现的预期合作程度，目前还没有达成一致意见。因此，同一管理系统中的多个代理可以独立地实现实体MIB。（有关更多信息，请参阅第2.9节“实体MIB的多个实例”。）"
    },
    {
      "indent": 0,
      "text": "2.14. Changes Since RFC 2037",
      "section_title": true,
      "zh-CHS": "2.14. 自RFC 2037年以来的变化"
    },
    {
      "indent": 0,
      "text": "2.14.1. Textual Conventions",
      "section_title": true,
      "zh-CHS": "2.14.1. 文字约定"
    },
    {
      "indent": 3,
      "text": "The PhysicalClass TC text has been clarified, and a new enumeration to support 'stackable' components has been added. The SnmpEngineIdOrNone TC has been added to support SNMPv3.",
      "zh-CHS": "PhysicalClass TC文本已澄清，并添加了一个新的枚举以支持“可堆叠”组件。已添加SnmpEngineIdOrNone TC以支持SNMPv3。"
    },
    {
      "indent": 0,
      "text": "2.14.2. New entPhysicalTable Objects",
      "section_title": true,
      "zh-CHS": "2.14.2. 新的entPhysicalTable对象"
    },
    {
      "indent": 3,
      "text": "The entPhysicalHardwareRev, entPhysicalFirmwareRev, and entPhysicalSoftwareRev objects have been added for revision identification.",
      "zh-CHS": "已添加entPhysicalHardwareRev、entPhysicalFirmwareRev和entPhysicalSoftwareRev对象以进行版本标识。"
    },
    {
      "indent": 3,
      "text": "The entPhysicalSerialNum, entPhysicalMfgName, entPhysicalModelName, and entPhysicalIsFru objects have been added for better vendor identification for physical components. In the event the agent cannot identify this information, the entPhysicalSerialNum object can be set by a management station.",
      "zh-CHS": "已添加entPhysicalSerialNum、entPhysicalModelName、entPhysicalModelName和entPhysicalIsFru对象，以便更好地识别物理组件的供应商。如果代理无法识别此信息，管理站可以设置entPhysicalSerialNum对象。"
    },
    {
      "indent": 3,
      "text": "The entPhysicalAlias and entPhysicalAssetID objects have been added for better user component identification. These objects are intended to be set by a management station and preserved by the agent across restarts.",
      "zh-CHS": "已添加entPhysicalAlias和entPhysicalAssetID对象，以更好地识别用户组件。这些对象将由管理站设置，并由代理在重新启动期间保留。"
    },
    {
      "indent": 0,
      "text": "2.14.3. New entLogicalTable Objects",
      "section_title": true,
      "zh-CHS": "2.14.3. 新的entLogicalTable对象"
    },
    {
      "indent": 3,
      "text": "The entLogicalContextEngineID and entLogicalContextName objects have been added to provide an SNMP context for SNMPv3 access on behalf of a logical entity.",
      "zh-CHS": "已添加entLogicalContextEngineID和entLogicalContextName对象，以代表逻辑实体为SNMPv3访问提供SNMP上下文。"
    },
    {
      "indent": 0,
      "text": "2.14.4. Bug Fixes",
      "section_title": true,
      "zh-CHS": "2.14.4. 漏洞修补"
    },
    {
      "indent": 3,
      "text": "A bug was fixed in the entLogicalCommunity object. The subrange was incorrect (1..255) and is now (0..255). The description clause has also been clarified. This object is now deprecated.",
      "zh-CHS": "entLogicalCommunity对象中修复了一个bug。子范围不正确（1..255），现在是（0..255）。说明条款也已澄清。此对象现在已弃用。"
    },
    {
      "indent": 3,
      "text": "The entLastChangeTime object description has been changed to generalize the events that cause an update to the last change timestamp.",
      "zh-CHS": "entLastChangeTime对象描述已更改，以概括导致更新到上次更改时间戳的事件。"
    },
    {
      "indent": 3,
      "text": "The syntax was changed from DisplayString to SnmpAdminString for the entPhysicalDescr, entPhysicalName, and entLogicalDescr objects.",
      "zh-CHS": "entPhysicalDescr、entPhysicalName和entLogicalDescr对象的语法已从DisplayString更改为SnmpAdminString。"
    },
    {
      "indent": 0,
      "text": "2.15. Changes Since RFC 2737",
      "section_title": true,
      "zh-CHS": "2.15. 自RFC 2737以来的变化"
    },
    {
      "indent": 0,
      "text": "2.15.1. Textual Conventions",
      "section_title": true,
      "zh-CHS": "2.15.1. 文字约定"
    },
    {
      "indent": 3,
      "text": "The PhysicalIndexOrZero TC has been added to allow objects to reference an entPhysicalIndex value or zero. The PhysicalClass TC has been extended to support a new enumeration for central processing units.",
      "zh-CHS": "添加了PhysicalIndexOrZero TC以允许对象引用entPhysicalIndex值或零。PhysicalClass TC已扩展为支持中央处理器的新枚举。"
    },
    {
      "indent": 0,
      "text": "2.15.2. New Objects",
      "section_title": true,
      "zh-CHS": "2.15.2. 新对象"
    },
    {
      "indent": 3,
      "text": "The entPhysicalMfgDate object has been added to the entPhysicalTable to provide the date of manufacturing of the managed entity.",
      "zh-CHS": "EntPhysicalFGDate对象已添加到entPhysicalTable中，以提供托管实体的制造日期。"
    },
    {
      "indent": 3,
      "text": "The entPhysicalUris object has been added to the entPhysicalTable to provide additional identification information about the physical entity, such as a Common Language Equipment Identifier (CLEI) URN.",
      "zh-CHS": "EntPhysicalURI对象已添加到entPhysicalTable中，以提供有关物理实体的其他标识信息，例如公共语言设备标识符（CLEI）URN。"
    },
    {
      "indent": 0,
      "text": "2.15.3. Bug Fixes",
      "section_title": true,
      "zh-CHS": "2.15.3. 漏洞修补"
    },
    {
      "indent": 3,
      "text": "The syntax was changed from INTEGER to Integer32 for the entPhysicalParentRelPos, entLogicalIndex, and entAliasLogicalIndexOrZero objects, and from INTEGER to PhysicalIndexOrZero for the entPhysicalContainedIn object.",
      "zh-CHS": "entPhysicalParentRelPos、entLogicalIndex和entAliasLogicalIndexOrZero对象的语法从整数更改为整数32，entPhysicalContainedIn对象的语法从整数更改为物理IndexorZero。"
    },
    {
      "indent": 0,
      "text": "3. Definitions",
      "section_title": true,
      "zh-CHS": "3. 定义"
    },
    {
      "indent": 0,
      "text": "ENTITY-MIB DEFINITIONS ::= BEGIN",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "IMPORTS MODULE-IDENTITY, OBJECT-TYPE, mib-2, NOTIFICATION-TYPE, Integer32 FROM SNMPv2-SMI TDomain, TAddress, TEXTUAL-CONVENTION, AutonomousType, RowPointer, TimeStamp, TruthValue, DateAndTime FROM SNMPv2-TC MODULE-COMPLIANCE, OBJECT-GROUP, NOTIFICATION-GROUP FROM SNMPv2-CONF SnmpAdminString FROM SNMP-FRAMEWORK-MIB;",
      "zh-CHS": "从SNMPv2导入MODULE-IDENTITY、OBJECT-TYPE、mib-2、NOTIFICATION-TYPE、Integer32，从SNMPv2导入SMI TDomain、TAddress、text-CONVENTION、AutonomousType、RowPointer、TimeStamp、TruthValue、DateAndTime，从SNMPv2导入TC MODULE-COMPLIANCE、OBJECT-GROUP、NOTIFICATION-GROUP，从SNMPv2 CONF导入snmpadmin，从SNMP-FRAMEWORK-mib导入；"
    },
    {
      "indent": 0,
      "text": "entityMIB MODULE-IDENTITY\n    LAST-UPDATED \"200508100000Z\"\n    ORGANIZATION \"IETF ENTMIB Working Group\"\n    CONTACT-INFO\n            \"        WG E-mail: entmib@ietf.org\n                     Mailing list subscription info:\n                       http://www.ietf.org/mailman/listinfo/entmib",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 21,
      "text": "Andy Bierman ietf@andybierman.com",
      "zh-CHS": "安迪比尔曼ietf@andybierman.com"
    },
    {
      "indent": 21,
      "text": "Keith McCloghrie Cisco Systems Inc. 170 West Tasman Drive San Jose, CA 95134",
      "zh-CHS": "基思·麦克洛赫里思科系统公司，加利福尼亚州圣何塞西塔斯曼大道170号，邮编95134"
    },
    {
      "indent": 21,
      "text": "+1 408-526-5260 kzm@cisco.com\"",
      "zh-CHS": "+1 408-526-5260 kzm@cisco.com\""
    },
    {
      "indent": 4,
      "text": "DESCRIPTION \"The MIB module for representing multiple logical entities supported by a single SNMP agent.",
      "zh-CHS": "DESCRIPTION“用于表示单个SNMP代理支持的多个逻辑实体的MIB模块。"
    },
    {
      "indent": 12,
      "text": "Copyright (C) The Internet Society (2005). This version of this MIB module is part of RFC 4133; see the RFC itself for full legal notices.\"",
      "zh-CHS": "版权所有（C）互联网协会（2005年）。此版本的MIB模块是RFC 4133的一部分；有关完整的法律通知，请参见RFC本身。”"
    },
    {
      "indent": 4,
      "text": "REVISION \"200508100000Z\" DESCRIPTION \"Initial Version of Entity MIB (Version 3). This revision obsoletes RFC 2737. Additions: - cpu(12) enumeration added to PhysicalClass TC - DISPLAY-HINT clause to PhysicalIndex TC - PhysicalIndexOrZero TC - entPhysicalMfgDate object - entPhysicalUris object Changes: - entPhysicalContainedIn SYNTAX changed from INTEGER to PhysicalIndexOrZero",
      "zh-CHS": "修订版“200508100000Z”说明“实体MIB初始版本（第3版）。此修订版淘汰RFC 2737。增补：-cpu（12）枚举添加到PhysicalClass TC-DISPLAY-HINT子句到PhysicalIndex TC-PhysicalIndexOrZero TC-EntPhysicalFGDate对象-entPhysicalUris对象更改：-entPhysicalContainedIn语法从整数更改为PhysicalIndexOrZero"
    },
    {
      "indent": 13,
      "text": "This version published as RFC 4133.\"",
      "zh-CHS": "此版本作为RFC 4133发布。”"
    },
    {
      "indent": 4,
      "text": "REVISION \"199912070000Z\" DESCRIPTION \"Initial Version of Entity MIB (Version 2). This revision obsoletes RFC 2037. This version published as RFC 2737.\"",
      "zh-CHS": "修订版“1999120700NZ”说明“实体MIB的初始版本（第2版）。此修订版淘汰RFC 2037。此版本发布为RFC 2737。”"
    },
    {
      "indent": 4,
      "text": "REVISION        \"199610310000Z\"\nDESCRIPTION\n        \"Initial version (version 1), published as\n         RFC 2037.\"\n::= { mib-2 47 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entityMIBObjects OBJECT IDENTIFIER ::= { entityMIB 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- MIB contains four groups\nentityPhysical OBJECT IDENTIFIER ::= { entityMIBObjects 1 }\nentityLogical  OBJECT IDENTIFIER ::= { entityMIBObjects 2 }\nentityMapping  OBJECT IDENTIFIER ::= { entityMIBObjects 3 }\nentityGeneral  OBJECT IDENTIFIER ::= { entityMIBObjects 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- Textual Conventions\nPhysicalIndex ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT      \"d\"\n    STATUS            current\n    DESCRIPTION\n            \"An arbitrary value that uniquely identifies the physical\n            entity.  The value should be a small, positive integer.\n            Index values for different physical entities are not\n            necessarily contiguous.\"\n    SYNTAX Integer32 (1..2147483647)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "PhysicalIndexOrZero ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT      \"d\"\n    STATUS            current\n    DESCRIPTION\n            \"This textual convention is an extension of the\n            PhysicalIndex convention, which defines a greater than zero\n            value used to identify a physical entity.  This extension\n            permits the additional value of zero.  The semantics of the\n            value zero are object-specific and must, therefore, be\n            defined as part of the description of any object that uses\n            this syntax.  Examples of the usage of this extension are\n            situations where none or all physical entities need to be\n            referenced.\"\n    SYNTAX Integer32 (0..2147483647)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "PhysicalClass ::= TEXTUAL-CONVENTION\n    STATUS            current\n    DESCRIPTION\n            \"An enumerated value which provides an indication of the\n            general hardware type of a particular physical entity.\n            There are no restrictions as to the number of\n            entPhysicalEntries of each entPhysicalClass, which must be\n            instantiated by an agent.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "The enumeration 'other' is applicable if the physical entity class is known, but does not match any of the supported values.",
      "zh-CHS": "如果物理实体类已知，但与任何支持的值都不匹配，则枚举“other”适用。"
    },
    {
      "indent": 12,
      "text": "The enumeration 'unknown' is applicable if the physical entity class is unknown to the agent.",
      "zh-CHS": "如果代理未知物理实体类，则枚举“未知”适用。"
    },
    {
      "indent": 12,
      "text": "The enumeration 'chassis' is applicable if the physical entity class is an overall container for networking equipment. Any class of physical entity, except a stack, may be contained within a chassis; and a chassis may only be contained within a stack.",
      "zh-CHS": "如果物理实体类是网络设备的总体容器，则枚举“机箱”适用。任何类别的物理实体（堆栈除外）都可以包含在机箱中；机箱只能包含在堆栈中。"
    },
    {
      "indent": 12,
      "text": "The enumeration 'backplane' is applicable if the physical entity class is some sort of device for aggregating and forwarding networking traffic, such as a shared backplane in a modular ethernet switch. Note that an agent may model a backplane as a single physical entity, which is actually implemented as multiple discrete physical components (within a chassis or stack).",
      "zh-CHS": "如果物理实体类是用于聚合和转发网络流量的某种设备，例如模块化以太网交换机中的共享背板，则枚举“背板”适用。请注意，代理可以将背板建模为单个物理实体，实际实现为多个离散物理组件（在机箱或堆栈中）。"
    },
    {
      "indent": 12,
      "text": "The enumeration 'container' is applicable if the physical entity class is capable of containing one or more removable physical entities, possibly of different types. For example, each (empty or full) slot in a chassis will be modeled as a container. Note that all removable physical entities should be modeled within a container entity, such as field-replaceable modules, fans, or power supplies. Note that all known containers should be modeled by the agent, including empty containers.",
      "zh-CHS": "如果物理实体类能够包含一个或多个可移动物理实体（可能是不同类型的），则枚举“容器”适用。例如，机箱中的每个（空或满）插槽都将建模为一个容器。请注意，所有可移动物理实体都应在容器实体内建模，如现场可更换模块、风扇或电源。请注意，所有已知容器都应由代理建模，包括空容器。"
    },
    {
      "indent": 12,
      "text": "The enumeration 'powerSupply' is applicable if the physical entity class is a power-supplying component.",
      "zh-CHS": "如果物理实体类是电源供应组件，则枚举“powerSupply”适用。"
    },
    {
      "indent": 12,
      "text": "The enumeration 'fan' is applicable if the physical entity class is a fan or other heat-reduction component.",
      "zh-CHS": "如果物理实体类是风扇或其他散热组件，则枚举“风扇”适用。"
    },
    {
      "indent": 12,
      "text": "The enumeration 'sensor' is applicable if the physical entity class is some sort of sensor, such as a temperature sensor within a router chassis.",
      "zh-CHS": "如果物理实体类是某种传感器，例如路由器机箱内的温度传感器，则枚举“传感器”适用。"
    },
    {
      "indent": 12,
      "text": "The enumeration 'module' is applicable if the physical entity class is some sort of self-contained sub-system. If the enumeration 'module' is removable, then it should be modeled within a container entity, otherwise it should be modeled directly within another physical entity (e.g., a chassis or another module).",
      "zh-CHS": "如果物理实体类是某种自包含子系统，则枚举“模块”适用。如果枚举“模块”是可移动的，则应在容器实体内对其进行建模，否则应直接在另一个物理实体（例如机箱或另一个模块）内对其进行建模。"
    },
    {
      "indent": 12,
      "text": "The enumeration 'port' is applicable if the physical entity class is some sort of networking port, capable of receiving and/or transmitting networking traffic.",
      "zh-CHS": "如果物理实体类是某种网络端口，能够接收和/或发送网络流量，则枚举“端口”适用。"
    },
    {
      "indent": 12,
      "text": "The enumeration 'stack' is applicable if the physical entity class is some sort of super-container (possibly virtual), intended to group together multiple chassis entities. A stack may be realized by a 'virtual' cable, a real interconnect cable, attached to multiple chassis, or may in fact be comprised of multiple interconnect cables. A stack should not be modeled within any other physical entities, but a stack may be contained within another stack. Only chassis entities should be contained within a stack.",
      "zh-CHS": "如果物理实体类是某种超级容器（可能是虚拟的），用于将多个机箱实体组合在一起，则枚举“堆栈”适用。堆栈可以通过连接到多个机箱的“虚拟”电缆、真实互连电缆实现，或者实际上可以由多个互连电缆组成。堆栈不应在任何其他物理实体中建模，但堆栈可能包含在另一个堆栈中。堆栈中只应包含机箱实体。"
    },
    {
      "indent": 4,
      "text": "        The enumeration 'cpu' is applicable if the physical entity\n        class is some sort of central processing unit.\"\nSYNTAX      INTEGER  {\n   other(1),\n   unknown(2),\n   chassis(3),\n   backplane(4),\n   container(5),     -- e.g., chassis slot or daughter-card holder\n   powerSupply(6),\n   fan(7),\n   sensor(8),\n   module(9),        -- e.g., plug-in card or daughter-card\n   port(10),\n   stack(11),        -- e.g., stack of multiple chassis entities\n   cpu(12)\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "SnmpEngineIdOrNone ::= TEXTUAL-CONVENTION\n    STATUS            current\n    DESCRIPTION\n            \"A specially formatted SnmpEngineID string for use with the\n            Entity MIB.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "If an instance of an object of SYNTAX SnmpEngineIdOrNone has a non-zero length, then the object encoding and semantics are defined by the SnmpEngineID textual convention (see STD 62, RFC 3411 [RFC3411]).",
      "zh-CHS": "如果语法为SnmpEngineIdOrNone的对象实例具有非零长度，则对象编码和语义由SnmpEngineID文本约定定义（参见STD 62，RFC 3411[RFC3411]）。"
    },
    {
      "indent": 4,
      "text": " If an instance of an object of SYNTAX SnmpEngineIdOrNone contains a zero-length string, then no appropriate SnmpEngineID is associated with the logical entity (i.e., SNMPv3 is not supported).\" SYNTAX OCTET STRING (SIZE(0..32)) -- empty string or SnmpEngineID",
      "zh-CHS": "如果语法为SnmpEngineIdOrNone的对象实例包含长度为零的字符串，则没有适当的SnmpEngineID与逻辑实体相关联（即不支持SNMPv3）。“语法八位组字符串（大小（0..32））--空字符串或SnmpEngineID"
    },
    {
      "indent": 0,
      "text": "--           The Physical Entity Table\nentPhysicalTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF EntPhysicalEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"This table contains one row per physical entity.  There is\n            always at least one row for an 'overall' physical entity.\"\n    ::= { entityPhysical 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalEntry OBJECT-TYPE SYNTAX EntPhysicalEntry MAX-ACCESS not-accessible",
      "zh-CHS": "entPhysicalEntry对象类型语法entPhysicalEntry MAX-ACCESS不可访问"
    },
    {
      "indent": 4,
      "text": "STATUS current DESCRIPTION \"Information about a particular physical entity.",
      "zh-CHS": "“状态当前描述”有关特定物理实体的信息。"
    },
    {
      "indent": 4,
      "text": "        Each entry provides objects (entPhysicalDescr,\n        entPhysicalVendorType, and entPhysicalClass) to help an NMS\n        identify and characterize the entry, and objects\n        (entPhysicalContainedIn and entPhysicalParentRelPos) to help\n        an NMS relate the particular entry to other entries in this\n        table.\"\nINDEX   { entPhysicalIndex }\n::= { entPhysicalTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "EntPhysicalEntry ::= SEQUENCE {\n      entPhysicalIndex          PhysicalIndex,\n      entPhysicalDescr          SnmpAdminString,\n      entPhysicalVendorType     AutonomousType,\n      entPhysicalContainedIn    PhysicalIndexOrZero,\n      entPhysicalClass          PhysicalClass,\n      entPhysicalParentRelPos   Integer32,\n      entPhysicalName           SnmpAdminString,\n      entPhysicalHardwareRev    SnmpAdminString,\n      entPhysicalFirmwareRev    SnmpAdminString,\n      entPhysicalSoftwareRev    SnmpAdminString,\n      entPhysicalSerialNum      SnmpAdminString,\n      entPhysicalMfgName        SnmpAdminString,\n      entPhysicalModelName      SnmpAdminString,\n      entPhysicalAlias          SnmpAdminString,\n      entPhysicalAssetID        SnmpAdminString,\n      entPhysicalIsFRU          TruthValue,\n      entPhysicalMfgDate        DateAndTime,\n      entPhysicalUris           OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "}",
      "zh-CHS": "}"
    },
    {
      "indent": 0,
      "text": "entPhysicalIndex    OBJECT-TYPE\n    SYNTAX      PhysicalIndex\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"The index for this entry.\"\n    ::= { entPhysicalEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalDescr OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-only STATUS current DESCRIPTION",
      "zh-CHS": "entPhysicalDescr对象类型语法SNMPAdministring MAX-ACCESS只读状态当前说明"
    },
    {
      "indent": 4,
      "text": "        \"A textual description of physical entity.  This object\n        should contain a string that identifies the manufacturer's\n        name for the physical entity, and should be set to a\n        distinct value for each version or model of the physical\n        entity.\"\n::= { entPhysicalEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalVendorType OBJECT-TYPE SYNTAX AutonomousType MAX-ACCESS read-only STATUS current DESCRIPTION \"An indication of the vendor-specific hardware type of the physical entity. Note that this is different from the definition of MIB-II's sysObjectID.",
      "zh-CHS": "entPhysicalVendorType对象类型语法AutonomousType MAX-ACCESS只读状态当前描述“物理实体的供应商特定硬件类型的指示。请注意，这与MIB-II的sysObjectID的定义不同。"
    },
    {
      "indent": 12,
      "text": "An agent should set this object to an enterprise-specific registration identifier value indicating the specific equipment type in detail. The associated instance of entPhysicalClass is used to indicate the general type of hardware device.",
      "zh-CHS": "代理应将此对象设置为企业特定的注册标识符值，以详细指示特定的设备类型。entPhysicalClass的关联实例用于指示硬件设备的常规类型。"
    },
    {
      "indent": 4,
      "text": "        If no vendor-specific registration identifier exists for\n        this physical entity, or the value is unknown by this agent,\n        then the value { 0 0 } is returned.\"\n::= { entPhysicalEntry 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalContainedIn OBJECT-TYPE SYNTAX PhysicalIndexOrZero MAX-ACCESS read-only STATUS current DESCRIPTION \"The value of entPhysicalIndex for the physical entity which 'contains' this physical entity. A value of zero indicates this physical entity is not contained in any other physical entity. Note that the set of 'containment' relationships define a strict hierarchy; that is, recursion is not allowed.",
      "zh-CHS": "entPhysicalContainedIn对象类型语法PhysicalIndexOrZero MAX-ACCESS只读状态当前说明“包含此物理实体的物理实体的entPhysicalIndex值。值为零表示此物理实体不包含在任何其他物理实体中。请注意，“包含”关系集定义了严格的层次结构；也就是说，不允许递归。"
    },
    {
      "indent": 4,
      "text": "        In the event that a physical entity is contained by more\n        than one physical entity (e.g., double-wide modules), this\n        object should identify the containing entity with the lowest\n        value of entPhysicalIndex.\"\n::= { entPhysicalEntry 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalClass OBJECT-TYPE SYNTAX PhysicalClass MAX-ACCESS read-only",
      "zh-CHS": "entPhysicalClass对象类型语法PhysicalClass MAX-ACCESS只读"
    },
    {
      "indent": 4,
      "text": "STATUS current DESCRIPTION \"An indication of the general hardware type of the physical entity.",
      "zh-CHS": "状态当前描述“物理实体的一般硬件类型指示。"
    },
    {
      "indent": 12,
      "text": "An agent should set this object to the standard enumeration value that most accurately indicates the general class of the physical entity, or the primary class if there is more than one entity.",
      "zh-CHS": "代理应将此对象设置为标准枚举值，该值最准确地指示物理实体的常规类，如果有多个实体，则设置为主类。"
    },
    {
      "indent": 4,
      "text": "        If no appropriate standard registration identifier exists\n        for this physical entity, then the value 'other(1)' is\n        returned.  If the value is unknown by this agent, then the\n        value 'unknown(2)' is returned.\"\n::= { entPhysicalEntry 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalParentRelPos OBJECT-TYPE SYNTAX Integer32 (-1..2147483647) MAX-ACCESS read-only STATUS current DESCRIPTION \"An indication of the relative position of this 'child' component among all its 'sibling' components. Sibling components are defined as entPhysicalEntries that share the same instance values of each of the entPhysicalContainedIn and entPhysicalClass objects.",
      "zh-CHS": "entPhysicalParentRelPos对象类型语法整数32（-1..2147483647）最大访问只读状态当前说明“该‘子’组件在其所有‘兄弟’组件中的相对位置指示。同级组件定义为entPhysicalEntries，它们共享每个entPhysicalContainedIn和entPhysicalClass对象的相同实例值。"
    },
    {
      "indent": 12,
      "text": "An NMS can use this object to identify the relative ordering for all sibling components of a particular parent (identified by the entPhysicalContainedIn instance in each sibling entry).",
      "zh-CHS": "NMS可以使用此对象标识特定父级的所有同级组件的相对顺序（由每个同级条目中的entPhysicalContainedIn实例标识）。"
    },
    {
      "indent": 12,
      "text": "If possible, this value should match any external labeling of the physical component. For example, for a container (e.g., card slot) labeled as 'slot #3', entPhysicalParentRelPos should have the value '3'. Note that the entPhysicalEntry for the module plugged in slot 3 should have an entPhysicalParentRelPos value of '1'.",
      "zh-CHS": "如果可能，此值应与物理组件的任何外部标签匹配。例如，对于标记为“插槽#3”的容器（例如卡插槽），entPhysicalParentRelPos的值应为“3”。请注意，插槽3中插入的模块的entPhysicalEntry的entPhysicalParentRelPos值应为“1”。"
    },
    {
      "indent": 12,
      "text": "If the physical position of this component does not match any external numbering or clearly visible ordering, then user documentation or other external reference material should be used to determine the parent-relative position. If this is not possible, then the agent should assign a consistent (but possibly arbitrary) ordering to a given set of 'sibling' components, perhaps based on internal representation of the components.",
      "zh-CHS": "如果该组件的物理位置与任何外部编号或清晰可见的顺序不匹配，则应使用用户文档或其他外部参考资料来确定父相对位置。如果这是不可能的，那么代理应该为给定的一组“同级”组件分配一致（但可能是任意的）顺序，可能是基于组件的内部表示。"
    },
    {
      "indent": 12,
      "text": "If the agent cannot determine the parent-relative position for some reason, or if the associated value of entPhysicalContainedIn is '0', then the value '-1' is returned. Otherwise, a non-negative integer is returned, indicating the parent-relative position of this physical entity.",
      "zh-CHS": "如果代理由于某种原因无法确定父级相对位置，或者如果entPhysicalContainedIn的关联值为“0”，则返回值“-1”。否则，将返回一个非负整数，指示此物理实体的父级相对位置。"
    },
    {
      "indent": 12,
      "text": "Parent-relative ordering normally starts from '1' and continues to 'N', where 'N' represents the highest positioned child entity. However, if the physical entities (e.g., slots) are labeled from a starting position of zero, then the first sibling should be associated with an entPhysicalParentRelPos value of '0'. Note that this ordering may be sparse or dense, depending on agent implementation.",
      "zh-CHS": "父相对顺序通常从“1”开始，继续到“N”，其中“N”表示位置最高的子实体。但是，如果物理实体（例如插槽）从零开始标记，则第一个同级应与entPhysicalParentRelPos值“0”关联。请注意，这种排序可能是稀疏的，也可能是密集的，这取决于代理实现。"
    },
    {
      "indent": 12,
      "text": "The actual values returned are not globally meaningful, as each 'parent' component may use different numbering algorithms. The ordering is only meaningful among siblings of the same parent component.",
      "zh-CHS": "返回的实际值没有全局意义，因为每个“父”组件可能使用不同的编号算法。排序仅在同一父组件的同级之间有意义。"
    },
    {
      "indent": 4,
      "text": "        The agent should retain parent-relative position values\n        across reboots, either through algorithmic assignment or use\n        of non-volatile storage.\"\n::= { entPhysicalEntry 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalName OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-only STATUS current DESCRIPTION \"The textual name of the physical entity. The value of this object should be the name of the component as assigned by the local device and should be suitable for use in commands entered at the device's `console'. This might be a text name (e.g., `console') or a simple component number (e.g., port or module number, such as `1'), depending on the physical component naming syntax of the device.",
      "zh-CHS": "entPhysicalName对象类型语法SNMPAdministring MAX-ACCESS只读状态当前描述“物理实体的文本名称。此对象的值应为本地设备分配的组件名称，并且应适合在设备的“控制台”输入的命令中使用。这可能是文本名称（例如，'console'）或简单的组件编号（例如，端口或模块编号，例如'1'），具体取决于设备的物理组件命名语法。"
    },
    {
      "indent": 12,
      "text": "If there is no local name, or if this object is otherwise not applicable, then this object contains a zero-length string.",
      "zh-CHS": "如果没有本地名称，或者如果此对象不适用，则此对象包含长度为零的字符串。"
    },
    {
      "indent": 4,
      "text": "        Note that the value of entPhysicalName for two physical\n        entities will be the same in the event that the console\n        interface does not distinguish between them, e.g., slot-1\n        and the card in slot-1.\"\n::= { entPhysicalEntry 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalHardwareRev OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-only STATUS current DESCRIPTION \"The vendor-specific hardware revision string for the physical entity. The preferred value is the hardware revision identifier actually printed on the component itself (if present).",
      "zh-CHS": "entPhysicalHardwareRev对象类型语法SNMPAdministring MAX-ACCESS只读状态当前描述“物理实体的供应商特定硬件修订字符串。首选值是实际打印在组件本身上的硬件修订标识符（如果存在）。"
    },
    {
      "indent": 12,
      "text": "Note that if revision information is stored internally in a non-printable (e.g., binary) format, then the agent must convert such information to a printable format, in an implementation-specific manner.",
      "zh-CHS": "请注意，如果版本信息以不可打印（例如二进制）格式存储在内部，则代理必须以特定于实现的方式将此类信息转换为可打印格式。"
    },
    {
      "indent": 4,
      "text": "        If no specific hardware revision string is associated with\n        the physical component, or if this information is unknown to\n        the agent, then this object will contain a zero-length\n        string.\"\n::= { entPhysicalEntry 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalFirmwareRev OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-only STATUS current DESCRIPTION \"The vendor-specific firmware revision string for the physical entity.",
      "zh-CHS": "entPhysicalFirmwareRev对象类型语法SNMPAdministring MAX-ACCESS只读状态当前描述“物理实体的供应商特定固件版本字符串。"
    },
    {
      "indent": 12,
      "text": "Note that if revision information is stored internally in a non-printable (e.g., binary) format, then the agent must convert such information to a printable format, in an implementation-specific manner.",
      "zh-CHS": "请注意，如果版本信息以不可打印（例如二进制）格式存储在内部，则代理必须以特定于实现的方式将此类信息转换为可打印格式。"
    },
    {
      "indent": 4,
      "text": "        If no specific firmware programs are associated with the\n        physical component, or if this information is unknown to the\n        agent, then this object will contain a zero-length string.\"\n::= { entPhysicalEntry 9 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalSoftwareRev OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-only STATUS current DESCRIPTION \"The vendor-specific software revision string for the physical entity.",
      "zh-CHS": "entPhysicalSoftwareRev对象类型语法SNMPAdministring MAX-ACCESS只读状态当前描述“物理实体的供应商特定软件版本字符串。"
    },
    {
      "indent": 12,
      "text": "Note that if revision information is stored internally in a",
      "zh-CHS": "请注意，如果版本信息存储在"
    },
    {
      "indent": 12,
      "text": "non-printable (e.g., binary) format, then the agent must convert such information to a printable format, in an implementation-specific manner.",
      "zh-CHS": "不可打印（如二进制）格式，则代理必须以特定于实现的方式将此类信息转换为可打印格式。"
    },
    {
      "indent": 4,
      "text": "        If no specific software programs are associated with the\n        physical component, or if this information is unknown to the\n        agent, then this object will contain a zero-length string.\"\n::= { entPhysicalEntry 10 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalSerialNum OBJECT-TYPE SYNTAX SnmpAdminString (SIZE (0..32)) MAX-ACCESS read-write STATUS current DESCRIPTION \"The vendor-specific serial number string for the physical entity. The preferred value is the serial number string actually printed on the component itself (if present).",
      "zh-CHS": "entPhysicalSerialNum对象类型语法SnmpAdminString（大小（0..32））MAX-ACCESS读写状态当前描述“物理实体的供应商特定序列号字符串。首选值是组件本身上实际打印的序列号字符串（如果存在）。"
    },
    {
      "indent": 12,
      "text": "On the first instantiation of an physical entity, the value of entPhysicalSerialNum associated with that entity is set to the correct vendor-assigned serial number, if this information is available to the agent. If a serial number is unknown or non-existent, the entPhysicalSerialNum will be set to a zero-length string instead.",
      "zh-CHS": "在第一次实例化物理实体时，如果代理可以使用此信息，则与该实体关联的entPhysicalSerialNum的值将设置为正确的供应商分配序列号。如果序列号未知或不存在，则entPhysicalSerialNum将改为零长度字符串。"
    },
    {
      "indent": 12,
      "text": "Note that implementations that can correctly identify the serial numbers of all installed physical entities do not need to provide write access to the entPhysicalSerialNum object. Agents which cannot provide non-volatile storage for the entPhysicalSerialNum strings are not required to implement write access for this object.",
      "zh-CHS": "请注意，能够正确识别所有已安装物理实体的序列号的实现不需要提供对entPhysicalSerialNum对象的写入访问。无法为entPhysicalSerialNum字符串提供非易失性存储的代理不需要实现对此对象的写访问。"
    },
    {
      "indent": 12,
      "text": "Not every physical component will have a serial number, or even need one. Physical entities for which the associated value of the entPhysicalIsFRU object is equal to 'false(2)' (e.g., the repeater ports within a repeater module), do not need their own unique serial number. An agent does not have to provide write access for such entities, and may return a zero-length string.",
      "zh-CHS": "并非每个物理组件都有序列号，甚至不需要序列号。entPhysicalIsFRU对象的关联值等于“false（2）”的物理实体（例如，中继器模块内的中继器端口）不需要自己的唯一序列号。代理不必为这些实体提供写访问，并且可以返回零长度字符串。"
    },
    {
      "indent": 12,
      "text": "If write access is implemented for an instance of entPhysicalSerialNum, and a value is written into the instance, the agent must retain the supplied value in the entPhysicalSerialNum instance (associated with the same physical entity) for as long as that entity remains instantiated. This includes instantiations across all re-initializations/reboots of the network management system, including those resulting in a change of the physical",
      "zh-CHS": "如果对entPhysicalSerialNum实例实现了写访问，并且向该实例中写入了一个值，则代理必须在entPhysicalSerialNum实例（与同一物理实体关联）中保留提供的值，只要该实体保持实例化状态。这包括在网络管理系统的所有重新初始化/重新启动过程中的实例化，包括导致物理系统更改的实例化"
    },
    {
      "indent": 4,
      "text": "        entity's entPhysicalIndex value.\"\n::= { entPhysicalEntry 11 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalMfgName OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-only STATUS current DESCRIPTION \"The name of the manufacturer of this physical component. The preferred value is the manufacturer name string actually printed on the component itself (if present).",
      "zh-CHS": "EntPhysicalFGName对象类型语法SNMPAdministring MAX-ACCESS只读状态当前描述“此物理组件的制造商名称。首选值是组件本身上实际打印的制造商名称字符串（如果存在）。"
    },
    {
      "indent": 12,
      "text": "Note that comparisons between instances of the entPhysicalModelName, entPhysicalFirmwareRev, entPhysicalSoftwareRev, and the entPhysicalSerialNum objects, are only meaningful amongst entPhysicalEntries with the same value of entPhysicalMfgName.",
      "zh-CHS": "请注意，entPhysicalModelName、entPhysicalFirmwareRev、entPhysicalSoftwareRev和entPhysicalSerialNum对象实例之间的比较仅在具有相同EntPhysicalFGName值的EntPhysicalEntry之间有意义。"
    },
    {
      "indent": 4,
      "text": "        If the manufacturer name string associated with the physical\n        component is unknown to the agent, then this object will\n        contain a zero-length string.\"\n::= { entPhysicalEntry 12 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalModelName OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-only STATUS current DESCRIPTION \"The vendor-specific model name identifier string associated with this physical component. The preferred value is the customer-visible part number, which may be printed on the component itself.",
      "zh-CHS": "entPhysicalModelName对象类型语法SNMPAdministring MAX-ACCESS只读状态当前描述“与此物理组件关联的供应商特定型号名称标识符字符串。首选值是客户可见的零件号，可以打印在组件本身上。"
    },
    {
      "indent": 4,
      "text": "        If the model name string associated with the physical\n        component is unknown to the agent, then this object will\n        contain a zero-length string.\"\n::= { entPhysicalEntry 13 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalAlias OBJECT-TYPE SYNTAX SnmpAdminString (SIZE (0..32)) MAX-ACCESS read-write STATUS current DESCRIPTION \"This object is an 'alias' name for the physical entity, as specified by a network manager, and provides a non-volatile 'handle' for the physical entity.",
      "zh-CHS": "entPhysicalAlias对象类型语法SnmpAdminString（大小（0..32））MAX-ACCESS读写状态当前描述“此对象是网络管理器指定的物理实体的“别名”，并为物理实体提供非易失性的“句柄”。"
    },
    {
      "indent": 12,
      "text": "On the first instantiation of a physical entity, the value",
      "zh-CHS": "在物理实体的第一次实例化时，值"
    },
    {
      "indent": 12,
      "text": "of entPhysicalAlias associated with that entity is set to the zero-length string. However, the agent may set the value to a locally unique default value, instead of a zero-length string.",
      "zh-CHS": "与该实体关联的entPhysicalAlias的长度设置为零长度字符串。但是，代理可以将该值设置为本地唯一的默认值，而不是长度为零的字符串。"
    },
    {
      "indent": 4,
      "text": "        If write access is implemented for an instance of\n        entPhysicalAlias, and a value is written into the instance,\n        the agent must retain the supplied value in the\n        entPhysicalAlias instance (associated with the same physical\n        entity) for as long as that entity remains instantiated.\n        This includes instantiations across all\n        re-initializations/reboots of the network management system,\n        including those resulting in a change of the physical\n        entity's entPhysicalIndex value.\"\n::= { entPhysicalEntry 14 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalAssetID OBJECT-TYPE SYNTAX SnmpAdminString (SIZE (0..32)) MAX-ACCESS read-write STATUS current DESCRIPTION \"This object is a user-assigned asset tracking identifier (as specified by a network manager) for the physical entity, and provides non-volatile storage of this information.",
      "zh-CHS": "entPhysicalAssetID对象类型语法SnmpAdminString（大小（0..32））MAX-ACCESS读写状态当前描述“此对象是用户为物理实体分配的资产跟踪标识符（由网络管理器指定），并提供此信息的非易失性存储。"
    },
    {
      "indent": 12,
      "text": "On the first instantiation of a physical entity, the value of entPhysicalAssetID associated with that entity is set to the zero-length string.",
      "zh-CHS": "在物理实体的第一次实例化时，与该实体关联的entPhysicalAssetID的值设置为零长度字符串。"
    },
    {
      "indent": 12,
      "text": "Not every physical component will have an asset tracking identifier, or even need one. Physical entities for which the associated value of the entPhysicalIsFRU object is equal to 'false(2)' (e.g., the repeater ports within a repeater module), do not need their own unique asset tracking identifier. An agent does not have to provide write access for such entities, and may instead return a zero-length string.",
      "zh-CHS": "并非每个物理组件都有资产跟踪标识符，甚至不需要。entPhysicalIsFRU对象的关联值等于“false（2）”的物理实体（例如，中继器模块中的中继器端口）不需要自己的唯一资产跟踪标识符。代理不必为这些实体提供写访问，而是可以返回长度为零的字符串。"
    },
    {
      "indent": 12,
      "text": "If write access is implemented for an instance of entPhysicalAssetID, and a value is written into the instance, the agent must retain the supplied value in the entPhysicalAssetID instance (associated with the same physical entity) for as long as that entity remains instantiated. This includes instantiations across all re-initializations/reboots of the network management system, including those resulting in a change of the physical entity's entPhysicalIndex value.",
      "zh-CHS": "如果对entPhysicalAssetID实例实现了写访问，并且向该实例中写入了一个值，则代理必须在entPhysicalAssetID实例（与同一物理实体关联）中保留提供的值，只要该实体保持实例化状态。这包括网络管理系统的所有重新初始化/重新启动的实例化，包括导致物理实体的entPhysicalIndex值发生更改的实例化。"
    },
    {
      "indent": 4,
      "text": "        If no asset tracking information is associated with the\n        physical component, then this object will contain a\n        zero-length string.\"\n::= { entPhysicalEntry 15 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalIsFRU OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"This object indicates whether or not this physical entity\n            is considered a 'field replaceable unit' by the vendor.  If\n            this object contains the value 'true(1)' then this\n            entPhysicalEntry identifies a field replaceable unit.  For\n            all entPhysicalEntries that represent components\n            permanently contained within a field replaceable unit, the\n            value 'false(2)' should be returned for this object.\"\n    ::= { entPhysicalEntry 16 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalMfgDate  OBJECT-TYPE\n    SYNTAX      DateAndTime\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"This object contains the date of manufacturing of the\n            managed entity.  If the manufacturing date is unknown or not\n            supported, the object is not instantiated.  The special\n            value '0000000000000000'H may also be returned in this\n            case.\"\n    ::= { entPhysicalEntry 17 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalUris OBJECT-TYPE SYNTAX OCTET STRING MAX-ACCESS read-write STATUS current DESCRIPTION \"This object contains additional identification information about the physical entity. The object contains URIs and, therefore, the syntax of this object must conform to RFC 3986, section 2.",
      "zh-CHS": "EntPhysicalURI对象类型语法八位字符串MAX-ACCESS读写状态当前描述“此对象包含有关物理实体的其他标识信息。此对象包含URI，因此，此对象的语法必须符合RFC 3986第2节的要求。"
    },
    {
      "indent": 12,
      "text": "Multiple URIs may be present and are separated by white space characters. Leading and trailing white space characters are ignored.",
      "zh-CHS": "可能存在多个URI，并由空格字符分隔。忽略前导和尾随空格字符。"
    },
    {
      "indent": 12,
      "text": "If no additional identification information is known about the physical entity or supported, the object is not instantiated. A zero length octet string may also be",
      "zh-CHS": "如果不知道或不支持有关物理实体的其他标识信息，则不会实例化该对象。也可以使用零长度的八位字节字符串"
    },
    {
      "indent": 4,
      "text": " returned in this case.\" REFERENCE \"RFC 3986, Uniform Resource Identifiers (URI): Generic Syntax, section 2, August 1998.\"",
      "zh-CHS": "在本例中返回。“参考”RFC 3986，统一资源标识符（URI）：通用语法，第2节，1998年8月"
    },
    {
      "indent": 4,
      "text": "::= { entPhysicalEntry 18 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--           The Logical Entity Table\nentLogicalTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF EntLogicalEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"This table contains one row per logical entity.  For agents\n            that implement more than one naming scope, at least one\n            entry must exist.  Agents which instantiate all MIB objects\n            within a single naming scope are not required to implement\n            this table.\"\n    ::= { entityLogical 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLogicalEntry       OBJECT-TYPE\n    SYNTAX      EntLogicalEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"Information about a particular logical entity.  Entities\n            may be managed by this agent or other SNMP agents (possibly)\n            in the same chassis.\"\n    INDEX       { entLogicalIndex }\n    ::= { entLogicalTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "EntLogicalEntry ::= SEQUENCE {\n      entLogicalIndex            Integer32,\n      entLogicalDescr            SnmpAdminString,\n      entLogicalType             AutonomousType,\n      entLogicalCommunity        OCTET STRING,\n      entLogicalTAddress         TAddress,\n      entLogicalTDomain          TDomain,\n      entLogicalContextEngineID  SnmpEngineIdOrNone,\n      entLogicalContextName      SnmpAdminString\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLogicalIndex OBJECT-TYPE SYNTAX Integer32 (1..2147483647) MAX-ACCESS not-accessible STATUS current DESCRIPTION",
      "zh-CHS": "entLogicalIndex对象类型语法整数32（1..2147483647）MAX-ACCESS不可访问状态当前说明"
    },
    {
      "indent": 4,
      "text": "        \"The value of this object uniquely identifies the logical\n        entity.  The value should be a small positive integer; index\n        values for different logical entities are not necessarily\n        contiguous.\"\n::= { entLogicalEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLogicalDescr OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"A textual description of the logical entity.  This object\n            should contain a string that identifies the manufacturer's\n            name for the logical entity, and should be set to a distinct\n            value for each version of the logical entity.\"\n    ::= { entLogicalEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLogicalType OBJECT-TYPE\n    SYNTAX      AutonomousType\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"An indication of the type of logical entity.  This will\n            typically be the OBJECT IDENTIFIER name of the node in the\n            SMI's naming hierarchy which represents the major MIB\n            module, or the majority of the MIB modules, supported by the\n            logical entity.  For example:\n               a logical entity of a regular host/router -> mib-2\n               a logical entity of a 802.1d bridge -> dot1dBridge\n               a logical entity of a 802.3 repeater -> snmpDot3RptrMgmt\n            If an appropriate node in the SMI's naming hierarchy cannot\n            be identified, the value 'mib-2' should be used.\"\n    ::= { entLogicalEntry 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLogicalCommunity OBJECT-TYPE SYNTAX OCTET STRING (SIZE (0..255)) MAX-ACCESS read-only STATUS deprecated DESCRIPTION \"An SNMPv1 or SNMPv2C community-string, which can be used to access detailed management information for this logical entity. The agent should allow read access with this community string (to an appropriate subset of all managed objects) and may also return a community string based on the privileges of the request used to read this object. Note that an agent may return a community string with read-only privileges, even if this object is accessed with a read-write community string. However, the agent must take",
      "zh-CHS": "entLogicalCommunity对象类型语法八位字节字符串（大小（0..255））MAX-ACCESS只读状态不推荐的说明“SNMPv1或SNMPv2C社区字符串，可用于访问此逻辑实体的详细管理信息。代理应允许使用此社区字符串进行读取访问（所有托管对象的适当子集）并可能根据用于读取此对象的请求权限返回社区字符串。请注意，即使使用读写社区字符串访问此对象，代理也可能返回具有只读权限的社区字符串。但是，代理必须"
    },
    {
      "indent": 12,
      "text": "care not to return a community string that allows more privileges than the community string used to access this object.",
      "zh-CHS": "注意不要返回一个社区字符串，该字符串允许比用于访问此对象的社区字符串更多的权限。"
    },
    {
      "indent": 12,
      "text": "A compliant SNMP agent may wish to conserve naming scopes by representing multiple logical entities in a single 'default' naming scope. This is possible when the logical entities, represented by the same value of entLogicalCommunity, have no object instances in common. For example, 'bridge1' and 'repeater1' may be part of the main naming scope, but at least one additional community string is needed to represent 'bridge2' and 'repeater2'.",
      "zh-CHS": "兼容的SNMP代理可能希望通过在单个“默认”命名范围中表示多个逻辑实体来保留命名范围。当由entLogicalCommunity的相同值表示的逻辑实体没有共同的对象实例时，这是可能的。例如，“bridge1”和“repeater1”可能是主命名范围的一部分，但至少需要一个额外的社区字符串来表示“bridge2”和“repeater2”。"
    },
    {
      "indent": 12,
      "text": "Logical entities 'bridge1' and 'repeater1' would be represented by sysOREntries associated with the 'default' naming scope.",
      "zh-CHS": "逻辑实体“bridge1”和“repeater1”将由与“默认”命名范围关联的sysOREntries表示。"
    },
    {
      "indent": 12,
      "text": "For agents not accessible via SNMPv1 or SNMPv2C, the value of this object is the empty string. This object may also contain an empty string if a community string has not yet been assigned by the agent, or if no community string with suitable access rights can be returned for a particular SNMP request.",
      "zh-CHS": "对于无法通过SNMPv1或SNMPv2C访问的代理，此对象的值为空字符串。如果代理尚未分配社区字符串，或者无法为特定SNMP请求返回具有适当访问权限的社区字符串，则此对象还可能包含空字符串。"
    },
    {
      "indent": 4,
      "text": "        Note that this object is deprecated.  Agents which implement\n        SNMPv3 access should use the entLogicalContextEngineID and\n        entLogicalContextName objects to identify the context\n        associated with each logical entity.  SNMPv3 agents may\n        return a zero-length string for this object, or may continue\n        to return a community string (e.g., tri-lingual agent\n        support).\"\n::= { entLogicalEntry 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLogicalTAddress OBJECT-TYPE SYNTAX TAddress MAX-ACCESS read-only STATUS current DESCRIPTION \"The transport service address by which the logical entity receives network management traffic, formatted according to the corresponding value of entLogicalTDomain.",
      "zh-CHS": "EntLogicalAddress对象类型语法TadAddress MAX-ACCESS只读状态当前描述“逻辑实体接收网络管理通信的传输服务地址，根据EntLogicalDomain的相应值格式化。"
    },
    {
      "indent": 12,
      "text": "For snmpUDPDomain, a TAddress is 6 octets long: the initial 4 octets contain the IP-address in network-byte order and the last 2 contain the UDP port in network-byte order. Consult 'Transport Mappings for the Simple Network Management Protocol' (STD 62, RFC 3417 [RFC3417]) for further information on snmpUDPDomain.\"",
      "zh-CHS": "对于snmpUDPDomain，地址长度为6个八位字节：最初的4个八位字节包含网络字节顺序的IP地址，最后2个八位字节包含网络字节顺序的UDP端口。有关snmpUDPDomain的更多信息，请参阅“简单网络管理协议的传输映射”（STD 62，RFC 3417[RFC3417]）"
    },
    {
      "indent": 4,
      "text": "::= { entLogicalEntry 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLogicalTDomain OBJECT-TYPE\n    SYNTAX      TDomain\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"Indicates the kind of transport service by which the\n            logical entity receives network management traffic.\n            Possible values for this object are presently found in the\n            Transport Mappings for Simple Network Management Protocol'\n            (STD 62, RFC 3417 [RFC3417]).\"\n    ::= { entLogicalEntry 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLogicalContextEngineID OBJECT-TYPE SYNTAX SnmpEngineIdOrNone MAX-ACCESS read-only STATUS current DESCRIPTION \"The authoritative contextEngineID that can be used to send an SNMP message concerning information held by this logical entity, to the address specified by the associated 'entLogicalTAddress/entLogicalTDomain' pair.",
      "zh-CHS": "entLogicalContextEngineID对象类型语法SnmpEngineIdOrNone MAX-ACCESS只读状态当前描述“可用于将有关此逻辑实体所持有信息的SNMP消息发送到关联的“EntLogicalAddress/EntLogicalDomain”对指定的地址的权威contextEngineID。"
    },
    {
      "indent": 12,
      "text": "This object, together with the associated entLogicalContextName object, defines the context associated with a particular logical entity, and allows access to SNMP engines identified by a contextEngineId and contextName pair.",
      "zh-CHS": "此对象与关联的entLogicalContextName对象一起定义与特定逻辑实体关联的上下文，并允许访问由contextEngineId和contextName对标识的SNMP引擎。"
    },
    {
      "indent": 4,
      "text": "        If no value has been configured by the agent, a zero-length\n        string is returned, or the agent may choose not to\n        instantiate this object at all.\"\n::= { entLogicalEntry 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLogicalContextName OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-only STATUS current DESCRIPTION \"The contextName that can be used to send an SNMP message concerning information held by this logical entity, to the address specified by the associated 'entLogicalTAddress/entLogicalTDomain' pair.",
      "zh-CHS": "entLogicalContextName对象类型语法SNMPAdministring MAX-ACCESS只读状态当前描述“可用于将有关此逻辑实体所持有信息的SNMP消息发送到关联的“EntLogicalAddress/EntLogicalDomain”对指定的地址的contextName。"
    },
    {
      "indent": 12,
      "text": "This object, together with the associated entLogicalContextEngineID object, defines the context associated with a particular logical entity, and allows",
      "zh-CHS": "此对象与关联的EntLogicalContextingInId对象一起定义与特定逻辑实体关联的上下文，并允许"
    },
    {
      "indent": 12,
      "text": "access to SNMP engines identified by a contextEngineId and contextName pair.",
      "zh-CHS": "访问由contextEngineId和contextName对标识的SNMP引擎。"
    },
    {
      "indent": 4,
      "text": "        If no value has been configured by the agent, a zero-length\n        string is returned, or the agent may choose not to\n        instantiate this object at all.\"\n::= { entLogicalEntry 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLPMappingTable OBJECT-TYPE SYNTAX SEQUENCE OF EntLPMappingEntry MAX-ACCESS not-accessible STATUS current DESCRIPTION \"This table contains zero or more rows of logical entity to physical equipment associations. For each logical entity known by this agent, there are zero or more mappings to the physical resources, which are used to realize that logical entity.",
      "zh-CHS": "entLPMappingTable ENTRY的EntLPMappingEntry对象类型语法序列MAX-ACCESS不可访问状态当前说明“此表包含零行或多行逻辑实体与物理设备的关联。对于此代理已知的每个逻辑实体，都有零个或多个到物理资源的映射，这些映射用于实现该逻辑实体。"
    },
    {
      "indent": 12,
      "text": "An agent should limit the number and nature of entries in this table such that only meaningful and non-redundant information is returned. For example, in a system that contains a single power supply, mappings between logical entities and the power supply are not useful and should not be included.",
      "zh-CHS": "代理应限制此表中条目的数量和性质，以便只返回有意义的非冗余信息。例如，在包含单个电源的系统中，逻辑实体和电源之间的映射没有用处，不应包括在内。"
    },
    {
      "indent": 12,
      "text": "Also, only the most appropriate physical component, which is closest to the root of a particular containment tree, should be identified in an entLPMapping entry.",
      "zh-CHS": "此外，在entLPMapping条目中只应标识最合适的物理组件，它最接近特定容器树的根。"
    },
    {
      "indent": 12,
      "text": "For example, suppose a bridge is realized on a particular module, and all ports on that module are ports on this bridge. A mapping between the bridge and the module would be useful, but additional mappings between the bridge and each of the ports on that module would be redundant (because the entPhysicalContainedIn hierarchy can provide the same information). On the other hand, if more than one bridge were utilizing ports on this module, then mappings between each bridge and the ports it used would be appropriate.",
      "zh-CHS": "例如，假设在一个特定模块上实现了一个网桥，该模块上的所有端口都是该网桥上的端口。网桥和模块之间的映射很有用，但网桥和该模块上的每个端口之间的其他映射是多余的（因为entPhysicalContainedIn层次结构可以提供相同的信息）。另一方面，如果有多个网桥使用此模块上的端口，则每个网桥与其使用的端口之间的映射是合适的。"
    },
    {
      "indent": 4,
      "text": "        Also, in the case of a single backplane repeater, a mapping\n        for the backplane to the single repeater entity is not\n        necessary.\"\n::= { entityMapping 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLPMappingEntry OBJECT-TYPE SYNTAX EntLPMappingEntry MAX-ACCESS not-accessible",
      "zh-CHS": "entLPMappingEntry对象类型语法entLPMappingEntry MAX-ACCESS不可访问"
    },
    {
      "indent": 4,
      "text": "STATUS      current\nDESCRIPTION\n        \"Information about a particular logical entity to physical\n        equipment association.  Note that the nature of the\n        association is not specifically identified in this entry.\n        It is expected that sufficient information exists in the\n        MIBs used to manage a particular logical entity to infer how\n        physical component information is utilized.\"\nINDEX       { entLogicalIndex, entLPPhysicalIndex }\n::= { entLPMappingTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "EntLPMappingEntry ::= SEQUENCE {\n      entLPPhysicalIndex         PhysicalIndex\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entLPPhysicalIndex OBJECT-TYPE\n    SYNTAX      PhysicalIndex\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The value of this object identifies the index value of a\n            particular entPhysicalEntry associated with the indicated\n            entLogicalEntity.\"\n    ::= { entLPMappingEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- logical entity/component to alias table\nentAliasMappingTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF EntAliasMappingEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"This table contains zero or more rows, representing\n            mappings of logical entity and physical component to\n            external MIB identifiers.  Each physical port in the system\n            may be associated with a mapping to an external identifier,\n            which itself is associated with a particular logical\n            entity's naming scope.  A 'wildcard' mechanism is provided\n            to indicate that an identifier is associated with more than\n            one logical entity.\"\n    ::= { entityMapping 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entAliasMappingEntry OBJECT-TYPE SYNTAX EntAliasMappingEntry MAX-ACCESS not-accessible STATUS current DESCRIPTION \"Information about a particular physical equipment, logical",
      "zh-CHS": "entAliasMappingEntry对象类型语法entAliasMappingEntry MAX-ACCESS不可访问状态当前描述“有关特定物理设备的信息，逻辑"
    },
    {
      "indent": 12,
      "text": "entity to external identifier binding. Each logical entity/physical component pair may be associated with one alias mapping. The logical entity index may also be used as a 'wildcard' (refer to the entAliasLogicalIndexOrZero object DESCRIPTION clause for details.)",
      "zh-CHS": "entity to external identifier binding. Each logical entity/physical component pair may be associated with one alias mapping. The logical entity index may also be used as a 'wildcard' (refer to the entAliasLogicalIndexOrZero object DESCRIPTION clause for details.)translate error, please retry"
    },
    {
      "indent": 4,
      "text": "        Note that only entPhysicalIndex values that represent\n        physical ports (i.e., associated entPhysicalClass value is\n        'port(10)') are permitted to exist in this table.\"\nINDEX { entPhysicalIndex, entAliasLogicalIndexOrZero }\n::= { entAliasMappingTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "EntAliasMappingEntry ::= SEQUENCE {\n      entAliasLogicalIndexOrZero        Integer32,\n      entAliasMappingIdentifier         RowPointer\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entAliasLogicalIndexOrZero OBJECT-TYPE SYNTAX Integer32 (0..2147483647) MAX-ACCESS not-accessible STATUS current DESCRIPTION \"The value of this object identifies the logical entity that defines the naming scope for the associated instance of the 'entAliasMappingIdentifier' object.",
      "zh-CHS": "EntaliasLogicIndexorZero对象类型语法整数32（0..2147483647）MAX-ACCESS不可访问状态当前描述“此对象的值标识逻辑实体，该逻辑实体定义了“entAliasMappingIdentifier”对象关联实例的命名范围。"
    },
    {
      "indent": 12,
      "text": "If this object has a non-zero value, then it identifies the logical entity named by the same value of entLogicalIndex.",
      "zh-CHS": "如果此对象具有非零值，则它标识由entLogicalIndex的相同值命名的逻辑实体。"
    },
    {
      "indent": 12,
      "text": "If this object has a value of zero, then the mapping between the physical component and the alias identifier for this entAliasMapping entry is associated with all unspecified logical entities. That is, a value of zero (the default mapping) identifies any logical entity that does not have an explicit entry in this table for a particular entPhysicalIndex/entAliasMappingIdentifier pair.",
      "zh-CHS": "如果此对象的值为零，则物理组件与此entAliasMapping条目的别名标识符之间的映射与所有未指定的逻辑实体相关联。也就是说，值为零（默认映射）标识此表中没有特定entPhysicalIndex/entAliasMappingIdentifier对的显式条目的任何逻辑实体。"
    },
    {
      "indent": 12,
      "text": "For example, to indicate that a particular interface (e.g., physical component 33) is identified by the same value of ifIndex for all logical entities, the following instance might exist:",
      "zh-CHS": "例如，为了指示特定接口（例如，物理组件33）由所有逻辑实体的相同ifIndex值标识，可能存在以下实例："
    },
    {
      "indent": 20,
      "text": "entAliasMappingIdentifier.33.0 = ifIndex.5",
      "zh-CHS": "entAliasMappingIdentifier.33.0=ifIndex.5"
    },
    {
      "indent": 12,
      "text": "In the event an entPhysicalEntry is associated differently for some logical entities, additional entAliasMapping entries may exist, e.g.:",
      "zh-CHS": "如果某些逻辑实体的entPhysicalEntry关联方式不同，则可能存在其他entAliasMapping条目，例如："
    },
    {
      "indent": 20,
      "text": "entAliasMappingIdentifier.33.0 = ifIndex.6 entAliasMappingIdentifier.33.4 = ifIndex.1 entAliasMappingIdentifier.33.5 = ifIndex.1 entAliasMappingIdentifier.33.10 = ifIndex.12",
      "zh-CHS": "EntaliasMappingDentifier.33.0=ifIndex.6 EntaliasMappingDentifier.33.4=ifIndex.1 EntaliasMappingDentifier.33.5=ifIndex.1 EntaliasMappingDentifier.33.10=ifIndex.12"
    },
    {
      "indent": 4,
      "text": "        Note that entries with non-zero entAliasLogicalIndexOrZero\n        index values have precedence over zero-indexed entries.  In\n        this example, all logical entities except 4, 5, and 10,\n        associate physical entity 33 with ifIndex.6.\"\n::= { entAliasMappingEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entAliasMappingIdentifier OBJECT-TYPE SYNTAX RowPointer MAX-ACCESS read-only STATUS current DESCRIPTION \"The value of this object identifies a particular conceptual row associated with the indicated entPhysicalIndex and entLogicalIndex pair.",
      "zh-CHS": "entAliasMappingIdentifier对象类型语法RowPointer MAX-ACCESS只读状态当前描述“此对象的值标识与指示的entPhysicalIndex和entLogicalIndex对关联的特定概念行。"
    },
    {
      "indent": 12,
      "text": "Because only physical ports are modeled in this table, only entries that represent interfaces or ports are allowed. If an ifEntry exists on behalf of a particular physical port, then this object should identify the associated 'ifEntry'. For repeater ports, the appropriate row in the 'rptrPortGroupTable' should be identified instead.",
      "zh-CHS": "因为此表中只对物理端口进行建模，所以只允许表示接口或端口的条目。如果存在代表特定物理端口的ifEntry，则此对象应标识关联的“ifEntry”。对于中继器端口，应改为标识“rptportgrouptable”中的相应行。"
    },
    {
      "indent": 12,
      "text": "For example, suppose a physical port was represented by entPhysicalEntry.3, entLogicalEntry.15 existed for a repeater, and entLogicalEntry.22 existed for a bridge. Then there might be two related instances of entAliasMappingIdentifier: entAliasMappingIdentifier.3.15 == rptrPortGroupIndex.5.2 entAliasMappingIdentifier.3.22 == ifIndex.17 It is possible that other mappings (besides interfaces and repeater ports) may be defined in the future, as required.",
      "zh-CHS": "例如，假设物理端口由entPhysicalEntry.3表示，中继器存在entLogicalEntry.15，网桥存在entLogicalEntry.22。然后可能有两个相关的entAliasMappingIdentifier实例：entAliasMappingIdentifier.3.15==RPTPortGroupIndex.5.2 entAliasMappingIdentifier.3.22==ifIndex.17将来可能会根据需要定义其他映射（接口和中继器端口除外）。"
    },
    {
      "indent": 4,
      "text": "        Bridge ports are identified by examining the Bridge MIB and\n        appropriate ifEntries associated with each 'dot1dBasePort',\n        and are thus not represented in this table.\"\n::= { entAliasMappingEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- physical mapping table entPhysicalContainsTable OBJECT-TYPE SYNTAX SEQUENCE OF EntPhysicalContainsEntry MAX-ACCESS not-accessible STATUS current",
      "zh-CHS": "--物理映射表entPhysicalContainsTable EntPhysicalContainsEntry MAX-ACCESS的对象类型语法序列不可访问状态当前"
    },
    {
      "indent": 4,
      "text": "DESCRIPTION \"A table that exposes the container/'containee' relationships between physical entities. This table provides all the information found by constructing the virtual containment tree for a given entPhysicalTable, but in a more direct format.",
      "zh-CHS": "DESCRIPTION“一个表，公开物理实体之间的container/'containee'关系。此表提供通过为给定entPhysicalTable构建虚拟包含树而找到的所有信息，但格式更直接。"
    },
    {
      "indent": 4,
      "text": "        In the event a physical entity is contained by more than one\n        other physical entity (e.g., double-wide modules), this\n        table should include these additional mappings, which cannot\n        be represented in the entPhysicalTable virtual containment\n        tree.\"\n::= { entityMapping 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalContainsEntry OBJECT-TYPE\n    SYNTAX      EntPhysicalContainsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n            \"A single container/'containee' relationship.\"\n    INDEX       { entPhysicalIndex, entPhysicalChildIndex }\n    ::= { entPhysicalContainsTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "EntPhysicalContainsEntry ::= SEQUENCE {\n      entPhysicalChildIndex     PhysicalIndex\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entPhysicalChildIndex OBJECT-TYPE\n    SYNTAX      PhysicalIndex\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n            \"The value of entPhysicalIndex for the contained physical\n            entity.\"\n    ::= { entPhysicalContainsEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- last change time stamp for the whole MIB entLastChangeTime OBJECT-TYPE SYNTAX TimeStamp MAX-ACCESS read-only STATUS current DESCRIPTION \"The value of sysUpTime at the time a conceptual row is created, modified, or deleted in any of these tables: - entPhysicalTable - entLogicalTable - entLPMappingTable - entAliasMappingTable",
      "zh-CHS": "--整个MIB的上次更改时间戳entLastChangeTime对象类型语法时间戳MAX-ACCESS只读状态当前描述“在任何这些表中创建、修改或删除概念行时的系统正常运行时间值：-entPhysicalTable-entLogicalTable-EntlMappingTable-entAliasMappingTable"
    },
    {
      "indent": 4,
      "text": "                - entPhysicalContainsTable\n        \"\n::= { entityGeneral 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- Entity MIB Trap Definitions\nentityMIBTraps      OBJECT IDENTIFIER ::= { entityMIB 2 }\nentityMIBTrapPrefix OBJECT IDENTIFIER ::= { entityMIBTraps 0 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entConfigChange NOTIFICATION-TYPE STATUS current DESCRIPTION \"An entConfigChange notification is generated when the value of entLastChangeTime changes. It can be utilized by an NMS to trigger logical/physical entity table maintenance polls.",
      "zh-CHS": "entConfigChange NOTIFICATION-TYPE STATUS current DESCRIPTION“当entLastChangeTime的值更改时，将生成entConfigChange通知。NMS可利用该通知触发逻辑/物理实体表维护轮询。"
    },
    {
      "indent": 12,
      "text": "An agent should not generate more than one entConfigChange 'notification-event' in a given time interval (five seconds is the suggested default). A 'notification-event' is the transmission of a single trap or inform PDU to a list of notification destinations.",
      "zh-CHS": "代理在给定的时间间隔内不应生成多个entConfigChange“通知事件”（建议默认为5秒）。“通知事件”是将单个陷阱或通知PDU传输到通知目的地列表。"
    },
    {
      "indent": 12,
      "text": "If additional configuration changes occur within the throttling period, then notification-events for these changes should be suppressed by the agent until the current throttling period expires. At the end of a throttling period, one notification-event should be generated if any configuration changes occurred since the start of the throttling period. In such a case, another throttling period is started right away.",
      "zh-CHS": "如果在限制期内发生其他配置更改，则代理应禁止这些更改的通知事件，直到当前限制期到期。在限制期结束时，如果自限制期开始以来发生任何配置更改，则应生成一个通知事件。在这种情况下，立即开始另一个节流周期。"
    },
    {
      "indent": 3,
      "text": "         An NMS should periodically check the value of\n         entLastChangeTime to detect any missed entConfigChange\n         notification-events, e.g., due to throttling or transmission\n         loss.\"\n::= { entityMIBTrapPrefix 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- conformance information\nentityConformance OBJECT IDENTIFIER ::= { entityMIB 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entityCompliances OBJECT IDENTIFIER ::= { entityConformance 1 }\nentityGroups      OBJECT IDENTIFIER ::= { entityConformance 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- compliance statements entityCompliance MODULE-COMPLIANCE STATUS deprecated",
      "zh-CHS": "--合规性声明实体合规性模块-合规性状态已弃用"
    },
    {
      "indent": 4,
      "text": "DESCRIPTION\n        \"The compliance statement for SNMP entities that implement\n        version 1 of the Entity MIB.\"\nMODULE  -- this module\n    MANDATORY-GROUPS {\n                       entityPhysicalGroup,\n                       entityLogicalGroup,\n                       entityMappingGroup,\n                       entityGeneralGroup,\n                       entityNotificationsGroup\n    }\n::= { entityCompliances 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entity2Compliance MODULE-COMPLIANCE\n    STATUS  deprecated\n    DESCRIPTION\n            \"The compliance statement for SNMP entities that implement\n            version 2 of the Entity MIB.\"\n    MODULE  -- this module\n        MANDATORY-GROUPS {\n                           entityPhysicalGroup,\n                           entityPhysical2Group,\n                           entityGeneralGroup,\n                           entityNotificationsGroup\n        }\n        GROUP entityLogical2Group\n        DESCRIPTION\n            \"Implementation of this group is not mandatory for agents\n            that model all MIB object instances within a single naming\n            scope.\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "GROUP entityMappingGroup DESCRIPTION \"Implementation of the entPhysicalContainsTable is mandatory for all agents. Implementation of the entLPMappingTable and entAliasMappingTables are not mandatory for agents that model all MIB object instances within a single naming scope.",
      "zh-CHS": "GROUP entityMappingGroup DESCRIPTION“entPhysicalContainsTable的实现对于所有代理都是强制性的。EntlMappingTable和entAliasMappingTables的实现对于在单个命名范围内为所有MIB对象实例建模的代理都不是强制性的。"
    },
    {
      "indent": 12,
      "text": "Note that the entAliasMappingTable may be useful for all agents; however, implementation of the entityLogicalGroup or entityLogical2Group is required to support this table.\"",
      "zh-CHS": "请注意，恩他利阿玛可用于所有药剂；但是，需要实现entityLogicalGroup或entityLogical2Group来支持此表。”"
    },
    {
      "indent": 8,
      "text": "OBJECT entPhysicalSerialNum MIN-ACCESS not-accessible DESCRIPTION \"Read and write access is not required for agents that cannot identify serial number information for physical entities, and/or cannot provide non-volatile storage for",
      "zh-CHS": "对象entPhysicalSerialNum MIN-ACCESS不可访问描述“对于无法识别物理实体序列号信息和/或无法为实体提供非易失性存储的代理，不需要读写访问权限"
    },
    {
      "indent": 12,
      "text": "NMS-assigned serial numbers.",
      "zh-CHS": "NMS分配的序列号。"
    },
    {
      "indent": 12,
      "text": "Write access is not required for agents that can identify serial number information for physical entities, but cannot provide non-volatile storage for NMS-assigned serial numbers.",
      "zh-CHS": "可以识别物理实体的序列号信息，但不能为NMS分配的序列号提供非易失性存储的代理不需要写访问。"
    },
    {
      "indent": 12,
      "text": "Write access is not required for physical entities for which the associated value of the entPhysicalIsFRU object is equal to 'false(2)'.\"",
      "zh-CHS": "entPhysicalIsFRU对象的关联值等于“false（2）”的物理实体不需要写访问权限。”"
    },
    {
      "indent": 8,
      "text": "OBJECT entPhysicalAlias MIN-ACCESS read-only DESCRIPTION \"Write access is required only if the associated entPhysicalClass value is equal to 'chassis(3)'.\"",
      "zh-CHS": "对象entPhysicalAlias MIN-ACCESS只读说明“仅当关联的entPhysicalClass值等于“机箱（3）”时，才需要写访问权限。”"
    },
    {
      "indent": 8,
      "text": "OBJECT entPhysicalAssetID MIN-ACCESS not-accessible DESCRIPTION \"Read and write access is not required for agents that cannot provide non-volatile storage for NMS-assigned asset identifiers.",
      "zh-CHS": "对象entPhysicalAssetID MIN-ACCESS不可访问描述“对于无法为NMS分配的资产标识符提供非易失性存储的代理，不需要读写访问权限。"
    },
    {
      "indent": 12,
      "text": "Write access is not required for physical entities for which the associated value of the entPhysicalIsFRU object is equal to 'false(2)'.\"",
      "zh-CHS": "entPhysicalIsFRU对象的关联值等于“false（2）”的物理实体不需要写访问权限。”"
    },
    {
      "indent": 8,
      "text": "OBJECT entPhysicalClass\nSYNTAX INTEGER {\n    other(1),\n    unknown(2),\n    chassis(3),\n    backplane(4),\n    container(5),\n    powerSupply(6),\n    fan(7),\n    sensor(8),\n    module(9),\n    port(10),\n    stack(11)\n}\nDESCRIPTION\n    \"Implementation of the 'cpu(12)' enumeration is not\n    required.\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "::= { entityCompliances 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entity3Compliance MODULE-COMPLIANCE\n    STATUS  current\n    DESCRIPTION\n            \"The compliance statement for SNMP entities that implement\n            version 3 of the Entity MIB.\"\n    MODULE  -- this module\n        MANDATORY-GROUPS {\n                           entityPhysicalGroup,\n                           entityPhysical2Group,\n                           entityPhysical3Group,\n                           entityGeneralGroup,\n                           entityNotificationsGroup\n        }\n        GROUP entityLogical2Group\n        DESCRIPTION\n            \"Implementation of this group is not mandatory for agents\n            that model all MIB object instances within a single naming\n            scope.\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "GROUP entityMappingGroup DESCRIPTION \"Implementation of the entPhysicalContainsTable is mandatory for all agents. Implementation of the entLPMappingTable and entAliasMappingTables are not mandatory for agents that model all MIB object instances within a single naming scope.",
      "zh-CHS": "GROUP entityMappingGroup DESCRIPTION“entPhysicalContainsTable的实现对于所有代理都是强制性的。EntlMappingTable和entAliasMappingTables的实现对于在单个命名范围内为所有MIB对象实例建模的代理都不是强制性的。"
    },
    {
      "indent": 12,
      "text": "Note that the entAliasMappingTable may be useful for all agents; however, implementation of the entityLogicalGroup or entityLogical2Group is required to support this table.\"",
      "zh-CHS": "请注意，恩他利阿玛可用于所有药剂；但是，需要实现entityLogicalGroup或entityLogical2Group来支持此表。”"
    },
    {
      "indent": 8,
      "text": "OBJECT entPhysicalSerialNum MIN-ACCESS not-accessible DESCRIPTION \"Read and write access is not required for agents that cannot identify serial number information for physical entities, and/or cannot provide non-volatile storage for NMS-assigned serial numbers.",
      "zh-CHS": "对象entPhysicalSerialNum MIN-ACCESS不可访问描述“对于无法识别物理实体序列号信息和/或无法为NMS分配的序列号提供非易失性存储的代理，不需要读写访问权限。"
    },
    {
      "indent": 12,
      "text": "Write access is not required for agents that can identify serial number information for physical entities, but cannot provide non-volatile storage for NMS-assigned serial numbers.",
      "zh-CHS": "可以识别物理实体的序列号信息，但不能为NMS分配的序列号提供非易失性存储的代理不需要写访问。"
    },
    {
      "indent": 12,
      "text": "Write access is not required for physical entities for which the associated value of the entPhysicalIsFRU object is equal to 'false(2)'.\"",
      "zh-CHS": "entPhysicalIsFRU对象的关联值等于“false（2）”的物理实体不需要写访问权限。”"
    },
    {
      "indent": 8,
      "text": "OBJECT entPhysicalAlias",
      "zh-CHS": "实体性内耳炎"
    },
    {
      "indent": 8,
      "text": "MIN-ACCESS read-only DESCRIPTION \"Write access is required only if the associated entPhysicalClass value is equal to 'chassis(3)'.\"",
      "zh-CHS": "MIN-ACCESS只读说明“仅当关联的entPhysicalClass值等于“机箱（3）”时，才需要写访问。”"
    },
    {
      "indent": 8,
      "text": "OBJECT entPhysicalAssetID MIN-ACCESS not-accessible DESCRIPTION \"Read and write access is not required for agents that cannot provide non-volatile storage for NMS-assigned asset identifiers.",
      "zh-CHS": "对象entPhysicalAssetID MIN-ACCESS不可访问描述“对于无法为NMS分配的资产标识符提供非易失性存储的代理，不需要读写访问权限。"
    },
    {
      "indent": 4,
      "text": "        Write access is not required for physical entities for which\n        the associated value of entPhysicalIsFRU is equal to\n        'false(2)'.\"\n::= { entityCompliances 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- MIB groupings\nentityPhysicalGroup    OBJECT-GROUP\n    OBJECTS {\n              entPhysicalDescr,\n              entPhysicalVendorType,\n              entPhysicalContainedIn,\n              entPhysicalClass,\n              entPhysicalParentRelPos,\n              entPhysicalName\n            }\n    STATUS  current\n    DESCRIPTION\n            \"The collection of objects used to represent physical\n            system components, for which a single agent provides\n            management information.\"\n    ::= { entityGroups 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entityLogicalGroup    OBJECT-GROUP\n    OBJECTS {\n              entLogicalDescr,\n              entLogicalType,\n              entLogicalCommunity,\n              entLogicalTAddress,\n              entLogicalTDomain\n            }\n    STATUS  deprecated\n    DESCRIPTION\n            \"The collection of objects used to represent the list of\n            logical entities, for which a single agent provides\n            management information.\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "::= { entityGroups 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entityMappingGroup    OBJECT-GROUP\n    OBJECTS {\n              entLPPhysicalIndex,\n              entAliasMappingIdentifier,\n              entPhysicalChildIndex\n            }\n    STATUS  current\n    DESCRIPTION\n            \"The collection of objects used to represent the\n            associations between multiple logical entities, physical\n            components, interfaces, and port identifiers, for which a\n            single agent provides management information.\"\n    ::= { entityGroups 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entityGeneralGroup    OBJECT-GROUP\n    OBJECTS {\n              entLastChangeTime\n            }\n    STATUS  current\n    DESCRIPTION\n            \"The collection of objects used to represent general entity\n            information, for which a single agent provides management\n            information.\"\n    ::= { entityGroups 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entityNotificationsGroup NOTIFICATION-GROUP\n    NOTIFICATIONS { entConfigChange }\n    STATUS        current\n    DESCRIPTION\n            \"The collection of notifications used to indicate Entity MIB\n            data consistency and general status information.\"\n    ::= { entityGroups 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entityPhysical2Group    OBJECT-GROUP\n    OBJECTS {\n              entPhysicalHardwareRev,\n              entPhysicalFirmwareRev,\n              entPhysicalSoftwareRev,\n              entPhysicalSerialNum,\n              entPhysicalMfgName,\n              entPhysicalModelName,\n              entPhysicalAlias,\n              entPhysicalAssetID,\n              entPhysicalIsFRU\n            }\n    STATUS  current",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "DESCRIPTION\n        \"The collection of objects used to represent physical\n        system components, for which a single agent provides\n        management information.  This group augments the objects\n        contained in the entityPhysicalGroup.\"\n::= { entityGroups 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entityLogical2Group    OBJECT-GROUP\n    OBJECTS {\n              entLogicalDescr,\n              entLogicalType,\n              entLogicalTAddress,\n              entLogicalTDomain,\n              entLogicalContextEngineID,\n              entLogicalContextName\n            }\n    STATUS  current\n    DESCRIPTION\n            \"The collection of objects used to represent the\n            list of logical entities, for which a single SNMP entity\n            provides management information.\"\n    ::= { entityGroups 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "entityPhysical3Group    OBJECT-GROUP\n    OBJECTS {\n              entPhysicalMfgDate,\n              entPhysicalUris\n            }\n    STATUS  current\n    DESCRIPTION\n            \"The collection of objects used to represent physical\n            system components, for which a single agent provides\n            management information.  This group augments the objects\n            contained in the entityPhysicalGroup.\"\n    ::= { entityGroups 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "4. Usage Examples",
      "section_title": true,
      "zh-CHS": "4. 用法示例"
    },
    {
      "indent": 3,
      "text": "The following sections iterate the instance values for two example networking devices. These examples are kept simple to make them more understandable. Auxiliary components such as fans, sensors, empty slots, and sub-modules are not shown, but might be modeled in real implementations.",
      "zh-CHS": "以下各节迭代两个示例网络设备的实例值。这些例子保持简单，以便更容易理解。未显示辅助组件，如风扇、传感器、空插槽和子模块，但可以在实际实现中建模。"
    },
    {
      "indent": 0,
      "text": "4.1. Router/Bridge",
      "section_title": true,
      "zh-CHS": "4.1. 路由器/网桥"
    },
    {
      "indent": 3,
      "text": "The first example is a router containing two slots. Each slot contains a 3 port router/bridge module. Each port is represented in the ifTable. There are two logical instances of OSPF running and two logical bridges:",
      "zh-CHS": "第一个示例是包含两个插槽的路由器。每个插槽包含一个3端口路由器/网桥模块。每个端口都在ifTable中表示。OSPF运行的逻辑实例有两个，逻辑桥有两个："
    },
    {
      "indent": 4,
      "text": "Physical entities -- entPhysicalTable:\n   1 Field-replaceable physical chassis:\n     entPhysicalDescr.1 ==             'Acme Chassis Model 100'\n     entPhysicalVendorType.1 ==        acmeProducts.chassisTypes.1\n     entPhysicalContainedIn.1 ==       0\n     entPhysicalClass.1 ==             chassis(3)\n     entPhysicalParentRelPos.1 ==      0\n     entPhysicalName.1 ==              '100-A'\n     entPhysicalHardwareRev.1 ==       'A(1.00.02)'\n     entPhysicalSoftwareRev.1 ==       ''\n     entPhysicalFirmwareRev.1 ==       ''\n     entPhysicalSerialNum.1 ==         'C100076544'\n     entPhysicalMfgName.1 ==           'Acme'\n     entPhysicalModelName.1 ==         '100'\n     entPhysicalAlias.1 ==             'cl-SJ17-3-006:rack1:rtr-U3'\n     entPhysicalAssetID.1 ==           '0007372293'\n     entPhysicalIsFRU.1 ==             true(1)\n     entPhysicalMfgDate.1 ==           '2002-5-26,13:30:30.0,-4:0'\n     entPhysicalUris.1 ==              'URN:CLEI:CNME120ARA'\n   2 slots within the chassis:\n     entPhysicalDescr.2 ==             'Acme Chassis Slot Type AA'\n     entPhysicalVendorType.2  ==       acmeProducts.slotTypes.1\n     entPhysicalContainedIn.2 ==       1\n     entPhysicalClass.2 ==             container(5)\n     entPhysicalParentRelPos.2 ==      1\n     entPhysicalName.2 ==              'S1'\n     entPhysicalHardwareRev.2 ==       'B(1.00.01)'\n     entPhysicalSoftwareRev.2 ==       ''\n     entPhysicalFirmwareRev.2 ==       ''\n     entPhysicalSerialNum.2 ==         ''\n     entPhysicalMfgName.2 ==           'Acme'\n     entPhysicalModelName.2 ==         'AA'\n     entPhysicalAlias.2 ==             ''",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalAssetID.2 ==           ''\nentPhysicalIsFRU.2 ==             false(2)\nentPhysicalMfgDate.2 ==           '2002-7-26,12:22:12.0,-4:0'\nentPhysicalUris.2 ==              'URN:CLEI:CNME123ARA'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.3 ==             'Acme Chassis Slot Type AA'\nentPhysicalVendorType.3 =         acmeProducts.slotTypes.1\nentPhysicalContainedIn.3 ==       1\nentPhysicalClass.3 ==             container(5)\nentPhysicalParentRelPos.3 ==      2\nentPhysicalName.3 ==              'S2'\nentPhysicalHardwareRev.3 ==       '1.00.07'\nentPhysicalSoftwareRev.3 ==       ''\nentPhysicalFirmwareRev.3 ==       ''\nentPhysicalSerialNum.3 ==         ''\nentPhysicalMfgName.3 ==           'Acme'\nentPhysicalModelName.3 ==         'AA'\nentPhysicalAlias.3 ==             ''\nentPhysicalAssetID.3 ==           ''\nentPhysicalIsFRU.3 ==             false(2)\nentPhysicalMfgDate.3 ==           '2002-7-26,12:12:12.0,-4:0'\nentPhysicalUris.3 ==              'URN:CLEI:CNME123ARA'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "2 Field-replaceable modules:\nSlot 1 contains a module with 3 ports:\n  entPhysicalDescr.4 ==             'Acme Router-100'\n  entPhysicalVendorType.4  ==       acmeProducts.moduleTypes.14\n  entPhysicalContainedIn.4 ==       2\n  entPhysicalClass.4 ==             module(9)\n  entPhysicalParentRelPos.4 ==      1\n  entPhysicalName.4 ==              'M1'\n  entPhysicalHardwareRev.4 ==       '1.00.07'\n  entPhysicalSoftwareRev.4 ==       '1.4.1'\n  entPhysicalFirmwareRev.4 ==       'A(1.1)'\n  entPhysicalSerialNum.4 ==         'C100087363'\n  entPhysicalMfgName.4 ==           'Acme'\n  entPhysicalModelName.4 ==         'R100-FE'\n  entPhysicalAlias.4 ==             'rtr-U3:m1:SJ17-3-eng'\n  entPhysicalAssetID.4 ==           '0007372462'\n  entPhysicalIsFRU.4 ==             true(1)\n  entPhysicalMfgDate.4 ==           '2003-7-18,13:30:30.0,-4:0'\n  entPhysicalUris.4 ==              'URN:CLEI:CNRU123CAA'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.5 ==             'Acme Ethernet-100 Port'\nentPhysicalVendorType.5  ==       acmeProducts.portTypes.2\nentPhysicalContainedIn.5 ==       4\nentPhysicalClass.5 ==             port(10)\nentPhysicalParentRelPos.5 ==      1",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalName.5 ==              'P1'\nentPhysicalHardwareRev.5 ==       'G(1.02)'\nentPhysicalSoftwareRev.5 ==       ''\nentPhysicalFirmwareRev.5 ==       '1.1'\nentPhysicalSerialNum.5 ==         ''\nentPhysicalMfgName.5 ==           'Acme'\nentPhysicalModelName.5 ==         'FE-100'\nentPhysicalAlias.5 ==             ''\nentPhysicalAssetID.5 ==           ''\nentPhysicalIsFRU.5 ==             false(2)\nentPhysicalMfgDate.5 ==           '2003-7-18,14:20:22.0,-4:0'\nentPhysicalUris.5 ==              'URN:CLEI:CNMES23ARA'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.6 ==             'Acme Ethernet-100 Port'\nentPhysicalVendorType.6  ==       acmeProducts.portTypes.2\nentPhysicalContainedIn.6 ==       4\nentPhysicalClass.6 ==             port(10)\nentPhysicalParentRelPos.6 ==      2\nentPhysicalName.6 ==              'P2'\nentPhysicalHardwareRev.6 ==       'G(1.02)'\nentPhysicalSoftwareRev.6 ==       ''\nentPhysicalFirmwareRev.6 ==       '1.1'\nentPhysicalSerialNum.6 ==         ''\nentPhysicalMfgName.6 ==           'Acme'\nentPhysicalModelName.6 ==         'FE-100'\nentPhysicalAlias.6 ==             ''\nentPhysicalAssetID.6 ==           ''\nentPhysicalIsFRU.6 ==             false(2)\nentPhysicalMfgDate.6 ==           '2003-7-19,10:15:15.0,-4:0'\nentPhysicalUris.6 ==              'URN:CLEI:CNMES23ARA'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.7 ==             'Acme Router-100 FDDI-Port'\nentPhysicalVendorType.7  ==       acmeProducts.portTypes.3\nentPhysicalContainedIn.7 ==       4\nentPhysicalClass.7 ==             port(10)\nentPhysicalParentRelPos.7 ==      3\nentPhysicalName.7 ==              'P3'\nentPhysicalHardwareRev.7 ==       'B(1.03)'\nentPhysicalSoftwareRev.7 ==       '2.5.1'\nentPhysicalFirmwareRev.7 ==       '2.5F'\nentPhysicalSerialNum.7 ==         ''\nentPhysicalMfgName.7 ==           'Acme'\nentPhysicalModelName.7 ==         'FDDI-100'\nentPhysicalAlias.7 ==             ''\nentPhysicalAssetID.7 ==           ''\nentPhysicalIsFRU.7 ==             false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "Slot 2 contains another 3-port module:\n   entPhysicalDescr.8 ==             'Acme Router-100 Comm Module'\n   entPhysicalVendorType.8  ==       acmeProducts.moduleTypes.15\n   entPhysicalContainedIn.8 ==       3\n   entPhysicalClass.8 ==             module(9)\n   entPhysicalParentRelPos.8 ==      1\n   entPhysicalName.8 ==              'M2'\n   entPhysicalHardwareRev.8 ==       '2.01.00'\n   entPhysicalSoftwareRev.8 ==       '3.0.7'\n   entPhysicalFirmwareRev.8 ==       'A(1.2)'\n   entPhysicalSerialNum.8 ==         'C100098732'\n   entPhysicalMfgName.8 ==           'Acme'\n   entPhysicalModelName.8 ==         'C100'\n   entPhysicalAlias.8 ==             'rtr-U3:m2:SJ17-2-eng'\n   entPhysicalAssetID.8 ==           '0007373982'\n   entPhysicalIsFRU.8 ==             true(1)\n   entPhysicalMfgDate.8 ==           '2002-5-26,13:30:15.0,-4:0'\n   entPhysicalUris.8 ==              'URN:CLEI:CNRT321MAA'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.9 ==             'Acme Fddi-100 Port'\nentPhysicalVendorType.9 ==        acmeProducts.portTypes.5\nentPhysicalContainedIn.9 ==       8\nentPhysicalClass.9 ==             port(10)\nentPhysicalParentRelPos.9 ==      1\nentPhysicalName.9 ==              'FDDI Primary'\nentPhysicalHardwareRev.9 ==       'CC(1.07)'\nentPhysicalSoftwareRev.9 ==       '2.0.34'\nentPhysicalFirmwareRev.9 ==       '1.1'\nentPhysicalSerialNum.9 ==         ''\nentPhysicalMfgName.9 ==           'Acme'\nentPhysicalModelName.9 ==         'FDDI-100'\nentPhysicalAlias.9 ==             ''\nentPhysicalAssetID.9 ==           ''\nentPhysicalIsFRU.9 ==             false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.10 ==            'Acme Ethernet-100 Port'\nentPhysicalVendorType.10 ==       acmeProducts.portTypes.2\nentPhysicalContainedIn.10 ==      8\nentPhysicalClass.10 ==            port(10)\nentPhysicalParentRelPos.10 ==     2\nentPhysicalName.10 ==             'Ethernet A'\nentPhysicalHardwareRev.10 ==      'G(1.04)'\nentPhysicalSoftwareRev.10 ==      ''\nentPhysicalFirmwareRev.10 ==      '1.3'\nentPhysicalSerialNum.10 ==        ''\nentPhysicalMfgName.10 ==          'Acme'\nentPhysicalModelName.10 ==        'FE-100'\nentPhysicalAlias.10 ==            ''",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalAssetID.10 ==          ''\nentPhysicalIsFRU.10 ==            false(2)\nentPhysicalMfgDate.10 ==          '2002-7-26,13:30:15.0,-4:0'\nentPhysicalUris.10 ==             'URN:CLEI:CNMES23ARA'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.11 ==            'Acme Ethernet-100 Port'\nentPhysicalVendorType.11 ==       acmeProducts.portTypes.2\nentPhysicalContainedIn.11 ==      8\nentPhysicalClass.11 ==            port(10)\nentPhysicalParentRelPos.11 ==     3\nentPhysicalName.11 ==             'Ethernet B'\nentPhysicalHardwareRev.11 ==      'G(1.04)'\nentPhysicalSoftwareRev.11 ==      ''\nentPhysicalFirmwareRev.11 ==      '1.3'\nentPhysicalSerialNum.11 ==        ''\nentPhysicalMfgName.11 ==          'Acme'\nentPhysicalModelName.11 ==        'FE-100'\nentPhysicalAlias.11 ==            ''\nentPhysicalAssetID.11 ==          ''\nentPhysicalIsFRU.11 ==            false(2)\nentPhysicalMfgDate.11 ==          '2002-8-16,15:35:15.0,-4:0'\nentPhysicalUris.11 ==             'URN:CLEI:CNMES23ARA'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "Logical entities -- entLogicalTable; no SNMPv3 support\n 2 OSPF instances:\n   entLogicalDescr.1 ==              'Acme OSPF v1.1'\n   entLogicalType.1 ==               ospf\n   entLogicalCommunity.1 ==          'public-ospf1'\n   entLogicalTAddress.1 ==           192.0.2.1:161\n   entLogicalTDomain.1 ==            snmpUDPDomain\n   entLogicalContextEngineID.1 ==    ''\n   entLogicalContextName.1 ==        ''",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entLogicalDescr.2 ==              'Acme OSPF v1.1'\nentLogicalType.2 ==               ospf\nentLogicalCommunity.2 ==          'public-ospf2'\nentLogicalTAddress.2 ==           192.0.2.1:161\nentLogicalTDomain.2 ==            snmpUDPDomain\nentLogicalContextEngineID.2 ==    ''\nentLogicalContextName.2 ==        ''",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "2 logical bridges:\n  entLogicalDescr.3 ==              'Acme Bridge v2.1.1'\n  entLogicalType.3  ==              dot1dBridge\n  entLogicalCommunity.3 ==          'public-bridge1'\n  entLogicalTAddress.3 ==           192.0.2.1:161\n  entLogicalTDomain.3 ==            snmpUDPDomain\n  entLogicalContextEngineID.3 ==    ''",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entLogicalContextName.3 == ''",
      "zh-CHS": "entLogicalContextName.3==“”"
    },
    {
      "indent": 9,
      "text": "entLogicalDescr.4 ==              'Acme Bridge v2.1.1'\nentLogicalType.4 ==               dot1dBridge\nentLogicalCommunity.4 ==          'public-bridge2'\nentLogicalTAddress.4 ==           192.0.2.1:161\nentLogicalTDomain.4 ==            snmpUDPDomain\nentLogicalContextEngineID.4 ==    ''\nentLogicalContextName.4 ==        ''",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Logical to Physical Mappings: 1st OSPF instance: uses module 1-port 1 entLPPhysicalIndex.1.5 == 5",
      "zh-CHS": "逻辑到物理映射：第一个OSPF实例：使用模块1-port 1 entLPPhysicalIndex.1.5==5"
    },
    {
      "indent": 5,
      "text": "2nd OSPF instance: uses module 2-port 1 entLPPhysicalIndex.2.9 == 9",
      "zh-CHS": "第二个OSPF实例：使用模块2端口1 entLPPhysicalIndex.2.9==9"
    },
    {
      "indent": 5,
      "text": "1st bridge group: uses module 1, all ports",
      "zh-CHS": "第一网桥组：使用模块1，所有端口"
    },
    {
      "indent": 5,
      "text": "[ed. -- Note that these mappings are included in the table because another logical entity (1st OSPF) utilizes one of the ports. If this were not the case, then a single mapping to the module (e.g., entLPPhysicalIndex.3.4) would be present instead.] entLPPhysicalIndex.3.5 == 5 entLPPhysicalIndex.3.6 == 6 entLPPhysicalIndex.3.7 == 7",
      "zh-CHS": "[ed.--请注意，这些映射包含在表中，因为另一个逻辑实体（第一个OSPF）使用其中一个端口。如果不是这样，则会出现到模块的单个映射（例如entLPPhysicalIndex.3.4）。]entLPPhysicalIndex.3.5==5 entLPPhysicalIndex.3.6==6 entLPPhysicalIndex.3.7==7"
    },
    {
      "indent": 5,
      "text": "2nd bridge group: uses module 2, all ports\n    entLPPhysicalIndex.4.9  ==        9\n    entLPPhysicalIndex.4.10 ==        10\n    entLPPhysicalIndex.4.11 ==        11",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Physical to Logical to MIB Alias Mappings -- entAliasMappingTable:\n  Example 1: ifIndex values are global to all logical entities\n      entAliasMappingIdentifier.5.0 ==  ifIndex.1\n      entAliasMappingIdentifier.6.0 ==  ifIndex.2\n      entAliasMappingIdentifier.7.0 ==  ifIndex.3\n      entAliasMappingIdentifier.9.0 ==  ifIndex.4\n      entAliasMappingIdentifier.10.0 == ifIndex.5\n      entAliasMappingIdentifier.11.0 == ifIndex.6",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "  Example 2: ifIndex values are not shared by all logical entities;\n         (Bridge-1 uses ifIndex values 101 - 103 and Bridge-2 uses\nifIndex values 204-206.)\n         entAliasMappingIdentifier.5.0 ==  ifIndex.1\n         entAliasMappingIdentifier.5.3 ==  ifIndex.101\n         entAliasMappingIdentifier.6.0 ==  ifIndex.2",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "entAliasMappingIdentifier.6.3 ==  ifIndex.102\nentAliasMappingIdentifier.7.0 ==  ifIndex.3\nentAliasMappingIdentifier.7.3 ==  ifIndex.103\nentAliasMappingIdentifier.9.0 ==  ifIndex.4\nentAliasMappingIdentifier.9.4 ==  ifIndex.204\nentAliasMappingIdentifier.10.0 == ifIndex.5\nentAliasMappingIdentifier.10.4 == ifIndex.205\nentAliasMappingIdentifier.11.0 == ifIndex.6\nentAliasMappingIdentifier.11.4 == ifIndex.206",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Physical Containment Tree -- entPhysicalContainsTable\n  chassis has two containers:\n      entPhysicalChildIndex.1.2 ==      2\n      entPhysicalChildIndex.1.3 ==      3",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "container 1 has a module: entPhysicalChildIndex.2.4 == 4",
      "zh-CHS": "容器1有一个模块：entPhysicalChildIndex.2.4==4"
    },
    {
      "indent": 5,
      "text": "container 2 has a module: entPhysicalChildIndex.3.8 == 8",
      "zh-CHS": "容器2有一个模块：entPhysicalChildIndex.3.8==8"
    },
    {
      "indent": 5,
      "text": "module 1 has 3 ports:\n    entPhysicalChildIndex.4.5 ==      5\n    entPhysicalChildIndex.4.6 ==      6\n    entPhysicalChildIndex.4.7 ==      7",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "module 2 has 3 ports:\n    entPhysicalChildIndex.8.9 ==      9\n    entPhysicalChildIndex.8.10 ==     10\n    entPhysicalChildIndex.8.11 ==     11",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "4.2. Repeaters",
      "section_title": true,
      "zh-CHS": "4.2. 中继器"
    },
    {
      "indent": 3,
      "text": "The second example is a 3-slot Hub with 2 backplane ethernet segments. Slot three is empty, and the remaining slots contain ethernet repeater modules.",
      "zh-CHS": "第二个示例是具有2个背板以太网段的3插槽集线器。插槽3为空，其余插槽包含以太网中继器模块。"
    },
    {
      "indent": 3,
      "text": "Note that this example assumes an older Repeater MIB implementation, (RFC 1516 [RFC1516]) rather than the new Repeater MIB (RFC 2108 [RFC2108]). The new version contains an object called 'rptrPortRptrId', which should be used to identify repeater port groupings, rather than using community strings or contexts.",
      "zh-CHS": "注意，该示例假定一个旧的中继器MIB实现（RFC 1516[RFC1516]），而不是新的中继器MIB（RFC 2108[RFC2108]）。新版本包含一个名为“rportrptrid”的对象，该对象应用于标识中继器端口分组，而不是使用社区字符串或上下文。"
    },
    {
      "indent": 3,
      "text": "Physical entities -- entPhysicalTable:\n   1 Field-replaceable physical chassis:\n      entPhysicalDescr.1 ==       'Acme Chassis Model 110'\n      entPhysicalVendorType.1 ==  acmeProducts.chassisTypes.2\n      entPhysicalContainedIn.1 == 0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalClass.1 ==       chassis(3)\nentPhysicalParentRelPos.1 ==0\nentPhysicalName.1 ==        '110-B'\nentPhysicalHardwareRev.1 == 'A(1.02.00)'\nentPhysicalSoftwareRev.1 == ''\nentPhysicalFirmwareRev.1 == ''\nentPhysicalSerialNum.1 ==   'C100079294'\nentPhysicalMfgName.1 ==     'Acme'\nentPhysicalModelName.1 ==   '110'\nentPhysicalAlias.1 ==       'bldg09:floor1:rptr18:0067eea0229f'\nentPhysicalAssetID.1 ==     '0007386327'\nentPhysicalIsFRU.1 ==       true(1)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "2 Chassis Ethernet Backplanes:\n   entPhysicalDescr.2 ==          'Acme Ethernet Backplane Type A'\n   entPhysicalVendorType.2 ==     acmeProducts.backplaneTypes.1\n   entPhysicalContainedIn.2 ==    1\n   entPhysicalClass.2 ==          backplane(4)\n   entPhysicalParentRelPos.2 ==   1\n   entPhysicalName.2 ==           'B1'\n   entPhysicalHardwareRev.2 ==    'A(2.04.01)'\n   entPhysicalSoftwareRev.2 ==    ''\n   entPhysicalFirmwareRev.2 ==    ''\n   entPhysicalSerialNum.2 ==      ''\n   entPhysicalMfgName.2 ==        'Acme'\n   entPhysicalModelName.2 ==      'BK-A'\n   entPhysicalAlias.2 ==          ''\n   entPhysicalAssetID.2 ==        ''\n   entPhysicalIsFRU.2 ==          false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.3 ==          'Acme Ethernet Backplane Type A'\nentPhysicalVendorType.3  ==    acmeProducts.backplaneTypes.1\nentPhysicalContainedIn.3 ==    1\nentPhysicalClass.3 ==          backplane(4)\nentPhysicalParentRelPos.3 ==   2\nentPhysicalName.3 ==           'B2'\nentPhysicalHardwareRev.3 ==    'A(2.04.01)'\nentPhysicalSoftwareRev.3 ==    ''\nentPhysicalFirmwareRev.3 ==    ''\nentPhysicalSerialNum.3 ==      ''\nentPhysicalMfgName.3 ==        'Acme'\nentPhysicalModelName.3 ==      'BK-A'\nentPhysicalAlias.3 ==          ''\nentPhysicalAssetID.3 ==        ''\nentPhysicalIsFRU.3 ==          false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "3 slots within the chassis:\n   entPhysicalDescr.4 ==          'Acme Hub Slot Type RB'\n   entPhysicalVendorType.4  ==    acmeProducts.slotTypes.5\n   entPhysicalContainedIn.4 ==    1\n   entPhysicalClass.4 ==          container(5)\n   entPhysicalParentRelPos.4 ==   1\n   entPhysicalName.4 ==           'Slot 1'\n   entPhysicalHardwareRev.4 ==    'B(1.00.03)'\n   entPhysicalSoftwareRev.4 ==    ''\n   entPhysicalFirmwareRev.4 ==    ''\n   entPhysicalSerialNum.4 ==      ''\n   entPhysicalMfgName.4 ==        'Acme'\n   entPhysicalModelName.4 ==      'RB'\n   entPhysicalAlias.4 ==          ''\n   entPhysicalAssetID.4 ==        ''\n   entPhysicalIsFRU.4 ==          false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.5 ==          'Acme Hub Slot Type RB'\nentPhysicalVendorType.5  ==    acmeProducts.slotTypes.5\nentPhysicalContainedIn.5 ==    1\nentPhysicalClass.5 ==          container(5)\nentPhysicalParentRelPos.5 ==   2\nentPhysicalName.5 ==           'Slot 2'\nentPhysicalHardwareRev.5 ==    'B(1.00.03)'\nentPhysicalSoftwareRev.5 ==    ''\nentPhysicalFirmwareRev.5 ==    ''\nentPhysicalSerialNum.5 ==      ''\nentPhysicalMfgName.5 ==        'Acme'\nentPhysicalModelName.5 ==      'RB'\nentPhysicalAlias.5 ==          ''\nentPhysicalAssetID.5 ==        ''\nentPhysicalIsFRU.5 ==          false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.6 ==          'Acme Hub Slot Type RB'\nentPhysicalVendorType.6  ==    acmeProducts.slotTypes.5\nentPhysicalContainedIn.6 ==    1\nentPhysicalClass.6 ==          container(5)\nentPhysicalParentRelPos.6 ==   3\nentPhysicalName.6 ==           'Slot 3'\nentPhysicalHardwareRev.6 ==    'B(1.00.03)'\nentPhysicalSoftwareRev.6 ==    ''\nentPhysicalFirmwareRev.6 ==    ''\nentPhysicalSerialNum.6 ==      ''\nentPhysicalMfgName.6 ==        'Acme'\nentPhysicalModelName.6 ==      'RB'\nentPhysicalAlias.6 ==          ''\nentPhysicalAssetID.6 ==        ''\nentPhysicalIsFRU.6 ==          false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "Slot 1 contains a plug-in module with 4 10-BaseT ports:\n   entPhysicalDescr.7  ==         'Acme 10Base-T Module 114'\n   entPhysicalVendorType.7 ==     acmeProducts.moduleTypes.32\n   entPhysicalContainedIn.7  ==   4\n   entPhysicalClass.7 ==          module(9)\n   entPhysicalParentRelPos.7 ==   1\n   entPhysicalName.7 ==           'M1'\n   entPhysicalHardwareRev.7 ==    'A(1.02.01)'\n   entPhysicalSoftwareRev.7 ==    '1.7.2'\n   entPhysicalFirmwareRev.7 ==    'A(1.5)'\n   entPhysicalSerialNum.7 ==      'C100096244'\n   entPhysicalMfgName.7 ==        'Acme'\n   entPhysicalModelName.7 =       '114'\n   entPhysicalAlias.7 ==          'bldg09:floor1:eng'\n   entPhysicalAssetID.7 ==        '0007962951'\n   entPhysicalIsFRU.7 ==          true(1)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.8 ==          'Acme 10Base-T Port RB'\nentPhysicalVendorType.8 ==     acmeProducts.portTypes.10\nentPhysicalContainedIn.8  ==   7\nentPhysicalClass.8 ==          port(10)\nentPhysicalParentRelPos.8 ==   1\nentPhysicalName.8 ==           'Ethernet-A'\nentPhysicalHardwareRev.8 ==    'A(1.04F)'\nentPhysicalSoftwareRev.8 ==    ''\nentPhysicalFirmwareRev.8 ==    '1.4'\nentPhysicalSerialNum.8 ==      ''\nentPhysicalMfgName.8 ==        'Acme'\nentPhysicalModelName.8 ==      'RB'\nentPhysicalAlias.8 ==          ''\nentPhysicalAssetID.8 ==        ''\nentPhysicalIsFRU.8 ==          false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.9  ==         'Acme 10Base-T Port RB'\nentPhysicalVendorType.9 ==     acmeProducts.portTypes.10\nentPhysicalContainedIn.9 ==    7\nentPhysicalClass.9 ==          port(10)\nentPhysicalParentRelPos.9 ==   2\nentPhysicalName.9 ==           'Ethernet-B'\nentPhysicalHardwareRev.9 ==    'A(1.04F)'\nentPhysicalSoftwareRev.9 ==    ''\nentPhysicalFirmwareRev.9 ==    '1.4'\nentPhysicalSerialNum.9 ==      ''\nentPhysicalMfgName.9 ==        'Acme'\nentPhysicalModelName.9 =       'RB'\nentPhysicalAlias.9 ==          ''\nentPhysicalAssetID.9 ==        ''\nentPhysicalIsFRU.9 ==          false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.10 ==         'Acme 10Base-T Port RB'\nentPhysicalVendorType.10 ==    acmeProducts.portTypes.10\nentPhysicalContainedIn.10 ==   7\nentPhysicalClass.10 ==         port(10)\nentPhysicalParentRelPos.10 ==  3\nentPhysicalName.10 ==          'Ethernet-C'\nentPhysicalHardwareRev.10 ==   'B(1.02.07)'\nentPhysicalSoftwareRev.10 ==   ''\nentPhysicalFirmwareRev.10 ==   '1.4'\nentPhysicalSerialNum.10 ==     ''\nentPhysicalMfgName.10 ==       'Acme'\nentPhysicalModelName.10 ==     'RB'\nentPhysicalAlias.10 ==         ''\nentPhysicalAssetID.10 ==       ''\nentPhysicalIsFRU.10 ==         false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.11 ==         'Acme 10Base-T Port RB'\nentPhysicalVendorType.11  ==   acmeProducts.portTypes.10\nentPhysicalContainedIn.11 ==   7\nentPhysicalClass.11 ==         port(10)\nentPhysicalParentRelPos.11 ==  4\nentPhysicalName.11 ==          'Ethernet-D'\nentPhysicalHardwareRev.11 ==   'B(1.02.07)'\nentPhysicalSoftwareRev.11 ==   ''\nentPhysicalFirmwareRev.11 ==   '1.4'\nentPhysicalSerialNum.11 ==     ''\nentPhysicalMfgName.11 ==       'Acme'\nentPhysicalModelName.11 ==     'RB'\nentPhysicalAlias.11 ==         ''\nentPhysicalAssetID.11 ==       ''\nentPhysicalIsFRU.11 ==         false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "Slot 2 contains another ethernet module with 2 ports.\n   entPhysicalDescr.12 ==         'Acme 10Base-T Module Model 4'\n   entPhysicalVendorType.12 ==    acmeProducts.moduleTypes.30\n   entPhysicalContainedIn.12 =    5\n   entPhysicalClass.12 ==         module(9)\n   entPhysicalParentRelPos.12 ==  1\n   entPhysicalName.12 ==          'M2'\n   entPhysicalHardwareRev.12 ==   'A(1.01.07)'\n   entPhysicalSoftwareRev.12 ==   '1.8.4'\n   entPhysicalFirmwareRev.12 ==   'A(1.8)'\n   entPhysicalSerialNum.12 ==     'C100102384'\n   entPhysicalMfgName.12 ==       'Acme'\n   entPhysicalModelName.12 ==     '4'\n   entPhysicalAlias.12 ==         'bldg09:floor1:devtest'\n   entPhysicalAssetID.12 ==       '0007968462'\n   entPhysicalIsFRU.12 ==         true(1)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.13 ==         'Acme 802.3 AUI Port'\nentPhysicalVendorType.13  ==   acmeProducts.portTypes.11\nentPhysicalContainedIn.13 ==   12\nentPhysicalClass.13 ==         port(10)\nentPhysicalParentRelPos.13 ==  1\nentPhysicalName.13 ==          'AUI'\nentPhysicalHardwareRev.13 ==   'A(1.06F)'\nentPhysicalSoftwareRev.13 ==   ''\nentPhysicalFirmwareRev.13 ==   '1.5'\nentPhysicalSerialNum.13 ==     ''\nentPhysicalMfgName.13 ==       'Acme'\nentPhysicalModelName.13 ==     ''\nentPhysicalAlias.13 ==         ''\nentPhysicalAssetID.13 ==       ''\nentPhysicalIsFRU.13 ==         false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entPhysicalDescr.14 ==         'Acme 10Base-T Port RD'\nentPhysicalVendorType.14  ==   acmeProducts.portTypes.14\nentPhysicalContainedIn.14 ==   12\nentPhysicalClass.14 ==         port(10)\nentPhysicalParentRelPos.14 ==  2\nentPhysicalName.14 ==          'E2'\nentPhysicalHardwareRev.14 ==   'B(1.01.02)'\nentPhysicalSoftwareRev.14 ==   ''\nentPhysicalFirmwareRev.14 ==   '2.1'\nentPhysicalSerialNum.14 ==     ''\nentPhysicalMfgName.14 ==       'Acme'\nentPhysicalModelName.14 ==     ''\nentPhysicalAlias.14 ==         ''\nentPhysicalAssetID.14 ==       ''\nentPhysicalIsFRU.14 ==         false(2)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Logical entities -- entLogicalTable; with SNMPv3 support\n   Repeater 1--comprised of any ports attached to backplane 1\n      entLogicalDescr.1 ==           'Acme repeater v3.1'\n      entLogicalType.1  ==           snmpDot3RptrMgt\n      entLogicalCommunity.1          'public-repeater1'\n      entLogicalTAddress.1 ==        192.0.2.1:161\n      entLogicalTDomain.1 ==         snmpUDPDomain\n      entLogicalContextEngineID.1 == '80000777017c7d7e7f'H\n      entLogicalContextName.1 ==     'repeater1'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "Repeater 2--comprised of any ports attached to backplane 2:\n   entLogicalDescr.2 ==           'Acme repeater v3.1'\n   entLogicalType.2  ==           snmpDot3RptrMgt\n   entLogicalCommunity.2 ==       'public-repeater2'\n   entLogicalTAddress.2 ==        192.0.2.1:161\n   entLogicalTDomain.2 ==         snmpUDPDomain",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "entLogicalContextEngineID.2 == '80000777017c7d7e7f'H\nentLogicalContextName.2 ==     'repeater2'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Logical to Physical Mappings -- entLPMappingTable:",
      "zh-CHS": "逻辑到物理映射--entLPMappingTable:"
    },
    {
      "indent": 5,
      "text": "repeater1 uses backplane 1, slot 1-ports 1 & 2, slot 2-port 1 [ed. -- Note that a mapping to the module is not included, because this example represents a port-switchable hub. Even though all ports on the module could belong to the same repeater as a matter of configuration, the LP port mappings should not be replaced dynamically with a single mapping for the module (e.g., entLPPhysicalIndex.1.7). If all ports on the module shared a single backplane connection, then a single mapping for the module would be more appropriate.]",
      "zh-CHS": "中继器1使用背板1、插槽1-端口1和2、插槽2-端口1[ed.-注意，不包括模块映射，因为此示例表示端口可切换集线器。尽管模块上的所有端口在配置上可能属于同一中继器，但LP端口映射不应动态替换为模块的单个映射（例如，entLPPhysicalIndex.1.7）。如果模块上的所有端口共享一个背板连接，则模块的单个映射更合适。]"
    },
    {
      "indent": 8,
      "text": "entLPPhysicalIndex.1.2 ==       2\nentLPPhysicalIndex.1.8 ==       8\nentLPPhysicalIndex.1.9 ==       9\nentLPPhysicalIndex.1.13 ==      13",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "repeater2 uses backplane 2, slot 1-ports 3 & 4, slot 2-port 2\n    entLPPhysicalIndex.2.3 ==      3\n    entLPPhysicalIndex.2.10 ==     10\n    entLPPhysicalIndex.2.11 ==     11\n    entLPPhysicalIndex.2.14 ==     14",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Physical to Logical to MIB Alias Mappings -- entAliasMappingTable:\n  Repeater Port Identifier values are shared by both repeaters:\n      entAliasMappingIdentifier.8.0 ==      rptrPortGroupIndex.1.1\n      entAliasMappingIdentifier.9.0 ==      rptrPortGroupIndex.1.2\n      entAliasMappingIdentifier.10.0 ==     rptrPortGroupIndex.1.3\n      entAliasMappingIdentifier.11.0 ==     rptrPortGroupIndex.1.4\n      entAliasMappingIdentifier.13.0 ==     rptrPortGroupIndex.2.1\n      entAliasMappingIdentifier.14.0 ==     rptrPortGroupIndex.2.2",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Physical Containment Tree -- entPhysicalContainsTable\n  chassis has two backplanes and three containers:\n      entPhysicalChildIndex.1.2 ==   2\n      entPhysicalChildIndex.1.3 ==   3\n      entPhysicalChildIndex.1.4 ==   4\n      entPhysicalChildIndex.1.5 ==   5\n      entPhysicalChildIndex.1.6 ==   6",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "container 1 has a module: entPhysicalChildIndex.4.7 == 7",
      "zh-CHS": "容器1有一个模块：entPhysicalChildIndex.4.7==7"
    },
    {
      "indent": 5,
      "text": "container 2 has a module entPhysicalChildIndex.5.12 == 12",
      "zh-CHS": "容器2有一个模块entPhysicalChildIndex.5.12==12"
    },
    {
      "indent": 5,
      "text": "[ed. -- in this example, container 3 is empty.]",
      "zh-CHS": "[ed.--在本例中，容器3为空。]"
    },
    {
      "indent": 5,
      "text": "module 1 has 4 ports:\n    entPhysicalChildIndex.7.8 ==   8\n    entPhysicalChildIndex.7.9 ==   9\n    entPhysicalChildIndex.7.10 ==  10\n    entPhysicalChildIndex.7.11 ==  11",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "module 2 has 2 ports:\n    entPhysicalChildIndex.12.13 == 13\n    entPhysicalChildIndex.12.14 == 14",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "5. Security Considerations",
      "section_title": true,
      "zh-CHS": "5. 安全考虑"
    },
    {
      "indent": 3,
      "text": "There are a number of management objects defined in this MIB that have a MAX-ACCESS clause of read-write and/or read-create. Such objects may be considered sensitive or vulnerable in some network environments. The support for SET operations in a non-secure environment without proper protection can have a negative effect on network operations.",
      "zh-CHS": "此MIB中定义了许多管理对象，它们的MAX-ACCESS子句为read-write和/或read-create。在某些网络环境中，此类对象可能被视为敏感或易受攻击。在没有适当保护的非安全环境中支持SET操作可能会对网络操作产生负面影响。"
    },
    {
      "indent": 3,
      "text": "There are a number of managed objects in this MIB that may contain sensitive information. These are:",
      "zh-CHS": "此MIB中有许多托管对象可能包含敏感信息。这些是："
    },
    {
      "indent": 3,
      "text": "entPhysicalDescr entPhysicalVendorType entPhysicalHardwareRev entPhysicalFirmwareRev entPhysicalSoftwareRev entPhysicalSerialNum entPhysicalMfgName entPhysicalModelName",
      "zh-CHS": "EntPhysicalDescrr entPhysicalVendorType entPhysicalHardwareRev entPhysicalFirmwareRev entPhysicalSoftwareRev entPhysicalSerialNum EntPhysicalFGName entPhysicalModelName"
    },
    {
      "indent": 6,
      "text": "These objects expose information about the physical entities within a managed system, which may be used to identify the vendor, model, and version information of each system component.",
      "zh-CHS": "这些对象公开有关托管系统中物理实体的信息，这些信息可用于标识每个系统组件的供应商、模型和版本信息。"
    },
    {
      "indent": 3,
      "text": "entPhysicalAssetID",
      "zh-CHS": "内翻"
    },
    {
      "indent": 6,
      "text": "This object can allow asset identifiers for various system components to be exposed, in the event this MIB object is actually configured by an NMS application.",
      "zh-CHS": "如果NMS应用程序实际配置了此MIB对象，则此对象可以允许公开各种系统组件的资产标识符。"
    },
    {
      "indent": 3,
      "text": "entLogicalDescr entLogicalType",
      "zh-CHS": "EntLogicalDeskr entLogicalType"
    },
    {
      "indent": 6,
      "text": "These objects expose the type of logical entities present in the managed system.",
      "zh-CHS": "这些对象公开托管系统中存在的逻辑实体的类型。"
    },
    {
      "indent": 3,
      "text": "entLogicalCommunity",
      "zh-CHS": "内部逻辑社区"
    },
    {
      "indent": 6,
      "text": "This object exposes community names associated with particular logical entities within the system.",
      "zh-CHS": "此对象公开与系统中特定逻辑实体关联的团体名称。"
    },
    {
      "indent": 3,
      "text": "entLogicalTAddress entLogicalTDomain",
      "zh-CHS": "EntLogicalAddress EntLogicalDomain"
    },
    {
      "indent": 6,
      "text": "These objects expose network addresses that can be used to communicate with an SNMP agent on behalf of particular logical entities within the system.",
      "zh-CHS": "这些对象公开可用于代表系统内特定逻辑实体与SNMP代理通信的网络地址。"
    },
    {
      "indent": 3,
      "text": "entLogicalContextEngineID entLogicalContextName",
      "zh-CHS": "entLogicalContextEngineID entLogicalContextName"
    },
    {
      "indent": 6,
      "text": "These objects identify the authoritative SNMP engine that contains information on behalf of particular logical entities within the system.",
      "zh-CHS": "这些对象标识包含代表系统内特定逻辑实体的信息的权威SNMP引擎。"
    },
    {
      "indent": 3,
      "text": "It is thus important to control even GET access to these objects and possibly to even encrypt the values of these object when sending them over the network via SNMP. Not all versions of SNMP provide features for such a secure environment.",
      "zh-CHS": "因此，在通过SNMP通过网络发送这些对象时，控制甚至访问这些对象，甚至可能加密这些对象的值，这一点非常重要。并非所有版本的SNMP都为这种安全环境提供功能。"
    },
    {
      "indent": 3,
      "text": "SNMPv1 by itself is not a secure environment. Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and GET/SET (read/change/create/delete) the objects in this MIB.",
      "zh-CHS": "SNMPv1本身不是一个安全的环境。即使网络本身是安全的（例如通过使用IPSec），即使如此，也无法控制安全网络上的谁可以访问和获取/设置（读取/更改/创建/删除）此MIB中的对象。"
    },
    {
      "indent": 3,
      "text": "It is recommended that the implementers consider the security features as provided by the SNMPv3 framework. Specifically, the use of the User-based Security Model RFC 3414 [RFC3414] and the View-based Access Control Model RFC 3415 [RFC3415] is recommended.",
      "zh-CHS": "建议实施者考虑SNMPv3框架提供的安全特性。具体而言，建议使用基于用户的安全模型RFC 3414[RFC3414]和基于视图的访问控制模型RFC 3415[RFC3415]。"
    },
    {
      "indent": 3,
      "text": "It is then a customer/user responsibility to ensure that the SNMP entity giving access to an instance of this MIB, is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET (change/create/delete) them.",
      "zh-CHS": "然后，客户/用户有责任确保授予对此MIB实例访问权限的SNMP实体被正确配置为仅授予那些拥有确实获取或设置（更改/创建/删除）对象的合法权限的主体（用户）对对象的访问权限。"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "zh-CHS": "6. IANA考虑"
    },
    {
      "indent": 3,
      "text": "The MIB module in this document uses the following IANA-assigned OBJECT IDENTIFIER values recorded in the SMI Numbers registry:",
      "zh-CHS": "本文档中的MIB模块使用SMI编号注册表中记录的以下IANA分配的对象标识符值："
    },
    {
      "indent": 14,
      "text": "Descriptor        OBJECT IDENTIFIER value\n----------        -----------------------\nentityMIB         { mib-2 47 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "7. Acknowledgements",
      "section_title": true,
      "zh-CHS": "7. 致谢"
    },
    {
      "indent": 3,
      "text": "This memo has been produced by the IETF's Entity MIB working group.",
      "zh-CHS": "本备忘录由IETF实体MIB工作组编制。"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "zh-CHS": "8. 工具书类"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "zh-CHS": "8.1. 规范性引用文件"
    },
    {
      "indent": 3,
      "text": "[RFC2578] McCloghrie, K., Perkins, D., and J. Schoenwaelder, \"Structure of Management Information Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.",
      "zh-CHS": "[RFC2578]McCloghrie，K.，Perkins，D.，和J.Schoenwaeld，“管理信息的结构版本2（SMIv2）”，STD 58，RFC 2578，1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2579] McCloghrie, K., Perkins, D., and J. Schoenwaelder, \"Textual Conventions for SMIv2\", STD 58, RFC 2579, April 1999.",
      "zh-CHS": "[RFC2579]McCloghrie，K.，Perkins，D.，和J.Schoenwaeld，“SMIv2的文本约定”，STD 58，RFC 2579，1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2580] McCloghrie, K., Perkins, D., and J. Schoenwaelder, \"Conformance Statements for SMIv2\", STD 58, RFC 2580, April 1999.",
      "zh-CHS": "[RFC2580]McCloghrie，K.，Perkins，D.，和J.Schoenwaeld，“SMIv2的一致性声明”，STD 58，RFC 25801999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC3411] Harrington, D., Presuhn, R., and B. Wijnen, \"An Architecture for Describing Simple Network Management Protocol (SNMP) Management Frameworks\", STD 62, RFC 3411, December 2002.",
      "zh-CHS": "[RFC3411]Harrington，D.，Presohn，R.，和B.Wijnen，“描述简单网络管理协议（SNMP）管理框架的体系结构”，STD 62，RFC 3411，2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC3417] Presuhn, R., \"Transport Mappings for the Simple Network Management Protocol (SNMP)\", STD 62, RFC 3417, December 2002.",
      "zh-CHS": "[RFC3417]Presohn，R.，“简单网络管理协议（SNMP）的传输映射”，STD 62，RFC 34172002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005.",
      "zh-CHS": "[RFC3986]Berners Lee，T.，Fielding，R.，和L.Masinter，“统一资源标识符（URI）：通用语法”，STD 66，RFC 3986，2005年1月。"
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "zh-CHS": "8.2. 资料性引用"
    },
    {
      "indent": 3,
      "text": "[RFC1157] Case, J., Fedor, M., Schoffstall, M., and J. Davin, \"Simple Network Management Protocol\", STD 15, RFC 1157, May 1990.",
      "zh-CHS": "[RFC1157]Case，J.，Fedor，M.，Schoffstall，M.，和J.Davin，“简单网络管理协议”，STD 15，RFC 1157，1990年5月。"
    },
    {
      "indent": 3,
      "text": "[RFC1493] Decker, E., Langille, P., Rijsinghani, A., and K. McCloghrie, \"Definitions of Managed Objects for Bridges\", RFC 1493, July 1993.",
      "zh-CHS": "[RFC1493]Decker，E.，Langille，P.，Rijsinghani，A.，和K.McCloghrie，“桥梁管理对象的定义”，RFC 1493，1993年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC1516] McMaster, D. and K. McCloghrie, \"Definitions of Managed Objects for IEEE 802.3 Repeater Devices\", RFC 1516, September 1993.",
      "zh-CHS": "[RFC1516]McMaster，D.和K.McCloghrie，“IEEE 802.3中继器设备的受管对象定义”，RFC 1516，1993年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC2037] McCloghrie, K. and A. Bierman, \"Entity MIB using SMIv2\", RFC 2037, October 1996.",
      "zh-CHS": "[RFC2037]McCloghrie，K.和A.Bierman，“使用SMIv2的实体MIB”，RFC 2037，1996年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC2108] de Graaf, K., Romascanu, D., McMaster, D., and K. McCloghrie, \"Definitions of Managed Objects for IEEE 802.3 Repeater Devices using SMIv2\", RFC 2108, February 1997.",
      "zh-CHS": "[RFC2108]de Graaf，K.，Romascan，D.，McMaster，D.，和K.McCloghrie，“使用SMIv2的IEEE 802.3中继器设备的受管对象定义”，RFC 2108，1997年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2737] McCloghrie, K. and A. Bierman, \"Entity MIB (Version 2)\", RFC 2737, December 1999.",
      "zh-CHS": "[RFC2737]McCloghrie，K.和A.Bierman，“实体MIB（版本2）”，RFC 27371999年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC2863] McCloghrie, K. and F. Kastenholz, \"The Interfaces Group MIB\", RFC 2863, June 2000.",
      "zh-CHS": "[RFC2863]McCloghrie，K.和F.Kastenholz，“接口组MIB”，RFC 28632000年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3406] Daigle, L., van Gulik, D., Iannella, R., and P. Faltstrom, \"Uniform Resource Names (URN) Namespace Definition Mechanisms\", BCP 66, RFC 3406, October 2002.",
      "zh-CHS": "[RFC3406]Daigle，L.，van Gulik，D.，Iannella，R.，和P.Faltstrom，“统一资源名称（URN）命名空间定义机制”，BCP 66，RFC 3406，2002年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC3410] Case, J., Mundy, R., Partain, D., and B. Stewart, \"Introduction and Applicability Statements for Internet-Standard Management Framework\", RFC 3410, December 2002.",
      "zh-CHS": "[RFC3410]Case，J.，Mundy，R.，Partain，D.，和B.Stewart，“互联网标准管理框架的介绍和适用性声明”，RFC 34102002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC3414] Blumenthal, U. and B. Wijnen, \"User-based Security Model (USM) for version 3 of the Simple Network Management Protocol (SNMPv3)\", STD 62, RFC 3414, December 2002.",
      "zh-CHS": "[RFC3414]Blumenthal，U.和B.Wijnen，“简单网络管理协议（SNMPv3）版本3的基于用户的安全模型（USM）”，STD 62，RFC 3414，2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC3415] Wijnen, B., Presuhn, R., and K. McCloghrie, \"View-based Access Control Model (VACM) for the Simple Network Management Protocol (SNMP)\", STD 62, RFC 3415, December 2002.",
      "zh-CHS": "[RFC3415]Wijnen，B.，Presuhn，R.，和K.McCloghrie，“用于简单网络管理协议（SNMP）的基于视图的访问控制模型（VACM）”，STD 62，RFC 3415，2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4152] Tesink, K. and R. Fox, \"A Uniform Resource Name (URN) Namespace for the CLEI Code\", RFC 4152, August 2005.",
      "zh-CHS": "[RFC4152]Tesink，K.和R.Fox，“CLEI代码的统一资源名（URN）命名空间”，RFC 4152，2005年8月。"
    },
    {
      "indent": 3,
      "text": "[T1.213] ATIS T1.213-2001, \"Coded Identification of Equipment Entities in the North American Telecommunications System for Information Exchange\", 2001, www.ansi.org.",
      "zh-CHS": "[T1.213]ATIS T1.213-2001，“北美电信系统中用于信息交换的设备实体的编码标识”，2001年，www.ansi.org。"
    },
    {
      "indent": 3,
      "text": "[T1.213a] ATIS T1.213a, \"Supplement to T1.213-2001, Coded Identification of Equipment Entities in the North American Telecommunications System for Information Exchange, to correct the representation of the Basic Code in Figure B.1\", 2001, www.ansi.org.",
      "zh-CHS": "[T1.213a]ATIS T1.213a，“补充T1.213-2001，北美电信系统中用于信息交换的设备实体的编码标识，以纠正图B.1中基本代码的表示”，2001年，www.ansi.org。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "zh-CHS": "作者地址"
    },
    {
      "indent": 3,
      "text": "Andy Bierman",
      "zh-CHS": "安迪比尔曼"
    },
    {
      "indent": 3,
      "text": "EMail: ietf@andybierman.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Keith McCloghrie Cisco Systems, Inc. 170 West Tasman Drive San Jose, CA 95134 USA",
      "zh-CHS": "美国加利福尼亚州圣何塞西塔斯曼大道170号基思·麦克洛赫里思科系统公司，邮编95134"
    },
    {
      "indent": 3,
      "text": "Phone: +1 408-526-5260\nEMail: kzm@cisco.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "zh-CHS": "完整版权声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "zh-CHS": "版权所有（C）互联网协会（2005年）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "zh-CHS": "本文件受BCP 78中包含的权利、许可和限制的约束，除其中规定外，作者保留其所有权利。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "zh-CHS": "本文件及其包含的信息是按“原样”提供的，贡献者、他/她所代表或赞助的组织（如有）、互联网协会和互联网工程任务组不承担任何明示或暗示的担保，包括但不限于任何保证，即使用本文中的信息不会侵犯任何权利，或对适销性或特定用途适用性的任何默示保证。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "zh-CHS": "知识产权"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "zh-CHS": "IETF对可能声称与本文件所述技术的实施或使用有关的任何知识产权或其他权利的有效性或范围，或此类权利下的任何许可可能或可能不可用的程度，不采取任何立场；它也不表示它已作出任何独立努力来确定任何此类权利。有关RFC文件中权利的程序信息，请参见BCP 78和BCP 79。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "zh-CHS": "向IETF秘书处披露的知识产权副本和任何许可证保证，或本规范实施者或用户试图获得使用此类专有权利的一般许可证或许可的结果，可从IETF在线知识产权存储库获取，网址为http://www.ietf.org/ipr."
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "zh-CHS": "IETF邀请任何相关方提请其注意任何版权、专利或专利申请，或其他可能涵盖实施本标准所需技术的专有权利。请将信息发送至IETF的IETF-ipr@ietf.org."
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "zh-CHS": "确认"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "zh-CHS": "RFC编辑功能的资金目前由互联网协会提供。"
    }
  ]
}