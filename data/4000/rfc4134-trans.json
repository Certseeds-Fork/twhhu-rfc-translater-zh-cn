{
  "title": {
    "text": "RFC 4134: Examples of S/MIME Messages",
    "zh-CHS": "RFC 4134"
  },
  "number": 4134,
  "created_at": "2021-11-12 22:52:08.735335+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                    P. Hoffman, Ed.\nRequest for Comments: 4134                      Internet Mail Consortium\nCategory: Informational                                        July 2005",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 22,
      "text": "Examples of S/MIME Messages",
      "zh-CHS": "S/MIME消息示例"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "zh-CHS": "关于下段备忘"
    },
    {
      "indent": 3,
      "text": "This memo provides information for the Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited.",
      "zh-CHS": "本备忘录为互联网社区提供信息。它没有规定任何类型的互联网标准。本备忘录的分发不受限制。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "zh-CHS": "版权所有（C）互联网协会（2005年）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "This document gives examples of message bodies formatted using S/MIME. Specifically, it has examples of Cryptographic Message Syntax (CMS) objects and S/MIME messages (including the MIME formatting). It includes examples of many common CMS formats. The purpose of this document is to help increase interoperability for S/MIME and other protocols that rely on CMS.",
      "zh-CHS": "本文档给出了使用S/MIME格式化的消息体的示例。具体来说，它有加密消息语法（CMS）对象和S/MIME消息（包括MIME格式）的示例。它包括许多常见CMS格式的示例。本文档的目的是帮助提高S/MIME和其他依赖CMS的协议的互操作性。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1.  Introduction ................................................   3\n2.  Constants Used in the Examples ..............................   3\n    2.1.  Content of Documents ..................................   4\n    2.2.  Private Keys ..........................................   4\n    2.3.  Certificates ..........................................  13\n    2.4.  CRLs ..................................................  33\n3.  Trivial Examples ............................................  39\n    3.1.  ContentInfo with Data Type, BER .......................  39\n    3.2.  ContentInfo with Data Type, DER .......................  39\n4.  Signed-data .................................................  39\n    4.1.  Basic Signed Content, DSS .............................  39\n    4.2.  Basic Signed Content, RSA .............................  44\n    4.3.  Basic Signed Content, Detached Content ................  49\n    4.4.  Fancier Signed Content ................................  53\n    4.5.  All RSA Signed Message ................................  68\n    4.6.  Multiple Signers ......................................  75\n    4.7.  Signing Using SKI .....................................  83\n    4.8.  S/MIME multipart/signed Message .......................  87\n    4.9.  S/MIME application/pkcs7-mime Signed Message ..........  88\n    4.10. SignedData with Attributes ............................  89\n    4.11. SignedData with Certificates Only ..................... 101\n5.  Enveloped-data .............................................. 109\n    5.1.  Basic Encrypted Content, TripleDES and RSA ............ 109\n    5.2.  Basic Encrypted Content, RC2/128 and RSA .............. 110\n    5.3.  S/MIME application/pkcs7-mime Encrypted Message ....... 112\n6.  Digested-data ............................................... 112\n7.  Encrypted-data .............................................. 113\n    7.1.  Simple EncryptedData .................................. 113\n    7.2.  EncryptedData with Unprotected Attributes ............. 114\n8.  Security Considerations ..................................... 115\n9.  References .................................................. 115\n    9.1.  Normative References .................................. 115\n    9.2.  Informative References ................................ 115\nA.  Binaries of the Examples .................................... 116\n    A.1.  How the Binaries and Extractor Works .................. 116\n    A.2.  Example Extraction Program ............................ 116\nB.  Examples in Order of Appearance ............................. 118\nC.  Acknowledgements ............................................ 135",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "The examples in this document show the structure and format of CMS message bodies, as described in [CMS]. They are useful to implementors who use protocols that rely on CMS, such as the S/MIME message format protocol. There are also examples of simple S/MIME messages [SMIME-MSG] (including the MIME headers).",
      "zh-CHS": "本文档中的示例显示了CMS消息体的结构和格式，如[CMS]中所述。它们对于使用依赖CMS的协议（如S/MIME消息格式协议）的实现者非常有用。还有一些简单S/MIME消息[SMIME-MSG]（包括MIME头）的示例。"
    },
    {
      "indent": 3,
      "text": "Every example in this document has been checked by two different implementors. This strongly indicates (but does not assure) that the examples are correct. All CMS implementors must read the CMS document carefully before implementing from it. No one should use the examples in this document as stand-alone explanations of how to create CMS message bodies.",
      "zh-CHS": "本文档中的每个示例都由两个不同的实现人员检查。这强烈表明（但不能保证）示例是正确的。所有CMS实施者在实施之前必须仔细阅读CMS文件。任何人都不应使用本文档中的示例作为如何创建CMS消息体的独立解释。"
    },
    {
      "indent": 3,
      "text": "This document explicitly does not attempt to cover many PKIX [PKIX] examples. Documents with examples of that format may be forthcoming. Also, note that [DVCS], which covers PKIX Data Validation and Certification Server Protocols, has examples of formats for its protocol.",
      "zh-CHS": "本文档明确不试图涵盖许多PKIX[PKIX]示例。可能即将提供具有这种格式示例的文件。另外，请注意，涵盖PKIX数据验证和认证服务器协议的[DVCS]有其协议格式的示例。"
    },
    {
      "indent": 3,
      "text": "The examples shown here were created and validated by many different people over a long period of time. Because of this, some of the dates used in the examples are many years in the past. This, plus the fact that some of the certificates in the examples have very long lifespans, may cause problems in some test situations.",
      "zh-CHS": "这里显示的示例是由许多不同的人在很长一段时间内创建和验证的。因此，示例中使用的一些日期是过去的许多年。这一点，加上示例中的一些证书具有很长的使用寿命，可能会在某些测试情况下导致问题。"
    },
    {
      "indent": 0,
      "text": "2. Constants Used in the Examples",
      "section_title": true,
      "zh-CHS": "2. 示例中使用的常量"
    },
    {
      "indent": 3,
      "text": "This section defines the data used in the rest of the document. The names of the constants indicate their use. For example, AlicePrivDSSSign is the private part of Alice's DSS signing key.",
      "zh-CHS": "本节定义了文档其余部分中使用的数据。常量的名称表示它们的用途。例如，AlicePrivDSSign是Alice的DSS签名密钥的私有部分。"
    },
    {
      "indent": 3,
      "text": "- Alice is the creator of the message bodies in this document.",
      "zh-CHS": "- Alice是本文档中消息正文的创建者。"
    },
    {
      "indent": 3,
      "text": "- Bob is the recipient of the messages.",
      "zh-CHS": "- 鲍勃是这些信息的接收者。"
    },
    {
      "indent": 3,
      "text": "- Carl is a CA.",
      "zh-CHS": "- 卡尔是加州大学的学生。"
    },
    {
      "indent": 3,
      "text": "- Diane sometimes gets involved with these folks.",
      "zh-CHS": "- 黛安有时会和这些人交往。"
    },
    {
      "indent": 3,
      "text": "- Erica also sometimes gets involved.",
      "zh-CHS": "- 艾丽卡有时也会卷入其中。"
    },
    {
      "indent": 0,
      "text": "2.1. Content of Documents",
      "section_title": true,
      "zh-CHS": "2.1. 文件内容"
    },
    {
      "indent": 3,
      "text": "ExContent is the following sentence:",
      "zh-CHS": "ExContent是以下句子："
    },
    {
      "indent": 6,
      "text": "This is some sample content.",
      "zh-CHS": "这是一些示例内容。"
    },
    {
      "indent": 3,
      "text": "That is, it is the string of characters starting with \"T\" up to and including the \".\".",
      "zh-CHS": "也就是说，它是以“T”开头直到并包括“.”的字符串。"
    },
    {
      "indent": 3,
      "text": "The hex for ExContent is",
      "zh-CHS": "ExContent的十六进制是"
    },
    {
      "indent": 3,
      "text": "5468 6973 2069 7320 736f 6d65 2073 616d 706c 6520 636f 6e74 656e 742e",
      "zh-CHS": "5468 6973 2069 7320 736f 6d65 2073 616d 706c 6520 636f 6e74 656e 742e"
    },
    {
      "indent": 3,
      "text": "The MD5 hash of ExContent is",
      "zh-CHS": "ExContent的MD5哈希为"
    },
    {
      "indent": 3,
      "text": "9898 cac8 fab7 691f f89d c207 24e7 4a04",
      "zh-CHS": "9898 cac8工厂691f f89d c207 24e7 4a04"
    },
    {
      "indent": 3,
      "text": "The SHA-1 hash of ExContent is",
      "zh-CHS": "ExContent的SHA-1哈希是"
    },
    {
      "indent": 3,
      "text": "406a ec08 5279 ba6e 1602 2d9e 0629 c022 9687 dd48",
      "zh-CHS": "406a ec08 5279 ba6e 1602 2d9e 0629 c022 9687 dd48"
    },
    {
      "indent": 0,
      "text": "2.2. Private Keys",
      "section_title": true,
      "zh-CHS": "2.2. 私钥"
    },
    {
      "indent": 3,
      "text": "The following private keys are needed to create the samples. To find the public keys, see the certificates in the next section.",
      "zh-CHS": "创建示例需要以下私钥。要查找公钥，请参阅下一节中的证书。"
    },
    {
      "indent": 3,
      "text": "AlicePrivDSSSign =\n   0 30  331: SEQUENCE {\n   4 02    1:   INTEGER 0\n   7 30  299:   SEQUENCE {\n  11 06    7:     OBJECT IDENTIFIER dsa (1 2 840 10040 4 1)\n            :       (ANSI X9.57 algorithm)\n  20 30  286:     SEQUENCE {\n  24 02  129:       INTEGER\n            :         00 81 8D CD ED 83 EA 0A 9E 39 3E C2\n            :         48 28 A3 E4 47 93 DD 0E D7 A8 0E EC\n            :         53 C5 AB 84 08 4F FF 94 E1 73 48 7E\n            :         0C D6 F3 44 48 D1 FE 9F AF A4 A1 89\n            :         2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C\n            :         DC 5F 69 8A E4 75 D0 37 0C 91 08 95\n            :         9B DE A7 5E F9 FC F4 9F 2F DD 43 A8\n            :         8B 54 F1 3F B0 07 08 47 4D 5D 88 C3\n            :         C3 B5 B3 E3 55 08 75 D5 39 76 10 C4\n            :         78 BD FF 9D B0 84 97 37 F2 E4 51 1B\n            :         B5 E4 09 96 5C F3 7E 5B DB\n 156 02   21:       INTEGER\n            :         00 E2 47 A6 1A 45 66 B8 13 C6 DA 8F\n            :         B8 37 21 2B 62 8B F7 93 CD",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "179 02  128:       INTEGER\n           :         26 38 D0 14 89 32 AA 39 FB 3E 6D D9\n           :         4B 59 6A 4C 76 23 39 04 02 35 5C F2\n           :         CB 1A 30 C3 1E 50 5D DD 9B 59 E2 CD\n           :         AA 05 3D 58 C0 7B A2 36 B8 6E 07 AF\n           :         7D 8A 42 25 A7 F4 75 CF 4A 08 5E 4B\n           :         3E 90 F8 6D EA 9C C9 21 8A 3B 76 14\n           :         E9 CE 2E 5D A3 07 CD 23 85 B8 2F 30\n           :         01 7C 6D 49 89 11 89 36 44 BD F8 C8\n           :         95 4A 53 56 B5 E2 F9 73 EC 1A 61 36\n           :         1F 11 7F C2 BD ED D1 50 FF 98 74 C2\n           :         D1 81 4A 60 39 BA 36 39\n           :       }\n           :     }\n310 04   23:   OCTET STRING, encapsulates {\n312 02   21:       INTEGER\n           :         00 BB 44 46 D1 A5 C9 46 07 2E D0 FE\n           :         7A D6 92 07 F0 9A 85 89 3F\n           :       }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "AlicePrivRSASign =\n   0 30  630: SEQUENCE {\n   4 02    1:   INTEGER 0\n   7 30   13:   SEQUENCE {\n   9 06    9:     OBJECT IDENTIFIER\n            :       rsaEncryption (1 2 840 113549 1 1 1)\n            :       (PKCS #1)\n  20 05    0:     NULL\n            :     }\n  22 04  608:   OCTET STRING, encapsulates {\n  26 30  604:       SEQUENCE {\n  30 02    1:         INTEGER 0\n  33 02  129:         INTEGER\n            :           00 E0 89 73 39 8D D8 F5 F5 E8 87 76\n            :           39 7F 4E B0 05 BB 53 83 DE 0F B7 AB\n            :           DC 7D C7 75 29 0D 05 2E 6D 12 DF A6\n            :           86 26 D4 D2 6F AA 58 29 FC 97 EC FA\n            :           82 51 0F 30 80 BE B1 50 9E 46 44 F1\n            :           2C BB D8 32 CF C6 68 6F 07 D9 B0 60\n            :           AC BE EE 34 09 6A 13 F5 F7 05 05 93\n            :           DF 5E BA 35 56 D9 61 FF 19 7F C9 81\n            :           E6 F8 6C EA 87 40 70 EF AC 6D 2C 74\n            :           9F 2D FA 55 3A B9 99 77 02 A6 48 52\n            :           8C 4E F3 57 38 57 74 57 5F\n 165 02    3:         INTEGER 65537\n 170 02  128:         INTEGER\n            :           00 A4 03 C3 27 47 76 34 34 6C A6 86",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :           B5 79 49 01 4B 2E 8A D2 C8 62 B2 C7\n           :           D7 48 09 6A 8B 91 F7 36 F2 75 D6 E8\n           :           CD 15 90 60 27 31 47 35 64 4D 95 CD\n           :           67 63 CE B4 9F 56 AC 2F 37 6E 1C EE\n           :           0E BF 28 2D F4 39 90 6F 34 D8 6E 08\n           :           5B D5 65 6A D8 41 F3 13 D7 2D 39 5E\n           :           FE 33 CB FF 29 E4 03 0B 3D 05 A2 8F\n           :           B7 F1 8E A2 76 37 B0 79 57 D3 2F 2B\n           :           DE 87 06 22 7D 04 66 5E C9 1B AF 8B\n           :           1A C3 EC 91 44 AB 7F 21\n301 02   65:         INTEGER\n           :           00 F6 D6 E0 22 21 4C 5F 0A 70 FF 27\n           :           FC E5 B3 50 6A 9D E5 0F B5 85 96 C6\n           :           40 FA A8 0A B4 9B 9B 0C 55 C2 01 1D\n           :           F9 37 82 8A 14 C8 F2 93 0E 92 CD A5\n           :           66 21 B9 3C D2 06 BF B4 55 31 C9 DC\n           :           AD CA 98 2D D1\n368 02   65:         INTEGER\n           :           00 E8 DE B0 11 25 09 D2 02 51 01 DE\n           :           8A E8 98 50 F5 77 77 61 A4 45 93 6B\n           :           08 55 96 73 5D F4 C8 5B 12 93 22 73\n           :           8B 7F D3 70 7F F5 A4 AA BB 74 FD 3C\n           :           22 6A DA 38 91 2A 86 5B 6C 14 E8 AE\n           :           4C 9E FA 8E 2F\n435 02   65:         INTEGER\n           :           00 97 4C F0 87 9B 17 7F EE 1B 83 1B\n           :           14 B6 0B 6A 90 5F 86 27 51 E1 B7 A0\n           :           7F F5 E4 88 E3 59 B9 F9 1E 9B D3 29\n           :           77 38 22 48 D7 22 B1 25 98 BA 3D 59\n           :           53 B7 FA 1E 20 B2 C8 51 16 23 75 93\n           :           51 E7 AB CD F1\n502 02   64:         INTEGER\n           :           2C F0 24 5B FA A0 CD 85 22 EA D0 6E\n           :           4F FA 6C CD 21 D3 C8 E4 F1 84 44 48\n           :           64 73 D7 29 8F 7E 46 8C EC 15 DE E4\n           :           51 B3 94 E7 2C 99 2D 55 65 7B 24 EA\n           :           A3 62 1F 3E 6C 4D 67 41 11 3B E1 BE\n           :           E9 83 02 83\n568 02   64:         INTEGER\n           :           58 88 D9 A1 50 38 84 6A AB 03 BC BB\n           :           DF 4B F4 9C 6F B8 B4 2A 25 FB F6 E4\n           :           05 2F 6E E2 88 89 21 6F 4B 25 9E D0\n           :           AB 50 93 CA BF 40 71 EC 21 25 C5 7F\n           :           FB 02 E9 21 96 B8 33 CD E2 C6 95 EE\n           :           6F 8D 5F 28\n           :         }\n           :       }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "BobPrivRSAEncrypt =\n   0 30  645: SEQUENCE {\n   4 02    1:   INTEGER 0\n   7 30   13:   SEQUENCE {\n   9 06    9:     OBJECT IDENTIFIER\n            :       rsaEncryption (1 2 840 113549 1 1 1)\n            :       (PKCS #1)\n  20 05    0:     NULL\n            :     }\n  22 04  608:   OCTET STRING, encapsulates {\n  26 30  604:       SEQUENCE {\n  30 02    1:         INTEGER 0\n  33 02  129:         INTEGER\n            :           00 A9 E1 67 98 3F 39 D5 5F F2 A0 93\n            :           41 5E A6 79 89 85 C8 35 5D 9A 91 5B\n            :           FB 1D 01 DA 19 70 26 17 0F BD A5 22\n            :           D0 35 85 6D 7A 98 66 14 41 5C CF B7\n            :           B7 08 3B 09 C9 91 B8 19 69 37 6D F9\n            :           65 1E 7B D9 A9 33 24 A3 7F 3B BB AF\n            :           46 01 86 36 34 32 CB 07 03 59 52 FC\n            :           85 8B 31 04 B8 CC 18 08 14 48 E6 4F\n            :           1C FB 5D 60 C4 E0 5C 1F 53 D3 7F 53\n            :           D8 69 01 F1 05 F8 7A 70 D1 BE 83 C6\n            :           5F 38 CF 1C 2C AA 6A A7 EB\n 165 02    3:         INTEGER 65537\n 170 02  128:         INTEGER\n            :           67 CD 48 4C 9A 0D 8F 98 C2 1B 65 FF\n            :           22 83 9C 6D F0 A6 06 1D BC ED A7 03\n            :           88 94 F2 1C 6B 0F 8B 35 DE 0E 82 78\n            :           30 CB E7 BA 6A 56 AD 77 C6 EB 51 79\n            :           70 79 0A A0 F4 FE 45 E0 A9 B2 F4 19\n            :           DA 87 98 D6 30 84 74 E4 FC 59 6C C1\n            :           C6 77 DC A9 91 D0 7C 30 A0 A2 C5 08\n            :           5E 21 71 43 FC 0D 07 3D F0 FA 6D 14\n            :           9E 4E 63 F0 17 58 79 1C 4B 98 1C 3D\n            :           3D B0 1B DF FA 25 3B A3 C0 2C 98 05\n            :           F6 10 09 D8 87 DB 03 19\n 301 02   65:         INTEGER\n            :           00 D0 C3 22 C6 DE A2 99 18 76 8F 8D\n            :           BC A6 75 D6 66 3F D4 8D 45 52 8C 76\n            :           F5 72 C4 EB F0 46 9A F1 3E 5C AA 55\n            :           0B 9B DA DD 6B 6D F8 FC 3B 3C 08 43\n            :           93 B5 5B FE CE EA FD 68 84 23 62 AF\n            :           F3 31 C2 B9 E5\n 368 02   65:         INTEGER\n            :           00 D0 51 FC 1E 22 B7 5B ED B5 8E 01\n            :           C8 D7 AB F2 58 D4 F7 82 94 F3 53 A8\n            :           19 45 CB 66 CA 28 19 5F E2 10 2B F3",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :           8F EC 6A 30 74 F8 4D 11 F4 A7 C4 20\n           :           B5 47 21 DC 49 01 F9 0A 20 29 F0 24\n           :           08 84 60 7D 8F\n435 02   64:         INTEGER\n           :           34 BA 64 C9 48 28 57 74 D7 55 50 DE\n           :           6A 48 EF 1B 2A 5A 1C 48 7B 1E 21 59\n           :           C3 60 3B 9B 97 A9 C0 EF 18 66 A9 4E\n           :           62 52 38 84 CE E5 09 88 48 94 69 C5\n           :           20 14 99 5A 57 FE 23 6C E4 A7 23 7B\n           :           D0 80 B7 85\n501 02   65:         INTEGER\n           :           00 9E 2F B3 37 9A FB 0B 06 5D 57 E1\n           :           09 06 A4 5D D9 90 96 06 05 5F 24 06\n           :           40 72 9C 3A 88 85 9C 87 0F 9D 62 12\n           :           88 16 68 A8 35 1A 1B 43 E8 38 C0 98\n           :           69 AF 03 0A 48 32 04 4E E9 0F 8F 77\n           :           7D 34 30 25 07\n568 02   64:         INTEGER\n           :           57 18 67 D6 0A D2 B5 AB C2 BA 7A E7\n           :           54 DA 9C 05 4F 81 D4 EF 01 89 1E 32\n           :           3D 69 CB 31 C4 52 C8 54 55 25 00 3B\n           :           1C 2A 7C 26 50 D5 E9 A6 D7 77 CB CF\n           :           15 F5 EE 0B D5 8D EE B3 AF 4C A1 7C\n           :           63 46 41 F6\n           :         }\n           :       }\n634 A0   13:   [0] {\n636 30   11:     SEQUENCE {\n638 06    3:       OBJECT IDENTIFIER keyUsage (2 5 29 15)\n           :         (X.509 id-ce (2 5 29))\n643 31    4:       SET {\n645 03    2:         BIT STRING 0 unused bits\n           :           '00001000'B (bit 3)\n           :           Error: Spurious zero bits in bitstring.\n           :         }\n           :       }\n           :     }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "CarlPrivDSSSign =\n   0 30  330: SEQUENCE {\n   4 02    1:   INTEGER 0\n   7 30  299:   SEQUENCE {\n  11 06    7:     OBJECT IDENTIFIER dsa (1 2 840 10040 4 1)\n            :       (ANSI X9.57 algorithm)\n  20 30  286:     SEQUENCE {\n  24 02  129:       INTEGER\n            :         00 B6 49 18 3E 8A 44 C1 29 71 94 4C",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :         01 C4 12 C1 7A 79 CB 54 4D AB 1E 81\n           :         FB C6 4C B3 0E 94 09 06 EB 01 D4 B1\n           :         C8 71 4B C7 45 C0 50 25 5D 9C FC DA\n           :         E4 6D D3 E2 86 48 84 82 7D BA 15 95\n           :         4A 16 F6 46 ED DD F6 98 D2 BB 7E 8A\n           :         0A 8A BA 16 7B B9 50 01 48 93 8B EB\n           :         25 15 51 97 55 DC 8F 53 0E 10 A9 50\n           :         FC 70 B7 CD 30 54 FD DA DE A8 AA 22\n           :         B5 A1 AF 8B CC 02 88 E7 8B 70 5F B9\n           :         AD E1 08 D4 6D 29 2D D6 E9\n156 02   21:       INTEGER\n           :         00 DD C1 2F DF 53 CE 0B 34 60 77 3E\n           :         02 A4 BF 8A 5D 98 B9 10 D5\n179 02  128:       INTEGER\n           :         0C EE 57 9B 4B BD DA B6 07 6A 74 37\n           :         4F 55 7F 9D ED BC 61 0D EB 46 59 3C\n           :         56 0B 2B 5B 0C 91 CE A5 62 52 69 CA\n           :         E1 6D 3E BD BF FE E1 B7 B9 2B 61 3C\n           :         AD CB AE 45 E3 06 AC 8C 22 9D 9C 44\n           :         87 0B C7 CD F0 1C D9 B5 4E 5D 73 DE\n           :         AF 0E C9 1D 5A 51 F5 4F 44 79 35 5A\n           :         73 AA 7F 46 51 1F A9 42 16 9C 48 EB\n           :         8A 79 61 B4 D5 2F 53 22 44 63 1F 86\n           :         B8 A3 58 06 25 F8 29 C0 EF BA E0 75\n           :         F0 42 C4 63 65 52 9B 0A\n           :       }\n           :     }\n310 04   22:   OCTET STRING, encapsulates {\n312 02   20:       INTEGER\n           :         19 B3 38 A5 21 62 31 50 E5 7F B9 3E\n           :         08 46 78 D1 3E B5 E5 72\n           :       }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "CarlPrivRSASign =\n   0 30  630: SEQUENCE {\n   4 02    1:   INTEGER 0\n   7 30   13:   SEQUENCE {\n   9 06    9:     OBJECT IDENTIFIER\n            :       rsaEncryption (1 2 840 113549 1 1 1)\n            :       (PKCS #1)\n  20 05    0:     NULL\n            :     }\n  22 04  608:   OCTET STRING, encapsulates {\n  26 30  604:       SEQUENCE {\n  30 02    1:         INTEGER 0\n  33 02  129:         INTEGER\n            :           00 E4 4B FF 18 B8 24 57 F4 77 FF 6E",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :           73 7B 93 71 5C BC 33 1A 92 92 72 23\n           :           D8 41 46 D0 CD 11 3A 04 B3 8E AF 82\n           :           9D BD 51 1E 17 7A F2 76 2C 2B 86 39\n           :           A7 BD D7 8D 1A 53 EC E4 00 D5 E8 EC\n           :           A2 36 B1 ED E2 50 E2 32 09 8A 3F 9F\n           :           99 25 8F B8 4E AB B9 7D D5 96 65 DA\n           :           16 A0 C5 BE 0E AE 44 5B EF 5E F4 A7\n           :           29 CB 82 DD AC 44 E9 AA 93 94 29 0E\n           :           F8 18 D6 C8 57 5E F2 76 C4 F2 11 60\n           :           38 B9 1B 3C 1D 97 C9 6A F1\n165 02    3:         INTEGER 65537\n170 02  129:         INTEGER\n           :           00 AE 73 E4 5B 5F 5B 66 5A C9 D7 C6\n           :           EF 38 5F 53 21 2A 2F 62 FE DE 29 9A\n           :           7A 86 67 36 E7 7D 62 78 75 3D 73 A0\n           :           BC 29 0E F3 8F BD C3 C9 C9 B6 F8 BA\n           :           D6 13 9B C3 97 7A CA 6A F0 B8 85 65\n           :           4E 0F BD A7 A8 F7 54 06 41 BD EB DC\n           :           20 77 90 DF 61 9B 9A 6F 74 DE EA 3B\n           :           D4 9C 87 60 ED 76 84 F1 6A 30 37 D5\n           :           E0 90 16 F8 80 47 C3 19 6B ED 75 77\n           :           BA 4A ED 39 B6 5D 02 47 3B 5F 1B C8\n           :           1C AB CB E8 F5 26 3F A4 81\n302 02   65:         INTEGER\n           :           00 FF DF 09 A0 56 0B 42 52 9E C4 4D\n           :           93 B3 B0 49 BB DE E7 81 7D 28 99 D0\n           :           B1 48 BA 0B 39 E1 1C 7B 22 18 33 B6\n           :           40 F6 BF DC AE 1D D0 A1 AD 04 71 5A\n           :           61 0A 6E 3B CE 30 DA 36 9F 65 25 29\n           :           BB A7 0E 7F 0B\n369 02   65:         INTEGER\n           :           00 E4 69 68 18 5F F9 57 D0 7C 66 89\n           :           0F BA 63 1D 72 CB 20 A4 81 76 64 89\n           :           CD 7D D1 C2 27 A9 2E AC 7A 56 9A 85\n           :           07 D9 30 03 A3 03 AB 7F 88 92 50 24\n           :           01 AA 1B 07 1F 20 4C B7 C9 7B 56 F7\n           :           B6 C2 7E AB 73\n436 02   64:         INTEGER\n           :           57 36 6C 8F 8C 04 76 6C B6 D4 EE 24\n           :           44 00 F8 80 E2 AF 42 01 A9 0F 14 84\n           :           F8 E7 00 E0 8F 8C 27 A4 2D 5F A2 E5\n           :           6D B5 63 C0 AD 44 E9 76 91 A7 19 49\n           :           2E 46 F8 77 85 4B 3B 87 04 F0 AF D2\n           :           D8 54 26 95\n502 02   64:         INTEGER\n           :           64 A1 0F AC 55 74 1B BD 0D 61 7B 17\n           :           03 CD B0 E6 A7 19 1D 80 AF F1 41 48\n           :           D8 1A B6 88 14 A0 2C 7A C5 76 D4 0F",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :           0E 1F 7A 2A B2 6E 37 04 AB 39 45 73\n           :           BA 46 A8 0F 8D 82 5F 22 14 05 CF A2\n           :           A3 F3 7C 83\n568 02   64:         INTEGER\n           :           26 1E 1D 1C A1 98 2B E4 DB 38 E8 57\n           :           6E 6B 73 19 88 61 3A FA 74 4A 36 8B\n           :           47 68 5D 50 EB 26 E3 EA 7D 9B 4E 65\n           :           A9 AF 7B AB 4B 2E 76 51 3D A8 D0 11\n           :           AB A3 D6 A8 C0 27 36 1D 54 0B AA A7\n           :           D1 6D 8D FA\n           :         }\n           :       }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "DianePrivDSSSign =\n   0 30  331: SEQUENCE {\n   4 02    1:   INTEGER 0\n   7 30  299:   SEQUENCE {\n  11 06    7:     OBJECT IDENTIFIER dsa (1 2 840 10040 4 1)\n            :       (ANSI X9.57 algorithm)\n  20 30  286:     SEQUENCE {\n  24 02  129:       INTEGER\n            :         00 B6 49 18 3E 8A 44 C1 29 71 94 4C\n            :         01 C4 12 C1 7A 79 CB 54 4D AB 1E 81\n            :         FB C6 4C B3 0E 94 09 06 EB 01 D4 B1\n            :         C8 71 4B C7 45 C0 50 25 5D 9C FC DA\n            :         E4 6D D3 E2 86 48 84 82 7D BA 15 95\n            :         4A 16 F6 46 ED DD F6 98 D2 BB 7E 8A\n            :         0A 8A BA 16 7B B9 50 01 48 93 8B EB\n            :         25 15 51 97 55 DC 8F 53 0E 10 A9 50\n            :         FC 70 B7 CD 30 54 FD DA DE A8 AA 22\n            :         B5 A1 AF 8B CC 02 88 E7 8B 70 5F B9\n            :         AD E1 08 D4 6D 29 2D D6 E9\n 156 02   21:       INTEGER\n            :         00 DD C1 2F DF 53 CE 0B 34 60 77 3E\n            :         02 A4 BF 8A 5D 98 B9 10 D5\n 179 02  128:       INTEGER\n            :         0C EE 57 9B 4B BD DA B6 07 6A 74 37\n            :         4F 55 7F 9D ED BC 61 0D EB 46 59 3C\n            :         56 0B 2B 5B 0C 91 CE A5 62 52 69 CA\n            :         E1 6D 3E BD BF FE E1 B7 B9 2B 61 3C\n            :         AD CB AE 45 E3 06 AC 8C 22 9D 9C 44\n            :         87 0B C7 CD F0 1C D9 B5 4E 5D 73 DE\n            :         AF 0E C9 1D 5A 51 F5 4F 44 79 35 5A\n            :         73 AA 7F 46 51 1F A9 42 16 9C 48 EB\n            :         8A 79 61 B4 D5 2F 53 22 44 63 1F 86\n            :         B8 A3 58 06 25 F8 29 C0 EF BA E0 75\n            :         F0 42 C4 63 65 52 9B 0A",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :       }\n           :     }\n310 04   23:   OCTET STRING, encapsulates {\n312 02   21:       INTEGER\n           :         00 96 95 F9 E0 C1 E0 41 2D 32 0F 8B\n           :         42 52 93 2A E6 1E 0E 21 29\n           :       }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "DianePrivRSASignEncrypt =\n   0 30  631: SEQUENCE {\n   4 02    1:   INTEGER 0\n   7 30   13:   SEQUENCE {\n   9 06    9:     OBJECT IDENTIFIER\n            :       rsaEncryption (1 2 840 113549 1 1 1)\n            :       (PKCS #1)\n  20 05    0:     NULL\n            :     }\n  22 04  609:   OCTET STRING, encapsulates {\n  26 30  605:       SEQUENCE {\n  30 02    1:         INTEGER 0\n  33 02  129:         INTEGER\n            :           00 D6 FD B8 C0 70 C6 4C 25 EC EA CF\n            :           EA 7C BB A2 62 FA F0 E6 32 3A 53 FF\n            :           B1 92 5A 17 F4 20 E1 99 24 82 0A D0\n            :           F6 7C FB 44 CA 8B 27 06 F1 7E 26 03\n            :           A9 76 9D CF EC A0 2C 70 96 F2 83 42\n            :           F6 D4 B7 28 0A BB F8 BF 4A 4C 19 3F\n            :           07 DB A0 C1 60 1E B7 7E 67 F7 DE B1\n            :           C3 60 49 AC 45 D7 F8 C6 EF 08 37 21\n            :           93 47 EE F0 73 35 72 B0 02 C4 F3 11\n            :           C3 5E 47 E5 0A B7 83 F1 DB 74 69 64\n            :           8B 44 1D 95 5D CD 28 C0 85\n 165 02    3:         INTEGER 65537\n 170 02  128:         INTEGER\n            :           3D BD CD C2 0E 61 14 5B 4B E7 BF 60\n            :           23 04 2B C5 6B 35 A5 96 45 23 FC 69\n            :           7D 93 3C 0F D3 25 96 BA 62 52 42 E2\n            :           96 CF FE 58 80 8F EB B1 8C BD D4 0D\n            :           65 D0 3A 77 45 24 9E 0C EB 86 80 C3\n            :           AC 21 11 71 44 E3 B2 A8 A9 2E AC 17\n            :           D2 A3 84 25 63 B5 BC 2F 1E DD F6 21\n            :           FF 15 20 24 5B F1 80 2F D5 41 0E 32\n            :           24 F7 D4 4A 32 9E B9 49 D8 19 8E 3F\n            :           39 8D 62 BD 80 FC 0C 24 92 93 E4 C3\n            :           D7 05 91 53 BB 96 B6 41\n 301 02   65:         INTEGER\n            :           00 F3 B8 3F 4A D1 94 B0 91 60 13 41",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :           92 0D 8D 44 3F 77 1D FF 96 23 44 08\n           :           D4 0B 70 C9 1A AF E9 90 94 F2 B0 D5\n           :           5F 4F 19 85 50 A1 90 91 AE BD 05 76\n           :           52 B3 22 D8 A8 7C 8E 54 7F 00 72 4F\n           :           36 75 68 73 B5\n368 02   65:         INTEGER\n           :           00 E1 D2 E7 11 57 06 AE 72 95 22 16\n           :           AA 02 B4 5A ED 4E 9D 82 11 4F 96 3C\n           :           86 C9 10 8D 56 7B 31 75 79 69 E7 75\n           :           68 38 00 4B 2E D2 26 32 DD B1 E2 E0\n           :           2C 54 80 0A 75 BA D1 66 96 1B B0 0E\n           :           A0 7E D2 BB 91\n435 02   65:         INTEGER\n           :           00 AF B6 BC DB 22 73 43 41 EC B4 B5\n           :           67 A9 A1 99 FC EF D2 8E FD 1D FB E5\n           :           29 8B FE 0A DF D4 C8 5E 57 25 0A 5D\n           :           2B D4 09 A0 56 5B C5 B1 62 FC 20 BE\n           :           08 2D E3 07 B5 A1 E7 B3 FF C4 C0 A5\n           :           5F AC 12 5C A9\n502 02   65:         INTEGER\n           :           00 B9 98 41 FC 08 50 1F 73 60 8A 01\n           :           A2 7C 52 8A 20 5A EA 2C 89 D9 A5 19\n           :           DD 94 C6 1B C3 25 C0 82 51 E4 EE 2B\n           :           9A 19 DC 73 ED E9 1D 27 D4 F8 6C 03\n           :           DD AB 1D 08 7B B5 AC 7F E9 82 9B F1\n           :           89 8A 71 DB 61\n569 02   64:         INTEGER\n           :           01 07 21 97 5F 7A 60 A8 FD 5A 5C 07\n           :           DF A8 DE F7 E2 B1 34 7D FC EB 91 BD\n           :           B0 73 74 C8 C4 BE 3F 58 45 30 06 90\n           :           B3 AC 69 CC B3 F7 3F 7C AC C7 B8 1B\n           :           65 A1 16 39 39 B0 E3 74 7D CF CD C5\n           :           AC 6C BF E5\n           :         }\n           :       }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "2.3. Certificates",
      "section_title": true,
      "zh-CHS": "2.3. 证书"
    },
    {
      "indent": 3,
      "text": "AliceDSSSignByCarlNoInherit =\n   0 30  732: SEQUENCE {\n   4 30  667:   SEQUENCE {\n   8 A0    3:     [0] {\n  10 02    1:       INTEGER 2\n            :       }\n  13 02    2:     INTEGER 200\n  17 30    9:     SEQUENCE {\n  19 06    7:       OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :         (ANSI X9.57 algorithm)\n           :       }\n 28 30   18:     SEQUENCE {\n 30 31   16:       SET {\n 32 30   14:         SEQUENCE {\n 34 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n           :             (X.520 id-at (2 5 4))\n 39 13    7:           PrintableString 'CarlDSS'\n           :           }\n           :         }\n           :       }\n 48 30   30:     SEQUENCE {\n 50 17   13:       UTCTime '990817011049Z'\n 65 17   13:       UTCTime '391231235959Z'\n           :       }\n 80 30   19:     SEQUENCE {\n 82 31   17:       SET {\n 84 30   15:         SEQUENCE {\n 86 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n           :             (X.520 id-at (2 5 4))\n 91 13    8:           PrintableString 'AliceDSS'\n           :           }\n           :         }\n           :       }\n101 30  438:     SEQUENCE {\n105 30  299:       SEQUENCE {\n109 06    7:         OBJECT IDENTIFIER dsa (1 2 840 10040 4 1)\n           :           (ANSI X9.57 algorithm)\n118 30  286:         SEQUENCE {\n122 02  129:           INTEGER\n           :             00 81 8D CD ED 83 EA 0A 9E 39 3E C2\n           :             48 28 A3 E4 47 93 DD 0E D7 A8 0E EC\n           :             53 C5 AB 84 08 4F FF 94 E1 73 48 7E\n           :             0C D6 F3 44 48 D1 FE 9F AF A4 A1 89\n           :             2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C\n           :             DC 5F 69 8A E4 75 D0 37 0C 91 08 95\n           :             9B DE A7 5E F9 FC F4 9F 2F DD 43 A8\n           :             8B 54 F1 3F B0 07 08 47 4D 5D 88 C3\n           :             C3 B5 B3 E3 55 08 75 D5 39 76 10 C4\n           :             78 BD FF 9D B0 84 97 37 F2 E4 51 1B\n           :             B5 E4 09 96 5C F3 7E 5B DB\n254 02   21:           INTEGER\n           :             00 E2 47 A6 1A 45 66 B8 13 C6 DA 8F\n           :             B8 37 21 2B 62 8B F7 93 CD\n277 02  128:           INTEGER\n           :             26 38 D0 14 89 32 AA 39 FB 3E 6D D9\n           :             4B 59 6A 4C 76 23 39 04 02 35 5C F2\n           :             CB 1A 30 C3 1E 50 5D DD 9B 59 E2 CD",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :             AA 05 3D 58 C0 7B A2 36 B8 6E 07 AF\n           :             7D 8A 42 25 A7 F4 75 CF 4A 08 5E 4B\n           :             3E 90 F8 6D EA 9C C9 21 8A 3B 76 14\n           :             E9 CE 2E 5D A3 07 CD 23 85 B8 2F 30\n           :             01 7C 6D 49 89 11 89 36 44 BD F8 C8\n           :             95 4A 53 56 B5 E2 F9 73 EC 1A 61 36\n           :             1F 11 7F C2 BD ED D1 50 FF 98 74 C2\n           :             D1 81 4A 60 39 BA 36 39\n           :           }\n           :         }\n408 03  132:       BIT STRING 0 unused bits, encapsulates {\n412 02  128:           INTEGER\n           :             5C E3 B9 5A 75 14 96 0B A9 7A DD E3\n           :             3F A9 EC AC 5E DC BD B7 13 11 34 A6\n           :             16 89 28 11 23 D9 34 86 67 75 75 13\n           :             12 3D 43 5B 6F E5 51 BF FA 89 F2 A2\n           :             1B 3E 24 7D 3D 07 8D 5B 63 C8 BB 45\n           :             A5 A0 4A E3 85 D6 CE 06 80 3F E8 23\n           :             7E 1A F2 24 AB 53 1A B8 27 0D 1E EF\n           :             08 BF 66 14 80 5C 62 AC 65 FA 15 8B\n           :             F1 BB 34 D4 D2 96 37 F6 61 47 B2 C4\n           :             32 84 F0 7E 41 40 FD 46 A7 63 4E 33\n           :             F2 A5 E2 F4 F2 83 E5 B8\n           :           }\n           :       }\n543 A3  129:     [3] {\n546 30  127:       SEQUENCE {\n548 30   12:         SEQUENCE {\n550 06    3:           OBJECT IDENTIFIER\n           :             basicConstraints (2 5 29 19)\n           :             (X.509 id-ce (2 5 29))\n555 01    1:           BOOLEAN TRUE\n558 04    2:           OCTET STRING, encapsulates {\n560 30    0:               SEQUENCE {}\n           :               }\n           :           }\n562 30   14:         SEQUENCE {\n564 06    3:           OBJECT IDENTIFIER keyUsage (2 5 29 15)\n           :             (X.509 id-ce (2 5 29))\n569 01    1:           BOOLEAN TRUE\n572 04    4:           OCTET STRING, encapsulates {\n574 03    2:               BIT STRING 6 unused bits\n           :                 '11'B\n           :               }\n           :           }\n578 30   31:         SEQUENCE {\n580 06    3:           OBJECT IDENTIFIER\n           :             authorityKeyIdentifier (2 5 29 35)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :             (X.509 id-ce (2 5 29))\n585 04   24:           OCTET STRING, encapsulates {\n587 30   22:               SEQUENCE {\n589 80   20:                 [0]\n           :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n           :                   3D 20 BC 43 2B 93 F1 1F\n           :                 }\n           :               }\n           :           }\n611 30   29:         SEQUENCE {\n613 06    3:           OBJECT IDENTIFIER\n           :             subjectKeyIdentifier (2 5 29 14)\n           :             (X.509 id-ce (2 5 29))\n618 04   22:           OCTET STRING, encapsulates {\n620 04   20:               OCTET STRING\n           :                 BE 6C A1 B3 E3 C1 F7 ED 43 70 A4 CE\n           :                 13 01 E2 FD E3 97 FE CD\n           :               }\n           :           }\n642 30   31:         SEQUENCE {\n644 06    3:           OBJECT IDENTIFIER subjectAltName (2 5 29 17)\n           :             (X.509 id-ce (2 5 29))\n649 04   24:           OCTET STRING, encapsulates {\n651 30   22:               SEQUENCE {\n653 81   20:                 [1] 'AliceDSS@example.com'\n           :                 }\n           :               }\n           :           }\n           :         }\n           :       }\n           :     }\n675 30    9:   SEQUENCE {\n677 06    7:     OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n           :       (ANSI X9.57 algorithm)\n           :     }\n686 03   48:   BIT STRING 0 unused bits, encapsulates {\n689 30   45:       SEQUENCE {\n691 02   20:         INTEGER\n           :           55 0C A4 19 1F 42 2B 89 71 22 33 8D\n           :           83 6A B5 3D 67 6B BF 45\n713 02   21:         INTEGER\n           :           00 9F 61 53 52 54 0B 5C B2 DD DA E7\n           :           76 1D E2 10 52 5B 43 5E BD\n           :         }\n           :       }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "AliceRSASignByCarl =",
      "zh-CHS": "阿利塞斯尼比卡尔="
    },
    {
      "indent": 4,
      "text": "  0 30  556: SEQUENCE {\n  4 30  405:   SEQUENCE {\n  8 A0    3:     [0] {\n 10 02    1:       INTEGER 2\n           :       }\n 13 02   16:     INTEGER\n           :       46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n           :       C4 10 B3 B0\n 31 30   13:     SEQUENCE {\n 33 06    9:       OBJECT IDENTIFIER\n           :         sha1withRSAEncryption (1 2 840 113549 1 1 5)\n           :         (PKCS #1)\n 44 05    0:       NULL\n           :       }\n 46 30   18:     SEQUENCE {\n 48 31   16:       SET {\n 50 30   14:         SEQUENCE {\n 52 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n           :             (X.520 id-at (2 5 4))\n 57 13    7:           PrintableString 'CarlRSA'\n           :           }\n           :         }\n           :       }\n 66 30   30:     SEQUENCE {\n 68 17   13:       UTCTime '990919010847Z'\n 83 17   13:       UTCTime '391231235959Z'\n           :       }\n 98 30   19:     SEQUENCE {\n100 31   17:       SET {\n102 30   15:         SEQUENCE {\n104 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n           :             (X.520 id-at (2 5 4))\n109 13    8:           PrintableString 'AliceRSA'\n           :           }\n           :         }\n           :       }\n119 30  159:     SEQUENCE {\n122 30   13:       SEQUENCE {\n124 06    9:         OBJECT IDENTIFIER\n           :           rsaEncryption (1 2 840 113549 1 1 1)\n           :           (PKCS #1)\n135 05    0:         NULL\n           :         }\n137 03  141:       BIT STRING 0 unused bits, encapsulates {\n141 30  137:           SEQUENCE {\n144 02  129:             INTEGER\n           :               00 E0 89 73 39 8D D8 F5 F5 E8 87 76\n           :               39 7F 4E B0 05 BB 53 83 DE 0F B7 AB",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :               DC 7D C7 75 29 0D 05 2E 6D 12 DF A6\n           :               86 26 D4 D2 6F AA 58 29 FC 97 EC FA\n           :               82 51 0F 30 80 BE B1 50 9E 46 44 F1\n           :               2C BB D8 32 CF C6 68 6F 07 D9 B0 60\n           :               AC BE EE 34 09 6A 13 F5 F7 05 05 93\n           :               DF 5E BA 35 56 D9 61 FF 19 7F C9 81\n           :               E6 F8 6C EA 87 40 70 EF AC 6D 2C 74\n           :               9F 2D FA 55 3A B9 99 77 02 A6 48 52\n           :               8C 4E F3 57 38 57 74 57 5F\n276 02    3:             INTEGER 65537\n           :             }\n           :           }\n           :       }\n281 A3  129:     [3] {\n284 30  127:       SEQUENCE {\n286 30   12:         SEQUENCE {\n288 06    3:           OBJECT IDENTIFIER\n           :             basicConstraints (2 5 29 19)\n           :             (X.509 id-ce (2 5 29))\n293 01    1:           BOOLEAN TRUE\n296 04    2:           OCTET STRING, encapsulates {\n298 30    0:               SEQUENCE {}\n           :               }\n           :           }\n300 30   14:         SEQUENCE {\n302 06    3:           OBJECT IDENTIFIER keyUsage (2 5 29 15)\n           :             (X.509 id-ce (2 5 29))\n307 01    1:           BOOLEAN TRUE\n310 04    4:           OCTET STRING, encapsulates {\n312 03    2:               BIT STRING 6 unused bits\n           :                 '11'B\n           :               }\n           :           }\n316 30   31:         SEQUENCE {\n318 06    3:           OBJECT IDENTIFIER\n           :             authorityKeyIdentifier (2 5 29 35)\n           :             (X.509 id-ce (2 5 29))\n323 04   24:           OCTET STRING, encapsulates {\n325 30   22:               SEQUENCE {\n327 80   20:                 [0]\n           :                   E9 E0 90 27 AC 78 20 7A 9A D3 4C F2\n           :                   42 37 4E 22 AE 9E 38 BB\n           :                 }\n           :               }\n           :           }\n349 30   29:         SEQUENCE {\n351 06    3:           OBJECT IDENTIFIER\n           :             subjectKeyIdentifier (2 5 29 14)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :             (X.509 id-ce (2 5 29))\n356 04   22:           OCTET STRING, encapsulates {\n358 04   20:               OCTET STRING\n           :                 77 D2 B4 D1 B7 4C 8A 8A A3 CE 45 9D\n           :                 CE EC 3C A0 3A E3 FF 50\n           :               }\n           :           }\n380 30   31:         SEQUENCE {\n382 06    3:           OBJECT IDENTIFIER subjectAltName (2 5 29 17)\n           :             (X.509 id-ce (2 5 29))\n387 04   24:           OCTET STRING, encapsulates {\n389 30   22:               SEQUENCE {\n391 81   20:                 [1] 'AliceRSA@example.com'\n           :                 }\n           :               }\n           :           }\n           :         }\n           :       }\n           :     }\n413 30   13:   SEQUENCE {\n415 06    9:     OBJECT IDENTIFIER\n           :       sha1withRSAEncryption (1 2 840 113549 1 1 5)\n           :       (PKCS #1)\n426 05    0:     NULL\n           :     }\n428 03  129:   BIT STRING 0 unused bits\n           :     3E 70 47 A8 48 CC 13 58 8F CA 51 71\n           :     6B 4E 36 18 5D 04 7E 80 B1 8D 4D CC\n           :     CA A3 8F CC 7D 56 C8 BC CF 6E B3 1C\n           :     59 A9 20 AA 05 81 A8 4E 25 AD A7 70\n           :     14 75 2F F5 C7 9B D1 0E E9 63 D2 64\n           :     B7 C6 66 6E 73 21 54 DF F4 BA 25 5D\n           :     7D 49 D3 94 6B 22 36 74 73 B8 4A EC\n           :     2F 64 ED D3 3D D2 A7 42 C5 E8 37 8A\n           :     B4 DB 9F 67 E4 BD 9F F9 FE 74 EF EA\n           :     F9 EE 63 6A D8 3F 4B 25 09 B5 D8 1A\n           :     76 AE EB 9B DB 49 B0 22\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "BobRSASignByCarl =\n   0 30  551: SEQUENCE {\n   4 30  400:   SEQUENCE {\n   8 A0    3:     [0] {\n  10 02    1:       INTEGER 2\n            :       }\n  13 02   16:     INTEGER\n            :       46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n            :       CD 5D 71 D0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": " 31 30   13:     SEQUENCE {\n 33 06    9:       OBJECT IDENTIFIER\n           :         sha1withRSAEncryption (1 2 840 113549 1 1 5)\n           :         (PKCS #1)\n 44 05    0:       NULL\n           :       }\n 46 30   18:     SEQUENCE {\n 48 31   16:       SET {\n 50 30   14:         SEQUENCE {\n 52 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n           :             (X.520 id-at (2 5 4))\n 57 13    7:           PrintableString 'CarlRSA'\n           :           }\n           :         }\n           :       }\n 66 30   30:     SEQUENCE {\n 68 17   13:       UTCTime '990919010902Z'\n 83 17   13:       UTCTime '391231235959Z'\n           :       }\n 98 30   17:     SEQUENCE {\n100 31   15:       SET {\n102 30   13:         SEQUENCE {\n104 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n           :             (X.520 id-at (2 5 4))\n109 13    6:           PrintableString 'BobRSA'\n           :           }\n           :         }\n           :       }\n117 30  159:     SEQUENCE {\n120 30   13:       SEQUENCE {\n122 06    9:         OBJECT IDENTIFIER\n           :           rsaEncryption (1 2 840 113549 1 1 1)\n           :           (PKCS #1)\n133 05    0:         NULL\n           :         }\n135 03  141:       BIT STRING 0 unused bits, encapsulates {\n139 30  137:           SEQUENCE {\n142 02  129:             INTEGER\n           :               00 A9 E1 67 98 3F 39 D5 5F F2 A0 93\n           :               41 5E A6 79 89 85 C8 35 5D 9A 91 5B\n           :               FB 1D 01 DA 19 70 26 17 0F BD A5 22\n           :               D0 35 85 6D 7A 98 66 14 41 5C CF B7\n           :               B7 08 3B 09 C9 91 B8 19 69 37 6D F9\n           :               65 1E 7B D9 A9 33 24 A3 7F 3B BB AF\n           :               46 01 86 36 34 32 CB 07 03 59 52 FC\n           :               85 8B 31 04 B8 CC 18 08 14 48 E6 4F\n           :               1C FB 5D 60 C4 E0 5C 1F 53 D3 7F 53\n           :               D8 69 01 F1 05 F8 7A 70 D1 BE 83 C6",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :               5F 38 CF 1C 2C AA 6A A7 EB\n274 02    3:             INTEGER 65537\n           :             }\n           :           }\n           :       }\n279 A3  127:     [3] {\n281 30  125:       SEQUENCE {\n283 30   12:         SEQUENCE {\n285 06    3:           OBJECT IDENTIFIER\n           :             basicConstraints (2 5 29 19)\n           :             (X.509 id-ce (2 5 29))\n290 01    1:           BOOLEAN TRUE\n293 04    2:           OCTET STRING, encapsulates {\n295 30    0:               SEQUENCE {}\n           :               }\n           :           }\n297 30   14:         SEQUENCE {\n299 06    3:           OBJECT IDENTIFIER keyUsage (2 5 29 15)\n           :             (X.509 id-ce (2 5 29))\n304 01    1:           BOOLEAN TRUE\n307 04    4:           OCTET STRING, encapsulates {\n309 03    2:               BIT STRING 5 unused bits\n           :                 '100'B (bit 2)\n           :               }\n           :           }\n313 30   31:         SEQUENCE {\n315 06    3:           OBJECT IDENTIFIER\n           :             authorityKeyIdentifier (2 5 29 35)\n           :             (X.509 id-ce (2 5 29))\n320 04   24:           OCTET STRING, encapsulates {\n322 30   22:               SEQUENCE {\n324 80   20:                 [0]\n           :                   E9 E0 90 27 AC 78 20 7A 9A D3 4C F2\n           :                   42 37 4E 22 AE 9E 38 BB\n           :                 }\n           :               }\n           :           }\n346 30   29:         SEQUENCE {\n348 06    3:           OBJECT IDENTIFIER\n           :             subjectKeyIdentifier (2 5 29 14)\n           :             (X.509 id-ce (2 5 29))\n353 04   22:           OCTET STRING, encapsulates {\n355 04   20:               OCTET STRING\n           :                 E8 F4 B8 67 D8 B3 96 A4 2A F3 11 AA\n           :                 29 D3 95 5A 86 16 B4 24\n           :               }\n           :           }\n377 30   29:         SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "379 06    3:           OBJECT IDENTIFIER subjectAltName (2 5 29 17)\n           :             (X.509 id-ce (2 5 29))\n384 04   22:           OCTET STRING, encapsulates {\n386 30   20:               SEQUENCE {\n388 81   18:                 [1] 'BobRSA@example.com'\n           :                 }\n           :               }\n           :           }\n           :         }\n           :       }\n           :     }\n408 30   13:   SEQUENCE {\n410 06    9:     OBJECT IDENTIFIER\n           :       sha1withRSAEncryption (1 2 840 113549 1 1 5)\n           :       (PKCS #1)\n421 05    0:     NULL\n           :     }\n423 03  129:   BIT STRING 0 unused bits\n           :     7B 8E 66 C5 F1 10 3F 10 20 4C 88 71\n           :     AB 7B 40 6B 21 33 FA 4A 95 DE 9D 0E\n           :     5B 6B 94 21 05 C0 F2 E1 7E 2A CD 9C\n           :     93 88 87 FB 8B B7 7E 7D 41 61 E1 E4\n           :     D6 6D F9 E2 04 55 61 45 BC 64 27 44\n           :     C0 A1 BD 59 79 D9 1D 64 3C 21 D6 45\n           :     B0 5D 68 33 92 EA AC F1 57 E5 81 7D\n           :     98 E6 35 91 A3 39 DE 77 F4 E8 1C 3B\n           :     29 DC 7F 51 07 97 F3 36 F0 50 0A DD\n           :     9B DE B6 5E 38 11 2B FB 57 EA 89 6D\n           :     AD C9 88 D8 8F CF 2B D3\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "CarlDSSSelf =\n   0 30  667: SEQUENCE {\n   4 30  602:   SEQUENCE {\n   8 A0    3:     [0] {\n  10 02    1:       INTEGER 2\n            :       }\n  13 02    1:     INTEGER 1\n  16 30    9:     SEQUENCE {\n  18 06    7:       OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n            :         (ANSI X9.57 algorithm)\n            :       }\n  27 30   18:     SEQUENCE {\n  29 31   16:       SET {\n  31 30   14:         SEQUENCE {\n  33 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n            :             (X.520 id-at (2 5 4))\n  38 13    7:           PrintableString 'CarlDSS'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :           }\n           :         }\n           :       }\n 47 30   30:     SEQUENCE {\n 49 17   13:       UTCTime '990816225050Z'\n 64 17   13:       UTCTime '391231235959Z'\n           :       }\n 79 30   18:     SEQUENCE {\n 81 31   16:       SET {\n 83 30   14:         SEQUENCE {\n 85 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n           :             (X.520 id-at (2 5 4))\n 90 13    7:           PrintableString 'CarlDSS'\n           :           }\n           :         }\n           :       }\n 99 30  439:     SEQUENCE {\n103 30  299:       SEQUENCE {\n107 06    7:         OBJECT IDENTIFIER dsa (1 2 840 10040 4 1)\n           :           (ANSI X9.57 algorithm)\n116 30  286:         SEQUENCE {\n120 02  129:           INTEGER\n           :             00 B6 49 18 3E 8A 44 C1 29 71 94 4C\n           :             01 C4 12 C1 7A 79 CB 54 4D AB 1E 81\n           :             FB C6 4C B3 0E 94 09 06 EB 01 D4 B1\n           :             C8 71 4B C7 45 C0 50 25 5D 9C FC DA\n           :             E4 6D D3 E2 86 48 84 82 7D BA 15 95\n           :             4A 16 F6 46 ED DD F6 98 D2 BB 7E 8A\n           :             0A 8A BA 16 7B B9 50 01 48 93 8B EB\n           :             25 15 51 97 55 DC 8F 53 0E 10 A9 50\n           :             FC 70 B7 CD 30 54 FD DA DE A8 AA 22\n           :             B5 A1 AF 8B CC 02 88 E7 8B 70 5F B9\n           :             AD E1 08 D4 6D 29 2D D6 E9\n252 02   21:           INTEGER\n           :             00 DD C1 2F DF 53 CE 0B 34 60 77 3E\n           :             02 A4 BF 8A 5D 98 B9 10 D5\n275 02  128:           INTEGER\n           :             0C EE 57 9B 4B BD DA B6 07 6A 74 37\n           :             4F 55 7F 9D ED BC 61 0D EB 46 59 3C\n           :             56 0B 2B 5B 0C 91 CE A5 62 52 69 CA\n           :             E1 6D 3E BD BF FE E1 B7 B9 2B 61 3C\n           :             AD CB AE 45 E3 06 AC 8C 22 9D 9C 44\n           :             87 0B C7 CD F0 1C D9 B5 4E 5D 73 DE\n           :             AF 0E C9 1D 5A 51 F5 4F 44 79 35 5A\n           :             73 AA 7F 46 51 1F A9 42 16 9C 48 EB\n           :             8A 79 61 B4 D5 2F 53 22 44 63 1F 86\n           :             B8 A3 58 06 25 F8 29 C0 EF BA E0 75\n           :             F0 42 C4 63 65 52 9B 0A",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :           }\n           :         }\n406 03  133:       BIT STRING 0 unused bits, encapsulates {\n410 02  129:           INTEGER\n           :             00 99 87 74 27 03 66 A0 B1 C0 AD DC\n           :             2C 75 BB E1 6C 44 9C DA 21 6D 4D 47\n           :             6D B1 62 09 E9 D8 AE 1E F2 3A B4 94\n           :             B1 A3 8E 7A 9B 71 4E 00 94 C9 B4 25\n           :             4E B9 60 96 19 24 01 F3 62 0C FE 75\n           :             C0 FB CE D8 68 00 E3 FD D5 70 4F DF\n           :             23 96 19 06 94 F4 B1 61 8F 3A 57 B1\n           :             08 11 A4 0B 26 25 F0 52 76 81 EA 0B\n           :             62 0D 95 2A E6 86 BA 72 B2 A7 50 83\n           :             0B AA 27 CD 1B A9 4D 89 9A D7 8D 18\n           :             39 84 3F 8B C5 56 4D 80 7A\n           :           }\n           :       }\n542 A3   66:     [3] {\n544 30   64:       SEQUENCE {\n546 30   15:         SEQUENCE {\n548 06    3:           OBJECT IDENTIFIER\n           :             basicConstraints (2 5 29 19)\n           :             (X.509 id-ce (2 5 29))\n553 01    1:           BOOLEAN TRUE\n556 04    5:           OCTET STRING, encapsulates {\n558 30    3:               SEQUENCE {\n560 01    1:                 BOOLEAN TRUE\n           :                 }\n           :               }\n           :           }\n563 30   14:         SEQUENCE {\n565 06    3:           OBJECT IDENTIFIER keyUsage (2 5 29 15)\n           :             (X.509 id-ce (2 5 29))\n570 01    1:           BOOLEAN TRUE\n573 04    4:           OCTET STRING, encapsulates {\n575 03    2:               BIT STRING 1 unused bits\n           :                 '1100001'B\n           :               }\n           :           }\n579 30   29:         SEQUENCE {\n581 06    3:           OBJECT IDENTIFIER\n           :             subjectKeyIdentifier (2 5 29 14)\n           :             (X.509 id-ce (2 5 29))\n586 04   22:           OCTET STRING, encapsulates {\n588 04   20:               OCTET STRING\n           :                 70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n           :                 3D 20 BC 43 2B 93 F1 1F\n           :               }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :           }\n           :         }\n           :       }\n           :     }\n610 30    9:   SEQUENCE {\n612 06    7:     OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n           :       (ANSI X9.57 algorithm)\n           :     }\n621 03   48:   BIT STRING 0 unused bits, encapsulates {\n624 30   45:       SEQUENCE {\n626 02   20:         INTEGER\n           :           6B A9 F0 4E 7A 5A 79 E3 F9 BE 3D 2B\n           :           C9 06 37 E9 11 17 A1 13\n648 02   21:         INTEGER\n           :           00 8F 34 69 2A 8B B1 3C 03 79 94 32\n           :           4D 12 1F CE 89 FB 46 B2 3B\n           :         }\n           :       }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "CarlRSASelf =\n   0 30  491: SEQUENCE {\n   4 30  340:   SEQUENCE {\n   8 A0    3:     [0] {\n  10 02    1:       INTEGER 2\n            :       }\n  13 02   16:     INTEGER\n            :       46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n            :       9F F2 50 20\n  31 30   13:     SEQUENCE {\n  33 06    9:       OBJECT IDENTIFIER\n            :         sha1withRSAEncryption (1 2 840 113549 1 1 5)\n            :         (PKCS #1)\n  44 05    0:       NULL\n            :       }\n  46 30   18:     SEQUENCE {\n  48 31   16:       SET {\n  50 30   14:         SEQUENCE {\n  52 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n            :             (X.520 id-at (2 5 4))\n  57 13    7:           PrintableString 'CarlRSA'\n            :           }\n            :         }\n            :       }\n  66 30   30:     SEQUENCE {\n  68 17   13:       UTCTime '990818070000Z'\n  83 17   13:       UTCTime '391231235959Z'\n            :       }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": " 98 30   18:     SEQUENCE {\n100 31   16:       SET {\n102 30   14:         SEQUENCE {\n104 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n           :             (X.520 id-at (2 5 4))\n109 13    7:           PrintableString 'CarlRSA'\n           :           }\n           :         }\n           :       }\n118 30  159:     SEQUENCE {\n121 30   13:       SEQUENCE {\n123 06    9:         OBJECT IDENTIFIER\n           :           rsaEncryption (1 2 840 113549 1 1 1)\n           :           (PKCS #1)\n134 05    0:         NULL\n           :         }\n136 03  141:       BIT STRING 0 unused bits, encapsulates {\n140 30  137:           SEQUENCE {\n143 02  129:             INTEGER\n           :               00 E4 4B FF 18 B8 24 57 F4 77 FF 6E\n           :               73 7B 93 71 5C BC 33 1A 92 92 72 23\n           :               D8 41 46 D0 CD 11 3A 04 B3 8E AF 82\n           :               9D BD 51 1E 17 7A F2 76 2C 2B 86 39\n           :               A7 BD D7 8D 1A 53 EC E4 00 D5 E8 EC\n           :               A2 36 B1 ED E2 50 E2 32 09 8A 3F 9F\n           :               99 25 8F B8 4E AB B9 7D D5 96 65 DA\n           :               16 A0 C5 BE 0E AE 44 5B EF 5E F4 A7\n           :               29 CB 82 DD AC 44 E9 AA 93 94 29 0E\n           :               F8 18 D6 C8 57 5E F2 76 C4 F2 11 60\n           :               38 B9 1B 3C 1D 97 C9 6A F1\n275 02    3:             INTEGER 65537\n           :             }\n           :           }\n           :       }\n280 A3   66:     [3] {\n282 30   64:       SEQUENCE {\n284 30   15:         SEQUENCE {\n286 06    3:           OBJECT IDENTIFIER\n           :             basicConstraints (2 5 29 19)\n           :             (X.509 id-ce (2 5 29))\n291 01    1:           BOOLEAN TRUE\n294 04    5:           OCTET STRING, encapsulates {\n296 30    3:               SEQUENCE {\n298 01    1:                 BOOLEAN TRUE\n           :                 }\n           :               }\n           :           }\n301 30   14:         SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "303 06    3:           OBJECT IDENTIFIER keyUsage (2 5 29 15)\n           :             (X.509 id-ce (2 5 29))\n308 01    1:           BOOLEAN TRUE\n311 04    4:           OCTET STRING, encapsulates {\n313 03    2:               BIT STRING 1 unused bits\n           :                 '1100001'B\n           :               }\n           :           }\n317 30   29:         SEQUENCE {\n319 06    3:           OBJECT IDENTIFIER\n           :             subjectKeyIdentifier (2 5 29 14)\n           :             (X.509 id-ce (2 5 29))\n324 04   22:           OCTET STRING, encapsulates {\n326 04   20:               OCTET STRING\n           :                 E9 E0 90 27 AC 78 20 7A 9A D3 4C F2\n           :                 42 37 4E 22 AE 9E 38 BB\n           :               }\n           :           }\n           :         }\n           :       }\n           :     }\n348 30   13:   SEQUENCE {\n350 06    9:     OBJECT IDENTIFIER\n           :       sha1withRSAEncryption (1 2 840 113549 1 1 5)\n           :       (PKCS #1)\n361 05    0:     NULL\n           :     }\n363 03  129:   BIT STRING 0 unused bits\n           :     B7 9E D4 04 D3 ED 29 E4 FF 89 89 15\n           :     2E 4C DB 0C F0 48 0F 32 61 EE C4 04\n           :     EC 12 5D 2D FF 0F 64 59 7E 0A C3 ED\n           :     18 FD E3 56 40 37 A7 07 B5 F0 38 12\n           :     61 50 ED EF DD 3F E3 0B B8 61 A5 A4\n           :     9B 3C E6 9E 9C 54 9A B6 95 D6 DA 6C\n           :     3B B5 2D 45 35 9D 49 01 76 FA B9 B9\n           :     31 F9 F9 6B 12 53 A0 F5 14 60 9B 7D\n           :     CA 3E F2 53 6B B0 37 6F AD E6 74 D7\n           :     DB FA 5A EA 14 41 63 5D CD BE C8 0E\n           :     C1 DA 6A 8D 53 34 18 02\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "DianeDSSSignByCarlInherit =\n   0 30  440: SEQUENCE {\n   4 30  375:   SEQUENCE {\n   8 A0    3:     [0] {\n  10 02    1:       INTEGER 2\n            :       }\n  13 02    2:     INTEGER 210",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": " 17 30    9:     SEQUENCE {\n 19 06    7:       OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n           :         (ANSI X9.57 algorithm)\n           :       }\n 28 30   18:     SEQUENCE {\n 30 31   16:       SET {\n 32 30   14:         SEQUENCE {\n 34 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n           :             (X.520 id-at (2 5 4))\n 39 13    7:           PrintableString 'CarlDSS'\n           :           }\n           :         }\n           :       }\n 48 30   30:     SEQUENCE {\n 50 17   13:       UTCTime '990817020810Z'\n 65 17   13:       UTCTime '391231235959Z'\n           :       }\n 80 30   19:     SEQUENCE {\n 82 31   17:       SET {\n 84 30   15:         SEQUENCE {\n 86 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n           :             (X.520 id-at (2 5 4))\n 91 13    8:           PrintableString 'DianeDSS'\n           :           }\n           :         }\n           :       }\n101 30  147:     SEQUENCE {\n104 30    9:       SEQUENCE {\n106 06    7:         OBJECT IDENTIFIER dsa (1 2 840 10040 4 1)\n           :           (ANSI X9.57 algorithm)\n           :         }\n115 03  133:       BIT STRING 0 unused bits, encapsulates {\n119 02  129:           INTEGER\n           :             00 A0 00 17 78 2C EE 7E 81 53 2E 2E\n           :             61 08 0F A1 9B 51 52 1A DA 59 A8 73\n           :             2F 12 25 B6 08 CB CA EF 2A 44 76 8A\n           :             52 09 EA BD 05 22 D5 0F F6 FD 46 D7\n           :             AF 99 38 09 0E 13 CB 4F 2C DD 1C 34\n           :             F7 1C BF 25 FF 23 D3 3B 59 E7 82 97\n           :             37 BE 31 24 D8 18 C8 F3 49 39 5B B7\n           :             E2 E5 27 7E FC 8C 45 72 5B 7E 3E 8F\n           :             68 4D DD 46 7A 22 BE 8E FF CC DA 39\n           :             29 A3 39 E5 9F 43 E9 55 C9 D7 5B A6\n           :             81 67 CC C0 AA CD 2E C5 23\n           :           }\n           :       }\n251 A3  129:     [3] {\n254 30  127:       SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "256 30   12:         SEQUENCE {\n258 06    3:           OBJECT IDENTIFIER\n           :             basicConstraints (2 5 29 19)\n           :             (X.509 id-ce (2 5 29))\n263 01    1:           BOOLEAN TRUE\n266 04    2:           OCTET STRING, encapsulates {\n268 30    0:               SEQUENCE {}\n           :               }\n           :           }\n270 30   14:         SEQUENCE {\n272 06    3:           OBJECT IDENTIFIER keyUsage (2 5 29 15)\n           :             (X.509 id-ce (2 5 29))\n277 01    1:           BOOLEAN TRUE\n280 04    4:           OCTET STRING, encapsulates {\n282 03    2:               BIT STRING 6 unused bits\n           :                 '11'B\n           :               }\n           :           }\n286 30   31:         SEQUENCE {\n288 06    3:           OBJECT IDENTIFIER\n           :             authorityKeyIdentifier (2 5 29 35)\n           :             (X.509 id-ce (2 5 29))\n293 04   24:           OCTET STRING, encapsulates {\n295 30   22:               SEQUENCE {\n297 80   20:                 [0]\n           :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n           :                   3D 20 BC 43 2B 93 F1 1F\n           :                 }\n           :               }\n           :           }\n319 30   29:         SEQUENCE {\n321 06    3:           OBJECT IDENTIFIER\n           :             subjectKeyIdentifier (2 5 29 14)\n           :             (X.509 id-ce (2 5 29))\n326 04   22:           OCTET STRING, encapsulates {\n328 04   20:               OCTET STRING\n           :                 64 30 99 7D 5C DC 45 0B 99 3A 52 2F\n           :                 16 BF 58 50 DD CE 2B 18\n           :               }\n           :           }\n350 30   31:         SEQUENCE {\n352 06    3:           OBJECT IDENTIFIER subjectAltName (2 5 29 17)\n           :             (X.509 id-ce (2 5 29))\n357 04   24:           OCTET STRING, encapsulates {\n359 30   22:               SEQUENCE {\n361 81   20:                 [1] 'DianeDSS@example.com'\n           :                 }\n           :               }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :           }\n           :         }\n           :       }\n           :     }\n383 30    9:   SEQUENCE {\n385 06    7:     OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n           :       (ANSI X9.57 algorithm)\n           :     }\n394 03   48:   BIT STRING 0 unused bits, encapsulates {\n397 30   45:       SEQUENCE {\n399 02   21:         INTEGER\n           :           00 A1 1A F8 17 0E 3E 5D A8 8C F4 B6\n           :           55 33 1E 4B E3 2C AC B9 5F\n422 02   20:         INTEGER\n           :           28 4B 10 45 58 D2 1C 9D 55 35 14 18\n           :           91 B2 3F 39 DF B5 6E D3\n           :         }\n           :       }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "DianeRSASignByCarl =\n   0 30  556: SEQUENCE {\n   4 30  405:   SEQUENCE {\n   8 A0    3:     [0] {\n  10 02    1:       INTEGER 2\n            :       }\n  13 02   16:     INTEGER\n            :       46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n            :       D5 9A 30 90\n  31 30   13:     SEQUENCE {\n  33 06    9:       OBJECT IDENTIFIER\n            :         sha1withRSAEncryption (1 2 840 113549 1 1 5)\n            :         (PKCS #1)\n  44 05    0:       NULL\n            :       }\n  46 30   18:     SEQUENCE {\n  48 31   16:       SET {\n  50 30   14:         SEQUENCE {\n  52 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n            :             (X.520 id-at (2 5 4))\n  57 13    7:           PrintableString 'CarlRSA'\n            :           }\n            :         }\n            :       }\n  66 30   30:     SEQUENCE {\n  68 17   13:       UTCTime '990819070000Z'\n  83 17   13:       UTCTime '391231235959Z'\n            :       }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": " 98 30   19:     SEQUENCE {\n100 31   17:       SET {\n102 30   15:         SEQUENCE {\n104 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n           :             (X.520 id-at (2 5 4))\n109 13    8:           PrintableString 'DianeRSA'\n           :           }\n           :         }\n           :       }\n119 30  159:     SEQUENCE {\n122 30   13:       SEQUENCE {\n124 06    9:         OBJECT IDENTIFIER\n           :           rsaEncryption (1 2 840 113549 1 1 1)\n           :           (PKCS #1)\n135 05    0:         NULL\n           :         }\n137 03  141:       BIT STRING 0 unused bits, encapsulates {\n141 30  137:           SEQUENCE {\n144 02  129:             INTEGER\n           :               00 D6 FD B8 C0 70 C6 4C 25 EC EA CF\n           :               EA 7C BB A2 62 FA F0 E6 32 3A 53 FF\n           :               B1 92 5A 17 F4 20 E1 99 24 82 0A D0\n           :               F6 7C FB 44 CA 8B 27 06 F1 7E 26 03\n           :               A9 76 9D CF EC A0 2C 70 96 F2 83 42\n           :               F6 D4 B7 28 0A BB F8 BF 4A 4C 19 3F\n           :               07 DB A0 C1 60 1E B7 7E 67 F7 DE B1\n           :               C3 60 49 AC 45 D7 F8 C6 EF 08 37 21\n           :               93 47 EE F0 73 35 72 B0 02 C4 F3 11\n           :               C3 5E 47 E5 0A B7 83 F1 DB 74 69 64\n           :               8B 44 1D 95 5D CD 28 C0 85\n276 02    3:             INTEGER 65537\n           :             }\n           :           }\n           :       }\n281 A3  129:     [3] {\n284 30  127:       SEQUENCE {\n286 30   12:         SEQUENCE {\n288 06    3:           OBJECT IDENTIFIER\n           :             basicConstraints (2 5 29 19)\n           :             (X.509 id-ce (2 5 29))\n293 01    1:           BOOLEAN TRUE\n296 04    2:           OCTET STRING, encapsulates {\n298 30    0:               SEQUENCE {}\n           :               }\n           :           }\n300 30   14:         SEQUENCE {\n302 06    3:           OBJECT IDENTIFIER keyUsage (2 5 29 15)\n           :             (X.509 id-ce (2 5 29))",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "307 01    1:           BOOLEAN TRUE\n310 04    4:           OCTET STRING, encapsulates {\n312 03    2:               BIT STRING 5 unused bits\n           :                 '111'B\n           :               }\n           :           }\n316 30   31:         SEQUENCE {\n318 06    3:           OBJECT IDENTIFIER\n           :             authorityKeyIdentifier (2 5 29 35)\n           :             (X.509 id-ce (2 5 29))\n323 04   24:           OCTET STRING, encapsulates {\n325 30   22:               SEQUENCE {\n327 80   20:                 [0]\n           :                   E9 E0 90 27 AC 78 20 7A 9A D3 4C F2\n           :                   42 37 4E 22 AE 9E 38 BB\n           :                 }\n           :               }\n           :           }\n349 30   29:         SEQUENCE {\n351 06    3:           OBJECT IDENTIFIER\n           :             subjectKeyIdentifier (2 5 29 14)\n           :             (X.509 id-ce (2 5 29))\n356 04   22:           OCTET STRING, encapsulates {\n358 04   20:               OCTET STRING\n           :                 8C F3 CB 75 0E 8D 31 F6 D4 29 DA 44\n           :                 92 75 B8 FE ED 4F 39 0C\n           :               }\n           :           }\n380 30   31:         SEQUENCE {\n382 06    3:           OBJECT IDENTIFIER subjectAltName (2 5 29 17)\n           :             (X.509 id-ce (2 5 29))\n387 04   24:           OCTET STRING, encapsulates {\n389 30   22:               SEQUENCE {\n391 81   20:                 [1] 'DianeRSA@example.com'\n           :                 }\n           :               }\n           :           }\n           :         }\n           :       }\n           :     }\n413 30   13:   SEQUENCE {\n415 06    9:     OBJECT IDENTIFIER\n           :       sha1withRSAEncryption (1 2 840 113549 1 1 5)\n           :       (PKCS #1)\n426 05    0:     NULL\n           :     }\n428 03  129:   BIT STRING 0 unused bits\n           :     7D A6 2C B5 78 42 D6 79 F3 31 FE F6",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": ":     42 CA 0F 13 07 92 09 1B E0 6F B0 91\n:     18 F6 BF 4A FB CC 63 79 FB 81 BF DD\n:     97 C7 90 6B CB 0A 37 2B 41 6A 03 98\n:     C5 1B 3E 32 C8 45 2B 86 01 9C 1C E2\n:     36 EF 16 C1 1A 92 B8 BE 62 FB 53 3E\n:     49 47 0B C4 B9 E4 2B 58 A6 06 83 F0\n:     B2 A7 BB 85 7E D5 C6 DA CE 9C 7B 31\n:     72 D7 A2 EA 41 AB 6A C0 DD 1F B9 14\n:     44 18 CF 84 57 66 E8 C5 E6 B8 DC 2D\n:     B3 1F 1B 28 43 36 75 7A\n:   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "2.4. CRLs",
      "section_title": true,
      "zh-CHS": "2.4. CRLs"
    },
    {
      "indent": 3,
      "text": "CarlDSSCRLForAll =\n   0 30  216: SEQUENCE {\n   3 30  153:   SEQUENCE {\n   6 30    9:     SEQUENCE {\n   8 06    7:       OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n            :         (ANSI X9.57 algorithm)\n            :       }\n  17 30   18:     SEQUENCE {\n  19 31   16:       SET {\n  21 30   14:         SEQUENCE {\n  23 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n            :             (X.520 id-at (2 5 4))\n  28 13    7:           PrintableString 'CarlDSS'\n            :           }\n            :         }\n            :       }\n  37 17   13:     UTCTime '990827070000Z'\n  52 30  105:     SEQUENCE {\n  54 30   19:       SEQUENCE {\n  56 02    2:         INTEGER 200\n  60 17   13:         UTCTime '990822070000Z'\n            :         }\n  75 30   19:       SEQUENCE {\n  77 02    2:         INTEGER 201\n  81 17   13:         UTCTime '990822070000Z'\n            :         }\n  96 30   19:       SEQUENCE {\n  98 02    2:         INTEGER 211\n 102 17   13:         UTCTime '990822070000Z'\n            :         }\n 117 30   19:       SEQUENCE {\n 119 02    2:         INTEGER 210\n 123 17   13:         UTCTime '990822070000Z'\n            :         }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "138 30   19:       SEQUENCE {\n140 02    2:         INTEGER 212\n144 17   13:         UTCTime '990824070000Z'\n           :         }\n           :       }\n           :     }\n159 30    9:   SEQUENCE {\n161 06    7:     OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n           :       (ANSI X9.57 algorithm)\n           :     }\n170 03   47:   BIT STRING 0 unused bits, encapsulates {\n173 30   44:       SEQUENCE {\n175 02   20:         INTEGER\n           :           7E 65 52 76 33 FE 34 73 17 D1 F7 96\n           :           F9 A0 D4 D8 6D 5C 7D 3D\n197 02   20:         INTEGER\n           :           02 7A 5B B7 D5 5B 18 C1 CF 87 EF 7E\n           :           DA 24 F3 2A 83 9C 35 A1\n           :         }\n           :       }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "CarlDSSCRLForCarl =\n   0 30  131: SEQUENCE {\n   3 30   68:   SEQUENCE {\n   5 30    9:     SEQUENCE {\n   7 06    7:       OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n            :         (ANSI X9.57 algorithm)\n            :       }\n  16 30   18:     SEQUENCE {\n  18 31   16:       SET {\n  20 30   14:         SEQUENCE {\n  22 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n            :             (X.520 id-at (2 5 4))\n  27 13    7:           PrintableString 'CarlDSS'\n            :           }\n            :         }\n            :       }\n  36 17   13:     UTCTime '990825070000Z'\n  51 30   20:     SEQUENCE {\n  53 30   18:       SEQUENCE {\n  55 02    1:         INTEGER 1\n  58 17   13:         UTCTime '990822070000Z'\n            :         }\n            :       }\n            :     }\n  73 30    9:   SEQUENCE {\n  75 06    7:     OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :       (ANSI X9.57 algorithm)\n           :     }\n 84 03   48:   BIT STRING 0 unused bits, encapsulates {\n 87 30   45:       SEQUENCE {\n 89 02   21:         INTEGER\n           :           00 B3 1F C5 4F 7A 3D EC 76 D5 60 F9\n           :           DE 79 22 EC 4F B0 90 FE 97\n112 02   20:         INTEGER\n           :           5A 8B C3 84 BC 66 87 1B BF 79 82 5B\n           :           0A 5D 07 F6 BA A9 05 29\n           :         }\n           :       }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "CarlDSSCRLEmpty =\n   0 30  109: SEQUENCE {\n   2 30   46:   SEQUENCE {\n   4 30    9:     SEQUENCE {\n   6 06    7:       OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n            :         (ANSI X9.57 algorithm)\n            :       }\n  15 30   18:     SEQUENCE {\n  17 31   16:       SET {\n  19 30   14:         SEQUENCE {\n  21 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n            :             (X.520 id-at (2 5 4))\n  26 13    7:           PrintableString 'CarlDSS'\n            :           }\n            :         }\n            :       }\n  35 17   13:     UTCTime '990820070000Z'\n            :     }\n  50 30    9:   SEQUENCE {\n  52 06    7:     OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)\n            :       (ANSI X9.57 algorithm)\n            :     }\n  61 03   48:   BIT STRING 0 unused bits, encapsulates {\n  64 30   45:       SEQUENCE {\n  66 02   20:         INTEGER\n            :           62 3F 36 17 31 58 2E 67 50 79 F5 09\n            :           4B 8C AD D4 6B F4 64 9F\n  88 02   21:         INTEGER\n            :           00 B5 3B 4E A1 4C 7B FD 0F C3 8D 9B\n            :           B6 FE C3 5D 6F DE 65 28 7D\n            :         }\n            :       }\n            :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "CarlRSACRLForAll =\n   0 30  307: SEQUENCE {\n   4 30  157:   SEQUENCE {\n   7 30   13:     SEQUENCE {\n   9 06    9:       OBJECT IDENTIFIER\n            :         md5withRSAEncryption (1 2 840 113549 1 1 4)\n            :         (PKCS #1)\n  20 05    0:       NULL\n            :       }\n  22 30   18:     SEQUENCE {\n  24 31   16:       SET {\n  26 30   14:         SEQUENCE {\n  28 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n            :             (X.520 id-at (2 5 4))\n  33 13    7:           PrintableString 'CarlRSA'\n            :           }\n            :         }\n            :       }\n  42 17   13:     UTCTime '990827070000Z'\n  57 30  105:     SEQUENCE {\n  59 30   33:       SEQUENCE {\n  61 02   16:         INTEGER\n            :           46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n            :           C4 10 B3 B0\n  79 17   13:         UTCTime '990822070000Z'\n            :         }\n  94 30   33:       SEQUENCE {\n  96 02   16:         INTEGER\n            :           46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n            :           D5 9A 30 90\n 114 17   13:         UTCTime '990822070000Z'\n            :         }\n 129 30   33:       SEQUENCE {\n 131 02   16:         INTEGER\n            :           46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n            :           CD 5D 71 D0\n 149 17   13:         UTCTime '990824070000Z'\n            :         }\n            :       }\n            :     }\n 164 30   13:   SEQUENCE {\n 166 06    9:     OBJECT IDENTIFIER\n            :       md5withRSAEncryption (1 2 840 113549 1 1 4)\n            :       (PKCS #1)\n 177 05    0:     NULL\n            :     }\n 179 03  129:   BIT STRING 0 unused bits\n            :     BF B3 97 AA 53 F0 32 21 16 2B 77 92",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": ":     7A 6B BB 97 C8 DC EA F1 FA 66 16 30\n:     0E B5 9E 5C F0 81 D4 5E B3 6E C1 88\n:     6B 8C D4 5E C5 4D FB 47 5E 66 F3 5D\n:     AB E5 B4 18 36 60 A8 4D 9C 3C 89 EC\n:     6F 27 BF 35 50 71 81 C2 B9 44 5B 62\n:     89 19 12 31 A9 7B 9A D3 CC 66 CB 11\n:     D9 0B 10 47 77 AD 4F 22 D9 E5 7F 30\n:     F2 5B FC 94 51 A5 58 76 3B 1F A8 46\n:     A6 1F F6 A1 DE 55 A1 ED 31 88 69 97\n:     0F 08 D3 D4 0C 60 5B 1E\n:   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "CarlRSACRLForCarl =\n   0 30  236: SEQUENCE {\n   3 30   87:   SEQUENCE {\n   5 30   13:     SEQUENCE {\n   7 06    9:       OBJECT IDENTIFIER\n            :         md5withRSAEncryption (1 2 840 113549 1 1 4)\n            :         (PKCS #1)\n  18 05    0:       NULL\n            :       }\n  20 30   18:     SEQUENCE {\n  22 31   16:       SET {\n  24 30   14:         SEQUENCE {\n  26 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n            :             (X.520 id-at (2 5 4))\n  31 13    7:           PrintableString 'CarlRSA'\n            :           }\n            :         }\n            :       }\n  40 17   13:     UTCTime '990825070000Z'\n  55 30   35:     SEQUENCE {\n  57 30   33:       SEQUENCE {\n  59 02   16:         INTEGER\n            :           46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n            :           9F F2 50 20\n  77 17   13:         UTCTime '990822070000Z'\n            :         }\n            :       }\n            :     }\n  92 30   13:   SEQUENCE {\n  94 06    9:     OBJECT IDENTIFIER\n            :       md5withRSAEncryption (1 2 840 113549 1 1 4)\n            :       (PKCS #1)\n 105 05    0:     NULL\n            :     }\n 107 03  129:   BIT STRING 0 unused bits\n            :     21 EF 21 D4 C1 1A 85 95 49 6B CA 45",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": ":     62 DC D7 09 FF A9 51 2E 8E D9 47 18\n:     FA F8 E5 72 DD 4F ED 74 74 E3 F3 65\n:     32 65 28 2C 9A 1D 57 E5 D5 26 06 EA\n:     D5 E6 23 95 84 8D 0E 89 9E EE 9B 0C\n:     2F CE 07 F7 A3 D1 6B 85 4C 0F FF E6\n:     DD FC DC CD 73 2C 1E 7D DC B0 71 C5\n:     4C FC 01 6E 52 57 69 1E 39 63 DF 12\n:     22 30 C7 13 55 94 05 6E 2A 00 A9 5B\n:     C4 2A 66 94 62 CE 36 33 C2 2B 63 47\n:     25 9D F3 DE 70 EE 00 56\n:   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "CarlRSACRLEmpty =\n   0 30  199: SEQUENCE {\n   3 30   50:   SEQUENCE {\n   5 30   13:     SEQUENCE {\n   7 06    9:       OBJECT IDENTIFIER\n            :         md5withRSAEncryption (1 2 840 113549 1 1 4)\n            :         (PKCS #1)\n  18 05    0:       NULL\n            :       }\n  20 30   18:     SEQUENCE {\n  22 31   16:       SET {\n  24 30   14:         SEQUENCE {\n  26 06    3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n            :             (X.520 id-at (2 5 4))\n  31 13    7:           PrintableString 'CarlRSA'\n            :           }\n            :         }\n            :       }\n  40 17   13:     UTCTime '990820070000Z'\n            :     }\n  55 30   13:   SEQUENCE {\n  57 06    9:     OBJECT IDENTIFIER\n            :       md5withRSAEncryption (1 2 840 113549 1 1 4)\n            :       (PKCS #1)\n  68 05    0:     NULL\n            :     }\n  70 03  129:   BIT STRING 0 unused bits\n            :     A9 C5 21 B8 13 7C 74 F3 B5 11 EC 04\n            :     F3 20 45 86 1E 0B 6E 7F 83 6D 5F F4\n            :     34 76 06 59 25 0E 04 3D 88 09 88 81\n            :     37 C4 DC 20 98 FA 17 81 0B 37 94 AC\n            :     B4 8F 7B 51 89 14 A4 CB 72 73 14 07\n            :     BC 22 9C 40 A1 07 FC 44 7C 85 0F 0B\n            :     88 D1 EE E1 0E AF F6 16 74 AD A1 AF\n            :     C1 00 75 00 64 EA A5 9A F6 0B 08 A2\n            :     DB 95 19 5F A6 A7 B9 39 45 25 0A 0E",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": ":     F6 5E 84 E7 F8 B9 5A C9 18 C2 0E B8\n:     A0 96 BE 81 3A 80 6D C9\n:   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "3. Trivial Examples",
      "section_title": true,
      "zh-CHS": "3. 琐碎的例子"
    },
    {
      "indent": 3,
      "text": "This section covers examples of small CMS types.",
      "zh-CHS": "本节介绍小型CMS类型的示例。"
    },
    {
      "indent": 0,
      "text": "3.1. ContentInfo with Data Type, BER",
      "section_title": true,
      "zh-CHS": "3.1. 数据类型为BER的ContentInfo"
    },
    {
      "indent": 3,
      "text": "The object is a ContentInfo containing a Data object in BER format that is ExContent.",
      "zh-CHS": "该对象是一个ContentInfo，包含一个BER格式的数据对象，该数据对象是ExContent。"
    },
    {
      "indent": 5,
      "text": " 0 30 NDEF: SEQUENCE {\n 2 06    9:   OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n          :     (PKCS #7)\n13 A0 NDEF:   [0] {\n15 24 NDEF:     OCTET STRING {\n17 04    4:       OCTET STRING 'This'\n23 04   24:       OCTET STRING ' is some sample content.'\n          :       }\n          :     }\n          :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "3.2. ContentInfo with Data Type, DER",
      "section_title": true,
      "zh-CHS": "3.2. 数据类型为DER的ContentInfo"
    },
    {
      "indent": 3,
      "text": "The object is a ContentInfo containing a Data object in DER format that is ExContent.",
      "zh-CHS": "对象是一个ContentInfo，包含DER格式的数据对象，该数据对象是ExContent。"
    },
    {
      "indent": 5,
      "text": " 0 30   43: SEQUENCE {\n 2 06    9:   OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n          :     (PKCS #7)\n13 A0   30:   [0] {\n15 04   28:     OCTET STRING 'This is some sample content.'\n          :     }\n          :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "4. Signed-data",
      "section_title": true,
      "zh-CHS": "4. 签名数据"
    },
    {
      "indent": 0,
      "text": "4.1. Basic Signed Content, DSS",
      "section_title": true,
      "zh-CHS": "4.1. 基本签名内容"
    },
    {
      "indent": 3,
      "text": "A SignedData with no attribute certificates, signed by Alice using DSS, just her certificate (not Carl's root cert), no CRL. The message is ExContent, and is included in the eContent. There are no signed or unsigned attributes.",
      "zh-CHS": "没有属性证书的SignedData，由Alice使用DSS签名，只有她的证书（不是Carl的根证书），没有CRL。该消息内容异常丰富，包含在eContent中。不存在有符号或无符号属性。"
    },
    {
      "indent": 4,
      "text": "  0 30  919: SEQUENCE {\n  4 06    9:   OBJECT IDENTIFIER signedData (1 2 840 113549 1 7 2)\n           :     (PKCS #7)\n 15 A0  904:   [0] {\n 19 30  900:     SEQUENCE {\n 23 02    1:       INTEGER 1\n 26 31    9:       SET {\n 28 30    7:         SEQUENCE {\n 30 06    5:           OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n           :             (OIW)\n           :           }\n           :         }\n 37 30   43:       SEQUENCE {\n 39 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n           :           (PKCS #7)\n 50 A0   30:         [0] {\n 52 04   28:           OCTET STRING 'This is some sample content.'\n           :           }\n           :         }\n 82 A0  736:       [0] {\n 86 30  732:         SEQUENCE {\n 90 30  667:           SEQUENCE {\n 94 A0    3:             [0] {\n 96 02    1:               INTEGER 2\n           :               }\n 99 02    2:             INTEGER 200\n103 30    9:             SEQUENCE {\n105 06    7:               OBJECT IDENTIFIER\n           :                 dsaWithSha1 (1 2 840 10040 4 3)\n           :                 (ANSI X9.57 algorithm)\n           :               }\n114 30   18:             SEQUENCE {\n116 31   16:               SET {\n118 30   14:                 SEQUENCE {\n120 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n125 13    7:                   PrintableString 'CarlDSS'\n           :                   }\n           :                 }\n           :               }\n134 30   30:             SEQUENCE {\n136 17   13:               UTCTime '990817011049Z'\n151 17   13:               UTCTime '391231235959Z'\n           :               }\n166 30   19:             SEQUENCE {\n168 31   17:               SET {\n170 30   15:                 SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "172 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n177 13    8:                   PrintableString 'AliceDSS'\n           :                   }\n           :                 }\n           :               }\n187 30  438:             SEQUENCE {\n191 30  299:               SEQUENCE {\n195 06    7:                 OBJECT IDENTIFIER\n           :                   dsa (1 2 840 10040 4 1)\n           :                   (ANSI X9.57 algorithm)\n204 30  286:                 SEQUENCE {\n208 02  129:                   INTEGER\n           :                   00 81 8D CD ED 83 EA 0A 9E 39 3E C2\n           :                   48 28 A3 E4 47 93 DD 0E D7 A8 0E EC\n           :                   53 C5 AB 84 08 4F FF 94 E1 73 48 7E\n           :                   0C D6 F3 44 48 D1 FE 9F AF A4 A1 89\n           :                   2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C\n           :                   DC 5F 69 8A E4 75 D0 37 0C 91 08 95\n           :                   9B DE A7 5E F9 FC F4 9F 2F DD 43 A8\n           :                   8B 54 F1 3F B0 07 08 47 4D 5D 88 C3\n           :                   C3 B5 B3 E3 55 08 75 D5 39 76 10 C4\n           :                   78 BD FF 9D B0 84 97 37 F2 E4 51 1B\n           :                   B5 E4 09 96 5C F3 7E 5B DB\n340 02   21:                   INTEGER\n           :                   00 E2 47 A6 1A 45 66 B8 13 C6 DA 8F\n           :                   B8 37 21 2B 62 8B F7 93 CD\n363 02  128:                   INTEGER\n           :                   26 38 D0 14 89 32 AA 39 FB 3E 6D D9\n           :                   4B 59 6A 4C 76 23 39 04 02 35 5C F2\n           :                   CB 1A 30 C3 1E 50 5D DD 9B 59 E2 CD\n           :                   AA 05 3D 58 C0 7B A2 36 B8 6E 07 AF\n           :                   7D 8A 42 25 A7 F4 75 CF 4A 08 5E 4B\n           :                   3E 90 F8 6D EA 9C C9 21 8A 3B 76 14\n           :                   E9 CE 2E 5D A3 07 CD 23 85 B8 2F 30\n           :                   01 7C 6D 49 89 11 89 36 44 BD F8 C8\n           :                   95 4A 53 56 B5 E2 F9 73 EC 1A 61 36\n           :                   1F 11 7F C2 BD ED D1 50 FF 98 74 C2\n           :                   D1 81 4A 60 39 BA 36 39\n           :                   }\n           :                 }\n494 03  132:               BIT STRING 0 unused bits, encapsulates {\n498 02  128:                   INTEGER\n           :                   5C E3 B9 5A 75 14 96 0B A9 7A DD E3\n           :                   3F A9 EC AC 5E DC BD B7 13 11 34 A6\n           :                   16 89 28 11 23 D9 34 86 67 75 75 13\n           :                   12 3D 43 5B 6F E5 51 BF FA 89 F2 A2",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                   1B 3E 24 7D 3D 07 8D 5B 63 C8 BB 45\n           :                   A5 A0 4A E3 85 D6 CE 06 80 3F E8 23\n           :                   7E 1A F2 24 AB 53 1A B8 27 0D 1E EF\n           :                   08 BF 66 14 80 5C 62 AC 65 FA 15 8B\n           :                   F1 BB 34 D4 D2 96 37 F6 61 47 B2 C4\n           :                   32 84 F0 7E 41 40 FD 46 A7 63 4E 33\n           :                   F2 A5 E2 F4 F2 83 E5 B8\n           :                   }\n           :               }\n629 A3  129:             [3] {\n632 30  127:               SEQUENCE {\n634 30   12:                 SEQUENCE {\n636 06    3:                   OBJECT IDENTIFIER\n           :                     basicConstraints (2 5 29 19)\n           :                     (X.509 id-ce (2 5 29))\n641 01    1:                   BOOLEAN TRUE\n644 04    2:                   OCTET STRING, encapsulates {\n646 30    0:                       SEQUENCE {}\n           :                       }\n           :                   }\n648 30   14:                 SEQUENCE {\n650 06    3:                   OBJECT IDENTIFIER\n           :                     keyUsage (2 5 29 15)\n           :                     (X.509 id-ce (2 5 29))\n655 01    1:                   BOOLEAN TRUE\n658 04    4:                   OCTET STRING, encapsulates {\n660 03    2:                       BIT STRING 6 unused bits\n           :                         '11'B\n           :                       }\n           :                   }\n664 30   31:                 SEQUENCE {\n666 06    3:                   OBJECT IDENTIFIER\n           :                     authorityKeyIdentifier (2 5 29 35)\n           :                     (X.509 id-ce (2 5 29))\n671 04   24:                   OCTET STRING, encapsulates {\n673 30   22:                       SEQUENCE {\n675 80   20:                         [0]\n           :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n           :                   3D 20 BC 43 2B 93 F1 1F\n           :                         }\n           :                       }\n           :                   }\n697 30   29:                 SEQUENCE {\n699 06    3:                   OBJECT IDENTIFIER\n           :                     subjectKeyIdentifier (2 5 29 14)\n           :                     (X.509 id-ce (2 5 29))\n704 04   22:                   OCTET STRING, encapsulates {\n706 04   20:                       OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                   BE 6C A1 B3 E3 C1 F7 ED 43 70 A4 CE\n           :                   13 01 E2 FD E3 97 FE CD\n           :                       }\n           :                   }\n728 30   31:                 SEQUENCE {\n730 06    3:                   OBJECT IDENTIFIER\n           :                     subjectAltName (2 5 29 17)\n           :                     (X.509 id-ce (2 5 29))\n735 04   24:                   OCTET STRING, encapsulates {\n737 30   22:                       SEQUENCE {\n739 81   20:                         [1] 'AliceDSS@example.com'\n           :                         }\n           :                       }\n           :                   }\n           :                 }\n           :               }\n           :             }\n761 30    9:           SEQUENCE {\n763 06    7:             OBJECT IDENTIFIER\n           :               dsaWithSha1 (1 2 840 10040 4 3)\n           :               (ANSI X9.57 algorithm)\n           :             }\n772 03   48:           BIT STRING 0 unused bits, encapsulates {\n775 30   45:               SEQUENCE {\n777 02   20:                 INTEGER\n           :                   55 0C A4 19 1F 42 2B 89 71 22 33 8D\n           :                   83 6A B5 3D 67 6B BF 45\n799 02   21:                 INTEGER\n           :                   00 9F 61 53 52 54 0B 5C B2 DD DA E7\n           :                   76 1D E2 10 52 5B 43 5E BD\n           :                 }\n           :               }\n           :           }\n           :         }\n822 31   99:       SET {\n824 30   97:         SEQUENCE {\n826 02    1:           INTEGER 1\n829 30   24:           SEQUENCE {\n831 30   18:             SEQUENCE {\n833 31   16:               SET {\n835 30   14:                 SEQUENCE {\n837 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n842 13    7:                   PrintableString 'CarlDSS'\n           :                   }\n           :                 }\n           :               }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "851 02    2:             INTEGER 200\n           :             }\n855 30    7:           SEQUENCE {\n857 06    5:             OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n           :               (OIW)\n           :             }\n864 30    9:           SEQUENCE {\n866 06    7:             OBJECT IDENTIFIER\n           :               dsaWithSha1 (1 2 840 10040 4 3)\n           :               (ANSI X9.57 algorithm)\n           :             }\n875 04   46:           OCTET STRING, encapsulates {\n877 30   44:               SEQUENCE {\n879 02   20:                 INTEGER\n           :                   09 91 FE EB D2 69 F5 18 B7 D7 CD 55\n           :                   F4 81 EA 2A 42 6A AD 03\n901 02   20:                 INTEGER\n           :                   3A 07 CC C3 21 BE E1 1A 4B 7F 3E B5\n           :                   0D DB BA 1C EA BC CD 89\n           :                 }\n           :               }\n           :           }\n           :         }\n           :       }\n           :     }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "4.2. Basic Signed Content, RSA",
      "section_title": true,
      "zh-CHS": "4.2. 基本签名内容"
    },
    {
      "indent": 3,
      "text": "Same as 4.1, except using RSA signatures. A SignedData with no attribute certificates, signed by Alice using RSA, just her certificate (not Carl's root cert), no CRL. The message is ExContent, and is included in the eContent. There are no signed or unsigned attributes.",
      "zh-CHS": "与4.1相同，但使用RSA签名除外。没有属性证书的SignedData，由Alice使用RSA签名，只有她的证书（不是Carl的根证书），没有CRL。该消息内容异常丰富，包含在eContent中。不存在有符号或无符号属性。"
    },
    {
      "indent": 5,
      "text": " 0 30  850: SEQUENCE {\n 4 06    9:   OBJECT IDENTIFIER signedData (1 2 840 113549 1 7 2)\n          :     (PKCS #7)\n15 A0  835:   [0] {\n19 30  831:     SEQUENCE {\n23 02    1:       INTEGER 1\n26 31   11:       SET {\n28 30    9:         SEQUENCE {\n30 06    5:           OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n          :             (OIW)\n37 05    0:           NULL\n          :           }\n          :         }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": " 39 30   43:       SEQUENCE {\n 41 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n           :           (PKCS #7)\n 52 A0   30:         [0] {\n 54 04   28:           OCTET STRING 'This is some sample content.'\n           :           }\n           :         }\n 84 A0  560:       [0] {\n 88 30  556:         SEQUENCE {\n 92 30  405:           SEQUENCE {\n 96 A0    3:             [0] {\n 98 02    1:               INTEGER 2\n           :               }\n101 02   16:             INTEGER\n           :               46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n           :               C4 10 B3 B0\n119 30   13:             SEQUENCE {\n121 06    9:               OBJECT IDENTIFIER\n           :                 sha1withRSAEncryption\n           :                     (1 2 840 113549 1 1 5)\n           :                 (PKCS #1)\n132 05    0:               NULL\n           :               }\n134 30   18:             SEQUENCE {\n136 31   16:               SET {\n138 30   14:                 SEQUENCE {\n140 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n145 13    7:                   PrintableString 'CarlRSA'\n           :                   }\n           :                 }\n           :               }\n154 30   30:             SEQUENCE {\n156 17   13:               UTCTime '990919010847Z'\n171 17   13:               UTCTime '391231235959Z'\n           :               }\n186 30   19:             SEQUENCE {\n188 31   17:               SET {\n190 30   15:                 SEQUENCE {\n192 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n197 13    8:                   PrintableString 'AliceRSA'\n           :                   }\n           :                 }\n           :               }\n207 30  159:             SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "210 30   13:               SEQUENCE {\n212 06    9:                 OBJECT IDENTIFIER\n           :                   rsaEncryption (1 2 840 113549 1 1 1)\n           :                   (PKCS #1)\n223 05    0:                 NULL\n           :                 }\n225 03  141:               BIT STRING 0 unused bits, encapsulates {\n229 30  137:                   SEQUENCE {\n232 02  129:                     INTEGER\n           :                   00 E0 89 73 39 8D D8 F5 F5 E8 87 76\n           :                   39 7F 4E B0 05 BB 53 83 DE 0F B7 AB\n           :                   DC 7D C7 75 29 0D 05 2E 6D 12 DF A6\n           :                   86 26 D4 D2 6F AA 58 29 FC 97 EC FA\n           :                   82 51 0F 30 80 BE B1 50 9E 46 44 F1\n           :                   2C BB D8 32 CF C6 68 6F 07 D9 B0 60\n           :                   AC BE EE 34 09 6A 13 F5 F7 05 05 93\n           :                   DF 5E BA 35 56 D9 61 FF 19 7F C9 81\n           :                   E6 F8 6C EA 87 40 70 EF AC 6D 2C 74\n           :                   9F 2D FA 55 3A B9 99 77 02 A6 48 52\n           :                   8C 4E F3 57 38 57 74 57 5F\n364 02    3:                     INTEGER 65537\n           :                     }\n           :                   }\n           :               }\n369 A3  129:             [3] {\n372 30  127:               SEQUENCE {\n374 30   12:                 SEQUENCE {\n376 06    3:                   OBJECT IDENTIFIER\n           :                     basicConstraints (2 5 29 19)\n           :                     (X.509 id-ce (2 5 29))\n381 01    1:                   BOOLEAN TRUE\n384 04    2:                   OCTET STRING, encapsulates {\n386 30    0:                       SEQUENCE {}\n           :                       }\n           :                   }\n388 30   14:                 SEQUENCE {\n390 06    3:                   OBJECT IDENTIFIER\n           :                     keyUsage (2 5 29 15)\n           :                     (X.509 id-ce (2 5 29))\n395 01    1:                   BOOLEAN TRUE\n398 04    4:                   OCTET STRING, encapsulates {\n400 03    2:                       BIT STRING 6 unused bits\n           :                         '11'B\n           :                       }\n           :                   }\n404 30   31:                 SEQUENCE {\n406 06    3:                   OBJECT IDENTIFIER\n           :                     authorityKeyIdentifier (2 5 29 35)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                     (X.509 id-ce (2 5 29))\n411 04   24:                   OCTET STRING, encapsulates {\n413 30   22:                       SEQUENCE {\n415 80   20:                         [0]\n           :                   E9 E0 90 27 AC 78 20 7A 9A D3 4C F2\n           :                   42 37 4E 22 AE 9E 38 BB\n           :                         }\n           :                       }\n           :                   }\n437 30   29:                 SEQUENCE {\n439 06    3:                   OBJECT IDENTIFIER\n           :                     subjectKeyIdentifier (2 5 29 14)\n           :                     (X.509 id-ce (2 5 29))\n444 04   22:                   OCTET STRING, encapsulates {\n446 04   20:                       OCTET STRING\n           :                   77 D2 B4 D1 B7 4C 8A 8A A3 CE 45 9D\n           :                   CE EC 3C A0 3A E3 FF 50\n           :                       }\n           :                   }\n468 30   31:                 SEQUENCE {\n470 06    3:                   OBJECT IDENTIFIER\n           :                     subjectAltName (2 5 29 17)\n           :                     (X.509 id-ce (2 5 29))\n475 04   24:                   OCTET STRING, encapsulates {\n477 30   22:                       SEQUENCE {\n479 81   20:                         [1] 'AliceRSA@example.com'\n           :                         }\n           :                       }\n           :                   }\n           :                 }\n           :               }\n           :             }\n501 30   13:           SEQUENCE {\n503 06    9:             OBJECT IDENTIFIER\n           :               sha1withRSAEncryption\n           :                   (1 2 840 113549 1 1 5)\n           :               (PKCS #1)\n514 05    0:             NULL\n           :             }\n516 03  129:           BIT STRING 0 unused bits\n           :             3E 70 47 A8 48 CC 13 58 8F CA 51 71\n           :             6B 4E 36 18 5D 04 7E 80 B1 8D 4D CC\n           :             CA A3 8F CC 7D 56 C8 BC CF 6E B3 1C\n           :             59 A9 20 AA 05 81 A8 4E 25 AD A7 70\n           :             14 75 2F F5 C7 9B D1 0E E9 63 D2 64\n           :             B7 C6 66 6E 73 21 54 DF F4 BA 25 5D\n           :             7D 49 D3 94 6B 22 36 74 73 B8 4A EC\n           :             2F 64 ED D3 3D D2 A7 42 C5 E8 37 8A",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :             B4 DB 9F 67 E4 BD 9F F9 FE 74 EF EA\n           :             F9 EE 63 6A D8 3F 4B 25 09 B5 D8 1A\n           :             76 AE EB 9B DB 49 B0 22\n           :           }\n           :         }\n648 31  203:       SET {\n651 30  200:         SEQUENCE {\n654 02    1:           INTEGER 1\n657 30   38:           SEQUENCE {\n659 30   18:             SEQUENCE {\n661 31   16:               SET {\n663 30   14:                 SEQUENCE {\n665 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n670 13    7:                   PrintableString 'CarlRSA'\n           :                   }\n           :                 }\n           :               }\n679 02   16:             INTEGER\n           :               46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n           :               C4 10 B3 B0\n           :             }\n697 30    9:           SEQUENCE {\n699 06    5:             OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n           :               (OIW)\n706 05    0:             NULL\n           :             }\n708 30   13:           SEQUENCE {\n710 06    9:             OBJECT IDENTIFIER\n           :               rsaEncryption (1 2 840 113549 1 1 1)\n           :               (PKCS #1)\n721 05    0:             NULL\n           :             }\n723 04  128:           OCTET STRING\n           :             2F 23 82 D2 F3 09 5F B8 0C 58 EB 4E\n           :             9D BF 89 9A 81 E5 75 C4 91 3D D3 D0\n           :             D5 7B B6 D5 FE 94 A1 8A AC E3 C4 84\n           :             F5 CD 60 4E 27 95 F6 CF 00 86 76 75\n           :             3F 2B F0 E7 D4 02 67 A7 F5 C7 8D 16\n           :             04 A5 B3 B5 E7 D9 32 F0 24 EF E7 20\n           :             44 D5 9F 07 C5 53 24 FA CE 01 1D 0F\n           :             17 13 A7 2A 95 9D 2B E4 03 95 14 0B\n           :             E9 39 0D BA CE 6E 9C 9E 0C E8 98 E6\n           :             55 13 D4 68 6F D0 07 D7 A2 B1 62 4C\n           :             E3 8F AF FD E0 D5 5D C7\n           :           }\n           :         }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": ":       }\n:     }\n:   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "4.3. Basic Signed Content, Detached Content",
      "section_title": true,
      "zh-CHS": "4.3. 基本签名内容、分离内容"
    },
    {
      "indent": 3,
      "text": "Same as 4.1, except with no eContent. A SignedData with no attribute certificates, signed by Alice using DSS, just her certificate (not Carl's root cert), no CRL. The message is ExContent, but the eContent is not included. There are no signed or unsigned attributes.",
      "zh-CHS": "与4.1相同，但不包含eContent。没有属性证书的SignedData，由Alice使用DSS签名，只有她的证书（不是Carl的根证书），没有CRL。消息内容异常，但不包括eContent。不存在有符号或无符号属性。"
    },
    {
      "indent": 5,
      "text": " 0 30  887: SEQUENCE {\n 4 06    9:   OBJECT IDENTIFIER signedData (1 2 840 113549 1 7 2)\n          :     (PKCS #7)\n15 A0  872:   [0] {\n19 30  868:     SEQUENCE {\n23 02    1:       INTEGER 1\n26 31    9:       SET {\n28 30    7:         SEQUENCE {\n30 06    5:           OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n          :             (OIW)\n          :           }\n          :         }\n37 30   11:       SEQUENCE {\n39 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n          :           (PKCS #7)\n          :         }\n50 A0  736:       [0] {\n54 30  732:         SEQUENCE {\n58 30  667:           SEQUENCE {\n62 A0    3:             [0] {\n64 02    1:               INTEGER 2\n          :               }\n67 02    2:             INTEGER 200\n71 30    9:             SEQUENCE {\n73 06    7:               OBJECT IDENTIFIER\n          :                 dsaWithSha1 (1 2 840 10040 4 3)\n          :                 (ANSI X9.57 algorithm)\n          :               }\n82 30   18:             SEQUENCE {\n84 31   16:               SET {\n86 30   14:                 SEQUENCE {\n88 06    3:                   OBJECT IDENTIFIER\n          :                     commonName (2 5 4 3)\n          :                     (X.520 id-at (2 5 4))\n93 13    7:                   PrintableString 'CarlDSS'\n          :                   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                 }\n           :               }\n102 30   30:             SEQUENCE {\n104 17   13:               UTCTime '990817011049Z'\n119 17   13:               UTCTime '391231235959Z'\n           :               }\n134 30   19:             SEQUENCE {\n136 31   17:               SET {\n138 30   15:                 SEQUENCE {\n140 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n145 13    8:                   PrintableString 'AliceDSS'\n           :                   }\n           :                 }\n           :               }\n155 30  438:             SEQUENCE {\n159 30  299:               SEQUENCE {\n163 06    7:                 OBJECT IDENTIFIER\n           :                   dsa (1 2 840 10040 4 1)\n           :                   (ANSI X9.57 algorithm)\n172 30  286:                 SEQUENCE {\n176 02  129:                   INTEGER\n           :                   00 81 8D CD ED 83 EA 0A 9E 39 3E C2\n           :                   48 28 A3 E4 47 93 DD 0E D7 A8 0E EC\n           :                   53 C5 AB 84 08 4F FF 94 E1 73 48 7E\n           :                   0C D6 F3 44 48 D1 FE 9F AF A4 A1 89\n           :                   2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C\n           :                   DC 5F 69 8A E4 75 D0 37 0C 91 08 95\n           :                   9B DE A7 5E F9 FC F4 9F 2F DD 43 A8\n           :                   8B 54 F1 3F B0 07 08 47 4D 5D 88 C3\n           :                   C3 B5 B3 E3 55 08 75 D5 39 76 10 C4\n           :                   78 BD FF 9D B0 84 97 37 F2 E4 51 1B\n           :                   B5 E4 09 96 5C F3 7E 5B DB\n308 02   21:                   INTEGER\n           :                   00 E2 47 A6 1A 45 66 B8 13 C6 DA 8F\n           :                   B8 37 21 2B 62 8B F7 93 CD\n331 02  128:                   INTEGER\n           :                   26 38 D0 14 89 32 AA 39 FB 3E 6D D9\n           :                   4B 59 6A 4C 76 23 39 04 02 35 5C F2\n           :                   CB 1A 30 C3 1E 50 5D DD 9B 59 E2 CD\n           :                   AA 05 3D 58 C0 7B A2 36 B8 6E 07 AF\n           :                   7D 8A 42 25 A7 F4 75 CF 4A 08 5E 4B\n           :                   3E 90 F8 6D EA 9C C9 21 8A 3B 76 14\n           :                   E9 CE 2E 5D A3 07 CD 23 85 B8 2F 30\n           :                   01 7C 6D 49 89 11 89 36 44 BD F8 C8\n           :                   95 4A 53 56 B5 E2 F9 73 EC 1A 61 36\n           :                   1F 11 7F C2 BD ED D1 50 FF 98 74 C2",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                   D1 81 4A 60 39 BA 36 39\n           :                   }\n           :                 }\n462 03  132:               BIT STRING 0 unused bits, encapsulates {\n466 02  128:                   INTEGER\n           :                   5C E3 B9 5A 75 14 96 0B A9 7A DD E3\n           :                   3F A9 EC AC 5E DC BD B7 13 11 34 A6\n           :                   16 89 28 11 23 D9 34 86 67 75 75 13\n           :                   12 3D 43 5B 6F E5 51 BF FA 89 F2 A2\n           :                   1B 3E 24 7D 3D 07 8D 5B 63 C8 BB 45\n           :                   A5 A0 4A E3 85 D6 CE 06 80 3F E8 23\n           :                   7E 1A F2 24 AB 53 1A B8 27 0D 1E EF\n           :                   08 BF 66 14 80 5C 62 AC 65 FA 15 8B\n           :                   F1 BB 34 D4 D2 96 37 F6 61 47 B2 C4\n           :                   32 84 F0 7E 41 40 FD 46 A7 63 4E 33\n           :                   F2 A5 E2 F4 F2 83 E5 B8\n           :                   }\n           :               }\n597 A3  129:             [3] {\n600 30  127:               SEQUENCE {\n602 30   12:                 SEQUENCE {\n604 06    3:                   OBJECT IDENTIFIER\n           :                     basicConstraints (2 5 29 19)\n           :                     (X.509 id-ce (2 5 29))\n609 01    1:                   BOOLEAN TRUE\n612 04    2:                   OCTET STRING, encapsulates {\n614 30    0:                       SEQUENCE {}\n           :                       }\n           :                   }\n616 30   14:                 SEQUENCE {\n618 06    3:                   OBJECT IDENTIFIER\n           :                     keyUsage (2 5 29 15)\n           :                     (X.509 id-ce (2 5 29))\n623 01    1:                   BOOLEAN TRUE\n626 04    4:                   OCTET STRING, encapsulates {\n628 03    2:                       BIT STRING 6 unused bits\n           :                         '11'B\n           :                       }\n           :                   }\n632 30   31:                 SEQUENCE {\n634 06    3:                   OBJECT IDENTIFIER\n           :                     authorityKeyIdentifier (2 5 29 35)\n           :                     (X.509 id-ce (2 5 29))\n639 04   24:                   OCTET STRING, encapsulates {\n641 30   22:                       SEQUENCE {\n643 80   20:                         [0]\n           :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n           :                   3D 20 BC 43 2B 93 F1 1F",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                         }\n           :                       }\n           :                   }\n665 30   29:                 SEQUENCE {\n667 06    3:                   OBJECT IDENTIFIER\n           :                     subjectKeyIdentifier (2 5 29 14)\n           :                     (X.509 id-ce (2 5 29))\n672 04   22:                   OCTET STRING, encapsulates {\n674 04   20:                       OCTET STRING\n           :                   BE 6C A1 B3 E3 C1 F7 ED 43 70 A4 CE\n           :                   13 01 E2 FD E3 97 FE CD\n           :                       }\n           :                   }\n696 30   31:                 SEQUENCE {\n698 06    3:                   OBJECT IDENTIFIER\n           :                     subjectAltName (2 5 29 17)\n           :                     (X.509 id-ce (2 5 29))\n703 04   24:                   OCTET STRING, encapsulates {\n705 30   22:                       SEQUENCE {\n707 81   20:                         [1] 'AliceDSS@example.com'\n           :                         }\n           :                       }\n           :                   }\n           :                 }\n           :               }\n           :             }\n729 30    9:           SEQUENCE {\n731 06    7:             OBJECT IDENTIFIER\n           :               dsaWithSha1 (1 2 840 10040 4 3)\n           :               (ANSI X9.57 algorithm)\n           :             }\n740 03   48:           BIT STRING 0 unused bits, encapsulates {\n743 30   45:               SEQUENCE {\n745 02   20:                 INTEGER\n           :                   55 0C A4 19 1F 42 2B 89 71 22 33 8D\n           :                   83 6A B5 3D 67 6B BF 45\n767 02   21:                 INTEGER\n           :                   00 9F 61 53 52 54 0B 5C B2 DD DA E7\n           :                   76 1D E2 10 52 5B 43 5E BD\n           :                 }\n           :               }\n           :           }\n           :         }\n790 31   99:       SET {\n792 30   97:         SEQUENCE {\n794 02    1:           INTEGER 1\n797 30   24:           SEQUENCE {\n799 30   18:             SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "801 31   16:               SET {\n803 30   14:                 SEQUENCE {\n805 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n810 13    7:                   PrintableString 'CarlDSS'\n           :                   }\n           :                 }\n           :               }\n819 02    2:             INTEGER 200\n           :             }\n823 30    7:           SEQUENCE {\n825 06    5:             OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n           :               (OIW)\n           :             }\n832 30    9:           SEQUENCE {\n834 06    7:             OBJECT IDENTIFIER\n           :               dsaWithSha1 (1 2 840 10040 4 3)\n           :               (ANSI X9.57 algorithm)\n           :             }\n843 04   46:           OCTET STRING, encapsulates {\n845 30   44:               SEQUENCE {\n847 02   20:                 INTEGER\n           :                   06 FB C7 2A 24 D5 34 89 F7 8B B5 FD\n           :                   73 24 A5 86 C8 0F 5A 6C\n869 02   20:                 INTEGER\n           :                   66 69 19 BC 68 58 D1 8D B1 9D 52 3F\n           :                   DA 14 88 0D FD C9 A1 B8\n           :                 }\n           :               }\n           :           }\n           :         }\n           :       }\n           :     }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "4.4. Fancier Signed Content",
      "section_title": true,
      "zh-CHS": "4.4. 爱好者签名内容"
    },
    {
      "indent": 3,
      "text": "Same as 4.1, but includes Carl's root cert, Carl's CRL, some signed and unsigned attributes (Countersignature by Diane). A SignedData with no attribute certificates, signed by Alice using DSS, her certificate and Carl's root cert, Carl's DSS CRL. The message is ExContent, and is included in the eContent. The signed attributes are Content Type, Message Digest and Signing Time; the unsigned attributes are content hint and counter signature. The message includes also Alice's RSA certificate.",
      "zh-CHS": "与4.1相同，但包括Carl的根证书、Carl的CRL、一些已签名和未签名属性（Diane的会签）。无属性证书的已签名数据，由Alice使用DSS、她的证书和Carl的根证书Carl的DSS CRL进行签名。该消息内容异常丰富，包含在eContent中。签名属性包括内容类型、消息摘要和签名时间；未签名的属性是内容提示和反签名。该消息还包括Alice的RSA证书。"
    },
    {
      "indent": 4,
      "text": "  0 30 2829: SEQUENCE {\n  4 06    9:   OBJECT IDENTIFIER signedData (1 2 840 113549 1 7 2)\n           :     (PKCS #7)\n 15 A0 2814:   [0] {\n 19 30 2810:     SEQUENCE {\n 23 02    1:       INTEGER 1\n 26 31    9:       SET {\n 28 30    7:         SEQUENCE {\n 30 06    5:           OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n           :             (OIW)\n           :           }\n           :         }\n 37 30   43:       SEQUENCE {\n 39 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n           :           (PKCS #7)\n 50 A0   30:         [0] {\n 52 04   28:           OCTET STRING 'This is some sample content.'\n           :           }\n           :         }\n 82 A0 1967:       [0] {\n 86 30  556:         SEQUENCE {\n 90 30  405:           SEQUENCE {\n 94 A0    3:             [0] {\n 96 02    1:               INTEGER 2\n           :               }\n 99 02   16:             INTEGER\n           :               46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n           :               C4 10 B3 B0\n117 30   13:             SEQUENCE {\n119 06    9:               OBJECT IDENTIFIER\n           :                 sha1withRSAEncryption\n           :                     (1 2 840 113549 1 1 5)\n           :                 (PKCS #1)\n130 05    0:               NULL\n           :               }\n132 30   18:             SEQUENCE {\n134 31   16:               SET {\n136 30   14:                 SEQUENCE {\n138 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n143 13    7:                   PrintableString 'CarlRSA'\n           :                   }\n           :                 }\n           :               }\n152 30   30:             SEQUENCE {\n154 17   13:               UTCTime '990919010847Z'\n169 17   13:               UTCTime '391231235959Z'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :               }\n184 30   19:             SEQUENCE {\n186 31   17:               SET {\n188 30   15:                 SEQUENCE {\n190 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n195 13    8:                   PrintableString 'AliceRSA'\n           :                   }\n           :                 }\n           :               }\n205 30  159:             SEQUENCE {\n208 30   13:               SEQUENCE {\n210 06    9:                 OBJECT IDENTIFIER\n           :                   rsaEncryption (1 2 840 113549 1 1 1)\n           :                   (PKCS #1)\n221 05    0:                 NULL\n           :                 }\n223 03  141:               BIT STRING 0 unused bits, encapsulates {\n227 30  137:                   SEQUENCE {\n230 02  129:                     INTEGER\n           :                   00 E0 89 73 39 8D D8 F5 F5 E8 87 76\n           :                   39 7F 4E B0 05 BB 53 83 DE 0F B7 AB\n           :                   DC 7D C7 75 29 0D 05 2E 6D 12 DF A6\n           :                   86 26 D4 D2 6F AA 58 29 FC 97 EC FA\n           :                   82 51 0F 30 80 BE B1 50 9E 46 44 F1\n           :                   2C BB D8 32 CF C6 68 6F 07 D9 B0 60\n           :                   AC BE EE 34 09 6A 13 F5 F7 05 05 93\n           :                   DF 5E BA 35 56 D9 61 FF 19 7F C9 81\n           :                   E6 F8 6C EA 87 40 70 EF AC 6D 2C 74\n           :                   9F 2D FA 55 3A B9 99 77 02 A6 48 52\n           :                   8C 4E F3 57 38 57 74 57 5F\n362 02    3:                     INTEGER 65537\n           :                     }\n           :                   }\n           :               }\n367 A3  129:             [3] {\n370 30  127:               SEQUENCE {\n372 30   12:                 SEQUENCE {\n374 06    3:                   OBJECT IDENTIFIER\n           :                     basicConstraints (2 5 29 19)\n           :                     (X.509 id-ce (2 5 29))\n379 01    1:                   BOOLEAN TRUE\n382 04    2:                   OCTET STRING, encapsulates {\n384 30    0:                       SEQUENCE {}\n           :                       }\n           :                   }\n386 30   14:                 SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "388 06    3:                   OBJECT IDENTIFIER\n           :                     keyUsage (2 5 29 15)\n           :                     (X.509 id-ce (2 5 29))\n393 01    1:                   BOOLEAN TRUE\n396 04    4:                   OCTET STRING, encapsulates {\n398 03    2:                       BIT STRING 6 unused bits\n           :                         '11'B\n           :                       }\n           :                   }\n402 30   31:                 SEQUENCE {\n404 06    3:                   OBJECT IDENTIFIER\n           :                     authorityKeyIdentifier (2 5 29 35)\n           :                     (X.509 id-ce (2 5 29))\n409 04   24:                   OCTET STRING, encapsulates {\n411 30   22:                       SEQUENCE {\n413 80   20:                         [0]\n           :                   E9 E0 90 27 AC 78 20 7A 9A D3 4C F2\n           :                   42 37 4E 22 AE 9E 38 BB\n           :                         }\n           :                       }\n           :                   }\n435 30   29:                 SEQUENCE {\n437 06    3:                   OBJECT IDENTIFIER\n           :                     subjectKeyIdentifier (2 5 29 14)\n           :                     (X.509 id-ce (2 5 29))\n442 04   22:                   OCTET STRING, encapsulates {\n444 04   20:                       OCTET STRING\n           :                   77 D2 B4 D1 B7 4C 8A 8A A3 CE 45 9D\n           :                   CE EC 3C A0 3A E3 FF 50\n           :                       }\n           :                   }\n466 30   31:                 SEQUENCE {\n468 06    3:                   OBJECT IDENTIFIER\n           :                     subjectAltName (2 5 29 17)\n           :                     (X.509 id-ce (2 5 29))\n473 04   24:                   OCTET STRING, encapsulates {\n475 30   22:                       SEQUENCE {\n477 81   20:                         [1] 'AliceRSA@example.com'\n           :                         }\n           :                       }\n           :                   }\n           :                 }\n           :               }\n           :             }\n499 30   13:           SEQUENCE {\n501 06    9:             OBJECT IDENTIFIER\n           :               sha1withRSAEncryption\n           :                   (1 2 840 113549 1 1 5)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :               (PKCS #1)\n512 05    0:             NULL\n           :             }\n514 03  129:           BIT STRING 0 unused bits\n           :             3E 70 47 A8 48 CC 13 58 8F CA 51 71\n           :             6B 4E 36 18 5D 04 7E 80 B1 8D 4D CC\n           :             CA A3 8F CC 7D 56 C8 BC CF 6E B3 1C\n           :             59 A9 20 AA 05 81 A8 4E 25 AD A7 70\n           :             14 75 2F F5 C7 9B D1 0E E9 63 D2 64\n           :             B7 C6 66 6E 73 21 54 DF F4 BA 25 5D\n           :             7D 49 D3 94 6B 22 36 74 73 B8 4A EC\n           :             2F 64 ED D3 3D D2 A7 42 C5 E8 37 8A\n           :             B4 DB 9F 67 E4 BD 9F F9 FE 74 EF EA\n           :             F9 EE 63 6A D8 3F 4B 25 09 B5 D8 1A\n           :             76 AE EB 9B DB 49 B0 22\n           :           }\n646 30  667:         SEQUENCE {\n650 30  602:           SEQUENCE {\n654 A0    3:             [0] {\n656 02    1:               INTEGER 2\n           :               }\n659 02    1:             INTEGER 1\n662 30    9:             SEQUENCE {\n664 06    7:               OBJECT IDENTIFIER\n           :                 dsaWithSha1 (1 2 840 10040 4 3)\n           :                 (ANSI X9.57 algorithm)\n           :               }\n673 30   18:             SEQUENCE {\n675 31   16:               SET {\n677 30   14:                 SEQUENCE {\n679 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n684 13    7:                   PrintableString 'CarlDSS'\n           :                   }\n           :                 }\n           :               }\n693 30   30:             SEQUENCE {\n695 17   13:               UTCTime '990816225050Z'\n710 17   13:               UTCTime '391231235959Z'\n           :               }\n725 30   18:             SEQUENCE {\n727 31   16:               SET {\n729 30   14:                 SEQUENCE {\n731 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n736 13    7:                   PrintableString 'CarlDSS'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "            :                   }\n            :                 }\n            :               }\n 745 30  439:             SEQUENCE {\n 749 30  299:               SEQUENCE {\n 753 06    7:                 OBJECT IDENTIFIER\n            :                   dsa (1 2 840 10040 4 1)\n            :                   (ANSI X9.57 algorithm)\n 762 30  286:                 SEQUENCE {\n 766 02  129:                   INTEGER\n            :                   00 B6 49 18 3E 8A 44 C1 29 71 94 4C\n            :                   01 C4 12 C1 7A 79 CB 54 4D AB 1E 81\n            :                   FB C6 4C B3 0E 94 09 06 EB 01 D4 B1\n            :                   C8 71 4B C7 45 C0 50 25 5D 9C FC DA\n            :                   E4 6D D3 E2 86 48 84 82 7D BA 15 95\n            :                   4A 16 F6 46 ED DD F6 98 D2 BB 7E 8A\n            :                   0A 8A BA 16 7B B9 50 01 48 93 8B EB\n            :                   25 15 51 97 55 DC 8F 53 0E 10 A9 50\n            :                   FC 70 B7 CD 30 54 FD DA DE A8 AA 22\n            :                   B5 A1 AF 8B CC 02 88 E7 8B 70 5F B9\n            :                   AD E1 08 D4 6D 29 2D D6 E9\n 898 02   21:                   INTEGER\n            :                   00 DD C1 2F DF 53 CE 0B 34 60 77 3E\n            :                   02 A4 BF 8A 5D 98 B9 10 D5\n 921 02  128:                   INTEGER\n            :                   0C EE 57 9B 4B BD DA B6 07 6A 74 37\n            :                   4F 55 7F 9D ED BC 61 0D EB 46 59 3C\n            :                   56 0B 2B 5B 0C 91 CE A5 62 52 69 CA\n            :                   E1 6D 3E BD BF FE E1 B7 B9 2B 61 3C\n            :                   AD CB AE 45 E3 06 AC 8C 22 9D 9C 44\n            :                   87 0B C7 CD F0 1C D9 B5 4E 5D 73 DE\n            :                   AF 0E C9 1D 5A 51 F5 4F 44 79 35 5A\n            :                   73 AA 7F 46 51 1F A9 42 16 9C 48 EB\n            :                   8A 79 61 B4 D5 2F 53 22 44 63 1F 86\n            :                   B8 A3 58 06 25 F8 29 C0 EF BA E0 75\n            :                   F0 42 C4 63 65 52 9B 0A\n            :                   }\n            :                 }\n1052 03  133:               BIT STRING 0 unused bits, encapsulates {\n1056 02  129:                   INTEGER\n            :                   00 99 87 74 27 03 66 A0 B1 C0 AD DC\n            :                   2C 75 BB E1 6C 44 9C DA 21 6D 4D 47\n            :                   6D B1 62 09 E9 D8 AE 1E F2 3A B4 94\n            :                   B1 A3 8E 7A 9B 71 4E 00 94 C9 B4 25\n            :                   4E B9 60 96 19 24 01 F3 62 0C FE 75\n            :                   C0 FB CE D8 68 00 E3 FD D5 70 4F DF\n            :                   23 96 19 06 94 F4 B1 61 8F 3A 57 B1\n            :                   08 11 A4 0B 26 25 F0 52 76 81 EA 0B",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "            :                   62 0D 95 2A E6 86 BA 72 B2 A7 50 83\n            :                   0B AA 27 CD 1B A9 4D 89 9A D7 8D 18\n            :                   39 84 3F 8B C5 56 4D 80 7A\n            :                   }\n            :               }\n1188 A3   66:             [3] {\n1190 30   64:               SEQUENCE {\n1192 30   15:                 SEQUENCE {\n1194 06    3:                   OBJECT IDENTIFIER\n            :                     basicConstraints (2 5 29 19)\n            :                     (X.509 id-ce (2 5 29))\n1199 01    1:                   BOOLEAN TRUE\n1202 04    5:                   OCTET STRING, encapsulates {\n1204 30    3:                       SEQUENCE {\n1206 01    1:                         BOOLEAN TRUE\n            :                         }\n            :                       }\n            :                   }\n1209 30   14:                 SEQUENCE {\n1211 06    3:                   OBJECT IDENTIFIER\n            :                     keyUsage (2 5 29 15)\n            :                     (X.509 id-ce (2 5 29))\n1216 01    1:                   BOOLEAN TRUE\n1219 04    4:                   OCTET STRING, encapsulates {\n1221 03    2:                       BIT STRING 1 unused bits\n            :                         '1100001'B\n            :                       }\n            :                   }\n1225 30   29:                 SEQUENCE {\n1227 06    3:                   OBJECT IDENTIFIER\n            :                     subjectKeyIdentifier (2 5 29 14)\n            :                     (X.509 id-ce (2 5 29))\n1232 04   22:                   OCTET STRING, encapsulates {\n1234 04   20:                       OCTET STRING\n            :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n            :                   3D 20 BC 43 2B 93 F1 1F\n            :                       }\n            :                   }\n            :                 }\n            :               }\n            :             }\n1256 30    9:           SEQUENCE {\n1258 06    7:             OBJECT IDENTIFIER\n            :               dsaWithSha1 (1 2 840 10040 4 3)\n            :               (ANSI X9.57 algorithm)\n            :             }\n1267 03   48:           BIT STRING 0 unused bits, encapsulates {\n1270 30   45:               SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "1272 02   20:                 INTEGER\n            :                   6B A9 F0 4E 7A 5A 79 E3 F9 BE 3D 2B\n            :                   C9 06 37 E9 11 17 A1 13\n1294 02   21:                 INTEGER\n            :                   00 8F 34 69 2A 8B B1 3C 03 79 94 32\n            :                   4D 12 1F CE 89 FB 46 B2 3B\n            :                 }\n            :               }\n            :           }\n1317 30  732:         SEQUENCE {\n1321 30  667:           SEQUENCE {\n1325 A0    3:             [0] {\n1327 02    1:               INTEGER 2\n            :               }\n1330 02    2:             INTEGER 200\n1334 30    9:             SEQUENCE {\n1336 06    7:               OBJECT IDENTIFIER\n            :                 dsaWithSha1 (1 2 840 10040 4 3)\n            :                 (ANSI X9.57 algorithm)\n            :               }\n1345 30   18:             SEQUENCE {\n1347 31   16:               SET {\n1349 30   14:                 SEQUENCE {\n1351 06    3:                   OBJECT IDENTIFIER\n            :                     commonName (2 5 4 3)\n            :                     (X.520 id-at (2 5 4))\n1356 13    7:                   PrintableString 'CarlDSS'\n            :                   }\n            :                 }\n            :               }\n1365 30   30:             SEQUENCE {\n1367 17   13:               UTCTime '990817011049Z'\n1382 17   13:               UTCTime '391231235959Z'\n            :               }\n1397 30   19:             SEQUENCE {\n1399 31   17:               SET {\n1401 30   15:                 SEQUENCE {\n1403 06    3:                   OBJECT IDENTIFIER\n            :                     commonName (2 5 4 3)\n            :                     (X.520 id-at (2 5 4))\n1408 13    8:                   PrintableString 'AliceDSS'\n            :                   }\n            :                 }\n            :               }\n1418 30  438:             SEQUENCE {\n1422 30  299:               SEQUENCE {\n1426 06    7:                 OBJECT IDENTIFIER\n            :                   dsa (1 2 840 10040 4 1)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "            :                   (ANSI X9.57 algorithm)\n1435 30  286:                 SEQUENCE {\n1439 02  129:                   INTEGER\n            :                   00 81 8D CD ED 83 EA 0A 9E 39 3E C2\n            :                   48 28 A3 E4 47 93 DD 0E D7 A8 0E EC\n            :                   53 C5 AB 84 08 4F FF 94 E1 73 48 7E\n            :                   0C D6 F3 44 48 D1 FE 9F AF A4 A1 89\n            :                   2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C\n            :                   DC 5F 69 8A E4 75 D0 37 0C 91 08 95\n            :                   9B DE A7 5E F9 FC F4 9F 2F DD 43 A8\n            :                   8B 54 F1 3F B0 07 08 47 4D 5D 88 C3\n            :                   C3 B5 B3 E3 55 08 75 D5 39 76 10 C4\n            :                   78 BD FF 9D B0 84 97 37 F2 E4 51 1B\n            :                   B5 E4 09 96 5C F3 7E 5B DB\n1571 02   21:                   INTEGER\n            :                   00 E2 47 A6 1A 45 66 B8 13 C6 DA 8F\n            :                   B8 37 21 2B 62 8B F7 93 CD\n1594 02  128:                   INTEGER\n            :                   26 38 D0 14 89 32 AA 39 FB 3E 6D D9\n            :                   4B 59 6A 4C 76 23 39 04 02 35 5C F2\n            :                   CB 1A 30 C3 1E 50 5D DD 9B 59 E2 CD\n            :                   AA 05 3D 58 C0 7B A2 36 B8 6E 07 AF\n            :                   7D 8A 42 25 A7 F4 75 CF 4A 08 5E 4B\n            :                   3E 90 F8 6D EA 9C C9 21 8A 3B 76 14\n            :                   E9 CE 2E 5D A3 07 CD 23 85 B8 2F 30\n            :                   01 7C 6D 49 89 11 89 36 44 BD F8 C8\n            :                   95 4A 53 56 B5 E2 F9 73 EC 1A 61 36\n            :                   1F 11 7F C2 BD ED D1 50 FF 98 74 C2\n            :                   D1 81 4A 60 39 BA 36 39\n            :                   }\n            :                 }\n1725 03  132:               BIT STRING 0 unused bits, encapsulates {\n1729 02  128:                   INTEGER\n            :                   5C E3 B9 5A 75 14 96 0B A9 7A DD E3\n            :                   3F A9 EC AC 5E DC BD B7 13 11 34 A6\n            :                   16 89 28 11 23 D9 34 86 67 75 75 13\n            :                   12 3D 43 5B 6F E5 51 BF FA 89 F2 A2\n            :                   1B 3E 24 7D 3D 07 8D 5B 63 C8 BB 45\n            :                   A5 A0 4A E3 85 D6 CE 06 80 3F E8 23\n            :                   7E 1A F2 24 AB 53 1A B8 27 0D 1E EF\n            :                   08 BF 66 14 80 5C 62 AC 65 FA 15 8B\n            :                   F1 BB 34 D4 D2 96 37 F6 61 47 B2 C4\n            :                   32 84 F0 7E 41 40 FD 46 A7 63 4E 33\n            :                   F2 A5 E2 F4 F2 83 E5 B8\n            :                   }\n            :               }\n1860 A3  129:             [3] {\n1863 30  127:               SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "1865 30   12:                 SEQUENCE {\n1867 06    3:                   OBJECT IDENTIFIER\n            :                     basicConstraints (2 5 29 19)\n            :                     (X.509 id-ce (2 5 29))\n1872 01    1:                   BOOLEAN TRUE\n1875 04    2:                   OCTET STRING, encapsulates {\n1877 30    0:                       SEQUENCE {}\n            :                       }\n            :                   }\n1879 30   14:                 SEQUENCE {\n1881 06    3:                   OBJECT IDENTIFIER\n            :                     keyUsage (2 5 29 15)\n            :                     (X.509 id-ce (2 5 29))\n1886 01    1:                   BOOLEAN TRUE\n1889 04    4:                   OCTET STRING, encapsulates {\n1891 03    2:                       BIT STRING 6 unused bits\n            :                         '11'B\n            :                       }\n            :                   }\n1895 30   31:                 SEQUENCE {\n1897 06    3:                   OBJECT IDENTIFIER\n            :                     authorityKeyIdentifier (2 5 29 35)\n            :                     (X.509 id-ce (2 5 29))\n1902 04   24:                   OCTET STRING, encapsulates {\n1904 30   22:                       SEQUENCE {\n1906 80   20:                         [0]\n            :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n            :                   3D 20 BC 43 2B 93 F1 1F\n            :                         }\n            :                       }\n            :                   }\n1928 30   29:                 SEQUENCE {\n1930 06    3:                   OBJECT IDENTIFIER\n            :                     subjectKeyIdentifier (2 5 29 14)\n            :                     (X.509 id-ce (2 5 29))\n1935 04   22:                   OCTET STRING, encapsulates {\n1937 04   20:                       OCTET STRING\n            :                   BE 6C A1 B3 E3 C1 F7 ED 43 70 A4 CE\n            :                   13 01 E2 FD E3 97 FE CD\n            :                       }\n            :                   }\n1959 30   31:                 SEQUENCE {\n1961 06    3:                   OBJECT IDENTIFIER\n            :                     subjectAltName (2 5 29 17)\n            :                     (X.509 id-ce (2 5 29))\n1966 04   24:                   OCTET STRING, encapsulates {\n1968 30   22:                       SEQUENCE {\n1970 81   20:                         [1] 'AliceDSS@example.com'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "            :                         }\n            :                       }\n            :                   }\n            :                 }\n            :               }\n            :             }\n1992 30    9:           SEQUENCE {\n1994 06    7:             OBJECT IDENTIFIER\n            :               dsaWithSha1 (1 2 840 10040 4 3)\n            :               (ANSI X9.57 algorithm)\n            :             }\n2003 03   48:           BIT STRING 0 unused bits, encapsulates {\n2006 30   45:               SEQUENCE {\n2008 02   20:                 INTEGER\n            :                   55 0C A4 19 1F 42 2B 89 71 22 33 8D\n            :                   83 6A B5 3D 67 6B BF 45\n2030 02   21:                 INTEGER\n            :                   00 9F 61 53 52 54 0B 5C B2 DD DA E7\n            :                   76 1D E2 10 52 5B 43 5E BD\n            :                 }\n            :               }\n            :           }\n            :         }\n2053 A1  219:       [1] {\n2056 30  216:         SEQUENCE {\n2059 30  153:           SEQUENCE {\n2062 30    9:             SEQUENCE {\n2064 06    7:               OBJECT IDENTIFIER\n            :                 dsaWithSha1 (1 2 840 10040 4 3)\n            :                 (ANSI X9.57 algorithm)\n            :               }\n2073 30   18:             SEQUENCE {\n2075 31   16:               SET {\n2077 30   14:                 SEQUENCE {\n2079 06    3:                   OBJECT IDENTIFIER\n            :                     commonName (2 5 4 3)\n            :                     (X.520 id-at (2 5 4))\n2084 13    7:                   PrintableString 'CarlDSS'\n            :                   }\n            :                 }\n            :               }\n2093 17   13:             UTCTime '990827070000Z'\n2108 30  105:             SEQUENCE {\n2110 30   19:               SEQUENCE {\n2112 02    2:                 INTEGER 200\n2116 17   13:                 UTCTime '990822070000Z'\n            :                 }\n2131 30   19:               SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "2133 02    2:                 INTEGER 201\n2137 17   13:                 UTCTime '990822070000Z'\n            :                 }\n2152 30   19:               SEQUENCE {\n2154 02    2:                 INTEGER 211\n2158 17   13:                 UTCTime '990822070000Z'\n            :                 }\n2173 30   19:               SEQUENCE {\n2175 02    2:                 INTEGER 210\n2179 17   13:                 UTCTime '990822070000Z'\n            :                 }\n2194 30   19:               SEQUENCE {\n2196 02    2:                 INTEGER 212\n2200 17   13:                 UTCTime '990824070000Z'\n            :                 }\n            :               }\n            :             }\n2215 30    9:           SEQUENCE {\n2217 06    7:             OBJECT IDENTIFIER\n            :               dsaWithSha1 (1 2 840 10040 4 3)\n            :               (ANSI X9.57 algorithm)\n            :             }\n2226 03   47:           BIT STRING 0 unused bits, encapsulates {\n2229 30   44:               SEQUENCE {\n2231 02   20:                 INTEGER\n            :                   7E 65 52 76 33 FE 34 73 17 D1 F7 96\n            :                   F9 A0 D4 D8 6D 5C 7D 3D\n2253 02   20:                 INTEGER\n            :                   02 7A 5B B7 D5 5B 18 C1 CF 87 EF 7E\n            :                   DA 24 F3 2A 83 9C 35 A1\n            :                 }\n            :               }\n            :           }\n            :         }\n2275 31  554:       SET {\n2279 30  550:         SEQUENCE {\n2283 02    1:           INTEGER 1\n2286 30   24:           SEQUENCE {\n2288 30   18:             SEQUENCE {\n2290 31   16:               SET {\n2292 30   14:                 SEQUENCE {\n2294 06    3:                   OBJECT IDENTIFIER\n            :                     commonName (2 5 4 3)\n            :                     (X.520 id-at (2 5 4))\n2299 13    7:                   PrintableString 'CarlDSS'\n            :                   }\n            :                 }\n            :               }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "2308 02    2:             INTEGER 200\n            :             }\n2312 30    7:           SEQUENCE {\n2314 06    5:             OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n            :               (OIW)\n            :             }\n2321 A0   93:           [0] {\n2323 30   24:             SEQUENCE {\n2325 06    9:               OBJECT IDENTIFIER\n            :                 contentType (1 2 840 113549 1 9 3)\n            :                 (PKCS #9 (1 2 840 113549 1 9))\n2336 31   11:               SET {\n2338 06    9:                 OBJECT IDENTIFIER\n            :                   data (1 2 840 113549 1 7 1)\n            :                   (PKCS #7)\n            :                 }\n            :               }\n2349 30   28:             SEQUENCE {\n2351 06    9:               OBJECT IDENTIFIER\n            :                 signingTime (1 2 840 113549 1 9 5)\n            :                 (PKCS #9 (1 2 840 113549 1 9))\n2362 31   15:               SET {\n2364 17   13:                 UTCTime '030514153900Z'\n            :                 }\n            :               }\n2379 30   35:             SEQUENCE {\n2381 06    9:               OBJECT IDENTIFIER\n            :                 messageDigest (1 2 840 113549 1 9 4)\n            :                 (PKCS #9 (1 2 840 113549 1 9))\n2392 31   22:               SET {\n2394 04   20:                 OCTET STRING\n            :                   40 6A EC 08 52 79 BA 6E 16 02 2D 9E\n            :                   06 29 C0 22 96 87 DD 48\n            :                 }\n            :               }\n            :             }\n2416 30    9:           SEQUENCE {\n2418 06    7:             OBJECT IDENTIFIER\n            :               dsaWithSha1 (1 2 840 10040 4 3)\n            :               (ANSI X9.57 algorithm)\n            :             }\n2427 04   46:           OCTET STRING, encapsulates {\n2429 30   44:               SEQUENCE {\n2431 02   20:                 INTEGER\n            :                   3B A5 E0 4A DB 6D 58 E0 19 D1 00 1C\n            :                   4F 44 9A 57 7A 71 66 68\n2453 02   20:                 INTEGER\n            :                   1A 11 98 D6 1F 1F AF 34 81 01 DE BE",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "            :                   8B DC B6 A8 6A 91 69 13\n            :                 }\n            :               }\n2475 A1  354:           [1] {\n2479 30   62:             SEQUENCE {\n2481 06   11:               OBJECT IDENTIFIER\n            :                 id-aa-contentHint\n            :                     (1 2 840 113549 1 9 16 2 4)\n            :                 (S/MIME Authenticated Attributes\n            :                     (1 2 840 113549 1 9 16 2))\n2494 31   47:               SET {\n2496 30   45:                 SEQUENCE {\n2498 0C   32:                   UTF8String\n            :                   'Content Hints Description Buffer'\n2532 06    9:                   OBJECT IDENTIFIER\n            :                     data (1 2 840 113549 1 7 1)\n            :                     (PKCS #7)\n            :                   }\n            :                 }\n            :               }\n2543 30  286:             SEQUENCE {\n2547 06    9:               OBJECT IDENTIFIER\n            :                 countersignature (1 2 840 113549 1 9 6)\n            :                 (PKCS #9 (1 2 840 113549 1 9))\n2558 31  271:               SET {\n2562 30  267:                 SEQUENCE {\n2566 02    1:                   INTEGER 1\n2569 30   38:                   SEQUENCE {\n2571 30   18:                     SEQUENCE {\n2573 31   16:                       SET {\n2575 30   14:                         SEQUENCE {\n2577 06    3:                           OBJECT IDENTIFIER\n            :                             commonName (2 5 4 3)\n            :                             (X.520 id-at (2 5 4))\n2582 13    7:                           PrintableString 'CarlRSA'\n            :                           }\n            :                         }\n            :                       }\n2591 02   16:                     INTEGER\n            :                   46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n            :                   C4 10 B3 B0\n            :                     }\n2609 30    7:                   SEQUENCE {\n2611 06    5:                     OBJECT IDENTIFIER\n            :                       sha1 (1 3 14 3 2 26)\n            :                       (OIW)\n            :                     }\n2618 A0   67:                   [0] {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "2620 30   28:                     SEQUENCE {\n2622 06    9:                       OBJECT IDENTIFIER\n            :                         signingTime\n            :                             (1 2 840 113549 1 9 5)\n            :                         (PKCS #9 (1 2 840 113549 1 9))\n2633 31   15:                       SET {\n2635 17   13:                         UTCTime '030514153900Z'\n            :                         }\n            :                       }\n2650 30   35:                     SEQUENCE {\n2652 06    9:                       OBJECT IDENTIFIER\n            :                         messageDigest\n            :                             (1 2 840 113549 1 9 4)\n            :                         (PKCS #9 (1 2 840 113549 1 9))\n2663 31   22:                       SET {\n2665 04   20:                         OCTET STRING\n            :                   02 5F 49 4E 39 98 50 85 B3 66 D3 8A\n            :                   1F 7B 9E 69 AA FB D8 33\n            :                         }\n            :                       }\n            :                     }\n2687 30   13:                   SEQUENCE {\n2689 06    9:                     OBJECT IDENTIFIER\n            :                       rsaEncryption\n            :                           (1 2 840 113549 1 1 1)\n            :                       (PKCS #1)\n2700 05    0:                     NULL\n            :                     }\n2702 04  128:                   OCTET STRING\n            :                   6D AA 20 24 ED 7A EE A5 5E 87 DD 75\n            :                   1F 2B 54 10 65 F4 CE 9B B1 2C 78 74\n            :                   BC 8B 1C 60 B5 DB 8B 03 9E 49 F2 2B\n            :                   7F 93 6E 3D 89 14 C9 E3 6B F4 F6 7D\n            :                   76 AE 3E 58 1F 9B BB BC 7C 30 19 4E\n            :                   10 F7 02 F1 8B 5B B4 DB 9A BB 93 B4\n            :                   18 D0 CC 2B C9 91 A9 AD D9 46 F8 65\n            :                   A9 E2 71 95 D0 D4 4E 1F CD 74 6F 82\n            :                   E8 37 6F 5A 3D CB C7 D4 5F C2 80 1B\n            :                   DA D3 84 40 68 5F 56 9A 62 F5 3B 0D\n            :                   6C 33 C3 ED 67 3F 43 BF\n            :                   }\n            :                 }\n            :               }\n            :             }\n            :           }\n            :         }\n            :       }\n            :     }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": ": }",
      "zh-CHS": ": }"
    },
    {
      "indent": 0,
      "text": "4.5. All RSA Signed Message",
      "section_title": true,
      "zh-CHS": "4.5. 所有RSA签名消息"
    },
    {
      "indent": 3,
      "text": "Same as 4.2, but includes Carl's RSA root cert (but no CRL). A SignedData with no attribute certificates, signed by Alice using RSA, her certificate and Carl's root cert, no CRL. The message is ExContent, and is included in the eContent. There are no signed or unsigned attributes.",
      "zh-CHS": "与4.2相同，但包括Carl的RSA根证书（但不包括CRL）。无属性证书的SignedData，由Alice使用RSA、她的证书和Carl的根证书（无CRL）签名。该消息内容异常丰富，包含在eContent中。不存在有符号或无符号属性。"
    },
    {
      "indent": 4,
      "text": "  0 30 NDEF: SEQUENCE {\n  2 06    9:   OBJECT IDENTIFIER signedData (1 2 840 113549 1 7 2)\n           :     (PKCS #7)\n 13 A0 NDEF:   [0] {\n 15 30 NDEF:     SEQUENCE {\n 17 02    1:       INTEGER 1\n 20 31   11:       SET {\n 22 30    9:         SEQUENCE {\n 24 06    5:           OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n           :             (OIW)\n 31 05    0:           NULL\n           :           }\n           :         }\n 33 30 NDEF:       SEQUENCE {\n 35 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n           :           (PKCS #7)\n 46 A0 NDEF:         [0] {\n 48 24 NDEF:           OCTET STRING {\n 50 04    4:             OCTET STRING 'This'\n 56 04   24:             OCTET STRING ' is some sample content.'\n           :             }\n           :           }\n           :         }\n 88 A0 NDEF:       [0] {\n 90 30  491:         SEQUENCE {\n 94 30  340:           SEQUENCE {\n 98 A0    3:             [0] {\n100 02    1:               INTEGER 2\n           :               }\n103 02   16:             INTEGER\n           :               46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n           :               9F F2 50 20\n121 30   13:             SEQUENCE {\n123 06    9:               OBJECT IDENTIFIER\n           :                 sha1withRSAEncryption\n           :                     (1 2 840 113549 1 1 5)\n           :                 (PKCS #1)\n134 05    0:               NULL",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :               }\n136 30   18:             SEQUENCE {\n138 31   16:               SET {\n140 30   14:                 SEQUENCE {\n142 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n147 13    7:                   PrintableString 'CarlRSA'\n           :                   }\n           :                 }\n           :               }\n156 30   30:             SEQUENCE {\n158 17   13:               UTCTime '990818070000Z'\n173 17   13:               UTCTime '391231235959Z'\n           :               }\n188 30   18:             SEQUENCE {\n190 31   16:               SET {\n192 30   14:                 SEQUENCE {\n194 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n199 13    7:                   PrintableString 'CarlRSA'\n           :                   }\n           :                 }\n           :               }\n208 30  159:             SEQUENCE {\n211 30   13:               SEQUENCE {\n213 06    9:                 OBJECT IDENTIFIER\n           :                   rsaEncryption (1 2 840 113549 1 1 1)\n           :                   (PKCS #1)\n224 05    0:                 NULL\n           :                 }\n226 03  141:               BIT STRING 0 unused bits, encapsulates {\n230 30  137:                   SEQUENCE {\n233 02  129:                     INTEGER\n           :                   00 E4 4B FF 18 B8 24 57 F4 77 FF 6E\n           :                   73 7B 93 71 5C BC 33 1A 92 92 72 23\n           :                   D8 41 46 D0 CD 11 3A 04 B3 8E AF 82\n           :                   9D BD 51 1E 17 7A F2 76 2C 2B 86 39\n           :                   A7 BD D7 8D 1A 53 EC E4 00 D5 E8 EC\n           :                   A2 36 B1 ED E2 50 E2 32 09 8A 3F 9F\n           :                   99 25 8F B8 4E AB B9 7D D5 96 65 DA\n           :                   16 A0 C5 BE 0E AE 44 5B EF 5E F4 A7\n           :                   29 CB 82 DD AC 44 E9 AA 93 94 29 0E\n           :                   F8 18 D6 C8 57 5E F2 76 C4 F2 11 60\n           :                   38 B9 1B 3C 1D 97 C9 6A F1\n365 02    3:                     INTEGER 65537\n           :                     }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                   }\n           :               }\n370 A3   66:             [3] {\n372 30   64:               SEQUENCE {\n374 30   15:                 SEQUENCE {\n376 06    3:                   OBJECT IDENTIFIER\n           :                     basicConstraints (2 5 29 19)\n           :                     (X.509 id-ce (2 5 29))\n381 01    1:                   BOOLEAN TRUE\n384 04    5:                   OCTET STRING, encapsulates {\n386 30    3:                       SEQUENCE {\n388 01    1:                         BOOLEAN TRUE\n           :                         }\n           :                       }\n           :                   }\n391 30   14:                 SEQUENCE {\n393 06    3:                   OBJECT IDENTIFIER\n           :                     keyUsage (2 5 29 15)\n           :                     (X.509 id-ce (2 5 29))\n398 01    1:                   BOOLEAN TRUE\n401 04    4:                   OCTET STRING, encapsulates {\n403 03    2:                       BIT STRING 1 unused bits\n           :                         '1100001'B\n           :                       }\n           :                   }\n407 30   29:                 SEQUENCE {\n409 06    3:                   OBJECT IDENTIFIER\n           :                     subjectKeyIdentifier (2 5 29 14)\n           :                     (X.509 id-ce (2 5 29))\n414 04   22:                   OCTET STRING, encapsulates {\n416 04   20:                       OCTET STRING\n           :                   E9 E0 90 27 AC 78 20 7A 9A D3 4C F2\n           :                   42 37 4E 22 AE 9E 38 BB\n           :                       }\n           :                   }\n           :                 }\n           :               }\n           :             }\n438 30   13:           SEQUENCE {\n440 06    9:             OBJECT IDENTIFIER\n           :               sha1withRSAEncryption\n           :                   (1 2 840 113549 1 1 5)\n           :               (PKCS #1)\n451 05    0:             NULL\n           :             }\n453 03  129:           BIT STRING 0 unused bits\n           :             B7 9E D4 04 D3 ED 29 E4 FF 89 89 15\n           :             2E 4C DB 0C F0 48 0F 32 61 EE C4 04",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :             EC 12 5D 2D FF 0F 64 59 7E 0A C3 ED\n           :             18 FD E3 56 40 37 A7 07 B5 F0 38 12\n           :             61 50 ED EF DD 3F E3 0B B8 61 A5 A4\n           :             9B 3C E6 9E 9C 54 9A B6 95 D6 DA 6C\n           :             3B B5 2D 45 35 9D 49 01 76 FA B9 B9\n           :             31 F9 F9 6B 12 53 A0 F5 14 60 9B 7D\n           :             CA 3E F2 53 6B B0 37 6F AD E6 74 D7\n           :             DB FA 5A EA 14 41 63 5D CD BE C8 0E\n           :             C1 DA 6A 8D 53 34 18 02\n           :           }\n585 30  556:         SEQUENCE {\n589 30  405:           SEQUENCE {\n593 A0    3:             [0] {\n595 02    1:               INTEGER 2\n           :               }\n598 02   16:             INTEGER\n           :               46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n           :               C4 10 B3 B0\n616 30   13:             SEQUENCE {\n618 06    9:               OBJECT IDENTIFIER\n           :                 sha1withRSAEncryption\n           :                     (1 2 840 113549 1 1 5)\n           :                 (PKCS #1)\n629 05    0:               NULL\n           :               }\n631 30   18:             SEQUENCE {\n633 31   16:               SET {\n635 30   14:                 SEQUENCE {\n637 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n642 13    7:                   PrintableString 'CarlRSA'\n           :                   }\n           :                 }\n           :               }\n651 30   30:             SEQUENCE {\n653 17   13:               UTCTime '990919010847Z'\n668 17   13:               UTCTime '391231235959Z'\n           :               }\n683 30   19:             SEQUENCE {\n685 31   17:               SET {\n687 30   15:                 SEQUENCE {\n689 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n694 13    8:                   PrintableString 'AliceRSA'\n           :                   }\n           :                 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :               }\n704 30  159:             SEQUENCE {\n707 30   13:               SEQUENCE {\n709 06    9:                 OBJECT IDENTIFIER\n           :                   rsaEncryption (1 2 840 113549 1 1 1)\n           :                   (PKCS #1)\n720 05    0:                 NULL\n           :                 }\n722 03  141:               BIT STRING 0 unused bits, encapsulates {\n726 30  137:                   SEQUENCE {\n729 02  129:                     INTEGER\n           :                   00 E0 89 73 39 8D D8 F5 F5 E8 87 76\n           :                   39 7F 4E B0 05 BB 53 83 DE 0F B7 AB\n           :                   DC 7D C7 75 29 0D 05 2E 6D 12 DF A6\n           :                   86 26 D4 D2 6F AA 58 29 FC 97 EC FA\n           :                   82 51 0F 30 80 BE B1 50 9E 46 44 F1\n           :                   2C BB D8 32 CF C6 68 6F 07 D9 B0 60\n           :                   AC BE EE 34 09 6A 13 F5 F7 05 05 93\n           :                   DF 5E BA 35 56 D9 61 FF 19 7F C9 81\n           :                   E6 F8 6C EA 87 40 70 EF AC 6D 2C 74\n           :                   9F 2D FA 55 3A B9 99 77 02 A6 48 52\n           :                   8C 4E F3 57 38 57 74 57 5F\n861 02    3:                     INTEGER 65537\n           :                     }\n           :                   }\n           :               }\n866 A3  129:             [3] {\n869 30  127:               SEQUENCE {\n871 30   12:                 SEQUENCE {\n873 06    3:                   OBJECT IDENTIFIER\n           :                     basicConstraints (2 5 29 19)\n           :                     (X.509 id-ce (2 5 29))\n878 01    1:                   BOOLEAN TRUE\n881 04    2:                   OCTET STRING, encapsulates {\n883 30    0:                       SEQUENCE {}\n           :                       }\n           :                   }\n885 30   14:                 SEQUENCE {\n887 06    3:                   OBJECT IDENTIFIER\n           :                     keyUsage (2 5 29 15)\n           :                     (X.509 id-ce (2 5 29))\n892 01    1:                   BOOLEAN TRUE\n895 04    4:                   OCTET STRING, encapsulates {\n897 03    2:                       BIT STRING 6 unused bits\n           :                         '11'B\n           :                       }\n           :                   }\n901 30   31:                 SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": " 903 06    3:                   OBJECT IDENTIFIER\n            :                     authorityKeyIdentifier (2 5 29 35)\n            :                     (X.509 id-ce (2 5 29))\n 908 04   24:                   OCTET STRING, encapsulates {\n 910 30   22:                       SEQUENCE {\n 912 80   20:                         [0]\n            :                   E9 E0 90 27 AC 78 20 7A 9A D3 4C F2\n            :                   42 37 4E 22 AE 9E 38 BB\n            :                         }\n            :                       }\n            :                   }\n 934 30   29:                 SEQUENCE {\n 936 06    3:                   OBJECT IDENTIFIER\n            :                     subjectKeyIdentifier (2 5 29 14)\n            :                     (X.509 id-ce (2 5 29))\n 941 04   22:                   OCTET STRING, encapsulates {\n 943 04   20:                       OCTET STRING\n            :                   77 D2 B4 D1 B7 4C 8A 8A A3 CE 45 9D\n            :                   CE EC 3C A0 3A E3 FF 50\n            :                       }\n            :                   }\n 965 30   31:                 SEQUENCE {\n 967 06    3:                   OBJECT IDENTIFIER\n            :                     subjectAltName (2 5 29 17)\n            :                     (X.509 id-ce (2 5 29))\n 972 04   24:                   OCTET STRING, encapsulates {\n 974 30   22:                       SEQUENCE {\n 976 81   20:                         [1] 'AliceRSA@example.com'\n            :                         }\n            :                       }\n            :                   }\n            :                 }\n            :               }\n            :             }\n 998 30   13:           SEQUENCE {\n1000 06    9:             OBJECT IDENTIFIER\n            :               sha1withRSAEncryption\n            :                   (1 2 840 113549 1 1 5)\n            :               (PKCS #1)\n1011 05    0:             NULL\n            :             }\n1013 03  129:           BIT STRING 0 unused bits\n            :             3E 70 47 A8 48 CC 13 58 8F CA 51 71\n            :             6B 4E 36 18 5D 04 7E 80 B1 8D 4D CC\n            :             CA A3 8F CC 7D 56 C8 BC CF 6E B3 1C\n            :             59 A9 20 AA 05 81 A8 4E 25 AD A7 70\n            :             14 75 2F F5 C7 9B D1 0E E9 63 D2 64\n            :             B7 C6 66 6E 73 21 54 DF F4 BA 25 5D",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "            :             7D 49 D3 94 6B 22 36 74 73 B8 4A EC\n            :             2F 64 ED D3 3D D2 A7 42 C5 E8 37 8A\n            :             B4 DB 9F 67 E4 BD 9F F9 FE 74 EF EA\n            :             F9 EE 63 6A D8 3F 4B 25 09 B5 D8 1A\n            :             76 AE EB 9B DB 49 B0 22\n            :           }\n            :         }\n1147 31  203:       SET {\n1150 30  200:         SEQUENCE {\n1153 02    1:           INTEGER 1\n1156 30   38:           SEQUENCE {\n1158 30   18:             SEQUENCE {\n1160 31   16:               SET {\n1162 30   14:                 SEQUENCE {\n1164 06    3:                   OBJECT IDENTIFIER\n            :                     commonName (2 5 4 3)\n            :                     (X.520 id-at (2 5 4))\n1169 13    7:                   PrintableString 'CarlRSA'\n            :                   }\n            :                 }\n            :               }\n1178 02   16:             INTEGER\n            :               46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n            :               C4 10 B3 B0\n            :             }\n1196 30    9:           SEQUENCE {\n1198 06    5:             OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n            :               (OIW)\n1205 05    0:             NULL\n            :             }\n1207 30   13:           SEQUENCE {\n1209 06    9:             OBJECT IDENTIFIER\n            :               rsaEncryption (1 2 840 113549 1 1 1)\n            :               (PKCS #1)\n1220 05    0:             NULL\n            :             }\n1222 04  128:           OCTET STRING\n            :             2F 23 82 D2 F3 09 5F B8 0C 58 EB 4E\n            :             9D BF 89 9A 81 E5 75 C4 91 3D D3 D0\n            :             D5 7B B6 D5 FE 94 A1 8A AC E3 C4 84\n            :             F5 CD 60 4E 27 95 F6 CF 00 86 76 75\n            :             3F 2B F0 E7 D4 02 67 A7 F5 C7 8D 16\n            :             04 A5 B3 B5 E7 D9 32 F0 24 EF E7 20\n            :             44 D5 9F 07 C5 53 24 FA CE 01 1D 0F\n            :             17 13 A7 2A 95 9D 2B E4 03 95 14 0B\n            :             E9 39 0D BA CE 6E 9C 9E 0C E8 98 E6\n            :             55 13 D4 68 6F D0 07 D7 A2 B1 62 4C\n            :             E3 8F AF FD E0 D5 5D C7",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": ":           }\n:         }\n:       }\n:     }\n:   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "4.6. Multiple Signers",
      "section_title": true,
      "zh-CHS": "4.6. 多个签名者"
    },
    {
      "indent": 3,
      "text": "Similar to 4.1, but the message is also signed by Diane. Two signerInfos (one for Alice, one for Diane) with no attribute certificates, each signed using DSS, Alice's and Diane's certificate (not Carl's root cert), no CRL. The message is ExContent, and is included in the eContent. There are no signed or unsigned attributes.",
      "zh-CHS": "与4.1类似，但消息也由Diane签名。两个signerInfos（一个用于Alice，一个用于Diane），没有属性证书，每个都使用DSS、Alice和Diane的证书（不是Carl的根证书）签名，没有CRL。该消息内容异常丰富，包含在eContent中。不存在有符号或无符号属性。"
    },
    {
      "indent": 4,
      "text": "  0 30 1463: SEQUENCE {\n  4 06    9:   OBJECT IDENTIFIER signedData (1 2 840 113549 1 7 2)\n           :     (PKCS #7)\n 15 A0 1448:   [0] {\n 19 30 1444:     SEQUENCE {\n 23 02    1:       INTEGER 1\n 26 31    9:       SET {\n 28 30    7:         SEQUENCE {\n 30 06    5:           OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n           :             (OIW)\n           :           }\n           :         }\n 37 30   43:       SEQUENCE {\n 39 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n           :           (PKCS #7)\n 50 A0   30:         [0] {\n 52 04   28:           OCTET STRING 'This is some sample content.'\n           :           }\n           :         }\n 82 A0 1180:       [0] {\n 86 30  440:         SEQUENCE {\n 90 30  375:           SEQUENCE {\n 94 A0    3:             [0] {\n 96 02    1:               INTEGER 2\n           :               }\n 99 02    2:             INTEGER 210\n103 30    9:             SEQUENCE {\n105 06    7:               OBJECT IDENTIFIER\n           :                 dsaWithSha1 (1 2 840 10040 4 3)\n           :                 (ANSI X9.57 algorithm)\n           :               }\n114 30   18:             SEQUENCE {\n116 31   16:               SET {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "118 30   14:                 SEQUENCE {\n120 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n125 13    7:                   PrintableString 'CarlDSS'\n           :                   }\n           :                 }\n           :               }\n134 30   30:             SEQUENCE {\n136 17   13:               UTCTime '990817020810Z'\n151 17   13:               UTCTime '391231235959Z'\n           :               }\n166 30   19:             SEQUENCE {\n168 31   17:               SET {\n170 30   15:                 SEQUENCE {\n172 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n177 13    8:                   PrintableString 'DianeDSS'\n           :                   }\n           :                 }\n           :               }\n187 30  147:             SEQUENCE {\n190 30    9:               SEQUENCE {\n192 06    7:                 OBJECT IDENTIFIER\n           :                   dsa (1 2 840 10040 4 1)\n           :                   (ANSI X9.57 algorithm)\n           :                 }\n201 03  133:               BIT STRING 0 unused bits, encapsulates {\n205 02  129:                   INTEGER\n           :                   00 A0 00 17 78 2C EE 7E 81 53 2E 2E\n           :                   61 08 0F A1 9B 51 52 1A DA 59 A8 73\n           :                   2F 12 25 B6 08 CB CA EF 2A 44 76 8A\n           :                   52 09 EA BD 05 22 D5 0F F6 FD 46 D7\n           :                   AF 99 38 09 0E 13 CB 4F 2C DD 1C 34\n           :                   F7 1C BF 25 FF 23 D3 3B 59 E7 82 97\n           :                   37 BE 31 24 D8 18 C8 F3 49 39 5B B7\n           :                   E2 E5 27 7E FC 8C 45 72 5B 7E 3E 8F\n           :                   68 4D DD 46 7A 22 BE 8E FF CC DA 39\n           :                   29 A3 39 E5 9F 43 E9 55 C9 D7 5B A6\n           :                   81 67 CC C0 AA CD 2E C5 23\n           :                   }\n           :               }\n337 A3  129:             [3] {\n340 30  127:               SEQUENCE {\n342 30   12:                 SEQUENCE {\n344 06    3:                   OBJECT IDENTIFIER\n           :                     basicConstraints (2 5 29 19)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                     (X.509 id-ce (2 5 29))\n349 01    1:                   BOOLEAN TRUE\n352 04    2:                   OCTET STRING, encapsulates {\n354 30    0:                       SEQUENCE {}\n           :                       }\n           :                   }\n356 30   14:                 SEQUENCE {\n358 06    3:                   OBJECT IDENTIFIER\n           :                     keyUsage (2 5 29 15)\n           :                     (X.509 id-ce (2 5 29))\n363 01    1:                   BOOLEAN TRUE\n366 04    4:                   OCTET STRING, encapsulates {\n368 03    2:                       BIT STRING 6 unused bits\n           :                         '11'B\n           :                       }\n           :                   }\n372 30   31:                 SEQUENCE {\n374 06    3:                   OBJECT IDENTIFIER\n           :                     authorityKeyIdentifier (2 5 29 35)\n           :                     (X.509 id-ce (2 5 29))\n379 04   24:                   OCTET STRING, encapsulates {\n381 30   22:                       SEQUENCE {\n383 80   20:                         [0]\n           :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n           :                   3D 20 BC 43 2B 93 F1 1F\n           :                         }\n           :                       }\n           :                   }\n405 30   29:                 SEQUENCE {\n407 06    3:                   OBJECT IDENTIFIER\n           :                     subjectKeyIdentifier (2 5 29 14)\n           :                     (X.509 id-ce (2 5 29))\n412 04   22:                   OCTET STRING, encapsulates {\n414 04   20:                       OCTET STRING\n           :                   64 30 99 7D 5C DC 45 0B 99 3A 52 2F\n           :                   16 BF 58 50 DD CE 2B 18\n           :                       }\n           :                   }\n436 30   31:                 SEQUENCE {\n438 06    3:                   OBJECT IDENTIFIER\n           :                     subjectAltName (2 5 29 17)\n           :                     (X.509 id-ce (2 5 29))\n443 04   24:                   OCTET STRING, encapsulates {\n445 30   22:                       SEQUENCE {\n447 81   20:                         [1] 'DianeDSS@example.com'\n           :                         }\n           :                       }\n           :                   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                 }\n           :               }\n           :             }\n469 30    9:           SEQUENCE {\n471 06    7:             OBJECT IDENTIFIER\n           :               dsaWithSha1 (1 2 840 10040 4 3)\n           :               (ANSI X9.57 algorithm)\n           :             }\n480 03   48:           BIT STRING 0 unused bits, encapsulates {\n483 30   45:               SEQUENCE {\n485 02   21:                 INTEGER\n           :                   00 A1 1A F8 17 0E 3E 5D A8 8C F4 B6\n           :                   55 33 1E 4B E3 2C AC B9 5F\n508 02   20:                 INTEGER\n           :                   28 4B 10 45 58 D2 1C 9D 55 35 14 18\n           :                   91 B2 3F 39 DF B5 6E D3\n           :                 }\n           :               }\n           :           }\n530 30  732:         SEQUENCE {\n534 30  667:           SEQUENCE {\n538 A0    3:             [0] {\n540 02    1:               INTEGER 2\n           :               }\n543 02    2:             INTEGER 200\n547 30    9:             SEQUENCE {\n549 06    7:               OBJECT IDENTIFIER\n           :                 dsaWithSha1 (1 2 840 10040 4 3)\n           :                 (ANSI X9.57 algorithm)\n           :               }\n558 30   18:             SEQUENCE {\n560 31   16:               SET {\n562 30   14:                 SEQUENCE {\n564 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n569 13    7:                   PrintableString 'CarlDSS'\n           :                   }\n           :                 }\n           :               }\n578 30   30:             SEQUENCE {\n580 17   13:               UTCTime '990817011049Z'\n595 17   13:               UTCTime '391231235959Z'\n           :               }\n610 30   19:             SEQUENCE {\n612 31   17:               SET {\n614 30   15:                 SEQUENCE {\n616 06    3:                   OBJECT IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n621 13    8:                   PrintableString 'AliceDSS'\n           :                   }\n           :                 }\n           :               }\n631 30  438:             SEQUENCE {\n635 30  299:               SEQUENCE {\n639 06    7:                 OBJECT IDENTIFIER\n           :                   dsa (1 2 840 10040 4 1)\n           :                   (ANSI X9.57 algorithm)\n648 30  286:                 SEQUENCE {\n652 02  129:                   INTEGER\n           :                   00 81 8D CD ED 83 EA 0A 9E 39 3E C2\n           :                   48 28 A3 E4 47 93 DD 0E D7 A8 0E EC\n           :                   53 C5 AB 84 08 4F FF 94 E1 73 48 7E\n           :                   0C D6 F3 44 48 D1 FE 9F AF A4 A1 89\n           :                   2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C\n           :                   DC 5F 69 8A E4 75 D0 37 0C 91 08 95\n           :                   9B DE A7 5E F9 FC F4 9F 2F DD 43 A8\n           :                   8B 54 F1 3F B0 07 08 47 4D 5D 88 C3\n           :                   C3 B5 B3 E3 55 08 75 D5 39 76 10 C4\n           :                   78 BD FF 9D B0 84 97 37 F2 E4 51 1B\n           :                   B5 E4 09 96 5C F3 7E 5B DB\n784 02   21:                   INTEGER\n           :                   00 E2 47 A6 1A 45 66 B8 13 C6 DA 8F\n           :                   B8 37 21 2B 62 8B F7 93 CD\n807 02  128:                   INTEGER\n           :                   26 38 D0 14 89 32 AA 39 FB 3E 6D D9\n           :                   4B 59 6A 4C 76 23 39 04 02 35 5C F2\n           :                   CB 1A 30 C3 1E 50 5D DD 9B 59 E2 CD\n           :                   AA 05 3D 58 C0 7B A2 36 B8 6E 07 AF\n           :                   7D 8A 42 25 A7 F4 75 CF 4A 08 5E 4B\n           :                   3E 90 F8 6D EA 9C C9 21 8A 3B 76 14\n           :                   E9 CE 2E 5D A3 07 CD 23 85 B8 2F 30\n           :                   01 7C 6D 49 89 11 89 36 44 BD F8 C8\n           :                   95 4A 53 56 B5 E2 F9 73 EC 1A 61 36\n           :                   1F 11 7F C2 BD ED D1 50 FF 98 74 C2\n           :                   D1 81 4A 60 39 BA 36 39\n           :                   }\n           :                 }\n938 03  132:               BIT STRING 0 unused bits, encapsulates {\n942 02  128:                   INTEGER\n           :                   5C E3 B9 5A 75 14 96 0B A9 7A DD E3\n           :                   3F A9 EC AC 5E DC BD B7 13 11 34 A6\n           :                   16 89 28 11 23 D9 34 86 67 75 75 13\n           :                   12 3D 43 5B 6F E5 51 BF FA 89 F2 A2\n           :                   1B 3E 24 7D 3D 07 8D 5B 63 C8 BB 45",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "            :                   A5 A0 4A E3 85 D6 CE 06 80 3F E8 23\n            :                   7E 1A F2 24 AB 53 1A B8 27 0D 1E EF\n            :                   08 BF 66 14 80 5C 62 AC 65 FA 15 8B\n            :                   F1 BB 34 D4 D2 96 37 F6 61 47 B2 C4\n            :                   32 84 F0 7E 41 40 FD 46 A7 63 4E 33\n            :                   F2 A5 E2 F4 F2 83 E5 B8\n            :                   }\n            :               }\n1073 A3  129:             [3] {\n1076 30  127:               SEQUENCE {\n1078 30   12:                 SEQUENCE {\n1080 06    3:                   OBJECT IDENTIFIER\n            :                     basicConstraints (2 5 29 19)\n            :                     (X.509 id-ce (2 5 29))\n1085 01    1:                   BOOLEAN TRUE\n1088 04    2:                   OCTET STRING, encapsulates {\n1090 30    0:                       SEQUENCE {}\n            :                       }\n            :                   }\n1092 30   14:                 SEQUENCE {\n1094 06    3:                   OBJECT IDENTIFIER\n            :                     keyUsage (2 5 29 15)\n            :                     (X.509 id-ce (2 5 29))\n1099 01    1:                   BOOLEAN TRUE\n1102 04    4:                   OCTET STRING, encapsulates {\n1104 03    2:                       BIT STRING 6 unused bits\n            :                         '11'B\n            :                       }\n            :                   }\n1108 30   31:                 SEQUENCE {\n1110 06    3:                   OBJECT IDENTIFIER\n            :                     authorityKeyIdentifier (2 5 29 35)\n            :                     (X.509 id-ce (2 5 29))\n1115 04   24:                   OCTET STRING, encapsulates {\n1117 30   22:                       SEQUENCE {\n1119 80   20:                         [0]\n            :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n            :                   3D 20 BC 43 2B 93 F1 1F\n            :                         }\n            :                       }\n            :                   }\n1141 30   29:                 SEQUENCE {\n1143 06    3:                   OBJECT IDENTIFIER\n            :                     subjectKeyIdentifier (2 5 29 14)\n            :                     (X.509 id-ce (2 5 29))\n1148 04   22:                   OCTET STRING, encapsulates {\n1150 04   20:                       OCTET STRING\n            :                   BE 6C A1 B3 E3 C1 F7 ED 43 70 A4 CE",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "            :                   13 01 E2 FD E3 97 FE CD\n            :                       }\n            :                   }\n1172 30   31:                 SEQUENCE {\n1174 06    3:                   OBJECT IDENTIFIER\n            :                     subjectAltName (2 5 29 17)\n            :                     (X.509 id-ce (2 5 29))\n1179 04   24:                   OCTET STRING, encapsulates {\n1181 30   22:                       SEQUENCE {\n1183 81   20:                         [1] 'AliceDSS@example.com'\n            :                         }\n            :                       }\n            :                   }\n            :                 }\n            :               }\n            :             }\n1205 30    9:           SEQUENCE {\n1207 06    7:             OBJECT IDENTIFIER\n            :               dsaWithSha1 (1 2 840 10040 4 3)\n            :               (ANSI X9.57 algorithm)\n            :             }\n1216 03   48:           BIT STRING 0 unused bits, encapsulates {\n1219 30   45:               SEQUENCE {\n1221 02   20:                 INTEGER\n            :                   55 0C A4 19 1F 42 2B 89 71 22 33 8D\n            :                   83 6A B5 3D 67 6B BF 45\n1243 02   21:                 INTEGER\n            :                   00 9F 61 53 52 54 0B 5C B2 DD DA E7\n            :                   76 1D E2 10 52 5B 43 5E BD\n            :                 }\n            :               }\n            :           }\n            :         }\n1266 31  198:       SET {\n1269 30   97:         SEQUENCE {\n1271 02    1:           INTEGER 1\n1274 30   24:           SEQUENCE {\n1276 30   18:             SEQUENCE {\n1278 31   16:               SET {\n1280 30   14:                 SEQUENCE {\n1282 06    3:                   OBJECT IDENTIFIER\n            :                     commonName (2 5 4 3)\n            :                     (X.520 id-at (2 5 4))\n1287 13    7:                   PrintableString 'CarlDSS'\n            :                   }\n            :                 }\n            :               }\n1296 02    2:             INTEGER 200",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "            :             }\n1300 30    7:           SEQUENCE {\n1302 06    5:             OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n            :               (OIW)\n            :             }\n1309 30    9:           SEQUENCE {\n1311 06    7:             OBJECT IDENTIFIER\n            :               dsaWithSha1 (1 2 840 10040 4 3)\n            :               (ANSI X9.57 algorithm)\n            :             }\n1320 04   46:           OCTET STRING, encapsulates {\n1322 30   44:               SEQUENCE {\n1324 02   20:                 INTEGER\n            :                   48 24 DE 8B 85 F2 16 AF EC 82 61 A9\n            :                   54 D0 2D 04 A1 CC 5A 4F\n1346 02   20:                 INTEGER\n            :                   17 ED D5 77 02 EE 75 13 D8 10 BD 3D\n            :                   97 17 20 88 BB FD 7B 81\n            :                 }\n            :               }\n            :           }\n1368 30   97:         SEQUENCE {\n1370 02    1:           INTEGER 1\n1373 30   24:           SEQUENCE {\n1375 30   18:             SEQUENCE {\n1377 31   16:               SET {\n1379 30   14:                 SEQUENCE {\n1381 06    3:                   OBJECT IDENTIFIER\n            :                     commonName (2 5 4 3)\n            :                     (X.520 id-at (2 5 4))\n1386 13    7:                   PrintableString 'CarlDSS'\n            :                   }\n            :                 }\n            :               }\n1395 02    2:             INTEGER 210\n            :             }\n1399 30    7:           SEQUENCE {\n1401 06    5:             OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n            :               (OIW)\n            :             }\n1408 30    9:           SEQUENCE {\n1410 06    7:             OBJECT IDENTIFIER\n            :               dsaWithSha1 (1 2 840 10040 4 3)\n            :               (ANSI X9.57 algorithm)\n            :             }\n1419 04   46:           OCTET STRING, encapsulates {\n1421 30   44:               SEQUENCE {\n1423 02   20:                 INTEGER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "            :                   15 FF 81 4D 8C AD 80 4E 9B 35 58 04\n            :                   37 6E 63 6E E9 5B 83 FA\n1445 02   20:                 INTEGER\n            :                   06 7E 58 4E 2B 31 84 41 ED 49 79 38\n            :                   3E 77 D2 A6 8C 75 08 21\n            :                 }\n            :               }\n            :           }\n            :         }\n            :       }\n            :     }\n            :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "4.7. Signing Using SKI",
      "section_title": true,
      "zh-CHS": "4.7. 使用滑雪板签名"
    },
    {
      "indent": 3,
      "text": "Same as 4.1, but the signature uses the SKI instead of the issuer/serial number in the cert. A SignedData with no attribute certificates, signed by Alice using DSS, just her certificate (not Carl's root cert), identified by the SKI, no CRL. The message is ExContent, and is included in the eContent. There are no signed or unsigned attributes.",
      "zh-CHS": "与4.1相同，但签名使用SKI而不是证书中的颁发者/序列号。无属性证书的签名数据，由Alice使用DSS签名，只有她的证书（不是Carl的根证书），由SKI标识，无CRL。该消息内容异常丰富，包含在eContent中。不存在有符号或无符号属性。"
    },
    {
      "indent": 5,
      "text": " 0 30  915: SEQUENCE {\n 4 06    9:   OBJECT IDENTIFIER signedData (1 2 840 113549 1 7 2)\n          :     (PKCS #7)\n15 A0  900:   [0] {\n19 30  896:     SEQUENCE {\n23 02    1:       INTEGER 3\n26 31    9:       SET {\n28 30    7:         SEQUENCE {\n30 06    5:           OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n          :             (OIW)\n          :           }\n          :         }\n37 30   43:       SEQUENCE {\n39 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n          :           (PKCS #7)\n50 A0   30:         [0] {\n52 04   28:           OCTET STRING 'This is some sample content.'\n          :           }\n          :         }\n82 A0  736:       [0] {\n86 30  732:         SEQUENCE {\n90 30  667:           SEQUENCE {\n94 A0    3:             [0] {\n96 02    1:               INTEGER 2\n          :               }\n99 02    2:             INTEGER 200",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "103 30    9:             SEQUENCE {\n105 06    7:               OBJECT IDENTIFIER\n           :                 dsaWithSha1 (1 2 840 10040 4 3)\n           :                 (ANSI X9.57 algorithm)\n           :               }\n114 30   18:             SEQUENCE {\n116 31   16:               SET {\n118 30   14:                 SEQUENCE {\n120 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n125 13    7:                   PrintableString 'CarlDSS'\n           :                   }\n           :                 }\n           :               }\n134 30   30:             SEQUENCE {\n136 17   13:               UTCTime '990817011049Z'\n151 17   13:               UTCTime '391231235959Z'\n           :               }\n166 30   19:             SEQUENCE {\n168 31   17:               SET {\n170 30   15:                 SEQUENCE {\n172 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n177 13    8:                   PrintableString 'AliceDSS'\n           :                   }\n           :                 }\n           :               }\n187 30  438:             SEQUENCE {\n191 30  299:               SEQUENCE {\n195 06    7:                 OBJECT IDENTIFIER\n           :                   dsa (1 2 840 10040 4 1)\n           :                   (ANSI X9.57 algorithm)\n204 30  286:                 SEQUENCE {\n208 02  129:                   INTEGER\n           :                   00 81 8D CD ED 83 EA 0A 9E 39 3E C2\n           :                   48 28 A3 E4 47 93 DD 0E D7 A8 0E EC\n           :                   53 C5 AB 84 08 4F FF 94 E1 73 48 7E\n           :                   0C D6 F3 44 48 D1 FE 9F AF A4 A1 89\n           :                   2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C\n           :                   DC 5F 69 8A E4 75 D0 37 0C 91 08 95\n           :                   9B DE A7 5E F9 FC F4 9F 2F DD 43 A8\n           :                   8B 54 F1 3F B0 07 08 47 4D 5D 88 C3\n           :                   C3 B5 B3 E3 55 08 75 D5 39 76 10 C4\n           :                   78 BD FF 9D B0 84 97 37 F2 E4 51 1B\n           :                   B5 E4 09 96 5C F3 7E 5B DB\n340 02   21:                   INTEGER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                   00 E2 47 A6 1A 45 66 B8 13 C6 DA 8F\n           :                   B8 37 21 2B 62 8B F7 93 CD\n363 02  128:                   INTEGER\n           :                   26 38 D0 14 89 32 AA 39 FB 3E 6D D9\n           :                   4B 59 6A 4C 76 23 39 04 02 35 5C F2\n           :                   CB 1A 30 C3 1E 50 5D DD 9B 59 E2 CD\n           :                   AA 05 3D 58 C0 7B A2 36 B8 6E 07 AF\n           :                   7D 8A 42 25 A7 F4 75 CF 4A 08 5E 4B\n           :                   3E 90 F8 6D EA 9C C9 21 8A 3B 76 14\n           :                   E9 CE 2E 5D A3 07 CD 23 85 B8 2F 30\n           :                   01 7C 6D 49 89 11 89 36 44 BD F8 C8\n           :                   95 4A 53 56 B5 E2 F9 73 EC 1A 61 36\n           :                   1F 11 7F C2 BD ED D1 50 FF 98 74 C2\n           :                   D1 81 4A 60 39 BA 36 39\n           :                   }\n           :                 }\n494 03  132:               BIT STRING 0 unused bits, encapsulates {\n498 02  128:                   INTEGER\n           :                   5C E3 B9 5A 75 14 96 0B A9 7A DD E3\n           :                   3F A9 EC AC 5E DC BD B7 13 11 34 A6\n           :                   16 89 28 11 23 D9 34 86 67 75 75 13\n           :                   12 3D 43 5B 6F E5 51 BF FA 89 F2 A2\n           :                   1B 3E 24 7D 3D 07 8D 5B 63 C8 BB 45\n           :                   A5 A0 4A E3 85 D6 CE 06 80 3F E8 23\n           :                   7E 1A F2 24 AB 53 1A B8 27 0D 1E EF\n           :                   08 BF 66 14 80 5C 62 AC 65 FA 15 8B\n           :                   F1 BB 34 D4 D2 96 37 F6 61 47 B2 C4\n           :                   32 84 F0 7E 41 40 FD 46 A7 63 4E 33\n           :                   F2 A5 E2 F4 F2 83 E5 B8\n           :                   }\n           :               }\n629 A3  129:             [3] {\n632 30  127:               SEQUENCE {\n634 30   12:                 SEQUENCE {\n636 06    3:                   OBJECT IDENTIFIER\n           :                     basicConstraints (2 5 29 19)\n           :                     (X.509 id-ce (2 5 29))\n641 01    1:                   BOOLEAN TRUE\n644 04    2:                   OCTET STRING, encapsulates {\n646 30    0:                       SEQUENCE {}\n           :                       }\n           :                   }\n648 30   14:                 SEQUENCE {\n650 06    3:                   OBJECT IDENTIFIER\n           :                     keyUsage (2 5 29 15)\n           :                     (X.509 id-ce (2 5 29))\n655 01    1:                   BOOLEAN TRUE\n658 04    4:                   OCTET STRING, encapsulates {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "660 03    2:                       BIT STRING 6 unused bits\n           :                         '11'B\n           :                       }\n           :                   }\n664 30   31:                 SEQUENCE {\n666 06    3:                   OBJECT IDENTIFIER\n           :                     authorityKeyIdentifier (2 5 29 35)\n           :                     (X.509 id-ce (2 5 29))\n671 04   24:                   OCTET STRING, encapsulates {\n673 30   22:                       SEQUENCE {\n675 80   20:                         [0]\n           :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n           :                   3D 20 BC 43 2B 93 F1 1F\n           :                         }\n           :                       }\n           :                   }\n697 30   29:                 SEQUENCE {\n699 06    3:                   OBJECT IDENTIFIER\n           :                     subjectKeyIdentifier (2 5 29 14)\n           :                     (X.509 id-ce (2 5 29))\n704 04   22:                   OCTET STRING, encapsulates {\n706 04   20:                       OCTET STRING\n           :                   BE 6C A1 B3 E3 C1 F7 ED 43 70 A4 CE\n           :                   13 01 E2 FD E3 97 FE CD\n           :                       }\n           :                   }\n728 30   31:                 SEQUENCE {\n730 06    3:                   OBJECT IDENTIFIER\n           :                     subjectAltName (2 5 29 17)\n           :                     (X.509 id-ce (2 5 29))\n735 04   24:                   OCTET STRING, encapsulates {\n737 30   22:                       SEQUENCE {\n739 81   20:                         [1] 'AliceDSS@example.com'\n           :                         }\n           :                       }\n           :                   }\n           :                 }\n           :               }\n           :             }\n761 30    9:           SEQUENCE {\n763 06    7:             OBJECT IDENTIFIER\n           :               dsaWithSha1 (1 2 840 10040 4 3)\n           :               (ANSI X9.57 algorithm)\n           :             }\n772 03   48:           BIT STRING 0 unused bits, encapsulates {\n775 30   45:               SEQUENCE {\n777 02   20:                 INTEGER\n           :                   55 0C A4 19 1F 42 2B 89 71 22 33 8D",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :                   83 6A B5 3D 67 6B BF 45\n799 02   21:                 INTEGER\n           :                   00 9F 61 53 52 54 0B 5C B2 DD DA E7\n           :                   76 1D E2 10 52 5B 43 5E BD\n           :                 }\n           :               }\n           :           }\n           :         }\n822 31   95:       SET {\n824 30   93:         SEQUENCE {\n826 02    1:           INTEGER 3\n829 80   20:           [0]\n           :             BE 6C A1 B3 E3 C1 F7 ED 43 70 A4 CE\n           :             13 01 E2 FD E3 97 FE CD\n851 30    7:           SEQUENCE {\n853 06    5:             OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n           :               (OIW)\n           :             }\n860 30    9:           SEQUENCE {\n862 06    7:             OBJECT IDENTIFIER dsa (1 2 840 10040 4 1)\n           :               (ANSI X9.57 algorithm)\n           :             }\n871 04   46:           OCTET STRING, encapsulates {\n873 30   44:               SEQUENCE {\n875 02   20:                 INTEGER\n           :                   6D 8E 5A CD 28 A0 1F D9 86 AD 7A E9\n           :                   DF AC D7 BE EC BE 3F F8\n897 02   20:                 INTEGER\n           :                   7C 8A 06 1E FC A4 41 35 7E F7 24 14\n           :                   FD 3D C0 56 B7 05 27 D5\n           :                 }\n           :               }\n           :           }\n           :         }\n           :       }\n           :     }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "4.8. S/MIME multipart/signed Message",
      "section_title": true,
      "zh-CHS": "4.8. S/MIME多部分/签名消息"
    },
    {
      "indent": 3,
      "text": "A full S/MIME message, including MIME, that includes the body part from 4.3 and the body containing the content of the message.",
      "zh-CHS": "完整的S/MIME消息，包括MIME，其中包括4.3中的正文部分和包含消息内容的正文。"
    },
    {
      "indent": 0,
      "text": "MIME-Version: 1.0\nTo: User2@examples.com\nFrom: aliceDss@examples.com\nSubject: Example 4.8\nMessage-Id: <020906002550300.249@examples.com>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Date: Fri, 06 Sep 2002 00:25:21 -0300\nContent-Type: multipart/signed;\n    micalg=SHA1;\n    boundary=\"----=_NextBoundry____Fri,_06_Sep_2002_00:25:21\";\n    protocol=\"application/pkcs7-signature\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "This is a multi-part message in MIME format.",
      "zh-CHS": "这是MIME格式的多部分消息。"
    },
    {
      "indent": 0,
      "text": "------=_NextBoundry____Fri,_06_Sep_2002_00:25:21",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "This is some sample content.\n------=_NextBoundry____Fri,_06_Sep_2002_00:25:21\nContent-Type: application/pkcs7-signature; name=smime.p7s\nContent-Transfer-Encoding: base64\nContent-Disposition: attachment; filename=smime.p7s",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "MIIDdwYJKoZIhvcNAQcCoIIDaDCCA2QCAQExCTAHBgUrDgMCGjALBgkqhkiG9w0BBwGgggL\ngMIIC3DCCApugAwIBAgICAMgwCQYHKoZIzjgEAzASMRAwDgYDVQQDEwdDYXJsRFNTMB4XDT\nk5MDgxNzAxMTA0OVoXDTM5MTIzMTIzNTk1OVowEzERMA8GA1UEAxMIQWxpY2VEU1MwggG2M\nIIBKwYHKoZIzjgEATCCAR4CgYEAgY3N7YPqCp45PsJIKKPkR5PdDteoDuxTxauECE//lOFz\nSH4M1vNESNH+n6+koYkv4dkwyDbeP5u/t0zcX2mK5HXQNwyRCJWb3qde+fz0ny/dQ6iLVPE\n/sAcIR01diMPDtbPjVQh11Tl2EMR4vf+dsISXN/LkURu15AmWXPN+W9sCFQDiR6YaRWa4E8\nbaj7g3IStii/eTzQKBgCY40BSJMqo5+z5t2UtZakx2IzkEAjVc8ssaMMMeUF3dm1nizaoFP\nVjAe6I2uG4Hr32KQiWn9HXPSgheSz6Q+G3qnMkhijt2FOnOLl2jB80jhbgvMAF8bUmJEYk2\nRL34yJVKU1a14vlz7BphNh8Rf8K97dFQ/5h0wtGBSmA5ujY5A4GEAAKBgFzjuVp1FJYLqXr\nd4z+p7Kxe3L23ExE0phaJKBEj2TSGZ3V1ExI9Q1tv5VG/+onyohs+JH09B41bY8i7RaWgSu\nOF1s4GgD/oI34a8iSrUxq4Jw0e7wi/ZhSAXGKsZfoVi/G7NNTSljf2YUeyxDKE8H5BQP1Gp\n2NOM/Kl4vTyg+W4o4GBMH8wDAYDVR0TAQH/BAIwADAOBgNVHQ8BAf8EBAMCBsAwHwYDVR0j\nBBgwFoAUcEQ+gi5vh95K03XjPSC8QyuT8R8wHQYDVR0OBBYEFL5sobPjwfftQ3CkzhMB4v3\njl/7NMB8GA1UdEQQYMBaBFEFsaWNlRFNTQGV4YW1wbGUuY29tMAkGByqGSM44BAMDMAAwLQ\nIUVQykGR9CK4lxIjONg2q1PWdrv0UCFQCfYVNSVAtcst3a53Yd4hBSW0NevTFjMGECAQEwG\nDASMRAwDgYDVQQDEwdDYXJsRFNTAgIAyDAHBgUrDgMCGjAJBgcqhkjOOAQDBC4wLAIUM/mG\nf6gkgp9Z0XtRdGimJeB/BxUCFGFFJqwYRt1WYcIOQoGiaowqGzVI",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "------=_NextBoundry____Fri,_06_Sep_2002_00:25:21--",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "4.9. S/MIME application/pkcs7-mime Signed Message",
      "section_title": true,
      "zh-CHS": "4.9. S/MIME应用程序/pkcs7 MIME签名消息"
    },
    {
      "indent": 3,
      "text": "A full S/MIME message, including the MIME parts.",
      "zh-CHS": "完整的S/MIME消息，包括MIME部分。"
    },
    {
      "indent": 0,
      "text": "MIME-Version: 1.0\nTo: User2@examples.com\nFrom: aliceDss@examples.com\nSubject: Example 4.9\nMessage-Id: <021031164540300.304@examples.com>\nDate: Thu, 31 Oct 2002 16:45:14 -0300\nContent-Type: application/pkcs7-mime; smime-type=signed-data;\n    name=smime.p7m",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Content-Transfer-Encoding: base64\nContent-Disposition: attachment; filename=smime.p7m",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "MIIDmQYJKoZIhvcNAQcCoIIDijCCA4YCAQExCTAHBgUrDgMCGjAtBgkqhkiG9w0BBwGgIAQ\neDQpUaGlzIGlzIHNvbWUgc2FtcGxlIGNvbnRlbnQuoIIC4DCCAtwwggKboAMCAQICAgDIMA\nkGByqGSM44BAMwEjEQMA4GA1UEAxMHQ2FybERTUzAeFw05OTA4MTcwMTEwNDlaFw0zOTEyM\nzEyMzU5NTlaMBMxETAPBgNVBAMTCEFsaWNlRFNTMIIBtjCCASsGByqGSM44BAEwggEeAoGB\nAIGNze2D6gqeOT7CSCij5EeT3Q7XqA7sU8WrhAhP/5Thc0h+DNbzREjR/p+vpKGJL+HZMMg\n23j+bv7dM3F9piuR10DcMkQiVm96nXvn89J8v3UOoi1TxP7AHCEdNXYjDw7Wz41UIddU5dh\nDEeL3/nbCElzfy5FEbteQJllzzflvbAhUA4kemGkVmuBPG2o+4NyErYov3k80CgYAmONAUi\nTKqOfs+bdlLWWpMdiM5BAI1XPLLGjDDHlBd3ZtZ4s2qBT1YwHuiNrhuB699ikIlp/R1z0oI\nXks+kPht6pzJIYo7dhTpzi5dowfNI4W4LzABfG1JiRGJNkS9+MiVSlNWteL5c+waYTYfEX/\nCve3RUP+YdMLRgUpgObo2OQOBhAACgYBc47ladRSWC6l63eM/qeysXty9txMRNKYWiSgRI9\nk0hmd1dRMSPUNbb+VRv/qJ8qIbPiR9PQeNW2PIu0WloErjhdbOBoA/6CN+GvIkq1MauCcNH\nu8Iv2YUgFxirGX6FYvxuzTU0pY39mFHssQyhPB+QUD9RqdjTjPypeL08oPluKOBgTB/MAwG\nA1UdEwEB/wQCMAAwDgYDVR0PAQH/BAQDAgbAMB8GA1UdIwQYMBaAFHBEPoIub4feStN14z0\ngvEMrk/EfMB0GA1UdDgQWBBS+bKGz48H37UNwpM4TAeL945f+zTAfBgNVHREEGDAWgRRBbG\nljZURTU0BleGFtcGxlLmNvbTAJBgcqhkjOOAQDAzAAMC0CFFUMpBkfQiuJcSIzjYNqtT1na\n79FAhUAn2FTUlQLXLLd2ud2HeIQUltDXr0xYzBhAgEBMBgwEjEQMA4GA1UEAxMHQ2FybERT\nUwICAMgwBwYFKw4DAhowCQYHKoZIzjgEAwQuMCwCFD1cSW6LIUFzeXle3YI5SKSBer/sAhQ\nmCq7s/CTFHOEjgASeUjbMpx5g6A==",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "4.10. SignedData with Attributes",
      "section_title": true,
      "zh-CHS": "4.10. 带属性的SignedData"
    },
    {
      "indent": 3,
      "text": "A SignedData message with the following list of signedAttributes:",
      "zh-CHS": "包含以下已签名属性列表的已签名数据消息："
    },
    {
      "indent": 3,
      "text": "-unknown OID -contentHints -smimeCapablilties -securityLabel -ContentReference -smimeEncryptKeyPreference -mlExpansionHistory -EquivalentLabel",
      "zh-CHS": "-未知OID-内容提示-SMIMECapablies-安全标签-内容引用-smimeEncryptKeyPreference-mlExpansionHistory-等效标签"
    },
    {
      "indent": 2,
      "text": " 0 30 2047: SEQUENCE {\n 4 06    9:   OBJECT IDENTIFIER signedData (1 2 840 113549 1 7 2)\n          :     (PKCS #7)\n15 A0 2032:   [0] {\n19 30 2028:     SEQUENCE {\n23 02    1:       INTEGER 1\n26 31    9:       SET {\n28 30    7:         SEQUENCE {\n30 06    5:           OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n          :             (OIW)\n          :           }\n          :         }\n37 30   43:       SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": " 39 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n           :           (PKCS #7)\n 50 A0   30:         [0] {\n 52 04   28:           OCTET STRING 'This is some sample content.'\n           :           }\n           :         }\n 82 A0  736:       [0] {\n 86 30  732:         SEQUENCE {\n 90 30  667:           SEQUENCE {\n 94 A0    3:             [0] {\n 96 02    1:               INTEGER 2\n           :               }\n 99 02    2:             INTEGER 200\n103 30    9:             SEQUENCE {\n105 06    7:               OBJECT IDENTIFIER\n           :                 dsaWithSha1 (1 2 840 10040 4 3)\n           :                 (ANSI X9.57 algorithm)\n           :               }\n114 30   18:             SEQUENCE {\n116 31   16:               SET {\n118 30   14:                 SEQUENCE {\n120 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n125 13    7:                   PrintableString 'CarlDSS'\n           :                   }\n           :                 }\n           :               }\n134 30   30:             SEQUENCE {\n136 17   13:               UTCTime '990817011049Z'\n151 17   13:               UTCTime '391231235959Z'\n           :               }\n166 30   19:             SEQUENCE {\n168 31   17:               SET {\n170 30   15:                 SEQUENCE {\n172 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n177 13    8:                   PrintableString 'AliceDSS'\n           :                   }\n           :                 }\n           :               }\n187 30  438:             SEQUENCE {\n191 30  299:               SEQUENCE {\n195 06    7:                 OBJECT IDENTIFIER\n           :                   dsa (1 2 840 10040 4 1)\n           :                   (ANSI X9.57 algorithm)\n204 30  286:                 SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "208 02  129:                   INTEGER\n           :                   00 81 8D CD ED 83 EA 0A 9E 39 3E C2\n           :                   48 28 A3 E4 47 93 DD 0E D7 A8 0E EC\n           :                   53 C5 AB 84 08 4F FF 94 E1 73 48 7E\n           :                   0C D6 F3 44 48 D1 FE 9F AF A4 A1 89\n           :                   2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C\n           :                   DC 5F 69 8A E4 75 D0 37 0C 91 08 95\n           :                   9B DE A7 5E F9 FC F4 9F 2F DD 43 A8\n           :                   8B 54 F1 3F B0 07 08 47 4D 5D 88 C3\n           :                   C3 B5 B3 E3 55 08 75 D5 39 76 10 C4\n           :                   78 BD FF 9D B0 84 97 37 F2 E4 51 1B\n           :                   B5 E4 09 96 5C F3 7E 5B DB\n340 02   21:                   INTEGER\n           :                   00 E2 47 A6 1A 45 66 B8 13 C6 DA 8F\n           :                   B8 37 21 2B 62 8B F7 93 CD\n363 02  128:                   INTEGER\n           :                   26 38 D0 14 89 32 AA 39 FB 3E 6D D9\n           :                   4B 59 6A 4C 76 23 39 04 02 35 5C F2\n           :                   CB 1A 30 C3 1E 50 5D DD 9B 59 E2 CD\n           :                   AA 05 3D 58 C0 7B A2 36 B8 6E 07 AF\n           :                   7D 8A 42 25 A7 F4 75 CF 4A 08 5E 4B\n           :                   3E 90 F8 6D EA 9C C9 21 8A 3B 76 14\n           :                   E9 CE 2E 5D A3 07 CD 23 85 B8 2F 30\n           :                   01 7C 6D 49 89 11 89 36 44 BD F8 C8\n           :                   95 4A 53 56 B5 E2 F9 73 EC 1A 61 36\n           :                   1F 11 7F C2 BD ED D1 50 FF 98 74 C2\n           :                   D1 81 4A 60 39 BA 36 39\n           :                   }\n           :                 }\n494 03  132:               BIT STRING 0 unused bits, encapsulates {\n498 02  128:                   INTEGER\n           :                   5C E3 B9 5A 75 14 96 0B A9 7A DD E3\n           :                   3F A9 EC AC 5E DC BD B7 13 11 34 A6\n           :                   16 89 28 11 23 D9 34 86 67 75 75 13\n           :                   12 3D 43 5B 6F E5 51 BF FA 89 F2 A2\n           :                   1B 3E 24 7D 3D 07 8D 5B 63 C8 BB 45\n           :                   A5 A0 4A E3 85 D6 CE 06 80 3F E8 23\n           :                   7E 1A F2 24 AB 53 1A B8 27 0D 1E EF\n           :                   08 BF 66 14 80 5C 62 AC 65 FA 15 8B\n           :                   F1 BB 34 D4 D2 96 37 F6 61 47 B2 C4\n           :                   32 84 F0 7E 41 40 FD 46 A7 63 4E 33\n           :                   F2 A5 E2 F4 F2 83 E5 B8\n           :                   }\n           :               }\n629 A3  129:             [3] {\n632 30  127:               SEQUENCE {\n634 30   12:                 SEQUENCE {\n636 06    3:                   OBJECT IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "           :                     basicConstraints (2 5 29 19)\n           :                     (X.509 id-ce (2 5 29))\n641 01    1:                   BOOLEAN TRUE\n644 04    2:                   OCTET STRING, encapsulates {\n646 30    0:                       SEQUENCE {}\n           :                       }\n           :                   }\n648 30   14:                 SEQUENCE {\n650 06    3:                   OBJECT IDENTIFIER\n           :                     keyUsage (2 5 29 15)\n           :                     (X.509 id-ce (2 5 29))\n655 01    1:                   BOOLEAN TRUE\n658 04    4:                   OCTET STRING, encapsulates {\n660 03    2:                       BIT STRING 6 unused bits\n           :                         '11'B\n           :                       }\n           :                   }\n664 30   31:                 SEQUENCE {\n666 06    3:                   OBJECT IDENTIFIER\n           :                     authorityKeyIdentifier (2 5 29 35)\n           :                     (X.509 id-ce (2 5 29))\n671 04   24:                   OCTET STRING, encapsulates {\n673 30   22:                       SEQUENCE {\n675 80   20:                         [0]\n           :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n           :                   3D 20 BC 43 2B 93 F1 1F\n           :                         }\n           :                       }\n           :                   }\n697 30   29:                 SEQUENCE {\n699 06    3:                   OBJECT IDENTIFIER\n           :                     subjectKeyIdentifier (2 5 29 14)\n           :                     (X.509 id-ce (2 5 29))\n704 04   22:                   OCTET STRING, encapsulates {\n706 04   20:                       OCTET STRING\n           :                   BE 6C A1 B3 E3 C1 F7 ED 43 70 A4 CE\n           :                   13 01 E2 FD E3 97 FE CD\n           :                       }\n           :                   }\n728 30   31:                 SEQUENCE {\n730 06    3:                   OBJECT IDENTIFIER\n           :                     subjectAltName (2 5 29 17)\n           :                     (X.509 id-ce (2 5 29))\n735 04   24:                   OCTET STRING, encapsulates {\n737 30   22:                       SEQUENCE {\n739 81   20:                         [1] 'AliceDSS@example.com'\n           :                         }\n           :                       }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "           :                   }\n           :                 }\n           :               }\n           :             }\n761 30    9:           SEQUENCE {\n763 06    7:             OBJECT IDENTIFIER\n           :               dsaWithSha1 (1 2 840 10040 4 3)\n           :               (ANSI X9.57 algorithm)\n           :             }\n772 03   48:           BIT STRING 0 unused bits, encapsulates {\n775 30   45:               SEQUENCE {\n777 02   20:                 INTEGER\n           :                   55 0C A4 19 1F 42 2B 89 71 22 33 8D\n           :                   83 6A B5 3D 67 6B BF 45\n799 02   21:                 INTEGER\n           :                   00 9F 61 53 52 54 0B 5C B2 DD DA E7\n           :                   76 1D E2 10 52 5B 43 5E BD\n           :                 }\n           :               }\n           :           }\n           :         }\n822 31 1225:       SET {\n826 30 1221:         SEQUENCE {\n830 02    1:           INTEGER 1\n833 30   24:           SEQUENCE {\n835 30   18:             SEQUENCE {\n837 31   16:               SET {\n839 30   14:                 SEQUENCE {\n841 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n846 13    7:                   PrintableString 'CarlDSS'\n           :                   }\n           :                 }\n           :               }\n855 02    2:             INTEGER 200\n           :             }\n859 30    7:           SEQUENCE {\n861 06    5:             OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n           :               (OIW)\n           :             }\n868 A0 1119:           [0] {\n872 30   24:             SEQUENCE {\n874 06    9:               OBJECT IDENTIFIER\n           :                 contentType (1 2 840 113549 1 9 3)\n           :                 (PKCS #9 (1 2 840 113549 1 9))\n885 31   11:               SET {\n887 06    9:                 OBJECT IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "            :                   data (1 2 840 113549 1 7 1)\n            :                   (PKCS #7)\n            :                 }\n            :               }\n 898 30   35:             SEQUENCE {\n 900 06    9:               OBJECT IDENTIFIER\n            :                 messageDigest (1 2 840 113549 1 9 4)\n            :                 (PKCS #9 (1 2 840 113549 1 9))\n 911 31   22:               SET {\n 913 04   20:                 OCTET STRING\n            :                   40 6A EC 08 52 79 BA 6E 16 02 2D 9E\n            :                   06 29 C0 22 96 87 DD 48\n            :                 }\n            :               }\n 935 30   56:             SEQUENCE {\n 937 06    3:               OBJECT IDENTIFIER '1 2 5555'\n 942 31   49:               SET {\n 944 04   47:                 OCTET STRING\n            :                   'This is a test General ASN Attribut'\n            :                   'e, number 1.'\n            :                 }\n            :               }\n 993 30   62:             SEQUENCE {\n 995 06   11:               OBJECT IDENTIFIER\n            :                 id-aa-contentHint\n            :                     (1 2 840 113549 1 9 16 2 4)\n            :                 (S/MIME Authenticated Attributes\n            :                     (1 2 840 113549 1 9 16 2))\n1008 31   47:               SET {\n1010 30   45:                 SEQUENCE {\n1012 0C   32:                   UTF8String\n            :                   'Content Hints Description Buffer'\n1046 06    9:                   OBJECT IDENTIFIER\n            :                     data (1 2 840 113549 1 7 1)\n            :                     (PKCS #7)\n            :                   }\n            :                 }\n            :               }\n1057 30   74:             SEQUENCE {\n1059 06    9:               OBJECT IDENTIFIER\n            :                 sMIMECapabilities\n            :                     (1 2 840 113549 1 9 15)\n            :                 (PKCS #9\n            :                     (1 2 840 113549 1 9))\n1070 31   61:               SET {\n1072 30   59:                 SEQUENCE {\n1074 30    7:                   SEQUENCE {\n1076 06    5:                     OBJECT IDENTIFIER '1 2 3 4 5 6'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "            :                     }\n1083 30   48:                   SEQUENCE {\n1085 06    6:                     OBJECT IDENTIFIER '1 2 3 4 5 6 77'\n1093 04   38:                     OCTET STRING\n            :                   'Smime Capabilities parameters buffe'\n            :                   'r 2'\n            :                     }\n            :                   }\n            :                 }\n            :               }\n1133 30  109:             SEQUENCE {\n1135 06   11:               OBJECT IDENTIFIER\n            :                 id-aa-securityLabel\n            :                     (1 2 840 113549 1 9 16 2 2)\n            :                 (S/MIME Authenticated Attributes\n            :                     (1 2 840 113549 1 9 16 2))\n1148 31   94:               SET {\n1150 31   92:                 SET {\n1152 02    1:                   INTEGER 1\n1155 06    7:                   OBJECT IDENTIFIER '1 2 3 4 5 6 7 8'\n1164 13   27:                   PrintableString\n            :                   'THIS IS A PRIVACY MARK TEST'\n1193 31   49:                   SET {\n1195 30   47:                     SEQUENCE {\n1197 80    8:                       [0]\n            :                   2A 03 04 05 06 07 86 78\n1207 A1   35:                       [1] {\n1209 13   33:                         PrintableString\n            :                         'THIS IS A TEST SECURITY-'\n            :                         'CATEGORY.'\n            :                         }\n            :                       }\n            :                     }\n            :                   }\n            :                 }\n            :               }\n1244 30  111:             SEQUENCE {\n1246 06   11:               OBJECT IDENTIFIER\n            :                 id-aa-contentReference\n            :                     (1 2 840 113549 1 9 16 2 10)\n            :                 (S/MIME Authenticated Attributes\n            :                     (1 2 840 113549 1 9 16 2))\n1259 31   96:               SET {\n1261 30   94:                 SEQUENCE {\n1263 06    5:                   OBJECT IDENTIFIER '1 2 3 4 5 6'\n1270 04   43:                   OCTET STRING\n            :                   'Content Reference Content Identifie'\n            :                   'r Buffer'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1315 04   40:                   OCTET STRING\n            :                   'Content Reference Signature Value B'\n            :                   'uffer'\n            :                   }\n            :                 }\n            :               }\n1357 30  115:             SEQUENCE {\n1359 06   11:               OBJECT IDENTIFIER\n            :                 id-aa-encrypKeyPref\n            :                     (1 2 840 113549 1 9 16 2 11)\n            :                 (S/MIME Authenticated Attributes\n            :                     (1 2 840 113549 1 9 16 2))\n1372 31  100:               SET {\n1374 A0   98:                 [0] {\n1376 30   90:                   SEQUENCE {\n1378 31   11:                     SET {\n1380 30    9:                       SEQUENCE {\n1382 06    3:                         OBJECT IDENTIFIER\n            :                           countryName (2 5 4 6)\n            :                           (X.520 id-at (2 5 4))\n1387 13    2:                         PrintableString 'US'\n            :                         }\n            :                       }\n1391 31   22:                     SET {\n1393 30   20:                       SEQUENCE {\n1395 06    3:                         OBJECT IDENTIFIER\n            :                           organizationName (2 5 4 10)\n            :                           (X.520 id-at (2 5 4))\n1400 13   13:                         PrintableString 'US Government'\n            :                         }\n            :                       }\n1415 31   17:                     SET {\n1417 30   15:                       SEQUENCE {\n1419 06    3:                         OBJECT IDENTIFIER\n            :                           organizationalUnitName\n            :                               (2 5 4 11)\n            :                           (X.520 id-at (2 5 4))\n1424 13    8:                         PrintableString 'VDA Site'\n            :                         }\n            :                       }\n1434 31   12:                     SET {\n1436 30   10:                       SEQUENCE {\n1438 06    3:                         OBJECT IDENTIFIER\n            :                           organizationalUnitName\n            :                               (2 5 4 11)\n            :                           (X.520 id-at (2 5 4))\n1443 13    3:                         PrintableString 'VDA'\n            :                         }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "            :                       }\n1448 31   18:                     SET {\n1450 30   16:                       SEQUENCE {\n1452 06    3:                         OBJECT IDENTIFIER\n            :                           commonName (2 5 4 3)\n            :                           (X.520 id-at (2 5 4))\n1457 13    9:                         PrintableString 'Daisy RSA'\n            :                         }\n            :                       }\n            :                     }\n1468 02    4:                   INTEGER 173360179\n            :                   }\n            :                 }\n            :               }\n1474 30  252:             SEQUENCE {\n1477 06   11:               OBJECT IDENTIFIER\n            :                 id-aa-mlExpandHistory\n            :                     (1 2 840 113549 1 9 16 2 3)\n            :                 (S/MIME Authenticated Attributes\n            :                     (1 2 840 113549 1 9 16 2))\n1490 31  236:               SET {\n1493 30  233:                 SEQUENCE {\n1496 30  230:                   SEQUENCE {\n1499 04    7:                     OCTET STRING '5738299'\n1508 18   15:                     GeneralizedTime '19990311104433Z'\n1525 A1  201:                     [1] {\n1528 30  198:                       SEQUENCE {\n1531 A4   97:                         [4] {\n1533 30   95:                           SEQUENCE {\n1535 31   11:                             SET {\n1537 30    9:                               SEQUENCE {\n1539 06    3:                                 OBJECT IDENTIFIER\n            :                                   countryName (2 5 4 6)\n            :                                   (X.520 id-at (2 5 4))\n1544 13    2:                                 PrintableString 'US'\n            :                                 }\n            :                               }\n1548 31   22:                             SET {\n1550 30   20:                               SEQUENCE {\n1552 06    3:                                 OBJECT IDENTIFIER\n            :                                   organizationName\n            :                                       (2 5 4 10)\n            :                                   (X.520 id-at (2 5 4))\n1557 13   13:                                 PrintableString\n            :                                 'US Government'\n            :                                 }\n            :                               }\n1572 31   17:                             SET {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1574 30   15:                               SEQUENCE {\n1576 06    3:                                 OBJECT IDENTIFIER\n            :                                   organizationalUnitName\n            :                                       (2 5 4 11)\n            :                                   (X.520 id-at (2 5 4))\n1581 13    8:                                 PrintableString\n            :                                 'VDA Site'\n            :                                 }\n            :                               }\n1591 31   12:                             SET {\n1593 30   10:                               SEQUENCE {\n1595 06    3:                                 OBJECT IDENTIFIER\n            :                                   organizationalUnitName\n            :                                       (2 5 4 11)\n            :                                   (X.520 id-at (2 5 4))\n1600 13    3:                                 PrintableString 'VDA'\n            :                                 }\n            :                               }\n1605 31   23:                             SET {\n1607 30   21:                               SEQUENCE {\n1609 06    3:                                 OBJECT IDENTIFIER\n            :                                   commonName (2 5 4 3)\n            :                                   (X.520 id-at (2 5 4))\n1614 13   14:                                 PrintableString\n            :                                 'Bugs Bunny DSA'\n            :                                 }\n            :                               }\n            :                             }\n            :                           }\n1630 A4   97:                         [4] {\n1632 30   95:                           SEQUENCE {\n1634 31   11:                             SET {\n1636 30    9:                               SEQUENCE {\n1638 06    3:                                 OBJECT IDENTIFIER\n            :                                   countryName (2 5 4 6)\n            :                                   (X.520 id-at (2 5 4))\n1643 13    2:                                 PrintableString 'US'\n            :                                 }\n            :                               }\n1647 31   22:                             SET {\n1649 30   20:                               SEQUENCE {\n1651 06    3:                                 OBJECT IDENTIFIER\n            :                                   organizationName\n            :                                       (2 5 4 10)\n            :                                   (X.520 id-at (2 5 4))\n1656 13   13:                                 PrintableString\n            :                                 'US Government'\n            :                                 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "            :                               }\n1671 31   17:                             SET {\n1673 30   15:                               SEQUENCE {\n1675 06    3:                                 OBJECT IDENTIFIER\n            :                                   organizationalUnitName\n            :                                       (2 5 4 11)\n            :                                   (X.520 id-at (2 5 4))\n1680 13    8:                                 PrintableString\n            :                                 'VDA Site'\n            :                                 }\n            :                               }\n1690 31   12:                             SET {\n1692 30   10:                               SEQUENCE {\n1694 06    3:                                 OBJECT IDENTIFIER\n            :                                   organizationalUnitName\n            :                                       (2 5 4 11)\n            :                                   (X.520 id-at (2 5 4))\n1699 13    3:                                 PrintableString 'VDA'\n            :                                 }\n            :                               }\n1704 31   23:                             SET {\n1706 30   21:                               SEQUENCE {\n1708 06    3:                                 OBJECT IDENTIFIER\n            :                                   commonName (2 5 4 3)\n            :                                   (X.520 id-at (2 5 4))\n1713 13   14:                                 PrintableString\n            :                                 'Elmer Fudd DSA'\n            :                                 }\n            :                               }\n            :                             }\n            :                           }\n            :                         }\n            :                       }\n            :                     }\n            :                   }\n            :                 }\n            :               }\n1729 30  258:             SEQUENCE {\n1733 06   11:               OBJECT IDENTIFIER\n            :                 id-aa-equivalentLabels\n            :                     (1 2 840 113549 1 9 16 2 9)\n            :                 (S/MIME Authenticated Attributes\n            :                     (1 2 840 113549 1 9 16 2))\n1746 31  242:               SET {\n1749 30  239:                 SEQUENCE {\n1752 31  114:                   SET {\n1754 02    1:                     INTEGER 1\n1757 06    7:                     OBJECT IDENTIFIER '1 2 3 4 5 6 7 9'",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1766 13   38:                     PrintableString\n            :                   'EQUIVALENT THIS IS A PRIVACY MARK T'\n            :                   'EST'\n1806 31   60:                     SET {\n1808 30   58:                       SEQUENCE {\n1810 80    8:                         [0]\n            :                   2A 03 04 05 06 07 86 78\n1820 A1   46:                         [1] {\n1822 13   44:                           PrintableString\n            :                   'EQUIVALENT THIS IS A TEST SECURITY-'\n            :                   'CATEGORY.'\n            :                           }\n            :                         }\n            :                       }\n            :                     }\n1868 31  121:                   SET {\n1870 02    1:                     INTEGER 1\n1873 06    7:                     OBJECT IDENTIFIER\n            :                     '1 2 3 4 5 6 7 10'\n1882 13   45:                     PrintableString\n            :                   'EQUIVALENT THIS IS A SECOND PRIVACY'\n            :                   ' MARK TEST'\n1929 31   60:                     SET {\n1931 30   58:                       SEQUENCE {\n1933 80    8:                         [0]\n            :                   2A 03 04 05 06 07 86 78\n1943 A1   46:                         [1] {\n1945 13   44:                           PrintableString\n            :                   'EQUIVALENT THIS IS A TEST SECURITY-'\n            :                   'CATEGORY.'\n            :                           }\n            :                         }\n            :                       }\n            :                     }\n            :                   }\n            :                 }\n            :               }\n            :             }\n1991 30    9:           SEQUENCE {\n1993 06    7:             OBJECT IDENTIFIER\n            :               dsaWithSha1 (1 2 840 10040 4 3)\n            :               (ANSI X9.57 algorithm)\n            :             }\n2002 04   47:           OCTET STRING, encapsulates {\n2004 30   45:               SEQUENCE {\n2006 02   21:                 INTEGER\n            :                   00 BC 33 37 65 C4 F7 70 5C 17 49 13\n            :                   AA 4C 85 CA BB 52 91 48 59",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "2029 02   20:                 INTEGER\n            :                   63 96 A2 14 8B CF 57 DE B0 48 5F 6C\n            :                   64 DD 84 04 49 5F 1C CA\n            :                 }\n            :               }\n            :           }\n            :         }\n            :       }\n            :     }\n            :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "4.11. SignedData with Certificates Only",
      "section_title": true,
      "zh-CHS": "4.11. 仅带证书的已签名数据"
    },
    {
      "indent": 3,
      "text": "CA SignedData message with no content or signature, containing only Alices's and Carl's certificates.",
      "zh-CHS": "CA SignedData消息没有内容或签名，仅包含Alices和Carl的证书。"
    },
    {
      "indent": 2,
      "text": " 0 30 1672: SEQUENCE {\n 4 06    9:   OBJECT IDENTIFIER signedData (1 2 840 113549 1 7 2)\n          :     (PKCS #7)\n15 A0 1657:   [0] {\n19 30 1653:     SEQUENCE {\n23 02    1:       INTEGER 1\n26 31    0:       SET {}\n28 30   11:       SEQUENCE {\n30 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n          :           (PKCS #7)\n          :         }\n41 A0 1407:       [0] {\n45 30  667:         SEQUENCE {\n49 30  602:           SEQUENCE {\n53 A0    3:             [0] {\n55 02    1:               INTEGER 2\n          :               }\n58 02    1:             INTEGER 1\n61 30    9:             SEQUENCE {\n63 06    7:               OBJECT IDENTIFIER\n          :                 dsaWithSha1 (1 2 840 10040 4 3)\n          :                 (ANSI X9.57 algorithm)\n          :               }\n72 30   18:             SEQUENCE {\n74 31   16:               SET {\n76 30   14:                 SEQUENCE {\n78 06    3:                   OBJECT IDENTIFIER\n          :                     commonName (2 5 4 3)\n          :                     (X.520 id-at (2 5 4))\n83 13    7:                   PrintableString 'CarlDSS'\n          :                   }\n          :                 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "           :               }\n 92 30   30:             SEQUENCE {\n 94 17   13:               UTCTime '990816225050Z'\n109 17   13:               UTCTime '391231235959Z'\n           :               }\n124 30   18:             SEQUENCE {\n126 31   16:               SET {\n128 30   14:                 SEQUENCE {\n130 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n135 13    7:                   PrintableString 'CarlDSS'\n           :                   }\n           :                 }\n           :               }\n144 30  439:             SEQUENCE {\n148 30  299:               SEQUENCE {\n152 06    7:                 OBJECT IDENTIFIER\n           :                   dsa (1 2 840 10040 4 1)\n           :                   (ANSI X9.57 algorithm)\n161 30  286:                 SEQUENCE {\n165 02  129:                   INTEGER\n           :                   00 B6 49 18 3E 8A 44 C1 29 71 94 4C\n           :                   01 C4 12 C1 7A 79 CB 54 4D AB 1E 81\n           :                   FB C6 4C B3 0E 94 09 06 EB 01 D4 B1\n           :                   C8 71 4B C7 45 C0 50 25 5D 9C FC DA\n           :                   E4 6D D3 E2 86 48 84 82 7D BA 15 95\n           :                   4A 16 F6 46 ED DD F6 98 D2 BB 7E 8A\n           :                   0A 8A BA 16 7B B9 50 01 48 93 8B EB\n           :                   25 15 51 97 55 DC 8F 53 0E 10 A9 50\n           :                   FC 70 B7 CD 30 54 FD DA DE A8 AA 22\n           :                   B5 A1 AF 8B CC 02 88 E7 8B 70 5F B9\n           :                   AD E1 08 D4 6D 29 2D D6 E9\n297 02   21:                   INTEGER\n           :                   00 DD C1 2F DF 53 CE 0B 34 60 77 3E\n           :                   02 A4 BF 8A 5D 98 B9 10 D5\n320 02  128:                   INTEGER\n           :                   0C EE 57 9B 4B BD DA B6 07 6A 74 37\n           :                   4F 55 7F 9D ED BC 61 0D EB 46 59 3C\n           :                   56 0B 2B 5B 0C 91 CE A5 62 52 69 CA\n           :                   E1 6D 3E BD BF FE E1 B7 B9 2B 61 3C\n           :                   AD CB AE 45 E3 06 AC 8C 22 9D 9C 44\n           :                   87 0B C7 CD F0 1C D9 B5 4E 5D 73 DE\n           :                   AF 0E C9 1D 5A 51 F5 4F 44 79 35 5A\n           :                   73 AA 7F 46 51 1F A9 42 16 9C 48 EB\n           :                   8A 79 61 B4 D5 2F 53 22 44 63 1F 86\n           :                   B8 A3 58 06 25 F8 29 C0 EF BA E0 75\n           :                   F0 42 C4 63 65 52 9B 0A",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "           :                   }\n           :                 }\n451 03  133:               BIT STRING 0 unused bits, encapsulates {\n455 02  129:                   INTEGER\n           :                   00 99 87 74 27 03 66 A0 B1 C0 AD DC\n           :                   2C 75 BB E1 6C 44 9C DA 21 6D 4D 47\n           :                   6D B1 62 09 E9 D8 AE 1E F2 3A B4 94\n           :                   B1 A3 8E 7A 9B 71 4E 00 94 C9 B4 25\n           :                   4E B9 60 96 19 24 01 F3 62 0C FE 75\n           :                   C0 FB CE D8 68 00 E3 FD D5 70 4F DF\n           :                   23 96 19 06 94 F4 B1 61 8F 3A 57 B1\n           :                   08 11 A4 0B 26 25 F0 52 76 81 EA 0B\n           :                   62 0D 95 2A E6 86 BA 72 B2 A7 50 83\n           :                   0B AA 27 CD 1B A9 4D 89 9A D7 8D 18\n           :                   39 84 3F 8B C5 56 4D 80 7A\n           :                   }\n           :               }\n587 A3   66:             [3] {\n589 30   64:               SEQUENCE {\n591 30   15:                 SEQUENCE {\n593 06    3:                   OBJECT IDENTIFIER\n           :                     basicConstraints (2 5 29 19)\n           :                     (X.509 id-ce (2 5 29))\n598 01    1:                   BOOLEAN TRUE\n601 04    5:                   OCTET STRING, encapsulates {\n603 30    3:                       SEQUENCE {\n605 01    1:                         BOOLEAN TRUE\n           :                         }\n           :                       }\n           :                   }\n608 30   14:                 SEQUENCE {\n610 06    3:                   OBJECT IDENTIFIER\n           :                     keyUsage (2 5 29 15)\n           :                     (X.509 id-ce (2 5 29))\n615 01    1:                   BOOLEAN TRUE\n618 04    4:                   OCTET STRING, encapsulates {\n620 03    2:                       BIT STRING 1 unused bits\n           :                         '1100001'B\n           :                       }\n           :                   }\n624 30   29:                 SEQUENCE {\n626 06    3:                   OBJECT IDENTIFIER\n           :                     subjectKeyIdentifier (2 5 29 14)\n           :                     (X.509 id-ce (2 5 29))\n631 04   22:                   OCTET STRING, encapsulates {\n633 04   20:                       OCTET STRING\n           :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n           :                   3D 20 BC 43 2B 93 F1 1F",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "           :                       }\n           :                   }\n           :                 }\n           :               }\n           :             }\n655 30    9:           SEQUENCE {\n657 06    7:             OBJECT IDENTIFIER\n           :               dsaWithSha1 (1 2 840 10040 4 3)\n           :               (ANSI X9.57 algorithm)\n           :             }\n666 03   48:           BIT STRING 0 unused bits, encapsulates {\n669 30   45:               SEQUENCE {\n671 02   20:                 INTEGER\n           :                   6B A9 F0 4E 7A 5A 79 E3 F9 BE 3D 2B\n           :                   C9 06 37 E9 11 17 A1 13\n693 02   21:                 INTEGER\n           :                   00 8F 34 69 2A 8B B1 3C 03 79 94 32\n           :                   4D 12 1F CE 89 FB 46 B2 3B\n           :                 }\n           :               }\n           :           }\n716 30  732:         SEQUENCE {\n720 30  667:           SEQUENCE {\n724 A0    3:             [0] {\n726 02    1:               INTEGER 2\n           :               }\n729 02    2:             INTEGER 200\n733 30    9:             SEQUENCE {\n735 06    7:               OBJECT IDENTIFIER\n           :                 dsaWithSha1 (1 2 840 10040 4 3)\n           :                 (ANSI X9.57 algorithm)\n           :               }\n744 30   18:             SEQUENCE {\n746 31   16:               SET {\n748 30   14:                 SEQUENCE {\n750 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n755 13    7:                   PrintableString 'CarlDSS'\n           :                   }\n           :                 }\n           :               }\n764 30   30:             SEQUENCE {\n766 17   13:               UTCTime '990817011049Z'\n781 17   13:               UTCTime '391231235959Z'\n           :               }\n796 30   19:             SEQUENCE {\n798 31   17:               SET {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": " 800 30   15:                 SEQUENCE {\n 802 06    3:                   OBJECT IDENTIFIER\n            :                     commonName (2 5 4 3)\n            :                     (X.520 id-at (2 5 4))\n 807 13    8:                   PrintableString 'AliceDSS'\n            :                   }\n            :                 }\n            :               }\n 817 30  438:             SEQUENCE {\n 821 30  299:               SEQUENCE {\n 825 06    7:                 OBJECT IDENTIFIER\n            :                   dsa (1 2 840 10040 4 1)\n            :                   (ANSI X9.57 algorithm)\n 834 30  286:                 SEQUENCE {\n 838 02  129:                   INTEGER\n            :                   00 81 8D CD ED 83 EA 0A 9E 39 3E C2\n            :                   48 28 A3 E4 47 93 DD 0E D7 A8 0E EC\n            :                   53 C5 AB 84 08 4F FF 94 E1 73 48 7E\n            :                   0C D6 F3 44 48 D1 FE 9F AF A4 A1 89\n            :                   2F E1 D9 30 C8 36 DE 3F 9B BF B7 4C\n            :                   DC 5F 69 8A E4 75 D0 37 0C 91 08 95\n            :                   9B DE A7 5E F9 FC F4 9F 2F DD 43 A8\n            :                   8B 54 F1 3F B0 07 08 47 4D 5D 88 C3\n            :                   C3 B5 B3 E3 55 08 75 D5 39 76 10 C4\n            :                   78 BD FF 9D B0 84 97 37 F2 E4 51 1B\n            :                   B5 E4 09 96 5C F3 7E 5B DB\n 970 02   21:                   INTEGER\n            :                   00 E2 47 A6 1A 45 66 B8 13 C6 DA 8F\n            :                   B8 37 21 2B 62 8B F7 93 CD\n 993 02  128:                   INTEGER\n            :                   26 38 D0 14 89 32 AA 39 FB 3E 6D D9\n            :                   4B 59 6A 4C 76 23 39 04 02 35 5C F2\n            :                   CB 1A 30 C3 1E 50 5D DD 9B 59 E2 CD\n            :                   AA 05 3D 58 C0 7B A2 36 B8 6E 07 AF\n            :                   7D 8A 42 25 A7 F4 75 CF 4A 08 5E 4B\n            :                   3E 90 F8 6D EA 9C C9 21 8A 3B 76 14\n            :                   E9 CE 2E 5D A3 07 CD 23 85 B8 2F 30\n            :                   01 7C 6D 49 89 11 89 36 44 BD F8 C8\n            :                   95 4A 53 56 B5 E2 F9 73 EC 1A 61 36\n            :                   1F 11 7F C2 BD ED D1 50 FF 98 74 C2\n            :                   D1 81 4A 60 39 BA 36 39\n            :                   }\n            :                 }\n1124 03  132:               BIT STRING 0 unused bits, encapsulates {\n1128 02  128:                   INTEGER\n            :                   5C E3 B9 5A 75 14 96 0B A9 7A DD E3\n            :                   3F A9 EC AC 5E DC BD B7 13 11 34 A6\n            :                   16 89 28 11 23 D9 34 86 67 75 75 13",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "            :                   12 3D 43 5B 6F E5 51 BF FA 89 F2 A2\n            :                   1B 3E 24 7D 3D 07 8D 5B 63 C8 BB 45\n            :                   A5 A0 4A E3 85 D6 CE 06 80 3F E8 23\n            :                   7E 1A F2 24 AB 53 1A B8 27 0D 1E EF\n            :                   08 BF 66 14 80 5C 62 AC 65 FA 15 8B\n            :                   F1 BB 34 D4 D2 96 37 F6 61 47 B2 C4\n            :                   32 84 F0 7E 41 40 FD 46 A7 63 4E 33\n            :                   F2 A5 E2 F4 F2 83 E5 B8\n            :                   }\n            :               }\n1259 A3  129:             [3] {\n1262 30  127:               SEQUENCE {\n1264 30   12:                 SEQUENCE {\n1266 06    3:                   OBJECT IDENTIFIER\n            :                     basicConstraints (2 5 29 19)\n            :                     (X.509 id-ce (2 5 29))\n1271 01    1:                   BOOLEAN TRUE\n1274 04    2:                   OCTET STRING, encapsulates {\n1276 30    0:                       SEQUENCE {}\n            :                       }\n            :                   }\n1278 30   14:                 SEQUENCE {\n1280 06    3:                   OBJECT IDENTIFIER\n            :                     keyUsage (2 5 29 15)\n            :                     (X.509 id-ce (2 5 29))\n1285 01    1:                   BOOLEAN TRUE\n1288 04    4:                   OCTET STRING, encapsulates {\n1290 03    2:                       BIT STRING 6 unused bits\n            :                         '11'B\n            :                       }\n            :                   }\n1294 30   31:                 SEQUENCE {\n1296 06    3:                   OBJECT IDENTIFIER\n            :                     authorityKeyIdentifier (2 5 29 35)\n            :                     (X.509 id-ce (2 5 29))\n1301 04   24:                   OCTET STRING, encapsulates {\n1303 30   22:                       SEQUENCE {\n1305 80   20:                         [0]\n            :                   70 44 3E 82 2E 6F 87 DE 4A D3 75 E3\n            :                   3D 20 BC 43 2B 93 F1 1F\n            :                         }\n            :                       }\n            :                   }\n1327 30   29:                 SEQUENCE {\n1329 06    3:                   OBJECT IDENTIFIER\n            :                     subjectKeyIdentifier (2 5 29 14)\n            :                     (X.509 id-ce (2 5 29))\n1334 04   22:                   OCTET STRING, encapsulates {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1336 04   20:                       OCTET STRING\n            :                   BE 6C A1 B3 E3 C1 F7 ED 43 70 A4 CE\n            :                   13 01 E2 FD E3 97 FE CD\n            :                       }\n            :                   }\n1358 30   31:                 SEQUENCE {\n1360 06    3:                   OBJECT IDENTIFIER\n            :                     subjectAltName (2 5 29 17)\n            :                     (X.509 id-ce (2 5 29))\n1365 04   24:                   OCTET STRING, encapsulates {\n1367 30   22:                       SEQUENCE {\n1369 81   20:                         [1] 'AliceDSS@example.com'\n            :                         }\n            :                       }\n            :                   }\n            :                 }\n            :               }\n            :             }\n1391 30    9:           SEQUENCE {\n1393 06    7:             OBJECT IDENTIFIER\n            :               dsaWithSha1 (1 2 840 10040 4 3)\n            :               (ANSI X9.57 algorithm)\n            :             }\n1402 03   48:           BIT STRING 0 unused bits, encapsulates {\n1405 30   45:               SEQUENCE {\n1407 02   20:                 INTEGER\n            :                   55 0C A4 19 1F 42 2B 89 71 22 33 8D\n            :                   83 6A B5 3D 67 6B BF 45\n1429 02   21:                 INTEGER\n            :                   00 9F 61 53 52 54 0B 5C B2 DD DA E7\n            :                   76 1D E2 10 52 5B 43 5E BD\n            :                 }\n            :               }\n            :           }\n            :         }\n1452 A1  219:       [1] {\n1455 30  216:         SEQUENCE {\n1458 30  153:           SEQUENCE {\n1461 30    9:             SEQUENCE {\n1463 06    7:               OBJECT IDENTIFIER\n            :                 dsaWithSha1 (1 2 840 10040 4 3)\n            :                 (ANSI X9.57 algorithm)\n            :               }\n1472 30   18:             SEQUENCE {\n1474 31   16:               SET {\n1476 30   14:                 SEQUENCE {\n1478 06    3:                   OBJECT IDENTIFIER\n            :                     commonName (2 5 4 3)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "            :                     (X.520 id-at (2 5 4))\n1483 13    7:                   PrintableString 'CarlDSS'\n            :                   }\n            :                 }\n            :               }\n1492 17   13:             UTCTime '990827070000Z'\n1507 30  105:             SEQUENCE {\n1509 30   19:               SEQUENCE {\n1511 02    2:                 INTEGER 200\n1515 17   13:                 UTCTime '990822070000Z'\n            :                 }\n1530 30   19:               SEQUENCE {\n1532 02    2:                 INTEGER 201\n1536 17   13:                 UTCTime '990822070000Z'\n            :                 }\n1551 30   19:               SEQUENCE {\n1553 02    2:                 INTEGER 211\n1557 17   13:                 UTCTime '990822070000Z'\n            :                 }\n1572 30   19:               SEQUENCE {\n1574 02    2:                 INTEGER 210\n1578 17   13:                 UTCTime '990822070000Z'\n            :                 }\n1593 30   19:               SEQUENCE {\n1595 02    2:                 INTEGER 212\n1599 17   13:                 UTCTime '990824070000Z'\n            :                 }\n            :               }\n            :             }\n1614 30    9:           SEQUENCE {\n1616 06    7:             OBJECT IDENTIFIER\n            :               dsaWithSha1 (1 2 840 10040 4 3)\n            :               (ANSI X9.57 algorithm)\n            :             }\n1625 03   47:           BIT STRING 0 unused bits, encapsulates {\n1628 30   44:               SEQUENCE {\n1630 02   20:                 INTEGER\n            :                   7E 65 52 76 33 FE 34 73 17 D1 F7 96\n            :                   F9 A0 D4 D8 6D 5C 7D 3D\n1652 02   20:                 INTEGER\n            :                   02 7A 5B B7 D5 5B 18 C1 CF 87 EF 7E\n            :                   DA 24 F3 2A 83 9C 35 A1\n            :                 }\n            :               }\n            :           }\n            :         }\n1674 31    0:       SET {}\n            :       }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": ":     }\n:   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "5. Enveloped-data",
      "section_title": true,
      "zh-CHS": "5. 包络数据"
    },
    {
      "indent": 0,
      "text": "5.1. Basic Encrypted Content, TripleDES and RSA",
      "section_title": true,
      "zh-CHS": "5.1. 基本加密内容、TripleDES和RSA"
    },
    {
      "indent": 3,
      "text": "An EnvelopedData from Alice to Bob of ExContent using TripleDES for encrypting and RSA for key management. Does not have an OriginatorInfo.",
      "zh-CHS": "ExContent的Alice到Bob的信封数据，使用三元组进行加密，使用RSA进行密钥管理。没有原始信息。"
    },
    {
      "indent": 5,
      "text": " 0 30  286: SEQUENCE {\n 4 06    9:   OBJECT IDENTIFIER\n          :     envelopedData (1 2 840 113549 1 7 3)\n          :     (PKCS #7)\n15 A0  271:   [0] {\n19 30  267:     SEQUENCE {\n23 02    1:       INTEGER 0\n26 31  192:       SET {\n29 30  189:         SEQUENCE {\n32 02    1:           INTEGER 0\n35 30   38:           SEQUENCE {\n37 30   18:             SEQUENCE {\n39 31   16:               SET {\n41 30   14:                 SEQUENCE {\n43 06    3:                   OBJECT IDENTIFIER\n          :                     commonName (2 5 4 3)\n          :                     (X.520 id-at (2 5 4))\n48 13    7:                   PrintableString 'CarlRSA'\n          :                   }\n          :                 }\n          :               }\n57 02   16:             INTEGER\n          :               46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n          :               CD 5D 71 D0\n          :             }\n75 30   13:           SEQUENCE {\n77 06    9:             OBJECT IDENTIFIER\n          :               rsaEncryption (1 2 840 113549 1 1 1)\n          :               (PKCS #1)\n88 05    0:             NULL\n          :             }\n90 04  128:           OCTET STRING\n          :             0B 71 0D E6 71 88 88 98 B6 96 C1 8F\n          :             70 FD A2 27 DE DA E1 EF 24 6C A4 33\n          :             DF AC E0 E9 9D A2 D3 2C 7A CD 80 B8\n          :             99 9E E6 5F B1 41 B3 72 16 83 E7 FA\n          :             2A 00 8B C7 73 35 78 26 D6 C7 CF 8C",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "           :             0C 56 DB A5 76 9D 08 38 0E F3 F9 D4\n           :             91 43 58 78 DC 49 B6 EC EE 6C 68 33\n           :             A3 21 1D F0 28 78 1F F7 5D F6 07 73\n           :             4D DF AD 69 31 20 4B 48 A9 75 22 6E\n           :             36 79 15 63 8F CC EB 9D A3 28 A1 D1\n           :             2C 57 F4 DA 1A 2C 75 1F\n           :           }\n           :         }\n221 30   67:       SEQUENCE {\n223 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n           :           (PKCS #7)\n234 30   20:         SEQUENCE {\n236 06    8:           OBJECT IDENTIFIER\n           :             des-EDE3-CBC (1 2 840 113549 3 7)\n           :             (RSADSI encryptionAlgorithm\n           :                 (1 2 840 113549 3))\n246 04    8:           OCTET STRING\n           :             2D 68 C5 E9 47 06 51 35\n           :           }\n256 80   32:         [0]\n           :           0E C8 92 7F C6 7D 3F 8D CB AD 8E 0E\n           :           C5 49 3A EB 47 2E D6 55 DE 09 21 4E\n           :           48 EA 4E 27 B1 6E 57 25\n           :         }\n           :       }\n           :     }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "5.2. Basic Encrypted Content, RC2/128 and RSA",
      "section_title": true,
      "zh-CHS": "5.2. 基本加密内容、RC2/128和RSA"
    },
    {
      "indent": 3,
      "text": "Same as 5.1, except using RC2/128 for encryption and RSA for key management. An EnvelopedData from Alice to Bob of ExContent using RC2/40 for encrypting and RSA for key management. Does not have an OriginatorInfo or any attributes.",
      "zh-CHS": "与5.1相同，只是使用RC2/128进行加密，使用RSA进行密钥管理。从Alice到ExContent的Bob的信封数据，使用RC2/40进行加密，使用RSA进行密钥管理。没有原始信息或任何属性。"
    },
    {
      "indent": 5,
      "text": " 0 30  291: SEQUENCE {\n 4 06    9:   OBJECT IDENTIFIER\n          :     envelopedData (1 2 840 113549 1 7 3)\n          :     (PKCS #7)\n15 A0  276:   [0] {\n19 30  272:     SEQUENCE {\n23 02    1:       INTEGER 0\n26 31  192:       SET {\n29 30  189:         SEQUENCE {\n32 02    1:           INTEGER 0\n35 30   38:           SEQUENCE {\n37 30   18:             SEQUENCE {\n39 31   16:               SET {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": " 41 30   14:                 SEQUENCE {\n 43 06    3:                   OBJECT IDENTIFIER\n           :                     commonName (2 5 4 3)\n           :                     (X.520 id-at (2 5 4))\n 48 13    7:                   PrintableString 'CarlRSA'\n           :                   }\n           :                 }\n           :               }\n 57 02   16:             INTEGER\n           :               46 34 6B C7 80 00 56 BC 11 D3 6E 2E\n           :               CD 5D 71 D0\n           :             }\n 75 30   13:           SEQUENCE {\n 77 06    9:             OBJECT IDENTIFIER\n           :               rsaEncryption (1 2 840 113549 1 1 1)\n           :               (PKCS #1)\n 88 05    0:             NULL\n           :             }\n 90 04  128:           OCTET STRING\n           :             85 42 BE E3 0B 2E E5 0F 09 AA 24 CA\n           :             DE DA C1 D3 09 B8 27 2B 25 CB D5 71\n           :             FB C9 9C DB F0 B2 6E A0 8A 5F 1C 9D\n           :             4A ED 98 9D 15 39 26 01 1A 2E 6B F0\n           :             44 39 89 37 3C 6F C7 4A 61 0B 0B 27\n           :             77 AA F9 D4 97 A4 D2 21 3F C2 3F 20\n           :             D4 DC 10 E9 D6 3F 00 DB 9C 82 47 D6\n           :             7E 96 FF 12 6E 87 84 A0 BA ED 81 0F\n           :             56 6D A6 1D EB AB C3 B7 A1 B9 F8 5F\n           :             8B CC 1B 4A E5 14 36 06 61 D0 C7 64\n           :             5F 69 67 91 A9 50 EE D8\n           :           }\n           :         }\n221 30   72:       SEQUENCE {\n223 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n           :           (PKCS #7)\n234 30   25:         SEQUENCE {\n236 06    8:           OBJECT IDENTIFIER rc2CBC (1 2 840 113549 3 2)\n           :             (RSADSI encryptionAlgorithm\n           :                 (1 2 840 113549 3))\n246 30   13:           SEQUENCE {\n248 02    1:             INTEGER 58\n251 04    8:             OCTET STRING\n           :               E8 70 81 E2 EF C5 15 57\n           :             }\n           :           }\n261 80   32:         [0]\n           :           06 53 0A 7B 8D 5C 16 0D CC D5 76 D6\n           :           8B 59 D6 45 8C 1A 1A 0C E6 1E F3 DE",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": ":           43 56 00 9B 40 8C 38 5D\n:         }\n:       }\n:     }\n:   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "5.3. S/MIME application/pkcs7-mime Encrypted Message",
      "section_title": true,
      "zh-CHS": "5.3. S/MIME应用程序/pkcs7 MIME加密消息"
    },
    {
      "indent": 3,
      "text": "A full S/MIME message, including MIME, that includes the body part from 5.1.",
      "zh-CHS": "完整的S/MIME消息，包括MIME，其中包括5.1中的正文部分。"
    },
    {
      "indent": 0,
      "text": "MIME-Version: 1.0\nMessage-Id: <00103112005203.00349@amyemily.ig.com>\nDate: Tue, 31 Oct 2000 12:00:52 -0600 (Central Standard Time)\nFrom: User1\nTo: User2\nSubject: Example 5.3\nContent-Type: application/pkcs7-mime;\n        name=smime.p7m;\n        smime-type=enveloped-data\nContent-Transfer-Encoding: base64\nContent-Disposition: attachment; filename=smime.p7m",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "MIIBHgYJKoZIhvcNAQcDoIIBDzCCAQsCAQAxgcAwgb0CAQAwJjASMRAwDgYDVQQDEwdDYXJ sUlNBAhBGNGvHgABWvBHTbi7NXXHQMA0GCSqGSIb3DQEBAQUABIGAC3EN5nGIiJi2lsGPcP 2iJ97a4e8kbKQz36zg6Z2i0yx6zYC4mZ7mX7FBs3IWg+f6KgCLx3M1eCbWx8+MDFbbpXadC DgO8/nUkUNYeNxJtuzubGgzoyEd8Ch4H/dd9gdzTd+taTEgS0ipdSJuNnkVY4/M652jKKHR LFf02hosdR8wQwYJKoZIhvcNAQcBMBQGCCqGSIb3DQMHBAgtaMXpRwZRNYAgDsiSf8Z9P43 LrY4OxUk660cu1lXeCSFOSOpOJ7FuVyU=",
      "zh-CHS": "MiibhgyjkozihvcnaqcAqCawgBg0Caqawjjasmrawdgydqdqeqdyxj SulnbahbgWbGbH7nxHqmA0gCqgSqgSib3QebaqcQc2iJ97a4E8KbkQz36Zg6Z2yx6Zyx6ZyC4IwG+f6KgCLx3M1eCbWx8+MDFBxADC DgO8/Nukunyejtubgzoyed8CH4H/dd9gdzTd+Tateg6Gzg6ZyKhKhz4Ig4JJJJJJJJJJJ0IbJJJJ2Ig2Ig2IbJJJJJ0IWbJ0IdLFF02HOSDR8WQWYJKOZHVCNAQCBMBQGCCQGSIB3DQMHBAGTAMXPRWZRNYAGDSISF8Z9P43 LrY4OxUk660cu1lXeCSFOSOpOJ7FuVyU="
    },
    {
      "indent": 0,
      "text": "6. Digested-data",
      "section_title": true,
      "zh-CHS": "6. 摘要数据"
    },
    {
      "indent": 3,
      "text": "A DigestedData from Alice to Bob of ExContent using SHA-1.",
      "zh-CHS": "使用SHA-1从ExContent的Alice到Bob的摘要数据。"
    },
    {
      "indent": 5,
      "text": " 0 30   94: SEQUENCE {\n 2 06    9:   OBJECT IDENTIFIER digestedData (1 2 840 113549 1 7 5)\n          :     (PKCS #7)\n13 A0   81:   [0] {\n15 30   79:     SEQUENCE {\n17 02    1:       INTEGER 0\n20 30    7:       SEQUENCE {\n22 06    5:         OBJECT IDENTIFIER sha1 (1 3 14 3 2 26)\n          :           (OIW)\n          :         }\n29 30   43:       SEQUENCE {\n31 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n          :           (PKCS #7)\n42 A0   30:         [0] {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "44 04   28:           OCTET STRING 'This is some sample content.'\n          :           }\n          :         }\n74 04   20:       OCTET STRING\n          :         40 6A EC 08 52 79 BA 6E 16 02 2D 9E\n          :         06 29 C0 22 96 87 DD 48\n          :       }\n          :     }\n          :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "7. Encrypted-data",
      "section_title": true,
      "zh-CHS": "7. 加密数据"
    },
    {
      "indent": 0,
      "text": "7.1. Simple EncryptedData",
      "section_title": true,
      "zh-CHS": "7.1. 简单加密数据"
    },
    {
      "indent": 3,
      "text": "An EncryptedData from Alice to Bob of ExContent with no attributes.",
      "zh-CHS": "ExContent的从Alice到Bob的加密数据，不带属性。"
    },
    {
      "indent": 5,
      "text": " 0 30   87: SEQUENCE {\n 2 06    9:   OBJECT IDENTIFIER\n          :     encryptedData (1 2 840 113549 1 7 6)\n          :     (PKCS #7)\n13 A0   74:   [0] {\n15 30   72:     SEQUENCE {\n17 02    1:       INTEGER 0\n20 30   67:       SEQUENCE {\n22 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n          :           (PKCS #7)\n33 30   20:         SEQUENCE {\n35 06    8:           OBJECT IDENTIFIER\n          :             des-EDE3-CBC (1 2 840 113549 3 7)\n          :             (RSADSI encryptionAlgorithm\n          :                 (1 2 840 113549 3))\n45 04    8:           OCTET STRING\n          :             B3 6B 6B FB 62 31 08 4E\n          :           }\n55 80   32:         [0]\n          :           FA FC ED DB 3F 18 17 1D 38 89 11 EA\n          :           34 D6 20 DB F4 C3 D9 58 15 EF 93 3B\n          :           9A F5 D7 04 F6 B5 70 E2\n          :         }\n          :       }\n          :     }\n          :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "The TripleDES key is:",
      "zh-CHS": "TripleDES键是："
    },
    {
      "indent": 7,
      "text": "73 7c 79 1f 25 ea d0 e0 46 29 25 43 52 f7 dc 62 91 e5 cb 26 91 7a da 32",
      "zh-CHS": "73 7c 79 1f 25 ea d0 e0 46 29 25 43 52 f7 dc 62 91 e5 cb 26 91 7a da 32"
    },
    {
      "indent": 0,
      "text": "7.2. EncryptedData with Unprotected Attributes",
      "section_title": true,
      "zh-CHS": "7.2. 使用不受保护的属性加密数据"
    },
    {
      "indent": 3,
      "text": "An EncryptedData from Alice to Bob of ExContent with unprotected attributes.",
      "zh-CHS": "ExContent的Alice到Bob的加密数据，具有不受保护的属性。"
    },
    {
      "indent": 4,
      "text": "  0 30  149: SEQUENCE {\n  3 06    9:   OBJECT IDENTIFIER\n           :     encryptedData (1 2 840 113549 1 7 6)\n           :     (PKCS #7)\n 14 A0  135:   [0] {\n 17 30  132:     SEQUENCE {\n 20 02    1:       INTEGER 2\n 23 30   67:       SEQUENCE {\n 25 06    9:         OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\n           :           (PKCS #7)\n 36 30   20:         SEQUENCE {\n 38 06    8:           OBJECT IDENTIFIER\n           :             des-EDE3-CBC (1 2 840 113549 3 7)\n           :             (RSADSI encryptionAlgorithm\n           :                 (1 2 840 113549 3))\n 48 04    8:           OCTET STRING\n           :             07 27 20 85 90 9E B0 7E\n           :           }\n 58 80   32:         [0]\n           :           D2 20 8F 67 48 8A CB 41 E4 22 68 5D\n           :           BE 77 05 52 26 ED E3 01 BD 00 91 58\n           :           A7 35 6E BC 4B A2 07 33\n           :         }\n 92 A1   58:       [1] {\n 94 30   56:         SEQUENCE {\n 96 06    3:           OBJECT IDENTIFIER '1 2 5555'\n101 31   49:           SET {\n103 04   47:             OCTET STRING\n           :               'This is a test General ASN Attribut'\n           :               'e, number 1.'\n           :             }\n           :           }\n           :         }\n           :       }\n           :     }\n           :   }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "8. Security Considerations",
      "section_title": true,
      "zh-CHS": "8. 安全考虑"
    },
    {
      "indent": 3,
      "text": "Because this document shows examples of S/MIME and CMS messages, this document also inherits all of the security considerations from [SMIME-MSG] and [CMS].",
      "zh-CHS": "由于本文档展示了S/MIME和CMS消息的示例，因此本文档还继承了[SMIME-MSG]和[CMS]的所有安全注意事项。"
    },
    {
      "indent": 3,
      "text": "The Perl script in Appendix A writes to the user's local hard drive. A malicious attacker could modify the Perl script in this document. Be sure to read the Perl code carefully before executing it.",
      "zh-CHS": "附录A中的Perl脚本写入用户的本地硬盘。恶意攻击者可以修改此文档中的Perl脚本。确保在执行Perl代码之前仔细阅读它。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "zh-CHS": "9. 工具书类"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "zh-CHS": "9.1. 规范性引用文件"
    },
    {
      "indent": 3,
      "text": "[CMS] Housley, R., \"Cryptographic Message Syntax (CMS)\", RFC 3852, July 2004.",
      "zh-CHS": "[CMS]Housley，R.，“加密消息语法（CMS）”，RFC 38522004年7月。"
    },
    {
      "indent": 3,
      "text": "[PKIX] Housley, R., Polk, W., Ford, W., and D. Solo, \"Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile\", RFC 3280, April 2002.",
      "zh-CHS": "[PKIX]Housley，R.，Polk，W.，Ford，W.，和D.Solo，“Internet X.509公钥基础设施证书和证书撤销列表（CRL）配置文件”，RFC 32802002年4月。"
    },
    {
      "indent": 3,
      "text": "[SMIME-MSG] Ramsdell, B., \"Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.1 Message Specification\", RFC 3851, July 2004.",
      "zh-CHS": "[SMIME-MSG]Ramsdell，B.，“安全/多用途Internet邮件扩展（S/MIME）版本3.1消息规范”，RFC 3851，2004年7月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "zh-CHS": "9.2. 资料性引用"
    },
    {
      "indent": 3,
      "text": "[DVCS] Adams, C., Sylvester, P., Zolotarev, M., and R. Zuccherato, \"Internet X.509 Public Key Infrastructure Data Validation and Certification Server Protocols\", RFC 3029, February 2001.",
      "zh-CHS": "[DVCS]Adams，C.，Sylvester，P.，Zolotarev，M.，和R.Zuccherato，“互联网X.509公钥基础设施数据验证和认证服务器协议”，RFC 3029，2001年2月。"
    },
    {
      "indent": 0,
      "text": "A. Binaries of the Examples",
      "zh-CHS": "A.示例的二进制文件"
    },
    {
      "indent": 3,
      "text": "This section contains the binaries of the examples shown in the rest of the document. The binaries are stored in a modified Base64 format. There is a Perl program that, when run over the contents of this document, will extract the following binaries and write them out to disk. The program requires Perl.",
      "zh-CHS": "本节包含文档其余部分所示示例的二进制文件。二进制文件以修改后的Base64格式存储。有一个Perl程序，在运行本文档的内容时，将提取以下二进制文件并将其写入磁盘。这个程序需要Perl。"
    },
    {
      "indent": 0,
      "text": "A.1. How the Binaries and Extractor Works",
      "section_title": true,
      "zh-CHS": "A.1. 二进制文件和提取器的工作原理"
    },
    {
      "indent": 3,
      "text": "The program in the next section looks for lines that begin with a '|' character (or some whitespace followed by a '|'), ignoring all other lines. If the line begins with '|', the second character tells what kind of line it is:",
      "zh-CHS": "下一节中的程序将查找以“|”字符开头的行（或后跟“|”的一些空格），忽略所有其他行。如果该行以“|”开头，则第二个字符表示该行的类型："
    },
    {
      "indent": 6,
      "text": "A line that begins with |* is a comment A line that begins with |> gives the name of a new file to start A line that begins with |< tells to end the file (and checks the file name for sanity) A line that begins with |anythingelse is a Base64 line",
      "zh-CHS": "以|*开头的行是注释以|>开头的行给出新文件的名称以|<开头的行告诉结束文件（并检查文件名是否正确）以| anythingelse开头的行是Base64行"
    },
    {
      "indent": 3,
      "text": "The program writes out a series of files, so you should run this in an empty directory. The program will overwrite files (if it can), but won't delete other files already in the directory.",
      "zh-CHS": "程序会写出一系列文件，因此您应该在一个空目录中运行它。程序将覆盖文件（如果可以），但不会删除目录中已有的其他文件。"
    },
    {
      "indent": 3,
      "text": "Run this program with this document as the standard input, such as:",
      "zh-CHS": "将此文档作为标准输入运行此程序，例如："
    },
    {
      "indent": 6,
      "text": "./extractsample.pl <draft-ietf-smime-examples",
      "zh-CHS": "./extractsample.pl<ietf smime示例草案"
    },
    {
      "indent": 3,
      "text": "If you want to extract without the program, copy all the lines between the \"|>\" and \"|<\" markers, remove any page breaks, and remove the \"|\" in the first column of each line. The result is a valid Base64 blob that can be processed by any Base64 decoder.",
      "zh-CHS": "如果要在不使用程序的情况下进行提取，请复制“|>”和“|<”标记之间的所有行，删除任何分页符，并删除每行第一列中的“|”。结果是可以由任何Base64解码器处理的有效Base64 blob。"
    },
    {
      "indent": 0,
      "text": "A.2. Example Extraction Program",
      "section_title": true,
      "zh-CHS": "A.2. 示例提取程序"
    },
    {
      "indent": 0,
      "text": "#!/usr/bin/perl",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "# CMS Samples extraction program. v 1.1",
      "zh-CHS": "#CMS样本提取程序。v 1.1"
    },
    {
      "indent": 0,
      "text": "# Get all the input as an array of lines\n@AllIn = (); while (<STDIN>) { push(@AllIn, $_) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "$Base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqr' .\n    'stuvwxyz0123456789+/=';\n$LineCount = 0; $CurrFile = '';",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "foreach $Line (@AllIn) {",
      "zh-CHS": "foreach$行（@AllIn）{"
    },
    {
      "indent": 0,
      "text": "    $LineCount++;  # Keep the line counter for error messages\n    $Line =~ s/^\\s*//;  # Get rid of leading whitespace\n    chomp($Line);  # Get rid of CR or CRLF at the end of the line\n    if(substr($Line, 0, 1) ne '|') { next }  # Not a special line\n    elsif(substr($Line, 1, 1) eq '*') { next }  # It is a comment\n    elsif(substr($Line, 1, 1) eq '>')\n      { &StartNewFile(substr($Line, 2)) }  # Start a new file\n    elsif(substr($Line, 1, 1) eq '<')\n      { &EndCurrFile(substr($Line, 2)) }  # End the current file\n    else { &DoBase64(substr($Line, 1)) }  # It is a line of Base64\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "sub StartNewFile {\n    $TheNewFile = shift(@_);\n    if($CurrFile ne '') { die \"Was about to start a new file at \" .\n      \"line $LineCount, but the old file, $CurrFile, was open\\n\" }\n    open(OUT, \">$TheNewFile\") or\n      die \"Could not open $TheNewFile for writing: $!\\n\";\n    binmode(OUT);  # This is needed for Windows, is a noop on Unix\n    $CurrFile = $TheNewFile;\n    $LeftOver = 0;  # Amount left from previous Base64 character\n    $NextPos = 0;  # Bit position to start the next Base64 character\n                   #     (bits are numbered 01234567)\n    $OutString = '';  # Holds the text going out to the file\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "sub EndCurrFile {\n    $FileToEnd = shift(@_);\n    if($CurrFile ne $FileToEnd) { die \"Was about to close \" .\n      \"$FileToEnd at line $LineCount, but that name didn't match \" .\n      \"the name of the currently open file, $CurrFile\\n\" }\n    print OUT $OutString;\n    close(OUT);\n    $CurrFile = '';\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "sub DoBase64 {\n    $TheIn = shift(@_);\n    if($CurrFile eq '') { die \"Got some Base64 at line $LineCount, \" .\n      \"but appear to not be writing to any particular file.\\n\" }\n    @Chars = split(//, $TheIn);  # Make an array of the characters\n    foreach $ThisChar (@Chars) {\n    # $ThisVal is the position in the string and the Base64 value\n      $ThisVal = index($Base64Chars, $ThisChar);\n      if($ThisVal == -1) { die \"At line $LineCount, found the \" .\n          \"character $ThisChar, which is not a Base64 character\\n\" }\n      if($ThisVal == 64) { last }  # It is a \"=\", so we're done\n      if ($NextPos == 0 ) {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "          # Don't output anything, just fill the left of $LeftOver\n          $LeftOver = $ThisVal * 4;\n          $NextPos = 6;\n      } elsif ($NextPos == 2) {\n        # Add $ThisVal to $LeftOver, output, and reset\n          $OutString .= chr($LeftOver + $ThisVal);\n          $LeftOver = 0;\n          $NextPos = 0;\n      } elsif ($NextPos == 4) {\n          # Add upper 4 bits of $ThisVal to $LeftOver and output\n          $Upper4 = ($ThisVal & 60);\n          $OutString .= chr($LeftOver + ($Upper4/4));\n          $LeftOver = (($ThisVal - $Upper4) * 64);\n          $NextPos = 2;\n      } elsif ($NextPos == 6) {\n          # Add upper 2 bits of $ThisVal to $LeftOver and output\n          $Upper2 = ($ThisVal & 48);\n          $OutString .= chr($LeftOver + ($Upper2/16));\n          $LeftOver = (($ThisVal - $Upper2) * 16);\n          $NextPos = 4;\n      } else { die \"\\$NextPos has an illegal value: $NextPos.\" }\n    }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "B. Examples in Order of Appearance",
      "zh-CHS": "B.按外观顺序排列的示例"
    },
    {
      "indent": 0,
      "text": "From Section 2.1",
      "zh-CHS": "第2.1节"
    },
    {
      "indent": 0,
      "text": "***ExContent.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Section 2.1\n|>ExContent.bin\n|VGhpcyBpcyBzb21lIHNhbXBsZSBjb250ZW50Lg==\n|<ExContent.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "From Section 2.2",
      "zh-CHS": "第2.2节"
    },
    {
      "indent": 0,
      "text": "***AlicePrivDSSSign.pri***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example AlicePrivDSSSign.pri\n|>AlicePrivDSSSign.pri\n|MIIBSwIBADCCASsGByqGSM44BAEwggEeAoGBAIGNze2D6gqeOT7CSCij5EeT3Q7XqA7sU8\n|WrhAhP/5Thc0h+DNbzREjR/p+vpKGJL+HZMMg23j+bv7dM3F9piuR10DcMkQiVm96nXvn8\n|9J8v3UOoi1TxP7AHCEdNXYjDw7Wz41UIddU5dhDEeL3/nbCElzfy5FEbteQJllzzflvbAh\n|UA4kemGkVmuBPG2o+4NyErYov3k80CgYAmONAUiTKqOfs+bdlLWWpMdiM5BAI1XPLLGjDD\n|HlBd3ZtZ4s2qBT1YwHuiNrhuB699ikIlp/R1z0oIXks+kPht6pzJIYo7dhTpzi5dowfNI4\n|W4LzABfG1JiRGJNkS9+MiVSlNWteL5c+waYTYfEX/Cve3RUP+YdMLRgUpgObo2OQQXAhUA\n|u0RG0aXJRgcu0P561pIH8JqFiT8=",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|<AlicePrivDSSSign.pri",
      "zh-CHS": "|<aliceprivdssign.pri"
    },
    {
      "indent": 0,
      "text": "***AlicePrivRSASign.pri***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example AlicePrivRSASign.pri\n|>AlicePrivRSASign.pri\n|MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAOCJczmN2PX16Id2OX9OsA\n|W7U4PeD7er3H3HdSkNBS5tEt+mhibU0m+qWCn8l+z6glEPMIC+sVCeRkTxLLvYMs/GaG8H\n|2bBgrL7uNAlqE/X3BQWT3166NVbZYf8Zf8mB5vhs6odAcO+sbSx0ny36VTq5mXcCpkhSjE\n|7zVzhXdFdfAgMBAAECgYAApAPDJ0d2NDRspoa1eUkBSy6K0shissfXSAlqi5H3NvJ11ujN\n|FZBgJzFHNWRNlc1nY860n1asLzduHO4Ovygt9DmQbzTYbghb1WVq2EHzE9ctOV7+M8v/Ke\n|QDCz0Foo+38Y6idjeweVfTLyvehwYifQRmXskbr4saw+yRRKt/IQJBAPbW4CIhTF8KcP8n\n|/OWzUGqd5Q+1hZbGQPqoCrSbmwxVwgEd+TeCihTI8pMOks2lZiG5PNIGv7RVMcncrcqYLd\n|ECQQDo3rARJQnSAlEB3oromFD1d3dhpEWTawhVlnNd9MhbEpMic4t/03B/9aSqu3T9PCJq\n|2jiRKoZbbBTorkye+o4vAkEAl0zwh5sXf+4bgxsUtgtqkF+GJ1Hht6B/9eSI41m5+R6b0y\n|l3OCJI1yKxJZi6PVlTt/oeILLIURYjdZNR56vN8QJALPAkW/qgzYUi6tBuT/pszSHTyOTx\n|hERIZHPXKY9+RozsFd7kUbOU5yyZLVVleyTqo2IfPmxNZ0ERO+G+6YMCgwJAWIjZoVA4hG\n|qrA7y730v0nG+4tCol+/bkBS9u4oiJIW9LJZ7Qq1CTyr9AcewhJcV/+wLpIZa4M83ixpXu\n|b41fKA==\n|<AlicePrivRSASign.pri",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***BobPrivRSAEncrypt.pri***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example BobPrivRSAEncrypt.pri\n|>BobPrivRSAEncrypt.pri\n|MIIChQIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAKnhZ5g/OdVf8qCTQV6meY\n|mFyDVdmpFb+x0B2hlwJhcPvaUi0DWFbXqYZhRBXM+3twg7CcmRuBlpN235ZR572akzJKN/\n|O7uvRgGGNjQyywcDWVL8hYsxBLjMGAgUSOZPHPtdYMTgXB9T039T2GkB8QX4enDRvoPGXz\n|jPHCyqaqfrAgMBAAECgYBnzUhMmg2PmMIbZf8ig5xt8KYGHbztpwOIlPIcaw+LNd4Ogngw\n|y+e6alatd8brUXlweQqg9P5F4Kmy9Bnah5jWMIR05PxZbMHGd9ypkdB8MKCixQheIXFD/A\n|0HPfD6bRSeTmPwF1h5HEuYHD09sBvf+iU7o8AsmAX2EAnYh9sDGQJBANDDIsbeopkYdo+N\n|vKZ11mY/1I1FUox29XLE6/BGmvE+XKpVC5va3Wtt+Pw7PAhDk7Vb/s7q/WiEI2Kv8zHCue\n|UCQQDQUfweIrdb7bWOAcjXq/JY1PeClPNTqBlFy2bKKBlf4hAr84/sajB0+E0R9KfEILVH\n|IdxJAfkKICnwJAiEYH2PAkA0umTJSChXdNdVUN5qSO8bKlocSHseIVnDYDubl6nA7xhmqU\n|5iUjiEzuUJiEiUacUgFJlaV/4jbOSnI3vQgLeFAkEAni+zN5r7CwZdV+EJBqRd2ZCWBgVf\n|JAZAcpw6iIWchw+dYhKIFmioNRobQ+g4wJhprwMKSDIETukPj3d9NDAlBwJAVxhn1grSta\n|vCunrnVNqcBU+B1O8BiR4yPWnLMcRSyFRVJQA7HCp8JlDV6abXd8vPFfXuC9WN7rOvTKF8\n|Y0ZB9qANMAsGA1UdDzEEAwIAEA==\n|<BobPrivRSAEncrypt.pri",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***CarlPrivDSSSign.pri***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example CarlPrivDSSSign.pri\n|>CarlPrivDSSSign.pri\n|MIIBSgIBADCCASsGByqGSM44BAEwggEeAoGBALZJGD6KRMEpcZRMAcQSwXp5y1RNqx6B+8\n|ZMsw6UCQbrAdSxyHFLx0XAUCVdnPza5G3T4oZIhIJ9uhWVShb2Ru3d9pjSu36KCoq6Fnu5\n|UAFIk4vrJRVRl1Xcj1MOEKlQ/HC3zTBU/dreqKoitaGvi8wCiOeLcF+5reEI1G0pLdbpAh\n|UA3cEv31POCzRgdz4CpL+KXZi5ENUCgYAM7lebS73atgdqdDdPVX+d7bxhDetGWTxWCytb",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|DJHOpWJSacrhbT69v/7ht7krYTyty65F4wasjCKdnESHC8fN8BzZtU5dc96vDskdWlH1T0\n|R5NVpzqn9GUR+pQhacSOuKeWG01S9TIkRjH4a4o1gGJfgpwO+64HXwQsRjZVKbCgQWAhQZ\n|szilIWIxUOV/uT4IRnjRPrXlcg==\n|<CarlPrivDSSSign.pri",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***CarlPrivRSASign.pri***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example CarlPrivRSASign.pri\n|>CarlPrivRSASign.pri\n|MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAORL/xi4JFf0d/9uc3uTcV\n|y8MxqSknIj2EFG0M0ROgSzjq+Cnb1RHhd68nYsK4Y5p73XjRpT7OQA1ejsojax7eJQ4jIJ\n|ij+fmSWPuE6ruX3VlmXaFqDFvg6uRFvvXvSnKcuC3axE6aqTlCkO+BjWyFde8nbE8hFgOL\n|kbPB2XyWrxAgMBAAECgYEArnPkW19bZlrJ18bvOF9TISovYv7eKZp6hmc2531ieHU9c6C8\n|KQ7zj73Dycm2+LrWE5vDl3rKavC4hWVOD72nqPdUBkG969wgd5DfYZuab3Te6jvUnIdg7X\n|aE8WowN9XgkBb4gEfDGWvtdXe6Su05tl0CRztfG8gcq8vo9SY/pIECQQD/3wmgVgtCUp7E\n|TZOzsEm73ueBfSiZ0LFIugs54Rx7IhgztkD2v9yuHdChrQRxWmEKbjvOMNo2n2UlKbunDn\n|8LAkEA5GloGF/5V9B8ZokPumMdcssgpIF2ZInNfdHCJ6kurHpWmoUH2TADowOrf4iSUCQB\n|qhsHHyBMt8l7Vve2wn6rcwJAVzZsj4wEdmy21O4kRAD4gOKvQgGpDxSE+OcA4I+MJ6QtX6\n|LlbbVjwK1E6XaRpxlJLkb4d4VLO4cE8K/S2FQmlQJAZKEPrFV0G70NYXsXA82w5qcZHYCv\n|8UFI2Bq2iBSgLHrFdtQPDh96KrJuNwSrOUVzukaoD42CXyIUBc+io/N8gwJAJh4dHKGYK+\n|TbOOhXbmtzGYhhOvp0SjaLR2hdUOsm4+p9m05lqa97q0sudlE9qNARq6PWqMAnNh1UC6qn\n|0W2N+g==\n|<CarlPrivRSASign.pri",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***DianePrivDSSSign.pri***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example DianePrivDSSSign.pri\n|>DianePrivDSSSign.pri\n|MIIBSwIBADCCASsGByqGSM44BAEwggEeAoGBALZJGD6KRMEpcZRMAcQSwXp5y1RNqx6B+8\n|ZMsw6UCQbrAdSxyHFLx0XAUCVdnPza5G3T4oZIhIJ9uhWVShb2Ru3d9pjSu36KCoq6Fnu5\n|UAFIk4vrJRVRl1Xcj1MOEKlQ/HC3zTBU/dreqKoitaGvi8wCiOeLcF+5reEI1G0pLdbpAh\n|UA3cEv31POCzRgdz4CpL+KXZi5ENUCgYAM7lebS73atgdqdDdPVX+d7bxhDetGWTxWCytb\n|DJHOpWJSacrhbT69v/7ht7krYTyty65F4wasjCKdnESHC8fN8BzZtU5dc96vDskdWlH1T0\n|R5NVpzqn9GUR+pQhacSOuKeWG01S9TIkRjH4a4o1gGJfgpwO+64HXwQsRjZVKbCgQXAhUA\n|lpX54MHgQS0yD4tCUpMq5h4OISk=\n|<DianePrivDSSSign.pri",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***DianePrivRSASignEncrypt.pri***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example DianePrivRSASignEncrypt.pri\n|>DianePrivRSASignEncrypt.pri\n|MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBANb9uMBwxkwl7OrP6ny7om\n|L68OYyOlP/sZJaF/Qg4ZkkggrQ9nz7RMqLJwbxfiYDqXadz+ygLHCW8oNC9tS3KAq7+L9K\n|TBk/B9ugwWAet35n996xw2BJrEXX+MbvCDchk0fu8HM1crACxPMRw15H5Qq3g/HbdGlki0\n|QdlV3NKMCFAgMBAAECgYA9vc3CDmEUW0vnv2AjBCvFazWllkUj/Gl9kzwP0yWWumJSQuKW\n|z/5YgI/rsYy91A1l0Dp3RSSeDOuGgMOsIRFxROOyqKkurBfSo4QlY7W8Lx7d9iH/FSAkW/\n|GAL9VBDjIk99RKMp65SdgZjj85jWK9gPwMJJKT5MPXBZFTu5a2QQJBAPO4P0rRlLCRYBNB\n|kg2NRD93Hf+WI0QI1AtwyRqv6ZCU8rDVX08ZhVChkJGuvQV2UrMi2Kh8jlR/AHJPNnVoc7",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|UCQQDh0ucRVwaucpUiFqoCtFrtTp2CEU+WPIbJEI1WezF1eWnndWg4AEsu0iYy3bHi4CxU\n|gAp1utFmlhuwDqB+0ruRAkEAr7a82yJzQ0HstLVnqaGZ/O/Sjv0d++Upi/4K39TIXlclCl\n|0r1AmgVlvFsWL8IL4ILeMHtaHns//EwKVfrBJcqQJBALmYQfwIUB9zYIoBonxSiiBa6iyJ\n|2aUZ3ZTGG8MlwIJR5O4rmhncc+3pHSfU+GwD3asdCHu1rH/pgpvxiYpx22ECQAEHIZdfem\n|Co/VpcB9+o3vfisTR9/OuRvbBzdMjEvj9YRTAGkLOsacyz9z98rMe4G2WhFjk5sON0fc/N\n|xaxsv+U=\n|<DianePrivRSASignEncrypt.pri",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "From Section 2.3",
      "zh-CHS": "第2.3节"
    },
    {
      "indent": 0,
      "text": "***AliceDSSSignByCarlNoInherit.cer***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example AliceDSSSignByCarlNoInherit.cer\n|>AliceDSSSignByCarlNoInherit.cer\n|MIIC3DCCApugAwIBAgICAMgwCQYHKoZIzjgEAzASMRAwDgYDVQQDEwdDYXJsRFNTMB4XDT\n|k5MDgxNzAxMTA0OVoXDTM5MTIzMTIzNTk1OVowEzERMA8GA1UEAxMIQWxpY2VEU1MwggG2\n|MIIBKwYHKoZIzjgEATCCAR4CgYEAgY3N7YPqCp45PsJIKKPkR5PdDteoDuxTxauECE//lO\n|FzSH4M1vNESNH+n6+koYkv4dkwyDbeP5u/t0zcX2mK5HXQNwyRCJWb3qde+fz0ny/dQ6iL\n|VPE/sAcIR01diMPDtbPjVQh11Tl2EMR4vf+dsISXN/LkURu15AmWXPN+W9sCFQDiR6YaRW\n|a4E8baj7g3IStii/eTzQKBgCY40BSJMqo5+z5t2UtZakx2IzkEAjVc8ssaMMMeUF3dm1ni\n|zaoFPVjAe6I2uG4Hr32KQiWn9HXPSgheSz6Q+G3qnMkhijt2FOnOLl2jB80jhbgvMAF8bU\n|mJEYk2RL34yJVKU1a14vlz7BphNh8Rf8K97dFQ/5h0wtGBSmA5ujY5A4GEAAKBgFzjuVp1\n|FJYLqXrd4z+p7Kxe3L23ExE0phaJKBEj2TSGZ3V1ExI9Q1tv5VG/+onyohs+JH09B41bY8\n|i7RaWgSuOF1s4GgD/oI34a8iSrUxq4Jw0e7wi/ZhSAXGKsZfoVi/G7NNTSljf2YUeyxDKE\n|8H5BQP1Gp2NOM/Kl4vTyg+W4o4GBMH8wDAYDVR0TAQH/BAIwADAOBgNVHQ8BAf8EBAMCBs\n|AwHwYDVR0jBBgwFoAUcEQ+gi5vh95K03XjPSC8QyuT8R8wHQYDVR0OBBYEFL5sobPjwfft\n|Q3CkzhMB4v3jl/7NMB8GA1UdEQQYMBaBFEFsaWNlRFNTQGV4YW1wbGUuY29tMAkGByqGSM\n|44BAMDMAAwLQIUVQykGR9CK4lxIjONg2q1PWdrv0UCFQCfYVNSVAtcst3a53Yd4hBSW0Ne\n|vQ==\n|<AliceDSSSignByCarlNoInherit.cer",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***AliceRSASignByCarl.cer***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example AliceRSASignByCarl.cer\n|>AliceRSASignByCarl.cer\n|MIICLDCCAZWgAwIBAgIQRjRrx4AAVrwR024uxBCzsDANBgkqhkiG9w0BAQUFADASMRAwDg\n|YDVQQDEwdDYXJsUlNBMB4XDTk5MDkxOTAxMDg0N1oXDTM5MTIzMTIzNTk1OVowEzERMA8G\n|A1UEAxMIQWxpY2VSU0EwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAOCJczmN2PX16I\n|d2OX9OsAW7U4PeD7er3H3HdSkNBS5tEt+mhibU0m+qWCn8l+z6glEPMIC+sVCeRkTxLLvY\n|Ms/GaG8H2bBgrL7uNAlqE/X3BQWT3166NVbZYf8Zf8mB5vhs6odAcO+sbSx0ny36VTq5mX\n|cCpkhSjE7zVzhXdFdfAgMBAAGjgYEwfzAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIG\n|wDAfBgNVHSMEGDAWgBTp4JAnrHggeprTTPJCN04irp44uzAdBgNVHQ4EFgQUd9K00bdMio\n|qjzkWdzuw8oDrj/1AwHwYDVR0RBBgwFoEUQWxpY2VSU0FAZXhhbXBsZS5jb20wDQYJKoZI\n|hvcNAQEFBQADgYEAPnBHqEjME1iPylFxa042GF0EfoCxjU3MyqOPzH1WyLzPbrMcWakgqg\n|WBqE4lradwFHUv9ceb0Q7pY9Jkt8ZmbnMhVN/0uiVdfUnTlGsiNnRzuErsL2Tt0z3Sp0LF\n|6DeKtNufZ+S9n/n+dO/q+e5jatg/SyUJtdgadq7rm9tJsCI=\n|<AliceRSASignByCarl.cer",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***BobRSASignByCarl.cer***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example BobRSASignByCarl.cer\n|>BobRSASignByCarl.cer\n|MIICJzCCAZCgAwIBAgIQRjRrx4AAVrwR024uzV1x0DANBgkqhkiG9w0BAQUFADASMRAwDg\n|YDVQQDEwdDYXJsUlNBMB4XDTk5MDkxOTAxMDkwMloXDTM5MTIzMTIzNTk1OVowETEPMA0G\n|A1UEAxMGQm9iUlNBMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCp4WeYPznVX/Kgk0\n|FepnmJhcg1XZqRW/sdAdoZcCYXD72lItA1hW16mGYUQVzPt7cIOwnJkbgZaTdt+WUee9mp\n|MySjfzu7r0YBhjY0MssHA1lS/IWLMQS4zBgIFEjmTxz7XWDE4FwfU9N/U9hpAfEF+Hpw0b\n|6Dxl84zxwsqmqn6wIDAQABo38wfTAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIFIDAf\n|BgNVHSMEGDAWgBTp4JAnrHggeprTTPJCN04irp44uzAdBgNVHQ4EFgQU6PS4Z9izlqQq8x\n|GqKdOVWoYWtCQwHQYDVR0RBBYwFIESQm9iUlNBQGV4YW1wbGUuY29tMA0GCSqGSIb3DQEB\n|BQUAA4GBAHuOZsXxED8QIEyIcat7QGshM/pKld6dDltrlCEFwPLhfirNnJOIh/uLt359QW\n|Hh5NZt+eIEVWFFvGQnRMChvVl52R1kPCHWRbBdaDOS6qzxV+WBfZjmNZGjOd539OgcOync\n|f1EHl/M28FAK3Zvetl44ESv7V+qJba3JiNiPzyvT\n|<BobRSASignByCarl.cer",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***CarlDSSSelf.cer***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example CarlDSSSelf.cer\n|>CarlDSSSelf.cer\n|MIICmzCCAlqgAwIBAgIBATAJBgcqhkjOOAQDMBIxEDAOBgNVBAMTB0NhcmxEU1MwHhcNOT\n|kwODE2MjI1MDUwWhcNMzkxMjMxMjM1OTU5WjASMRAwDgYDVQQDEwdDYXJsRFNTMIIBtzCC\n|ASsGByqGSM44BAEwggEeAoGBALZJGD6KRMEpcZRMAcQSwXp5y1RNqx6B+8ZMsw6UCQbrAd\n|SxyHFLx0XAUCVdnPza5G3T4oZIhIJ9uhWVShb2Ru3d9pjSu36KCoq6Fnu5UAFIk4vrJRVR\n|l1Xcj1MOEKlQ/HC3zTBU/dreqKoitaGvi8wCiOeLcF+5reEI1G0pLdbpAhUA3cEv31POCz\n|Rgdz4CpL+KXZi5ENUCgYAM7lebS73atgdqdDdPVX+d7bxhDetGWTxWCytbDJHOpWJSacrh\n|bT69v/7ht7krYTyty65F4wasjCKdnESHC8fN8BzZtU5dc96vDskdWlH1T0R5NVpzqn9GUR\n|+pQhacSOuKeWG01S9TIkRjH4a4o1gGJfgpwO+64HXwQsRjZVKbCgOBhQACgYEAmYd0JwNm\n|oLHArdwsdbvhbESc2iFtTUdtsWIJ6diuHvI6tJSxo456m3FOAJTJtCVOuWCWGSQB82IM/n\n|XA+87YaADj/dVwT98jlhkGlPSxYY86V7EIEaQLJiXwUnaB6gtiDZUq5oa6crKnUIMLqifN\n|G6lNiZrXjRg5hD+LxVZNgHqjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAg\n|GGMB0GA1UdDgQWBBRwRD6CLm+H3krTdeM9ILxDK5PxHzAJBgcqhkjOOAQDAzAAMC0CFGup\n|8E56Wnnj+b49K8kGN+kRF6ETAhUAjzRpKouxPAN5lDJNEh/OiftGsjs=\n|<CarlDSSSelf.cer",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***CarlRSASelf.cer***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example CarlRSASelf.cer\n|>CarlRSASelf.cer\n|MIIB6zCCAVSgAwIBAgIQRjRrx4AAVrwR024un/JQIDANBgkqhkiG9w0BAQUFADASMRAwDg\n|YDVQQDEwdDYXJsUlNBMB4XDTk5MDgxODA3MDAwMFoXDTM5MTIzMTIzNTk1OVowEjEQMA4G\n|A1UEAxMHQ2FybFJTQTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA5Ev/GLgkV/R3/2\n|5ze5NxXLwzGpKSciPYQUbQzRE6BLOOr4KdvVEeF3rydiwrhjmnvdeNGlPs5ADV6OyiNrHt\n|4lDiMgmKP5+ZJY+4Tqu5fdWWZdoWoMW+Dq5EW+9e9Kcpy4LdrETpqpOUKQ74GNbIV17yds\n|TyEWA4uRs8HZfJavECAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\n|AYYwHQYDVR0OBBYEFOngkCeseCB6mtNM8kI3TiKunji7MA0GCSqGSIb3DQEBBQUAA4GBAL\n|ee1ATT7Snk/4mJFS5M2wzwSA8yYe7EBOwSXS3/D2RZfgrD7Rj941ZAN6cHtfA4EmFQ7e/d",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|P+MLuGGlpJs85p6cVJq2ldbabDu1LUU1nUkBdvq5uTH5+WsSU6D1FGCbfco+8lNrsDdvre\n|Z019v6WuoUQWNdzb7IDsHaao1TNBgC\n|<CarlRSASelf.cer",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***DianeDSSSignByCarlInherit.cer***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example DianeDSSSignByCarlInherit.cer\n|>DianeDSSSignByCarlInherit.cer\n|MIIBuDCCAXegAwIBAgICANIwCQYHKoZIzjgEAzASMRAwDgYDVQQDEwdDYXJsRFNTMB4XDT\n|k5MDgxNzAyMDgxMFoXDTM5MTIzMTIzNTk1OVowEzERMA8GA1UEAxMIRGlhbmVEU1MwgZMw\n|CQYHKoZIzjgEAQOBhQACgYEAoAAXeCzufoFTLi5hCA+hm1FSGtpZqHMvEiW2CMvK7ypEdo\n|pSCeq9BSLVD/b9RtevmTgJDhPLTyzdHDT3HL8l/yPTO1nngpc3vjEk2BjI80k5W7fi5Sd+\n|/IxFclt+Po9oTd1GeiK+jv/M2jkpoznln0PpVcnXW6aBZ8zAqs0uxSOjgYEwfzAMBgNVHR\n|MBAf8EAjAAMA4GA1UdDwEB/wQEAwIGwDAfBgNVHSMEGDAWgBRwRD6CLm+H3krTdeM9ILxD\n|K5PxHzAdBgNVHQ4EFgQUZDCZfVzcRQuZOlIvFr9YUN3OKxgwHwYDVR0RBBgwFoEURGlhbm\n|VEU1NAZXhhbXBsZS5jb20wCQYHKoZIzjgEAwMwADAtAhUAoRr4Fw4+XaiM9LZVMx5L4yys\n|uV8CFChLEEVY0hydVTUUGJGyPznftW7T\n|<DianeDSSSignByCarlInherit.cer",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***DianeRSASignByCarl.cer***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example DianeRSASignByCarl.cer\n|>DianeRSASignByCarl.cer\n|MIICLDCCAZWgAwIBAgIQRjRrx4AAVrwR024u1ZowkDANBgkqhkiG9w0BAQUFADASMRAwDg\n|YDVQQDEwdDYXJsUlNBMB4XDTk5MDgxOTA3MDAwMFoXDTM5MTIzMTIzNTk1OVowEzERMA8G\n|A1UEAxMIRGlhbmVSU0EwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANb9uMBwxkwl7O\n|rP6ny7omL68OYyOlP/sZJaF/Qg4ZkkggrQ9nz7RMqLJwbxfiYDqXadz+ygLHCW8oNC9tS3\n|KAq7+L9KTBk/B9ugwWAet35n996xw2BJrEXX+MbvCDchk0fu8HM1crACxPMRw15H5Qq3g/\n|HbdGlki0QdlV3NKMCFAgMBAAGjgYEwfzAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIF\n|4DAfBgNVHSMEGDAWgBTp4JAnrHggeprTTPJCN04irp44uzAdBgNVHQ4EFgQUjPPLdQ6NMf\n|bUKdpEknW4/u1POQwwHwYDVR0RBBgwFoEURGlhbmVSU0FAZXhhbXBsZS5jb20wDQYJKoZI\n|hvcNAQEFBQADgYEAfaYstXhC1nnzMf72QsoPEweSCRvgb7CRGPa/SvvMY3n7gb/dl8eQa8\n|sKNytBagOYxRs+MshFK4YBnBziNu8WwRqSuL5i+1M+SUcLxLnkK1imBoPwsqe7hX7VxtrO\n|nHsxctei6kGrasDdH7kURBjPhFdm6MXmuNwtsx8bKEM2dXo=\n|<DianeRSASignByCarl.cer",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "From Section 2.4",
      "zh-CHS": "第2.4节"
    },
    {
      "indent": 0,
      "text": "***CarlDSSCRLForAll.crl***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example CarlDSSCRLForAll.crl\n|>CarlDSSCRLForAll.crl\n|MIHYMIGZMAkGByqGSM44BAMwEjEQMA4GA1UEAxMHQ2FybERTUxcNOTkwODI3MDcwMDAwWj\n|BpMBMCAgDIFw05OTA4MjIwNzAwMDBaMBMCAgDJFw05OTA4MjIwNzAwMDBaMBMCAgDTFw05\n|OTA4MjIwNzAwMDBaMBMCAgDSFw05OTA4MjIwNzAwMDBaMBMCAgDUFw05OTA4MjQwNzAwMD\n|BaMAkGByqGSM44BAMDLwAwLAIUfmVSdjP+NHMX0feW+aDU2G1cfT0CFAJ6W7fVWxjBz4fv\n|ftok8yqDnDWh\n|<CarlDSSCRLForAll.crl",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***CarlDSSCRLForCarl.crl***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example CarlDSSCRLForCarl.crl\n|>CarlDSSCRLForCarl.crl\n|MIGDMEQwCQYHKoZIzjgEAzASMRAwDgYDVQQDEwdDYXJsRFNTFw05OTA4MjUwNzAwMDBaMB\n|QwEgIBARcNOTkwODIyMDcwMDAwWjAJBgcqhkjOOAQDAzAAMC0CFQCzH8VPej3sdtVg+d55\n|IuxPsJD+lwIUWovDhLxmhxu/eYJbCl0H9rqpBSk=\n|<CarlDSSCRLForCarl.crl",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***CarlDSSCRLEmpty.crl***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example CarlDSSCRLEmpty.crl\n|>CarlDSSCRLEmpty.crl\n|MG0wLjAJBgcqhkjOOAQDMBIxEDAOBgNVBAMTB0NhcmxEU1MXDTk5MDgyMDA3MDAwMFowCQ\n|YHKoZIzjgEAwMwADAtAhRiPzYXMVguZ1B59QlLjK3Ua/RknwIVALU7TqFMe/0Pw42btv7D\n|XW/eZSh9\n|<CarlDSSCRLEmpty.crl",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***CarlRSACRLForAll.crl***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example CarlRSACRLForAll.crl\n|>CarlRSACRLForAll.crl\n|MIIBMzCBnTANBgkqhkiG9w0BAQQFADASMRAwDgYDVQQDEwdDYXJsUlNBFw05OTA4MjcwNz\n|AwMDBaMGkwIQIQRjRrx4AAVrwR024uxBCzsBcNOTkwODIyMDcwMDAwWjAhAhBGNGvHgABW\n|vBHTbi7VmjCQFw05OTA4MjIwNzAwMDBaMCECEEY0a8eAAFa8EdNuLs1dcdAXDTk5MDgyND\n|A3MDAwMFowDQYJKoZIhvcNAQEEBQADgYEAv7OXqlPwMiEWK3eSemu7l8jc6vH6ZhYwDrWe\n|XPCB1F6zbsGIa4zUXsVN+0deZvNdq+W0GDZgqE2cPInsbye/NVBxgcK5RFtiiRkSMal7mt\n|PMZssR2QsQR3etTyLZ5X8w8lv8lFGlWHY7H6hGph/2od5Voe0xiGmXDwjT1AxgWx4=\n|<CarlRSACRLForAll.crl",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***CarlRSACRLForCarl.crl***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example CarlRSACRLForCarl.crl\n|>CarlRSACRLForCarl.crl\n|MIHsMFcwDQYJKoZIhvcNAQEEBQAwEjEQMA4GA1UEAxMHQ2FybFJTQRcNOTkwODI1MDcwMD\n|AwWjAjMCECEEY0a8eAAFa8EdNuLp/yUCAXDTk5MDgyMjA3MDAwMFowDQYJKoZIhvcNAQEE\n|BQADgYEAIe8h1MEahZVJa8pFYtzXCf+pUS6O2UcY+vjlct1P7XR04/NlMmUoLJodV+XVJg\n|bq1eYjlYSNDome7psML84H96PRa4VMD//m3fzczXMsHn3csHHFTPwBblJXaR45Y98SIjDH\n|E1WUBW4qAKlbxCpmlGLONjPCK2NHJZ3z3nDuAFY=\n|<CarlRSACRLForCarl.crl",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***CarlRSACRLEmpty.crl***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example CarlRSACRLEmpty.crl\n|>CarlRSACRLEmpty.crl\n|MIHHMDIwDQYJKoZIhvcNAQEEBQAwEjEQMA4GA1UEAxMHQ2FybFJTQRcNOTkwODIwMDcwMD\n|AwWjANBgkqhkiG9w0BAQQFAAOBgQCpxSG4E3x087UR7ATzIEWGHgtuf4NtX/Q0dgZZJQ4E\n|PYgJiIE3xNwgmPoXgQs3lKy0j3tRiRSky3JzFAe8IpxAoQf8RHyFDwuI0e7hDq/2FnStoa",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|/BAHUAZOqlmvYLCKLblRlfpqe5OUUlCg72XoTn+LlayRjCDriglr6BOoBtyQ==\n|<CarlRSACRLEmpty.crl",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Rest of the sections",
      "zh-CHS": "其余部分"
    },
    {
      "indent": 0,
      "text": "***3.1.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 3.1.bin\n|>3.1.bin\n|MIAGCSqGSIb3DQEHAaCAJIAEBFRoaXMEGCBpcyBzb21lIHNhbXBsZSBjb250ZW50LgAAAA\n|AAAA==\n|<3.1.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***3.2.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 3.2.bin\n|>3.2.bin\n|MCsGCSqGSIb3DQEHAaAeBBxUaGlzIGlzIHNvbWUgc2FtcGxlIGNvbnRlbnQu\n|<3.2.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***4.1.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 4.1.bin\n|>4.1.bin\n|MIIDlwYJKoZIhvcNAQcCoIIDiDCCA4QCAQExCTAHBgUrDgMCGjArBgkqhkiG9w0BBwGgHg\n|QcVGhpcyBpcyBzb21lIHNhbXBsZSBjb250ZW50LqCCAuAwggLcMIICm6ADAgECAgIAyDAJ\n|BgcqhkjOOAQDMBIxEDAOBgNVBAMTB0NhcmxEU1MwHhcNOTkwODE3MDExMDQ5WhcNMzkxMj\n|MxMjM1OTU5WjATMREwDwYDVQQDEwhBbGljZURTUzCCAbYwggErBgcqhkjOOAQBMIIBHgKB\n|gQCBjc3tg+oKnjk+wkgoo+RHk90O16gO7FPFq4QIT/+U4XNIfgzW80RI0f6fr6ShiS/h2T\n|DINt4/m7+3TNxfaYrkddA3DJEIlZvep175/PSfL91DqItU8T+wBwhHTV2Iw8O1s+NVCHXV\n|OXYQxHi9/52whJc38uRRG7XkCZZc835b2wIVAOJHphpFZrgTxtqPuDchK2KL95PNAoGAJj\n|jQFIkyqjn7Pm3ZS1lqTHYjOQQCNVzyyxowwx5QXd2bWeLNqgU9WMB7oja4bgevfYpCJaf0\n|dc9KCF5LPpD4beqcySGKO3YU6c4uXaMHzSOFuC8wAXxtSYkRiTZEvfjIlUpTVrXi+XPsGm\n|E2HxF/wr3t0VD/mHTC0YFKYDm6NjkDgYQAAoGAXOO5WnUUlgupet3jP6nsrF7cvbcTETSm\n|FokoESPZNIZndXUTEj1DW2/lUb/6ifKiGz4kfT0HjVtjyLtFpaBK44XWzgaAP+gjfhryJK\n|tTGrgnDR7vCL9mFIBcYqxl+hWL8bs01NKWN/ZhR7LEMoTwfkFA/UanY04z8qXi9PKD5bij\n|gYEwfzAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIGwDAfBgNVHSMEGDAWgBRwRD6CLm\n|+H3krTdeM9ILxDK5PxHzAdBgNVHQ4EFgQUvmyhs+PB9+1DcKTOEwHi/eOX/s0wHwYDVR0R\n|BBgwFoEUQWxpY2VEU1NAZXhhbXBsZS5jb20wCQYHKoZIzjgEAwMwADAtAhRVDKQZH0IriX\n|EiM42DarU9Z2u/RQIVAJ9hU1JUC1yy3drndh3iEFJbQ169MWMwYQIBATAYMBIxEDAOBgNV\n|BAMTB0NhcmxEU1MCAgDIMAcGBSsOAwIaMAkGByqGSM44BAMELjAsAhQJkf7r0mn1GLfXzV\n|X0geoqQmqtAwIUOgfMwyG+4RpLfz61Ddu6HOq8zYk=\n|<4.1.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***4.2.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 4.2.bin\n|>4.2.bin\n|MIIDUgYJKoZIhvcNAQcCoIIDQzCCAz8CAQExCzAJBgUrDgMCGgUAMCsGCSqGSIb3DQEHAa\n|AeBBxUaGlzIGlzIHNvbWUgc2FtcGxlIGNvbnRlbnQuoIICMDCCAiwwggGVoAMCAQICEEY0\n|a8eAAFa8EdNuLsQQs7AwDQYJKoZIhvcNAQEFBQAwEjEQMA4GA1UEAxMHQ2FybFJTQTAeFw\n|05OTA5MTkwMTA4NDdaFw0zOTEyMzEyMzU5NTlaMBMxETAPBgNVBAMTCEFsaWNlUlNBMIGf\n|MA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDgiXM5jdj19eiHdjl/TrAFu1OD3g+3q9x9x3\n|UpDQUubRLfpoYm1NJvqlgp/Jfs+oJRDzCAvrFQnkZE8Sy72DLPxmhvB9mwYKy+7jQJahP1\n|9wUFk99eujVW2WH/GX/Jgeb4bOqHQHDvrG0sdJ8t+lU6uZl3AqZIUoxO81c4V3RXXwIDAQ\n|ABo4GBMH8wDAYDVR0TAQH/BAIwADAOBgNVHQ8BAf8EBAMCBsAwHwYDVR0jBBgwFoAU6eCQ\n|J6x4IHqa00zyQjdOIq6eOLswHQYDVR0OBBYEFHfStNG3TIqKo85Fnc7sPKA64/9QMB8GA1\n|UdEQQYMBaBFEFsaWNlUlNBQGV4YW1wbGUuY29tMA0GCSqGSIb3DQEBBQUAA4GBAD5wR6hI\n|zBNYj8pRcWtONhhdBH6AsY1NzMqjj8x9Vsi8z26zHFmpIKoFgahOJa2ncBR1L/XHm9EO6W\n|PSZLfGZm5zIVTf9LolXX1J05RrIjZ0c7hK7C9k7dM90qdCxeg3irTbn2fkvZ/5/nTv6vnu\n|Y2rYP0slCbXYGnau65vbSbAiMYHLMIHIAgEBMCYwEjEQMA4GA1UEAxMHQ2FybFJTQQIQRj\n|Rrx4AAVrwR024uxBCzsDAJBgUrDgMCGgUAMA0GCSqGSIb3DQEBAQUABIGALyOC0vMJX7gM\n|WOtOnb+JmoHldcSRPdPQ1Xu21f6UoYqs48SE9c1gTieV9s8AhnZ1Pyvw59QCZ6f1x40WBK\n|WztefZMvAk7+cgRNWfB8VTJPrOAR0PFxOnKpWdK+QDlRQL6TkNus5unJ4M6JjmVRPUaG/Q\n|B9eisWJM44+v/eDVXcc=\n|<4.2.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***4.3.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 4.3.bin\n|>4.3.bin\n|MIIDdwYJKoZIhvcNAQcCoIIDaDCCA2QCAQExCTAHBgUrDgMCGjALBgkqhkiG9w0BBwGggg\n|LgMIIC3DCCApugAwIBAgICAMgwCQYHKoZIzjgEAzASMRAwDgYDVQQDEwdDYXJsRFNTMB4X\n|DTk5MDgxNzAxMTA0OVoXDTM5MTIzMTIzNTk1OVowEzERMA8GA1UEAxMIQWxpY2VEU1Mwgg\n|G2MIIBKwYHKoZIzjgEATCCAR4CgYEAgY3N7YPqCp45PsJIKKPkR5PdDteoDuxTxauECE//\n|lOFzSH4M1vNESNH+n6+koYkv4dkwyDbeP5u/t0zcX2mK5HXQNwyRCJWb3qde+fz0ny/dQ6\n|iLVPE/sAcIR01diMPDtbPjVQh11Tl2EMR4vf+dsISXN/LkURu15AmWXPN+W9sCFQDiR6Ya\n|RWa4E8baj7g3IStii/eTzQKBgCY40BSJMqo5+z5t2UtZakx2IzkEAjVc8ssaMMMeUF3dm1\n|nizaoFPVjAe6I2uG4Hr32KQiWn9HXPSgheSz6Q+G3qnMkhijt2FOnOLl2jB80jhbgvMAF8\n|bUmJEYk2RL34yJVKU1a14vlz7BphNh8Rf8K97dFQ/5h0wtGBSmA5ujY5A4GEAAKBgFzjuV\n|p1FJYLqXrd4z+p7Kxe3L23ExE0phaJKBEj2TSGZ3V1ExI9Q1tv5VG/+onyohs+JH09B41b\n|Y8i7RaWgSuOF1s4GgD/oI34a8iSrUxq4Jw0e7wi/ZhSAXGKsZfoVi/G7NNTSljf2YUeyxD\n|KE8H5BQP1Gp2NOM/Kl4vTyg+W4o4GBMH8wDAYDVR0TAQH/BAIwADAOBgNVHQ8BAf8EBAMC\n|BsAwHwYDVR0jBBgwFoAUcEQ+gi5vh95K03XjPSC8QyuT8R8wHQYDVR0OBBYEFL5sobPjwf\n|ftQ3CkzhMB4v3jl/7NMB8GA1UdEQQYMBaBFEFsaWNlRFNTQGV4YW1wbGUuY29tMAkGByqG\n|SM44BAMDMAAwLQIUVQykGR9CK4lxIjONg2q1PWdrv0UCFQCfYVNSVAtcst3a53Yd4hBSW0\n|NevTFjMGECAQEwGDASMRAwDgYDVQQDEwdDYXJsRFNTAgIAyDAHBgUrDgMCGjAJBgcqhkjO\n|OAQDBC4wLAIUBvvHKiTVNIn3i7X9cySlhsgPWmwCFGZpGbxoWNGNsZ1SP9oUiA39yaG4\n|<4.3.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***4.4.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 4.4.bin\n|>4.4.bin\n|MIILDQYJKoZIhvcNAQcCoIIK/jCCCvoCAQExCTAHBgUrDgMCGjArBgkqhkiG9w0BBwGgHg\n|QcVGhpcyBpcyBzb21lIHNhbXBsZSBjb250ZW50LqCCB68wggIsMIIBlaADAgECAhBGNGvH\n|gABWvBHTbi7EELOwMA0GCSqGSIb3DQEBBQUAMBIxEDAOBgNVBAMTB0NhcmxSU0EwHhcNOT\n|kwOTE5MDEwODQ3WhcNMzkxMjMxMjM1OTU5WjATMREwDwYDVQQDEwhBbGljZVJTQTCBnzAN\n|BgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA4IlzOY3Y9fXoh3Y5f06wBbtTg94Pt6vcfcd1KQ\n|0FLm0S36aGJtTSb6pYKfyX7PqCUQ8wgL6xUJ5GRPEsu9gyz8ZobwfZsGCsvu40CWoT9fcF\n|BZPfXro1Vtlh/xl/yYHm+Gzqh0Bw76xtLHSfLfpVOrmZdwKmSFKMTvNXOFd0V18CAwEAAa\n|OBgTB/MAwGA1UdEwEB/wQCMAAwDgYDVR0PAQH/BAQDAgbAMB8GA1UdIwQYMBaAFOngkCes\n|eCB6mtNM8kI3TiKunji7MB0GA1UdDgQWBBR30rTRt0yKiqPORZ3O7DygOuP/UDAfBgNVHR\n|EEGDAWgRRBbGljZVJTQUBleGFtcGxlLmNvbTANBgkqhkiG9w0BAQUFAAOBgQA+cEeoSMwT\n|WI/KUXFrTjYYXQR+gLGNTczKo4/MfVbIvM9usxxZqSCqBYGoTiWtp3AUdS/1x5vRDulj0m\n|S3xmZucyFU3/S6JV19SdOUayI2dHO4SuwvZO3TPdKnQsXoN4q0259n5L2f+f507+r57mNq\n|2D9LJQm12Bp2ruub20mwIjCCApswggJaoAMCAQICAQEwCQYHKoZIzjgEAzASMRAwDgYDVQ\n|QDEwdDYXJsRFNTMB4XDTk5MDgxNjIyNTA1MFoXDTM5MTIzMTIzNTk1OVowEjEQMA4GA1UE\n|AxMHQ2FybERTUzCCAbcwggErBgcqhkjOOAQBMIIBHgKBgQC2SRg+ikTBKXGUTAHEEsF6ec\n|tUTasegfvGTLMOlAkG6wHUschxS8dFwFAlXZz82uRt0+KGSISCfboVlUoW9kbt3faY0rt+\n|igqKuhZ7uVABSJOL6yUVUZdV3I9TDhCpUPxwt80wVP3a3qiqIrWhr4vMAojni3Bfua3hCN\n|RtKS3W6QIVAN3BL99Tzgs0YHc+AqS/il2YuRDVAoGADO5Xm0u92rYHanQ3T1V/ne28YQ3r\n|Rlk8VgsrWwyRzqViUmnK4W0+vb/+4be5K2E8rcuuReMGrIwinZxEhwvHzfAc2bVOXXPerw\n|7JHVpR9U9EeTVac6p/RlEfqUIWnEjrinlhtNUvUyJEYx+GuKNYBiX4KcDvuuB18ELEY2VS\n|mwoDgYUAAoGBAJmHdCcDZqCxwK3cLHW74WxEnNohbU1HbbFiCenYrh7yOrSUsaOOeptxTg\n|CUybQlTrlglhkkAfNiDP51wPvO2GgA4/3VcE/fI5YZBpT0sWGPOlexCBGkCyYl8FJ2geoL\n|Yg2VKuaGunKyp1CDC6onzRupTYma140YOYQ/i8VWTYB6o0IwQDAPBgNVHRMBAf8EBTADAQ\n|H/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUcEQ+gi5vh95K03XjPSC8QyuT8R8wCQYH\n|KoZIzjgEAwMwADAtAhRrqfBOelp54/m+PSvJBjfpERehEwIVAI80aSqLsTwDeZQyTRIfzo\n|n7RrI7MIIC3DCCApugAwIBAgICAMgwCQYHKoZIzjgEAzASMRAwDgYDVQQDEwdDYXJsRFNT\n|MB4XDTk5MDgxNzAxMTA0OVoXDTM5MTIzMTIzNTk1OVowEzERMA8GA1UEAxMIQWxpY2VEU1\n|MwggG2MIIBKwYHKoZIzjgEATCCAR4CgYEAgY3N7YPqCp45PsJIKKPkR5PdDteoDuxTxauE\n|CE//lOFzSH4M1vNESNH+n6+koYkv4dkwyDbeP5u/t0zcX2mK5HXQNwyRCJWb3qde+fz0ny\n|/dQ6iLVPE/sAcIR01diMPDtbPjVQh11Tl2EMR4vf+dsISXN/LkURu15AmWXPN+W9sCFQDi\n|R6YaRWa4E8baj7g3IStii/eTzQKBgCY40BSJMqo5+z5t2UtZakx2IzkEAjVc8ssaMMMeUF\n|3dm1nizaoFPVjAe6I2uG4Hr32KQiWn9HXPSgheSz6Q+G3qnMkhijt2FOnOLl2jB80jhbgv\n|MAF8bUmJEYk2RL34yJVKU1a14vlz7BphNh8Rf8K97dFQ/5h0wtGBSmA5ujY5A4GEAAKBgF\n|zjuVp1FJYLqXrd4z+p7Kxe3L23ExE0phaJKBEj2TSGZ3V1ExI9Q1tv5VG/+onyohs+JH09\n|B41bY8i7RaWgSuOF1s4GgD/oI34a8iSrUxq4Jw0e7wi/ZhSAXGKsZfoVi/G7NNTSljf2YU\n|eyxDKE8H5BQP1Gp2NOM/Kl4vTyg+W4o4GBMH8wDAYDVR0TAQH/BAIwADAOBgNVHQ8BAf8E\n|BAMCBsAwHwYDVR0jBBgwFoAUcEQ+gi5vh95K03XjPSC8QyuT8R8wHQYDVR0OBBYEFL5sob\n|PjwfftQ3CkzhMB4v3jl/7NMB8GA1UdEQQYMBaBFEFsaWNlRFNTQGV4YW1wbGUuY29tMAkG\n|ByqGSM44BAMDMAAwLQIUVQykGR9CK4lxIjONg2q1PWdrv0UCFQCfYVNSVAtcst3a53Yd4h\n|BSW0NevaGB2zCB2DCBmTAJBgcqhkjOOAQDMBIxEDAOBgNVBAMTB0NhcmxEU1MXDTk5MDgy\n|NzA3MDAwMFowaTATAgIAyBcNOTkwODIyMDcwMDAwWjATAgIAyRcNOTkwODIyMDcwMDAwWj\n|ATAgIA0xcNOTkwODIyMDcwMDAwWjATAgIA0hcNOTkwODIyMDcwMDAwWjATAgIA1BcNOTkw\n|ODI0MDcwMDAwWjAJBgcqhkjOOAQDAy8AMCwCFH5lUnYz/jRzF9H3lvmg1NhtXH09AhQCel\n|u31VsYwc+H737aJPMqg5w1oTGCAiowggImAgEBMBgwEjEQMA4GA1UEAxMHQ2FybERTUwIC",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|AMgwBwYFKw4DAhqgXTAYBgkqhkiG9w0BCQMxCwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBT\n|EPFw0wMzA1MTQxNTM5MDBaMCMGCSqGSIb3DQEJBDEWBBRAauwIUnm6bhYCLZ4GKcAilofd\n|SDAJBgcqhkjOOAQDBC4wLAIUO6XgStttWOAZ0QAcT0SaV3pxZmgCFBoRmNYfH680gQHevo\n|vctqhqkWkToYIBYjA+BgsqhkiG9w0BCRACBDEvMC0MIENvbnRlbnQgSGludHMgRGVzY3Jp\n|cHRpb24gQnVmZmVyBgkqhkiG9w0BBwEwggEeBgkqhkiG9w0BCQYxggEPMIIBCwIBATAmMB\n|IxEDAOBgNVBAMTB0NhcmxSU0ECEEY0a8eAAFa8EdNuLsQQs7AwBwYFKw4DAhqgQzAcBgkq\n|hkiG9w0BCQUxDxcNMDMwNTE0MTUzOTAwWjAjBgkqhkiG9w0BCQQxFgQUAl9JTjmYUIWzZt\n|OKH3ueaar72DMwDQYJKoZIhvcNAQEBBQAEgYBtqiAk7XrupV6H3XUfK1QQZfTOm7EseHS8\n|ixxgtduLA55J8it/k249iRTJ42v09n12rj5YH5u7vHwwGU4Q9wLxi1u025q7k7QY0MwryZ\n|GprdlG+GWp4nGV0NROH810b4LoN29aPcvH1F/CgBva04RAaF9WmmL1Ow1sM8PtZz9Dvw==\n|<4.4.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***4.5.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 4.5.bin\n|>4.5.bin\n|MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAaCAJIAEBF\n|RoaXMEGCBpcyBzb21lIHNhbXBsZSBjb250ZW50LgAAAAAAAKCAMIIB6zCCAVSgAwIBAgIQ\n|RjRrx4AAVrwR024un/JQIDANBgkqhkiG9w0BAQUFADASMRAwDgYDVQQDEwdDYXJsUlNBMB\n|4XDTk5MDgxODA3MDAwMFoXDTM5MTIzMTIzNTk1OVowEjEQMA4GA1UEAxMHQ2FybFJTQTCB\n|nzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA5Ev/GLgkV/R3/25ze5NxXLwzGpKSciPYQU\n|bQzRE6BLOOr4KdvVEeF3rydiwrhjmnvdeNGlPs5ADV6OyiNrHt4lDiMgmKP5+ZJY+4Tqu5\n|fdWWZdoWoMW+Dq5EW+9e9Kcpy4LdrETpqpOUKQ74GNbIV17ydsTyEWA4uRs8HZfJavECAw\n|EAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0OBBYEFOng\n|kCeseCB6mtNM8kI3TiKunji7MA0GCSqGSIb3DQEBBQUAA4GBALee1ATT7Snk/4mJFS5M2w\n|zwSA8yYe7EBOwSXS3/D2RZfgrD7Rj941ZAN6cHtfA4EmFQ7e/dP+MLuGGlpJs85p6cVJq2\n|ldbabDu1LUU1nUkBdvq5uTH5+WsSU6D1FGCbfco+8lNrsDdvreZ019v6WuoUQWNdzb7IDs\n|Haao1TNBgCMIICLDCCAZWgAwIBAgIQRjRrx4AAVrwR024uxBCzsDANBgkqhkiG9w0BAQUF\n|ADASMRAwDgYDVQQDEwdDYXJsUlNBMB4XDTk5MDkxOTAxMDg0N1oXDTM5MTIzMTIzNTk1OV\n|owEzERMA8GA1UEAxMIQWxpY2VSU0EwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAOCJ\n|czmN2PX16Id2OX9OsAW7U4PeD7er3H3HdSkNBS5tEt+mhibU0m+qWCn8l+z6glEPMIC+sV\n|CeRkTxLLvYMs/GaG8H2bBgrL7uNAlqE/X3BQWT3166NVbZYf8Zf8mB5vhs6odAcO+sbSx0\n|ny36VTq5mXcCpkhSjE7zVzhXdFdfAgMBAAGjgYEwfzAMBgNVHRMBAf8EAjAAMA4GA1UdDw\n|EB/wQEAwIGwDAfBgNVHSMEGDAWgBTp4JAnrHggeprTTPJCN04irp44uzAdBgNVHQ4EFgQU\n|d9K00bdMioqjzkWdzuw8oDrj/1AwHwYDVR0RBBgwFoEUQWxpY2VSU0FAZXhhbXBsZS5jb2\n|0wDQYJKoZIhvcNAQEFBQADgYEAPnBHqEjME1iPylFxa042GF0EfoCxjU3MyqOPzH1WyLzP\n|brMcWakgqgWBqE4lradwFHUv9ceb0Q7pY9Jkt8ZmbnMhVN/0uiVdfUnTlGsiNnRzuErsL2\n|Tt0z3Sp0LF6DeKtNufZ+S9n/n+dO/q+e5jatg/SyUJtdgadq7rm9tJsCIAADGByzCByAIB\n|ATAmMBIxEDAOBgNVBAMTB0NhcmxSU0ECEEY0a8eAAFa8EdNuLsQQs7AwCQYFKw4DAhoFAD\n|ANBgkqhkiG9w0BAQEFAASBgC8jgtLzCV+4DFjrTp2/iZqB5XXEkT3T0NV7ttX+lKGKrOPE\n|hPXNYE4nlfbPAIZ2dT8r8OfUAmen9ceNFgSls7Xn2TLwJO/nIETVnwfFUyT6zgEdDxcTpy\n|qVnSvkA5UUC+k5DbrObpyeDOiY5lUT1Ghv0AfXorFiTOOPr/3g1V3HAAAAAAAA\n|<4.5.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***4.6.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 4.6.bin\n|>4.6.bin\n|MIIFtwYJKoZIhvcNAQcCoIIFqDCCBaQCAQExCTAHBgUrDgMCGjArBgkqhkiG9w0BBwGgHg\n|QcVGhpcyBpcyBzb21lIHNhbXBsZSBjb250ZW50LqCCBJwwggG4MIIBd6ADAgECAgIA0jAJ\n|BgcqhkjOOAQDMBIxEDAOBgNVBAMTB0NhcmxEU1MwHhcNOTkwODE3MDIwODEwWhcNMzkxMj\n|MxMjM1OTU5WjATMREwDwYDVQQDEwhEaWFuZURTUzCBkzAJBgcqhkjOOAQBA4GFAAKBgQCg\n|ABd4LO5+gVMuLmEID6GbUVIa2lmocy8SJbYIy8rvKkR2ilIJ6r0FItUP9v1G16+ZOAkOE8\n|tPLN0cNPccvyX/I9M7WeeClze+MSTYGMjzSTlbt+LlJ378jEVyW34+j2hN3UZ6Ir6O/8za\n|OSmjOeWfQ+lVyddbpoFnzMCqzS7FI6OBgTB/MAwGA1UdEwEB/wQCMAAwDgYDVR0PAQH/BA\n|QDAgbAMB8GA1UdIwQYMBaAFHBEPoIub4feStN14z0gvEMrk/EfMB0GA1UdDgQWBBRkMJl9\n|XNxFC5k6Ui8Wv1hQ3c4rGDAfBgNVHREEGDAWgRREaWFuZURTU0BleGFtcGxlLmNvbTAJBg\n|cqhkjOOAQDAzAAMC0CFQChGvgXDj5dqIz0tlUzHkvjLKy5XwIUKEsQRVjSHJ1VNRQYkbI/\n|Od+1btMwggLcMIICm6ADAgECAgIAyDAJBgcqhkjOOAQDMBIxEDAOBgNVBAMTB0NhcmxEU1\n|MwHhcNOTkwODE3MDExMDQ5WhcNMzkxMjMxMjM1OTU5WjATMREwDwYDVQQDEwhBbGljZURT\n|UzCCAbYwggErBgcqhkjOOAQBMIIBHgKBgQCBjc3tg+oKnjk+wkgoo+RHk90O16gO7FPFq4\n|QIT/+U4XNIfgzW80RI0f6fr6ShiS/h2TDINt4/m7+3TNxfaYrkddA3DJEIlZvep175/PSf\n|L91DqItU8T+wBwhHTV2Iw8O1s+NVCHXVOXYQxHi9/52whJc38uRRG7XkCZZc835b2wIVAO\n|JHphpFZrgTxtqPuDchK2KL95PNAoGAJjjQFIkyqjn7Pm3ZS1lqTHYjOQQCNVzyyxowwx5Q\n|Xd2bWeLNqgU9WMB7oja4bgevfYpCJaf0dc9KCF5LPpD4beqcySGKO3YU6c4uXaMHzSOFuC\n|8wAXxtSYkRiTZEvfjIlUpTVrXi+XPsGmE2HxF/wr3t0VD/mHTC0YFKYDm6NjkDgYQAAoGA\n|XOO5WnUUlgupet3jP6nsrF7cvbcTETSmFokoESPZNIZndXUTEj1DW2/lUb/6ifKiGz4kfT\n|0HjVtjyLtFpaBK44XWzgaAP+gjfhryJKtTGrgnDR7vCL9mFIBcYqxl+hWL8bs01NKWN/Zh\n|R7LEMoTwfkFA/UanY04z8qXi9PKD5bijgYEwfzAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/w\n|QEAwIGwDAfBgNVHSMEGDAWgBRwRD6CLm+H3krTdeM9ILxDK5PxHzAdBgNVHQ4EFgQUvmyh\n|s+PB9+1DcKTOEwHi/eOX/s0wHwYDVR0RBBgwFoEUQWxpY2VEU1NAZXhhbXBsZS5jb20wCQ\n|YHKoZIzjgEAwMwADAtAhRVDKQZH0IriXEiM42DarU9Z2u/RQIVAJ9hU1JUC1yy3drndh3i\n|EFJbQ169MYHGMGECAQEwGDASMRAwDgYDVQQDEwdDYXJsRFNTAgIAyDAHBgUrDgMCGjAJBg\n|cqhkjOOAQDBC4wLAIUSCTei4XyFq/sgmGpVNAtBKHMWk8CFBft1XcC7nUT2BC9PZcXIIi7\n|/XuBMGECAQEwGDASMRAwDgYDVQQDEwdDYXJsRFNTAgIA0jAHBgUrDgMCGjAJBgcqhkjOOA\n|QDBC4wLAIUFf+BTYytgE6bNVgEN25jbulbg/oCFAZ+WE4rMYRB7Ul5OD530qaMdQgh\n|<4.6.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***4.7.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 4.7.bin\n|>4.7.bin\n|MIIDlAYJKoZIhvcNAQcCoIIDhTCCA4ECAQMxCTAHBgUrDgMCGjArBgkqhkiG9w0BBwGgHg\n|QcVGhpcyBpcyBzb21lIHNhbXBsZSBjb250ZW50LqCCAuAwggLcMIICm6ADAgECAgIAyDAJ\n|BgcqhkjOOAQDMBIxEDAOBgNVBAMTB0NhcmxEU1MwHhcNOTkwODE3MDExMDQ5WhcNMzkxMj\n|MxMjM1OTU5WjATMREwDwYDVQQDEwhBbGljZURTUzCCAbYwggErBgcqhkjOOAQBMIIBHgKB\n|gQCBjc3tg+oKnjk+wkgoo+RHk90O16gO7FPFq4QIT/+U4XNIfgzW80RI0f6fr6ShiS/h2T\n|DINt4/m7+3TNxfaYrkddA3DJEIlZvep175/PSfL91DqItU8T+wBwhHTV2Iw8O1s+NVCHXV\n|OXYQxHi9/52whJc38uRRG7XkCZZc835b2wIVAOJHphpFZrgTxtqPuDchK2KL95PNAoGAJj\n|jQFIkyqjn7Pm3ZS1lqTHYjOQQCNVzyyxowwx5QXd2bWeLNqgU9WMB7oja4bgevfYpCJaf0\n|dc9KCF5LPpD4beqcySGKO3YU6c4uXaMHzSOFuC8wAXxtSYkRiTZEvfjIlUpTVrXi+XPsGm\n|E2HxF/wr3t0VD/mHTC0YFKYDm6NjkDgYQAAoGAXOO5WnUUlgupet3jP6nsrF7cvbcTETSm",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|FokoESPZNIZndXUTEj1DW2/lUb/6ifKiGz4kfT0HjVtjyLtFpaBK44XWzgaAP+gjfhryJK\n|tTGrgnDR7vCL9mFIBcYqxl+hWL8bs01NKWN/ZhR7LEMoTwfkFA/UanY04z8qXi9PKD5bij\n|gYEwfzAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIGwDAfBgNVHSMEGDAWgBRwRD6CLm\n|+H3krTdeM9ILxDK5PxHzAdBgNVHQ4EFgQUvmyhs+PB9+1DcKTOEwHi/eOX/s0wHwYDVR0R\n|BBgwFoEUQWxpY2VEU1NAZXhhbXBsZS5jb20wCQYHKoZIzjgEAwMwADAtAhRVDKQZH0IriX\n|EiM42DarU9Z2u/RQIVAJ9hU1JUC1yy3drndh3iEFJbQ169MWAwXgIBA4AUvmyhs+PB9+1D\n|cKTOEwHi/eOX/s0wBwYFKw4DAhowCQYHKoZIzjgEAwQvMC0CFQCJw2t7VvfDEgBl8Tf1xF\n|gXjRFXgwIUCw9DOqrs3nphLIyc9UGZpzwgw7c=\n|<4.7.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***4.8.eml***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 4.8.eml\n|>4.8.eml\n|TUlNRS1WZXJzaW9uOiAxLjAKVG86IFVzZXIyQGV4YW1wbGVzLmNvbQpGcm9tOiBhbGljZU\n|Rzc0BleGFtcGxlcy5jb20KU3ViamVjdDogRXhhbXBsZSA0LjgKTWVzc2FnZS1JZDogPDAy\n|MDkwNjAwMjU1MDMwMC4yNDlAZXhhbXBsZXMuY29tPgpEYXRlOiBGcmksIDA2IFNlcCAyMD\n|AyIDAwOjI1OjIxIC0wMzAwIApDb250ZW50LVR5cGU6IG11bHRpcGFydC9zaWduZWQ7CiAg\n|ICBtaWNhbGc9U0hBMTsKICAgIGJvdW5kYXJ5PSItLS0tPV9OZXh0Qm91bmRyeV9fX19Gcm\n|ksXzA2X1NlcF8yMDAyXzAwOjI1OjIxIjsKICAgIHByb3RvY29sPSJhcHBsaWNhdGlvbi9w\n|a2NzNy1zaWduYXR1cmUiCgpUaGlzIGlzIGEgbXVsdGktcGFydCBtZXNzYWdlIGluIE1JTU\n|UgZm9ybWF0LgoKLS0tLS0tPV9OZXh0Qm91bmRyeV9fX19GcmksXzA2X1NlcF8yMDAyXzAw\n|OjI1OjIxCgpUaGlzIGlzIHNvbWUgc2FtcGxlIGNvbnRlbnQuCi0tLS0tLT1fTmV4dEJvdW\n|5kcnlfX19fRnJpLF8wNl9TZXBfMjAwMl8wMDoyNToyMQpDb250ZW50LVR5cGU6IGFwcGxp\n|Y2F0aW9uL3BrY3M3LXNpZ25hdHVyZTsgbmFtZT1zbWltZS5wN3MKQ29udGVudC1UcmFuc2\n|Zlci1FbmNvZGluZzogYmFzZTY0CkNvbnRlbnQtRGlzcG9zaXRpb246IGF0dGFjaG1lbnQ7\n|IGZpbGVuYW1lPXNtaW1lLnA3cwoKTUlJRGR3WUpLb1pJaHZjTkFRY0NvSUlEYURDQ0EyUU\n|NBUUV4Q1RBSEJnVXJEZ01DR2pBTEJna3Foa2lHOXcwQkJ3R2dnZ0xnTUlJQwozRENDQXB1\n|Z0F3SUJBZ0lDQU1nd0NRWUhLb1pJempnRUF6QVNNUkF3RGdZRFZRUURFd2REWVhKc1JGTl\n|RNQjRYRFRrNU1EZ3hOekF4Ck1UQTBPVm9YRFRNNU1USXpNVEl6TlRrMU9Wb3dFekVSTUE4\n|R0ExVUVBeE1JUVd4cFkyVkVVMU13Z2dHMk1JSUJLd1lIS29aSXpqZ0UKQVRDQ0FSNENnWU\n|VBZ1kzTjdZUHFDcDQ1UHNKSUtLUGtSNVBkRHRlb0R1eFR4YXVFQ0UvL2xPRnpTSDRNMXZO\n|RVNOSCtuNitrb1lrdgo0ZGt3eURiZVA1dS90MHpjWDJtSzVIWFFOd3lSQ0pXYjNxZGUrZn\n|owbnkvZFE2aUxWUEUvc0FjSVIwMWRpTVBEdGJQalZRaDExVGwyCkVNUjR2Zitkc0lTWE4v\n|TGtVUnUxNUFtV1hQTitXOXNDRlFEaVI2WWFSV2E0RThiYWo3ZzNJU3RpaS9lVHpRS0JnQ1\n|k0MEJTSk1xbzUKK3o1dDJVdFpha3gySXprRUFqVmM4c3NhTU1NZVVGM2RtMW5pemFvRlBW\n|akFlNkkydUc0SHIzMktRaVduOUhYUFNnaGVTejZRK0czcQpuTWtoaWp0MkZPbk9MbDJqQj\n|gwamhiZ3ZNQUY4YlVtSkVZazJSTDM0eUpWS1UxYTE0dmx6N0JwaE5oOFJmOEs5N2RGUS81\n|aDB3dEdCClNtQTV1alk1QTRHRUFBS0JnRnpqdVZwMUZKWUxxWHJkNHorcDdLeGUzTDIzRX\n|hFMHBoYUpLQkVqMlRTR1ozVjFFeEk5UTF0djVWRy8KK29ueW9ocytKSDA5QjQxYlk4aTdS\n|YVdnU3VPRjFzNEdnRC9vSTM0YThpU3JVeHE0SncwZTd3aS9aaFNBWEdLc1pmb1ZpL0c3Tk\n|5UUwpsamYyWVVleXhES0U4SDVCUVAxR3AyTk9NL0tsNHZUeWcrVzRvNEdCTUg4d0RBWURW\n|UjBUQVFIL0JBSXdBREFPQmdOVkhROEJBZjhFCkJBTUNCc0F3SHdZRFZSMGpCQmd3Rm9BVW\n|NFUStnaTV2aDk1SzAzWGpQU0M4UXl1VDhSOHdIUVlEVlIwT0JCWUVGTDVzb2JQandmZnQK\n|UTNDa3poTUI0djNqbC83Tk1COEdBMVVkRVFRWU1CYUJGRUZzYVdObFJGTlRRR1Y0WVcxd2\n|JHVXVZMjl0TUFrR0J5cUdTTTQ0QkFNRApNQUF3TFFJVVZReWtHUjlDSzRseElqT05nMnEx\n|UFdkcnYwVUNGUUNmWVZOU1ZBdGNzdDNhNTNZZDRoQlNXME5ldlRGak1HRUNBUUV3CkdEQV\n|NNUkF3RGdZRFZRUURFd2REWVhKc1JGTlRBZ0lBeURBSEJnVXJEZ01DR2pBSkJnY3Foa2pP",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|T0FRREJDNHdMQUlVTS9tR2Y2Z2sKZ3A5WjBYdFJkR2ltSmVCL0J4VUNGR0ZGSnF3WVJ0MV\n|dZY0lPUW9HaWFvd3FHelZJCgotLS0tLS09X05leHRCb3VuZHJ5X19fX0ZyaSxfMDZfU2Vw\n|XzIwMDJfMDA6MjU6MjEtLQo=\n|<4.8.eml",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***4.9.eml***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 4.9.eml\n|>4.9.eml\n|TUlNRS1WZXJzaW9uOiAxLjAKVG86IFVzZXIyQGV4YW1wbGVzLmNvbQpGcm9tOiBhbGljZU\n|Rzc0BleGFtcGxlcy5jb20KU3ViamVjdDogRXhhbXBsZSA0LjkKTWVzc2FnZS1JZDogPDAy\n|MTAzMTE2NDU0MDMwMC4zMDRAZXhhbXBsZXMuY29tPgpEYXRlOiBUaHUsIDMxIE9jdCAyMD\n|AyIDE2OjQ1OjE0IC0wMzAwIApDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3BrY3M3LW1p\n|bWU7IHNtaW1lLXR5cGU9c2lnbmVkLWRhdGE7CiAgICBuYW1lPXNtaW1lLnA3bQpDb250ZW\n|50LVRyYW5zZmVyLUVuY29kaW5nOiBiYXNlNjQKQ29udGVudC1EaXNwb3NpdGlvbjogYXR0\n|YWNobWVudDsgZmlsZW5hbWU9c21pbWUucDdtCgpNSUlEbVFZSktvWklodmNOQVFjQ29JSU\n|RpakNDQTRZQ0FRRXhDVEFIQmdVckRnTUNHakF0QmdrcWhraUc5dzBCQndHZ0lBUWVEUXBV\n|CmFHbHpJR2x6SUhOdmJXVWdjMkZ0Y0d4bElHTnZiblJsYm5RdW9JSUM0RENDQXR3d2dnS2\n|JvQU1DQVFJQ0FnRElNQWtHQnlxR1NNNDQKQkFNd0VqRVFNQTRHQTFVRUF4TUhRMkZ5YkVS\n|VFV6QWVGdzA1T1RBNE1UY3dNVEV3TkRsYUZ3MHpPVEV5TXpFeU16VTVOVGxhTUJNeApFVE\n|FQQmdOVkJBTVRDRUZzYVdObFJGTlRNSUlCdGpDQ0FTc0dCeXFHU000NEJBRXdnZ0VlQW9H\n|QkFJR056ZTJENmdxZU9UN0NTQ2lqCjVFZVQzUTdYcUE3c1U4V3JoQWhQLzVUaGMwaCtETm\n|J6UkVqUi9wK3ZwS0dKTCtIWk1NZzIzaitidjdkTTNGOXBpdVIxMERjTWtRaVYKbTk2blh2\n|bjg5Sjh2M1VPb2kxVHhQN0FIQ0VkTlhZakR3N1d6NDFVSWRkVTVkaERFZUwzL25iQ0Vsem\n|Z5NUZFYnRlUUpsbHp6Zmx2YgpBaFVBNGtlbUdrVm11QlBHMm8rNE55RXJZb3YzazgwQ2dZ\n|QW1PTkFVaVRLcU9mcytiZGxMV1dwTWRpTTVCQUkxWFBMTEdqRERIbEJkCjNadFo0czJxQl\n|QxWXdIdWlOcmh1QjY5OWlrSWxwL1IxejBvSVhrcytrUGh0NnB6SklZbzdkaFRwemk1ZG93\n|Zk5JNFc0THpBQmZHMUoKaVJHSk5rUzkrTWlWU2xOV3RlTDVjK3dhWVRZZkVYL0N2ZTNSVV\n|ArWWRNTFJnVXBnT2JvMk9RT0JoQUFDZ1lCYzQ3bGFkUlNXQzZsNgozZU0vcWV5c1h0eTl0\n|eE1STktZV2lTZ1JJOWswaG1kMWRSTVNQVU5iYitWUnYvcUo4cUliUGlSOVBRZU5XMlBJdT\n|BXbG9FcmpoZGJPCkJvQS82Q04rR3ZJa3ExTWF1Q2NOSHU4SXYyWVVnRnhpckdYNkZZdnh1\n|elRVMHBZMzltRkhzc1F5aFBCK1FVRDlScWRqVGpQeXBlTDAKOG9QbHVLT0JnVEIvTUF3R0\n|ExVWRFd0VCL3dRQ01BQXdEZ1lEVlIwUEFRSC9CQVFEQWdiQU1COEdBMVVkSXdRWU1CYUFG\n|SEJFUG9JdQpiNGZlU3ROMTR6MGd2RU1yay9FZk1CMEdBMVVkRGdRV0JCUytiS0d6NDhIMz\n|dVTndwTTRUQWVMOTQ1Zit6VEFmQmdOVkhSRUVHREFXCmdSUkJiR2xqWlVSVFUwQmxlR0Z0\n|Y0d4bExtTnZiVEFKQmdjcWhrak9PQVFEQXpBQU1DMENGRlVNcEJrZlFpdUpjU0l6allOcX\n|RUMW4KYTc5RkFoVUFuMkZUVWxRTFhMTGQydWQySGVJUVVsdERYcjB4WXpCaEFnRUJNQmd3\n|RWpFUU1BNEdBMVVFQXhNSFEyRnliRVJUVXdJQwpBTWd3QndZRkt3NERBaG93Q1FZSEtvWk\n|l6amdFQXdRdU1Dd0NGRDFjU1c2TElVRnplWGxlM1lJNVNLU0Jlci9zQWhRbUNxN3MvQ1RG\n|CkhPRWpnQVNlVWpiTXB4NWc2QT09Cg==\n|<4.9.eml",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***4.10.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 4.10.bin\n|>4.10.bin\n|MIIH/wYJKoZIhvcNAQcCoIIH8DCCB+wCAQExCTAHBgUrDgMCGjArBgkqhkiG9w0BBwGgHg\n|QcVGhpcyBpcyBzb21lIHNhbXBsZSBjb250ZW50LqCCAuAwggLcMIICm6ADAgECAgIAyDAJ",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|BgcqhkjOOAQDMBIxEDAOBgNVBAMTB0NhcmxEU1MwHhcNOTkwODE3MDExMDQ5WhcNMzkxMj\n|MxMjM1OTU5WjATMREwDwYDVQQDEwhBbGljZURTUzCCAbYwggErBgcqhkjOOAQBMIIBHgKB\n|gQCBjc3tg+oKnjk+wkgoo+RHk90O16gO7FPFq4QIT/+U4XNIfgzW80RI0f6fr6ShiS/h2T\n|DINt4/m7+3TNxfaYrkddA3DJEIlZvep175/PSfL91DqItU8T+wBwhHTV2Iw8O1s+NVCHXV\n|OXYQxHi9/52whJc38uRRG7XkCZZc835b2wIVAOJHphpFZrgTxtqPuDchK2KL95PNAoGAJj\n|jQFIkyqjn7Pm3ZS1lqTHYjOQQCNVzyyxowwx5QXd2bWeLNqgU9WMB7oja4bgevfYpCJaf0\n|dc9KCF5LPpD4beqcySGKO3YU6c4uXaMHzSOFuC8wAXxtSYkRiTZEvfjIlUpTVrXi+XPsGm\n|E2HxF/wr3t0VD/mHTC0YFKYDm6NjkDgYQAAoGAXOO5WnUUlgupet3jP6nsrF7cvbcTETSm\n|FokoESPZNIZndXUTEj1DW2/lUb/6ifKiGz4kfT0HjVtjyLtFpaBK44XWzgaAP+gjfhryJK\n|tTGrgnDR7vCL9mFIBcYqxl+hWL8bs01NKWN/ZhR7LEMoTwfkFA/UanY04z8qXi9PKD5bij\n|gYEwfzAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIGwDAfBgNVHSMEGDAWgBRwRD6CLm\n|+H3krTdeM9ILxDK5PxHzAdBgNVHQ4EFgQUvmyhs+PB9+1DcKTOEwHi/eOX/s0wHwYDVR0R\n|BBgwFoEUQWxpY2VEU1NAZXhhbXBsZS5jb20wCQYHKoZIzjgEAwMwADAtAhRVDKQZH0IriX\n|EiM42DarU9Z2u/RQIVAJ9hU1JUC1yy3drndh3iEFJbQ169MYIEyTCCBMUCAQEwGDASMRAw\n|DgYDVQQDEwdDYXJsRFNTAgIAyDAHBgUrDgMCGqCCBF8wGAYJKoZIhvcNAQkDMQsGCSqGSI\n|b3DQEHATAjBgkqhkiG9w0BCQQxFgQUQGrsCFJ5um4WAi2eBinAIpaH3UgwOAYDKqszMTEE\n|L1RoaXMgaXMgYSB0ZXN0IEdlbmVyYWwgQVNOIEF0dHJpYnV0ZSwgbnVtYmVyIDEuMD4GCy\n|qGSIb3DQEJEAIEMS8wLQwgQ29udGVudCBIaW50cyBEZXNjcmlwdGlvbiBCdWZmZXIGCSqG\n|SIb3DQEHATBKBgkqhkiG9w0BCQ8xPTA7MAcGBSoDBAUGMDAGBioDBAUGTQQmU21pbWUgQ2\n|FwYWJpbGl0aWVzIHBhcmFtZXRlcnMgYnVmZmVyIDIwbQYLKoZIhvcNAQkQAgIxXjFcAgEB\n|BgcqAwQFBgcIExtUSElTIElTIEEgUFJJVkFDWSBNQVJLIFRFU1QxMTAvgAgqAwQFBgeGeK\n|EjEyFUSElTIElTIEEgVEVTVCBTRUNVUklUWS1DQVRFR09SWS4wbwYLKoZIhvcNAQkQAgox\n|YDBeBgUqAwQFBgQrQ29udGVudCBSZWZlcmVuY2UgQ29udGVudCBJZGVudGlmaWVyIEJ1Zm\n|ZlcgQoQ29udGVudCBSZWZlcmVuY2UgU2lnbmF0dXJlIFZhbHVlIEJ1ZmZlcjBzBgsqhkiG\n|9w0BCRACCzFkoGIwWjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDVVTIEdvdmVybm1lbnQxET\n|APBgNVBAsTCFZEQSBTaXRlMQwwCgYDVQQLEwNWREExEjAQBgNVBAMTCURhaXN5IFJTQQIE\n|ClVEMzCB/AYLKoZIhvcNAQkQAgMxgewwgekwgeYEBzU3MzgyOTkYDzE5OTkwMzExMTA0ND\n|MzWqGByTCBxqRhMF8xCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1VUyBHb3Zlcm5tZW50MREw\n|DwYDVQQLEwhWREEgU2l0ZTEMMAoGA1UECxMDVkRBMRcwFQYDVQQDEw5CdWdzIEJ1bm55IE\n|RTQaRhMF8xCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1VUyBHb3Zlcm5tZW50MREwDwYDVQQL\n|EwhWREEgU2l0ZTEMMAoGA1UECxMDVkRBMRcwFQYDVQQDEw5FbG1lciBGdWRkIERTQTCCAQ\n|IGCyqGSIb3DQEJEAIJMYHyMIHvMXICAQEGByoDBAUGBwkTJkVRVUlWQUxFTlQgVEhJUyBJ\n|UyBBIFBSSVZBQ1kgTUFSSyBURVNUMTwwOoAIKgMEBQYHhnihLhMsRVFVSVZBTEVOVCBUSE\n|lTIElTIEEgVEVTVCBTRUNVUklUWS1DQVRFR09SWS4xeQIBAQYHKgMEBQYHChMtRVFVSVZB\n|TEVOVCBUSElTIElTIEEgU0VDT05EIFBSSVZBQ1kgTUFSSyBURVNUMTwwOoAIKgMEBQYHhn\n|ihLhMsRVFVSVZBTEVOVCBUSElTIElTIEEgVEVTVCBTRUNVUklUWS1DQVRFR09SWS4wCQYH\n|KoZIzjgEAwQvMC0CFQC8MzdlxPdwXBdJE6pMhcq7UpFIWQIUY5aiFIvPV96wSF9sZN2EBE\n|lfHMo=\n|<4.10.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***4.11.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 4.11.bin\n|>4.11.bin\n|MIIGiAYJKoZIhvcNAQcCoIIGeTCCBnUCAQExADALBgkqhkiG9w0BBwGgggV/MIICmzCCAl\n|qgAwIBAgIBATAJBgcqhkjOOAQDMBIxEDAOBgNVBAMTB0NhcmxEU1MwHhcNOTkwODE2MjI1\n|MDUwWhcNMzkxMjMxMjM1OTU5WjASMRAwDgYDVQQDEwdDYXJsRFNTMIIBtzCCASsGByqGSM\n|44BAEwggEeAoGBALZJGD6KRMEpcZRMAcQSwXp5y1RNqx6B+8ZMsw6UCQbrAdSxyHFLx0XA",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|UCVdnPza5G3T4oZIhIJ9uhWVShb2Ru3d9pjSu36KCoq6Fnu5UAFIk4vrJRVRl1Xcj1MOEK\n|lQ/HC3zTBU/dreqKoitaGvi8wCiOeLcF+5reEI1G0pLdbpAhUA3cEv31POCzRgdz4CpL+K\n|XZi5ENUCgYAM7lebS73atgdqdDdPVX+d7bxhDetGWTxWCytbDJHOpWJSacrhbT69v/7ht7\n|krYTyty65F4wasjCKdnESHC8fN8BzZtU5dc96vDskdWlH1T0R5NVpzqn9GUR+pQhacSOuK\n|eWG01S9TIkRjH4a4o1gGJfgpwO+64HXwQsRjZVKbCgOBhQACgYEAmYd0JwNmoLHArdwsdb\n|vhbESc2iFtTUdtsWIJ6diuHvI6tJSxo456m3FOAJTJtCVOuWCWGSQB82IM/nXA+87YaADj\n|/dVwT98jlhkGlPSxYY86V7EIEaQLJiXwUnaB6gtiDZUq5oa6crKnUIMLqifNG6lNiZrXjR\n|g5hD+LxVZNgHqjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1Ud\n|DgQWBBRwRD6CLm+H3krTdeM9ILxDK5PxHzAJBgcqhkjOOAQDAzAAMC0CFGup8E56Wnnj+b\n|49K8kGN+kRF6ETAhUAjzRpKouxPAN5lDJNEh/OiftGsjswggLcMIICm6ADAgECAgIAyDAJ\n|BgcqhkjOOAQDMBIxEDAOBgNVBAMTB0NhcmxEU1MwHhcNOTkwODE3MDExMDQ5WhcNMzkxMj\n|MxMjM1OTU5WjATMREwDwYDVQQDEwhBbGljZURTUzCCAbYwggErBgcqhkjOOAQBMIIBHgKB\n|gQCBjc3tg+oKnjk+wkgoo+RHk90O16gO7FPFq4QIT/+U4XNIfgzW80RI0f6fr6ShiS/h2T\n|DINt4/m7+3TNxfaYrkddA3DJEIlZvep175/PSfL91DqItU8T+wBwhHTV2Iw8O1s+NVCHXV\n|OXYQxHi9/52whJc38uRRG7XkCZZc835b2wIVAOJHphpFZrgTxtqPuDchK2KL95PNAoGAJj\n|jQFIkyqjn7Pm3ZS1lqTHYjOQQCNVzyyxowwx5QXd2bWeLNqgU9WMB7oja4bgevfYpCJaf0\n|dc9KCF5LPpD4beqcySGKO3YU6c4uXaMHzSOFuC8wAXxtSYkRiTZEvfjIlUpTVrXi+XPsGm\n|E2HxF/wr3t0VD/mHTC0YFKYDm6NjkDgYQAAoGAXOO5WnUUlgupet3jP6nsrF7cvbcTETSm\n|FokoESPZNIZndXUTEj1DW2/lUb/6ifKiGz4kfT0HjVtjyLtFpaBK44XWzgaAP+gjfhryJK\n|tTGrgnDR7vCL9mFIBcYqxl+hWL8bs01NKWN/ZhR7LEMoTwfkFA/UanY04z8qXi9PKD5bij\n|gYEwfzAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIGwDAfBgNVHSMEGDAWgBRwRD6CLm\n|+H3krTdeM9ILxDK5PxHzAdBgNVHQ4EFgQUvmyhs+PB9+1DcKTOEwHi/eOX/s0wHwYDVR0R\n|BBgwFoEUQWxpY2VEU1NAZXhhbXBsZS5jb20wCQYHKoZIzjgEAwMwADAtAhRVDKQZH0IriX\n|EiM42DarU9Z2u/RQIVAJ9hU1JUC1yy3drndh3iEFJbQ169oYHbMIHYMIGZMAkGByqGSM44\n|BAMwEjEQMA4GA1UEAxMHQ2FybERTUxcNOTkwODI3MDcwMDAwWjBpMBMCAgDIFw05OTA4Mj\n|IwNzAwMDBaMBMCAgDJFw05OTA4MjIwNzAwMDBaMBMCAgDTFw05OTA4MjIwNzAwMDBaMBMC\n|AgDSFw05OTA4MjIwNzAwMDBaMBMCAgDUFw05OTA4MjQwNzAwMDBaMAkGByqGSM44BAMDLw\n|AwLAIUfmVSdjP+NHMX0feW+aDU2G1cfT0CFAJ6W7fVWxjBz4fvftok8yqDnDWhMQA=\n|<4.11.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***5.1.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 5.1.bin\n|>5.1.bin\n|MIIBHgYJKoZIhvcNAQcDoIIBDzCCAQsCAQAxgcAwgb0CAQAwJjASMRAwDgYDVQQDEwdDYX\n|JsUlNBAhBGNGvHgABWvBHTbi7NXXHQMA0GCSqGSIb3DQEBAQUABIGAC3EN5nGIiJi2lsGP\n|cP2iJ97a4e8kbKQz36zg6Z2i0yx6zYC4mZ7mX7FBs3IWg+f6KgCLx3M1eCbWx8+MDFbbpX\n|adCDgO8/nUkUNYeNxJtuzubGgzoyEd8Ch4H/dd9gdzTd+taTEgS0ipdSJuNnkVY4/M652j\n|KKHRLFf02hosdR8wQwYJKoZIhvcNAQcBMBQGCCqGSIb3DQMHBAgtaMXpRwZRNYAgDsiSf8\n|Z9P43LrY4OxUk660cu1lXeCSFOSOpOJ7FuVyU=\n|<5.1.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***5.2.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 5.2.bin\n|>5.2.bin\n|MIIBZQYJKoZIhvcNAQcDoIIBVjCCAVICAQIxggEAMIG9AgEAMCYwEjEQMA4GA1UEAxMHQ2\n|FybFJTQQIQRjRrx4AAVrwR024uzV1x0DANBgkqhkiG9w0BAQEFAASBgJQmQojGi7Z4IP+C\n|VypBmNFoCDoEp87khtgyff2N4SmqD3RxPx+8hbLQt9i3YcMwcap+aiOkyqjMalT03VUC0X\n|BOGv+HYI3HBZm/aFzxoq+YOXAWs5xlGerZwTOc9j6AYlK4qXvnztR5SQ8TBjlzytm4V7zg\n|+TGrnGVNQBNw47Ewoj4CAQQwDQQLTWFpbExpc3RSQzIwEAYLKoZIhvcNAQkQAwcCAToEGH\n|cUr5MSJ/g9HnJVHsQ6X56VcwYb+OfojTBJBgkqhkiG9w0BBwEwGgYIKoZIhvcNAwIwDgIC\n|AKAECJwE0hkuKlWhgCBeKNXhojuej3org9Lt7n+wWxOhnky5V50vSpoYRfRRyw==\n|<5.2.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***5.3.eml***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 5.3.eml\n|>5.3.eml\n|TUlNRS1WZXJzaW9uOiAxLjAKTWVzc2FnZS1JZDogPDAwMTAzMTEyMDA1MjAzLjAwMzQ5QG\n|FteWVtaWx5LmlnLmNvbT4KRGF0ZTogVHVlLCAzMSBPY3QgMjAwMCAxMjowMDo1MiAtMDYw\n|MCAoQ2VudHJhbCBTdGFuZGFyZCBUaW1lKQpGcm9tOiBVc2VyMQpUbzogVXNlcjIKU3Viam\n|VjdDogRXhhbXBsZSA1LjMKQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9wa2NzNy1taW1l\n|OwoJbmFtZT1zbWltZS5wN207CglzbWltZS10eXBlPWVudmVsb3BlZC1kYXRhCkNvbnRlbn\n|QtVHJhbnNmZXItRW5jb2Rpbmc6IGJhc2U2NApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRh\n|Y2htZW50OyBmaWxlbmFtZT1zbWltZS5wN20KCk1JSUJIZ1lKS29aSWh2Y05BUWNEb0lJQk\n|R6Q0NBUXNDQVFBeGdjQXdnYjBDQVFBd0pqQVNNUkF3RGdZRFZRUURFd2REWVhKc1VsTkIK\n|QWhCR05HdkhnQUJXdkJIVGJpN05YWEhRTUEwR0NTcUdTSWIzRFFFQkFRVUFCSUdBQzNFTj\n|VuR0lpSmkybHNHUGNQMmlKOTdhNGU4awpiS1F6MzZ6ZzZaMmkweXg2ellDNG1aN21YN0ZC\n|czNJV2crZjZLZ0NMeDNNMWVDYld4OCtNREZiYnBYYWRDRGdPOC9uVWtVTlllTnhKCnR1en\n|ViR2d6b3lFZDhDaDRIL2RkOWdkelRkK3RhVEVnUzBpcGRTSnVObmtWWTQvTTY1MmpLS0hS\n|TEZmMDJob3NkUjh3UXdZSktvWkkKaHZjTkFRY0JNQlFHQ0NxR1NJYjNEUU1IQkFndGFNWH\n|BSd1pSTllBZ0RzaVNmOFo5UDQzTHJZNE94VWs2NjBjdTFsWGVDU0ZPU09wTwpKN0Z1VnlV\n|PQoK\n|<5.3.eml",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***6.0.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 6.0.bin\n|>6.0.bin\n|MF4GCSqGSIb3DQEHBaBRME8CAQAwBwYFKw4DAhowKwYJKoZIhvcNAQcBoB4EHFRoaXMgaX\n|Mgc29tZSBzYW1wbGUgY29udGVudC4EFEBq7AhSebpuFgItngYpwCKWh91I\n|<6.0.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***7.1.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 7.1.bin\n|>7.1.bin\n|MFcGCSqGSIb3DQEHBqBKMEgCAQAwQwYJKoZIhvcNAQcBMBQGCCqGSIb3DQMHBAiza2v7Yj\n|EIToAg+vzt2z8YFx04iRHqNNYg2/TD2VgV75M7mvXXBPa1cOI=\n|<7.1.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "***7.2.bin***",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "|* Example 7.2.bin\n|>7.2.bin\n|MIGVBgkqhkiG9w0BBwaggYcwgYQCAQIwQwYJKoZIhvcNAQcBMBQGCCqGSIb3DQMHBAgHJy\n|CFkJ6wfoAg0iCPZ0iKy0HkImhdvncFUibt4wG9AJFYpzVuvEuiBzOhOjA4BgMqqzMxMQQv\n|VGhpcyBpcyBhIHRlc3QgR2VuZXJhbCBBU04gQXR0cmlidXRlLCBudW1iZXIgMS4=\n|<7.2.bin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "C. Acknowledgements",
      "zh-CHS": "C.致谢"
    },
    {
      "indent": 3,
      "text": "Blake Ramsdell, Jim Schaad, and John Pawling contributed the vast majority of the examples in this document, and/or correct examples during the early versions of this document. Additional examples came from many people, including Rob Colestock and Paul Hoffman. Additional testing came from Holger Ebel and Russ Housley.",
      "zh-CHS": "Blake Ramsdell、Jim Schaad和John Pawling提供了本文档中绝大多数示例和/或本文档早期版本中的正确示例。其他例子来自许多人，包括罗布·科尔斯托克和保罗·霍夫曼。另外的测试来自霍尔格·埃贝尔和罗斯·霍斯利。"
    },
    {
      "indent": 3,
      "text": "The examples are displayed with a modified version of Peter Gutmann's \"dumpasn1\" program. Peter and Jim Schaad and Blake Ramsdell have been updating the program based on input from the process of writing this draft.",
      "zh-CHS": "示例以Peter Gutmann的“dumpasn1”程序的修改版本显示。Peter、Jim Schaad和Blake Ramsdell一直在根据撰写本草稿过程中的输入更新程序。"
    },
    {
      "indent": 0,
      "text": "Editor's Address",
      "zh-CHS": "编辑地址"
    },
    {
      "indent": 3,
      "text": "Paul Hoffman Internet Mail Consortium 127 Segre Place Santa Cruz, CA 95060 USA",
      "zh-CHS": "保罗·霍夫曼互联网邮件联盟127塞格雷广场圣克鲁斯，加利福尼亚州95060"
    },
    {
      "indent": 3,
      "text": "EMail: phoffman@imc.org",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "zh-CHS": "完整版权声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The Internet Society (2005).",
      "zh-CHS": "版权所有（C）互联网协会（2005年）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "zh-CHS": "本文件受BCP 78中包含的权利、许可和限制的约束，除其中规定外，作者保留其所有权利。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "zh-CHS": "本文件及其包含的信息是按“原样”提供的，贡献者、他/她所代表或赞助的组织（如有）、互联网协会和互联网工程任务组不承担任何明示或暗示的担保，包括但不限于任何保证，即使用本文中的信息不会侵犯任何权利，或对适销性或特定用途适用性的任何默示保证。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "zh-CHS": "知识产权"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "zh-CHS": "IETF对可能声称与本文件所述技术的实施或使用有关的任何知识产权或其他权利的有效性或范围，或此类权利下的任何许可可能或可能不可用的程度，不采取任何立场；它也不表示它已作出任何独立努力来确定任何此类权利。有关RFC文件中权利的程序信息，请参见BCP 78和BCP 79。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "zh-CHS": "向IETF秘书处披露的知识产权副本和任何许可证保证，或本规范实施者或用户试图获得使用此类专有权利的一般许可证或许可的结果，可从IETF在线知识产权存储库获取，网址为http://www.ietf.org/ipr."
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "zh-CHS": "IETF邀请任何相关方提请其注意任何版权、专利或专利申请，或其他可能涵盖实施本标准所需技术的专有权利。请将信息发送至IETF的IETF-ipr@ietf.org."
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "zh-CHS": "确认"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "zh-CHS": "RFC编辑功能的资金目前由互联网协会提供。"
    }
  ]
}