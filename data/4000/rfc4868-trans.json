{
  "title": {
    "text": "RFC 4868: Using HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512 with IPsec",
    "zh-CHS": "RFC 4868"
  },
  "number": 4868,
  "created_at": "2021-11-15 08:10:37.113381+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Network Working Group                                           S. Kelly\nRequest for Comments: 4868                                Aruba Networks\nCategory: Standards Track                                     S. Frankel\n                                                                    NIST\n                                                                May 2007",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "Using HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512 with IPsec",
      "zh-CHS": "将HMAC-SHA-256、HMAC-SHA-384和HMAC-SHA-512与IPsec一起使用"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "zh-CHS": "关于下段备忘"
    },
    {
      "indent": 3,
      "text": "This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the \"Internet Official Protocol Standards\" (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited.",
      "zh-CHS": "本文件规定了互联网社区的互联网标准跟踪协议，并要求进行讨论和提出改进建议。有关本协议的标准化状态和状态，请参考当前版本的“互联网官方协议标准”（STD 1）。本备忘录的分发不受限制。"
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "zh-CHS": "版权所有（C）IETF信托基金（2007年）。"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "This specification describes the use of Hashed Message Authentication Mode (HMAC) in conjunction with the SHA-256, SHA-384, and SHA-512 algorithms in IPsec. These algorithms may be used as the basis for data origin authentication and integrity verification mechanisms for the Authentication Header (AH), Encapsulating Security Payload (ESP), Internet Key Exchange Protocol (IKE), and IKEv2 protocols, and also as Pseudo-Random Functions (PRFs) for IKE and IKEv2. Truncated output lengths are specified for the authentication-related variants, with the corresponding algorithms designated as HMAC-SHA-256-128, HMAC-SHA-384-192, and HMAC-SHA-512-256. The PRF variants are not truncated, and are called PRF-HMAC-SHA-256, PRF-HMAC-SHA-384, and PRF-HMAC-SHA-512.",
      "zh-CHS": "本规范描述了在IPsec中结合SHA-256、SHA-384和SHA-512算法使用哈希消息认证模式（HMAC）。这些算法可用作认证头（AH）、封装安全有效载荷（ESP）、因特网密钥交换协议（IKE）和IKEv2协议的数据源认证和完整性验证机制的基础，也可用作IKE和IKEv2协议的伪随机函数（PRF）。为与身份验证相关的变量指定截断输出长度，相应的算法指定为HMAC-SHA-256-128、HMAC-SHA-384-192和HMAC-SHA-512-256。PRF变体未被截断，称为PRF-HMAC-SHA-256、PRF-HMAC-SHA-384和PRF-HMAC-SHA-512。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n2.  The HMAC-SHA-256+ Algorithms . . . . . . . . . . . . . . . . .  3\n  2.1.  Keying Material  . . . . . . . . . . . . . . . . . . . . .  3\n    2.1.1.  Data Origin Authentication and Integrity\n            Verification Usage . . . . . . . . . . . . . . . . . .  4\n    2.1.2.  Pseudo-Random Function (PRF) Usage . . . . . . . . . .  4\n    2.1.3.  Randomness and Key Strength  . . . . . . . . . . . . .  5\n    2.1.4.  Key Distribution . . . . . . . . . . . . . . . . . . .  5\n    2.1.5.  Refreshing Keys  . . . . . . . . . . . . . . . . . . .  5\n  2.2.  Padding  . . . . . . . . . . . . . . . . . . . . . . . . .  6\n  2.3.  Truncation . . . . . . . . . . . . . . . . . . . . . . . .  6\n  2.4.  Using HMAC-SHA-256+ as PRFs in IKE and IKEv2 . . . . . . .  7\n  2.5.  Interactions with the ESP, IKE, or IKEv2 Cipher\n        Mechanisms . . . . . . . . . . . . . . . . . . . . . . . .  7\n  2.6.  HMAC-SHA-256+ Parameter Summary  . . . . . . . . . . . . .  7\n  2.7.  Test Vectors . . . . . . . . . . . . . . . . . . . . . . .  7\n    2.7.1.  PRF Test Vectors . . . . . . . . . . . . . . . . . . .  8\n    2.7.2.  Authenticator Test Vectors . . . . . . . . . . . . . . 11\n3.  Security Considerations  . . . . . . . . . . . . . . . . . . . 17\n  3.1.  HMAC Key Length vs Truncation Length . . . . . . . . . . . 17\n4.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 18\n5.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 19\n6.  References . . . . . . . . . . . . . . . . . . . . . . . . . . 19\n  6.1.  Normative References . . . . . . . . . . . . . . . . . . . 19\n  6.2.  Informative References . . . . . . . . . . . . . . . . . . 20",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "This document specifies the use of SHA-256, SHA-384, and SHA-512 [SHA2-1] combined with HMAC [HMAC] as data origin authentication and integrity verification mechanisms for the IPsec AH [AH], ESP [ESP], IKE [IKE], and IKEv2 [IKEv2] protocol. Output truncation is specified for these variants, with the corresponding algorithms designated as HMAC-SHA-256-128, HMAC-SHA-384-192, and HMAC-SHA-512- 256. These truncation lengths are chosen in accordance with the birthday bound for each algorithm.",
      "zh-CHS": "本文件规定将SHA-256、SHA-384和SHA-512[SHA2-1]与HMAC[HMAC]结合使用，作为IPsec AH[AH]、ESP[ESP]、IKE[IKE]和IKEv2[IKEv2]协议的数据源身份验证和完整性验证机制。为这些变体指定输出截断，相应的算法指定为HMAC-SHA-256-128、HMAC-SHA-384-192和HMAC-SHA-512-256。这些截断长度是根据每个算法的生日界限来选择的。"
    },
    {
      "indent": 3,
      "text": "This specification also describes untruncated variants of these algorithms as Pseudo-Random Functions (PRFs) for use with IKE and IKEv2, and those algorithms are called PRF-HMAC-SHA-256, PRF-HMAC-SHA-384, and PRF-HMAC-SHA-512. For ease of reference, these PRF algorithms and the authentication variants described above are collectively referred to below as \"the HMAC-SHA-256+ algorithms\".",
      "zh-CHS": "本规范还将这些算法的不可信变体描述为伪随机函数（PRF），用于IKE和IKEv2，这些算法称为PRF-HMAC-SHA-256、PRF-HMAC-SHA-384和PRF-HMAC-SHA-512。为便于参考，上述这些PRF算法和认证变体在下文统称为“HMAC-SHA-256+算法”。"
    },
    {
      "indent": 3,
      "text": "The goal of the PRF variants are to provide secure pseudo-random functions suitable for generation of keying material and other protocol-specific numeric quantities, while the goal of the authentication variants is to ensure that packets are authentic and cannot be modified in transit. The relative security of HMAC-SHA-256+ when used in either case is dependent on the distribution scope and unpredictability of the associated secret key. If the key is unpredictable and known only by the sender and recipient, these algorithms ensure that only parties holding an identical key can derive the associated values.",
      "zh-CHS": "PRF变体的目标是提供适用于生成密钥材料和其他协议特定数字量的安全伪随机函数，而认证变体的目标是确保数据包是真实的，并且在传输过程中不能修改。HMAC-SHA-256+在任何情况下使用时的相对安全性都取决于相关密钥的分发范围和不可预测性。如果密钥是不可预测的，并且只有发送方和接收方知道，那么这些算法确保只有持有相同密钥的各方才能派生相关值。"
    },
    {
      "indent": 0,
      "text": "2. The HMAC-SHA-256+ Algorithms",
      "section_title": true,
      "zh-CHS": "2. HMAC-SHA-256+算法"
    },
    {
      "indent": 3,
      "text": "[SHA2-1] and [SHA2-2] describe the underlying SHA-256, SHA-384, and SHA-512 algorithms, while [HMAC] describes the HMAC algorithm. The HMAC algorithm provides a framework for inserting various hashing algorithms such as SHA-256, and [SHA256+] describes combined usage of these algorithms. The following sections describe the various characteristics and requirements of the HMAC-SHA-256+ algorithms when used with IPsec.",
      "zh-CHS": "[SHA2-1]和[SHA2-2]描述了基础SHA-256、SHA-384和SHA-512算法，而[HMAC]描述了HMAC算法。HMAC算法为插入各种散列算法（如SHA-256）提供了一个框架，[SHA256+]描述了这些算法的组合使用。以下各节介绍HMAC-SHA-256+算法与IPsec一起使用时的各种特性和要求。"
    },
    {
      "indent": 0,
      "text": "2.1. Keying Material",
      "section_title": true,
      "zh-CHS": "2.1. 键控材料"
    },
    {
      "indent": 3,
      "text": "Requirements for keying material vary depending on whether the algorithm is functioning as a PRF or as an authentication/integrity mechanism. In the case of authentication/integrity, key lengths are fixed according to the output length of the algorithm in use. In the",
      "zh-CHS": "根据算法是作为PRF还是作为身份验证/完整性机制运行，对密钥材料的要求有所不同。在认证/完整性的情况下，密钥长度根据使用的算法的输出长度固定。在"
    },
    {
      "indent": 3,
      "text": "case of PRFs, key lengths are variable, but guidance is given to ensure interoperability. These distinctions are described further below.",
      "zh-CHS": "对于PRF，密钥长度是可变的，但给出了确保互操作性的指导。下文将进一步描述这些区别。"
    },
    {
      "indent": 3,
      "text": "Before describing key requirements for each usage, it is important to clarify some terms we use below:",
      "zh-CHS": "在描述每种用法的关键要求之前，重要的是澄清我们在下面使用的一些术语："
    },
    {
      "indent": 3,
      "text": "Block size: the size of the data block the underlying hash algorithm operates upon. For SHA-256, this is 512 bits, for SHA-384 and SHA-512, this is 1024 bits.",
      "zh-CHS": "块大小：底层哈希算法所操作的数据块的大小。对于SHA-256，这是512位，对于SHA-384和SHA-512，这是1024位。"
    },
    {
      "indent": 3,
      "text": "Output length: the size of the hash value produced by the underlying hash algorithm. For SHA-256, this is 256 bits, for SHA-384 this is 384 bits, and for SHA-512, this is 512 bits.",
      "zh-CHS": "输出长度：基础哈希算法生成的哈希值的大小。对于SHA-256，这是256位，对于SHA-384，这是384位，对于SHA-512，这是512位。"
    },
    {
      "indent": 3,
      "text": "Authenticator length: the size of the \"authenticator\" in bits. This only applies to authentication/integrity related algorithms, and refers to the bit length remaining after truncation. In this specification, this is always half the output length of the underlying hash algorithm.",
      "zh-CHS": "验证器长度：“验证器”的大小（以位为单位）。这仅适用于与身份验证/完整性相关的算法，并指截断后剩余的位长度。在本规范中，这总是底层哈希算法输出长度的一半。"
    },
    {
      "indent": 0,
      "text": "2.1.1. Data Origin Authentication and Integrity Verification Usage",
      "section_title": true,
      "zh-CHS": "2.1.1. 数据源身份验证和完整性验证的使用"
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-256+ are secret key algorithms. While no fixed key length is specified in [HMAC], this specification requires that when used as an integrity/authentication algorithm, a fixed key length equal to the output length of the hash functions MUST be supported, and key lengths other than the output length of the associated hash function MUST NOT be supported.",
      "zh-CHS": "HMAC-SHA-256+是密钥算法。虽然[HMAC]中未指定固定密钥长度，但本规范要求当用作完整性/身份验证算法时，必须支持等于散列函数输出长度的固定密钥长度，并且不得支持相关散列函数输出长度以外的密钥长度。"
    },
    {
      "indent": 3,
      "text": "These key length restrictions are based in part on the recommendations in [HMAC] (key lengths less than the output length decrease security strength, and keys longer than the output length do not significantly increase security strength), and in part because allowing variable length keys for IPsec authenticator functions would create interoperability issues.",
      "zh-CHS": "这些密钥长度限制部分基于[HMAC]中的建议（小于输出长度的密钥会降低安全强度，而大于输出长度的密钥不会显著提高安全强度），部分原因是允许IPsec验证器函数使用可变长度密钥会产生互操作性问题。"
    },
    {
      "indent": 0,
      "text": "2.1.2. Pseudo-Random Function (PRF) Usage",
      "section_title": true,
      "zh-CHS": "2.1.2. 伪随机函数（PRF）的使用"
    },
    {
      "indent": 3,
      "text": "IKE and IKEv2 use PRFs for generating keying material and for authentication of the IKE Security Association. The IKEv2 specification differentiates between PRFs with fixed key sizes and those with variable key sizes, and so we give some special guidance for this below.",
      "zh-CHS": "IKE和IKEv2使用PRF生成密钥材料并验证IKE安全关联。IKEv2规范区分了具有固定密钥大小的PRF和具有可变密钥大小的PRF，因此我们在下面给出了一些特殊的指导。"
    },
    {
      "indent": 3,
      "text": "When a PRF described in this document is used with IKE or IKEv2, it is considered to have a variable key length, and keys are derived in the following ways (note that we simply reiterate that which is specified in [HMAC]):",
      "zh-CHS": "当本文档中描述的PRF与IKE或IKEv2一起使用时，它被视为具有可变密钥长度，并且密钥通过以下方式导出（注意，我们只是重申[HMAC]中规定的方式）："
    },
    {
      "indent": 3,
      "text": "o If the length of the key is exactly the algorithm block size, use it as-is.",
      "zh-CHS": "o 如果密钥的长度正好是算法块大小，请按原样使用。"
    },
    {
      "indent": 3,
      "text": "o If the key is shorter than the block size, lengthen it to exactly the block size by padding it on the right with zero bits. However, note that [HMAC] strongly discourages a key length less than the output length. Nonetheless, we describe handling of shorter lengths here in recognition of shorter lengths typically chosen for IKE or IKEv2 pre-shared keys.",
      "zh-CHS": "o 如果键短于块大小，则在右边用零位填充键，将其延长到块大小。但是，请注意，[HMAC]强烈反对密钥长度小于输出长度。尽管如此，我们在这里描述了较短长度的处理，以识别通常为IKE或IKEv2预共享密钥选择的较短长度。"
    },
    {
      "indent": 3,
      "text": "o If the key is longer than the block size, shorten it by computing the corresponding hash algorithm output over the entire key value, and treat the resulting output value as your HMAC key. Note that this will always result in a key that is less than the block size in length, and this key value will therefore require zero-padding (as described above) prior to use.",
      "zh-CHS": "o 如果密钥长于块大小，则通过计算整个密钥值的相应哈希算法输出来缩短它，并将结果输出值视为HMAC密钥。请注意，这将始终导致密钥长度小于块大小，因此此密钥值在使用前需要零填充（如上所述）。"
    },
    {
      "indent": 0,
      "text": "2.1.3. Randomness and Key Strength",
      "section_title": true,
      "zh-CHS": "2.1.3. 随机性与关键强度"
    },
    {
      "indent": 3,
      "text": "[HMAC] discusses requirements for key material, including a requirement for strong randomness. Therefore, a strong pseudo-random function MUST be used to generate the required key for use with HMAC-SHA-256+. At the time of this writing there are no published weak keys for use with any HMAC-SHA-256+ algorithms.",
      "zh-CHS": "[HMAC]讨论了关键材料的要求，包括对强随机性的要求。因此，必须使用强伪随机函数生成所需密钥，以便与HMAC-SHA-256+一起使用。在撰写本文时，还没有发布用于任何HMAC-SHA-256+算法的弱密钥。"
    },
    {
      "indent": 0,
      "text": "2.1.4. Key Distribution",
      "section_title": true,
      "zh-CHS": "2.1.4. 密钥分配"
    },
    {
      "indent": 3,
      "text": "[ARCH] describes the general mechanism for obtaining keying material when multiple keys are required for a single SA (e.g., when an ESP SA requires a key for confidentiality and a key for authentication). In order to provide data origin authentication and integrity verification, the key distribution mechanism must ensure that unique keys are allocated and that they are distributed only to the parties participating in the communication.",
      "zh-CHS": "[ARCH]描述了当单个SA需要多个密钥时（例如，当ESP SA需要一个密钥用于保密和一个密钥用于身份验证时），获取密钥材料的一般机制。为了提供数据源身份验证和完整性验证，密钥分发机制必须确保分配唯一密钥，并且仅将其分发给参与通信的各方。"
    },
    {
      "indent": 0,
      "text": "2.1.5. Refreshing Keys",
      "section_title": true,
      "zh-CHS": "2.1.5. 刷新键"
    },
    {
      "indent": 3,
      "text": "Currently, there are no practical attacks against the algorithms recommended here, and especially against the key sizes recommended here. However, as noted in [HMAC] \"...periodic key refreshment is a fundamental security practice that helps against potential weaknesses of the function and keys, and limits the damage of an exposed key\".",
      "zh-CHS": "目前，没有针对此处推荐的算法的实际攻击，尤其是针对此处推荐的密钥大小的攻击。但是，如[HMAC]所述，“……定期密钥刷新是一种基本的安全实践，有助于防止功能和密钥的潜在弱点，并限制暴露密钥的损坏”。"
    },
    {
      "indent": 3,
      "text": "Putting this into perspective, this specification requires 256, 384, or 512-bit keys produced by a strong PRF for use as a MAC. A brute force attack on such keys would take longer to mount than the universe has been in existence. On the other hand, weak keys (e.g., dictionary words) would be dramatically less resistant to attack. It is important to take these points, along with the specific threat model for your particular application and the current state of the art with respect to attacks on SHA-256, SHA-384, and SHA-512 into account when determining an appropriate upper bound for HMAC key lifetimes.",
      "zh-CHS": "考虑到这一点，该规范需要由强PRF生成的256、384或512位密钥用作MAC。对这些钥匙进行蛮力攻击所需的时间将比宇宙存在的时间更长。另一方面，弱键（如字典单词）的抗攻击能力会显著降低。在确定HMAC密钥生存期的适当上限时，必须考虑这些要点，以及特定应用程序的特定威胁模型以及针对SHA-256、SHA-384和SHA-512的攻击的当前技术状态。"
    },
    {
      "indent": 0,
      "text": "2.2. Padding",
      "section_title": true,
      "zh-CHS": "2.2. 衬料"
    },
    {
      "indent": 3,
      "text": "The HMAC-SHA-256 algorithms operate on 512-bit blocks of data, while the HMAC-SHA-384 and HMAC-SHA-512 algorithms operate on 1024-bit blocks of data. Padding requirements are specified in [SHA2-1] as part of the underlying SHA-256, SHA-384, and SHA-512 algorithms, so if you implement according to [SHA2-1], you do not need to add any additional padding as far as the HMAC-SHA-256+ algorithms specified here are concerned. With regard to \"implicit packet padding\" as defined in [AH], no implicit packet padding is required.",
      "zh-CHS": "HMAC-SHA-256算法操作512位数据块，而HMAC-SHA-384和HMAC-SHA-512算法操作1024位数据块。[SHA2-1]中规定了填充要求，作为基础SHA-256、SHA-384和SHA-512算法的一部分，因此，如果您按照[SHA2-1]实现，就这里指定的HMAC-SHA-256+算法而言，您不需要添加任何额外的填充。关于[AH]中定义的“隐式数据包填充”，不需要隐式数据包填充。"
    },
    {
      "indent": 0,
      "text": "2.3. Truncation",
      "section_title": true,
      "zh-CHS": "2.3. 截断"
    },
    {
      "indent": 3,
      "text": "The HMAC-SHA-256+ algorithms each produce an nnn-bit value, where nnn corresponds to the output bit length of the algorithm, e.g., HMAC-SHA-nnn. For use as an authenticator, this nnn-bit value can be truncated as described in [HMAC]. When used as a data origin authentication and integrity verification algorithm in ESP, AH, IKE, or IKEv2, a truncated value using the first nnn/2 bits -- exactly half the algorithm output size -- MUST be supported. No other authenticator value lengths are supported by this specification.",
      "zh-CHS": "HMAC-SHA-256+算法各自产生nnn位值，其中nnn对应于算法的输出位长度，例如HMAC SHA nnn。为了用作验证器，可以按照[HMAC]中的说明截断此nnn位值。当在ESP、AH、IKE或IKEv2中用作数据源身份验证和完整性验证算法时，必须支持使用前nnn/2位（正好是算法输出大小的一半）的截断值。本规范不支持其他验证器值长度。"
    },
    {
      "indent": 3,
      "text": "Upon sending, the truncated value is stored within the authenticator field. Upon receipt, the entire nnn-bit value is computed and the first nnn/2 bits are compared to the value stored in the authenticator field, with the value of 'nnn' depending on the negotiated algorithm.",
      "zh-CHS": "发送时，截断的值存储在authenticator字段中。收到后，计算整个nnn位值，并将前nnn/2位与存储在验证器字段中的值进行比较，“nnn”值取决于协商的算法。"
    },
    {
      "indent": 3,
      "text": "[HMAC] discusses potential security benefits resulting from truncation of the output MAC value, and in general, encourages HMAC users to perform MAC truncation. In the context of IPsec, a truncation length of nnn/2 bits is selected because it corresponds to the birthday attack bound for each of the HMAC-SHA-256+ algorithms, and it simultaneously serves to minimize the additional bits on the wire resulting from use of this facility.",
      "zh-CHS": "[HMAC]讨论了截断输出MAC值可能带来的安全好处，通常鼓励HMAC用户执行MAC截断。在IPsec的上下文中，选择nnn/2位的截断长度，因为它对应于每个HMAC-SHA-256+算法的生日攻击界限，并且它同时用于最小化由于使用此设施而在线路上产生的额外位。"
    },
    {
      "indent": 0,
      "text": "2.4. Using HMAC-SHA-256+ as PRFs in IKE and IKEv2",
      "section_title": true,
      "zh-CHS": "2.4. 在IKE和IKEv2中使用HMAC-SHA-256+作为PRF"
    },
    {
      "indent": 3,
      "text": "The PRF-HMAC-SHA-256 algorithm is identical to HMAC-SHA-256-128, except that variable-length keys are permitted, and the truncation step is NOT performed. Likewise, the implementations of PRF-HMAC-SHA-384 and PRF-HMAC-SHA-512 are identical to those of HMAC-SHA-384- 192 and HMAC-SHA-512-256 respectively, except that again, variable-length keys are permitted, and truncation is NOT performed.",
      "zh-CHS": "PRF-HMAC-SHA-256算法与HMAC-SHA-256-128相同，只是允许使用可变长度密钥，并且不执行截断步骤。类似地，PRF-HMAC-SHA-384和PRF-HMAC-SHA-512的实现分别与HMAC-SHA-384-192和HMAC-SHA-512-256的实现相同，只是再次允许可变长度密钥，并且不执行截断。"
    },
    {
      "indent": 0,
      "text": "2.5. Interactions with the ESP, IKE, or IKEv2 Cipher Mechanisms",
      "section_title": true,
      "zh-CHS": "2.5. 与ESP、IKE或IKEv2密码机制的交互"
    },
    {
      "indent": 3,
      "text": "As of this writing, there are no known issues that preclude the use of the HMAC-SHA-256+ algorithms with any specific cipher algorithm.",
      "zh-CHS": "截至本文撰写之时，还没有任何已知的问题阻止HMAC-SHA-256+算法与任何特定的密码算法一起使用。"
    },
    {
      "indent": 0,
      "text": "2.6. HMAC-SHA-256+ Parameter Summary",
      "section_title": true,
      "zh-CHS": "2.6. HMAC-SHA-256+参数汇总"
    },
    {
      "indent": 3,
      "text": "The following table serves to summarize the various quantities associated with the HMAC-SHA-256+ algorithms. In this table, \"var\" stands for \"variable\".",
      "zh-CHS": "下表总结了与HMAC-SHA-256+算法相关的各种数量。在本表中，“var”代表“variable”。"
    },
    {
      "indent": 3,
      "text": "+------------------+--------+--------+--------+--------+------------+\n|    Algorithm     | Block  | Output | Trunc. |  Key   | Algorithm  |\n|       ID         |  Size  | Length | Length | Length |   Type     |\n+==================+========+========+========+========+============+\n| HMAC-SHA-256-128 |   512  |   256  |  128   |  256   | auth/integ |\n+------------------+--------+--------+--------+--------+------------+\n| HMAC-SHA-384-192 |  1024  |   384  |  192   |  384   | auth/integ |\n+------------------+--------+--------+--------+--------+------------+\n| HMAC-SHA-512-256 |  1024  |   512  |  256   |  512   | auth/integ |\n+------------------+--------+--------+--------+--------+------------+\n| PRF-HMAC-SHA-256 |   512  |   256  | (none) |  var   |     PRF    |\n+------------------+--------+--------+--------+--------+------------+\n| PRF-HMAC-SHA-384 |  1024  |   384  | (none) |  var   |     PRF    |\n+------------------+--------+--------+--------+--------+------------+\n| PRF-HMAC-SHA-512 |  1024  |   512  | (none) |  var   |     PRF    |\n+------------------+--------+--------+--------+--------+------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "2.7. Test Vectors",
      "section_title": true,
      "zh-CHS": "2.7. 测试向量"
    },
    {
      "indent": 3,
      "text": "The following test cases include the key, the data, and the resulting authenticator, and/or PRF values for each algorithm. The values of keys and data are either ASCII character strings (surrounded by double quotes) or hexadecimal numbers. If a value is an ASCII character string, then the HMAC computation for the corresponding test case DOES NOT include the trailing null character ('\\0') of the string. The computed HMAC values are all hexadecimal numbers.",
      "zh-CHS": "以下测试用例包括密钥、数据、结果验证器和/或每个算法的PRF值。键和数据的值可以是ASCII字符串（用双引号括起来）或十六进制数。如果值是ASCII字符串，则相应测试用例的HMAC计算不包括字符串的尾部空字符（'\\0'）。计算出的HMAC值均为十六进制数。"
    },
    {
      "indent": 0,
      "text": "2.7.1. PRF Test Vectors",
      "section_title": true,
      "zh-CHS": "2.7.1. 重频测试向量"
    },
    {
      "indent": 3,
      "text": "These test cases were borrowed from RFC 4231 [HMAC-TEST]. For reference implementations of the underlying hash algorithms, see [SHA256+]. Note that for testing purposes, PRF output is considered to be simply the untruncated algorithm output.",
      "zh-CHS": "这些测试用例是从RFC4231[HMAC-test]中借用的。有关底层哈希算法的参考实现，请参阅[SHA256+]。请注意，出于测试目的，PRF输出被认为只是非真实的算法输出。"
    },
    {
      "indent": 3,
      "text": "Test Case PRF-1: Key = 0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b 0b0b0b0b (20 bytes)",
      "zh-CHS": "测试用例PRF-1:Key=0B0B0B0B0B0B0B 0B0B0B（20字节）"
    },
    {
      "indent": 3,
      "text": "Data = 4869205468657265 (\"Hi There\")",
      "zh-CHS": "数据=48692054687265（“你好”）"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-256 = b0344c61d8db38535ca8afceaf0bf12b\n                   881dc200c9833da726e9376c2e32cff7",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-384 = afd03944d84895626b0825f4ab46907f\n                   15f9dadbe4101ec682aa034c7cebc59c\n                   faea9ea9076ede7f4af152e8b2fa9cb6",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-512 = 87aa7cdea5ef619d4ff0b4241a1d6cb0\n                   2379f4e2ce4ec2787ad0b30545e17cde\n                   daa833b7d6b8a702038b274eaea3f4e4\n                   be9d914eeb61f1702e696c203a126854",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Test Case PRF-2: Key = 4a656665 (\"Jefe\")",
      "zh-CHS": "测试用例PRF-2:Key=4a656665（“Jefe”）"
    },
    {
      "indent": 3,
      "text": "Data = 7768617420646f2079612077616e7420 (\"what do ya want \") 666f72206e6f7468696e673f (\"for nothing?\")",
      "zh-CHS": "Data=7768617420646f2079612077616e7420（“你想要什么”）666f72206e6f7468696e673f（“免费的？”）"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-256 = 5bdcc146bf60754e6a042426089575c7\n                   5a003f089d2739839dec58b964ec3843",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-384 = af45d2e376484031617f78d2b58a6b1b\n                   9c7ef464f5a01b47e42ec3736322445e\n                   8e2240ca5e69e2c78b3239ecfab21649",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-512 = 164b7a7bfcf819e2e395fbe73b56e0a3\n                   87bd64222e831fd610270cd7ea250554\n                   9758bf75c05a994a6d034f65f8f0e6fd\n                   caeab1a34d4a6b4b636e070a38bce737",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Test Case PRF-3: Key aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaa (20 bytes)",
      "zh-CHS": "测试用例PRF-3：键aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa（20字节）"
    },
    {
      "indent": 3,
      "text": "Data = dddddddddddddddddddddddddddddddd dddddddddddddddddddddddddddddddd dddddddddddddddddddddddddddddddd dddd (50 bytes)",
      "zh-CHS": "数据=DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-256 = 773ea91e36800e46854db8ebd09181a7\n                   2959098b3ef8c122d9635514ced565fe",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-384 = 88062608d3e6ad8a0aa2ace014c8a86f\n                   0aa635d947ac9febe83ef4e55966144b\n                   2a5ab39dc13814b94e3ab6e101a34f27",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-512 = fa73b0089d56a284efb0f0756c890be9\n                   b1b5dbdd8ee81a3655f83e33b2279d39\n                   bf3e848279a722c806b485a47e67c807\n                   b946a337bee8942674278859e13292fb",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Test Case PRF-4: Key = 0102030405060708090a0b0c0d0e0f10 111213141516171819 (25 bytes)",
      "zh-CHS": "测试用例PRF-4:Key=0102030405060708090a0b0c0d0e0f10 111213141516171819（25字节）"
    },
    {
      "indent": 3,
      "text": "Data = cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcd (50 bytes)",
      "zh-CHS": "数据=CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-256 = 82558a389a443c0ea4cc819899f2083a\n                   85f0faa3e578f8077a2e3ff46729665b",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-384 = 3e8a69b7783c25851933ab6290af6ca7\n                   7a9981480850009cc5577c6e1f573b4e\n                   6801dd23c4a7d679ccf8a386c674cffb",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-512 = b0ba465637458c6990e5a8c5f61d4af7\n                   e576d97ff94b872de76f8050361ee3db\n                   a91ca5c11aa25eb4d679275cc5788063\n                   a5f19741120c4f2de2adebeb10a298dd",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Test Case PRF-5: Key = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaa (131 bytes)",
      "zh-CHS": "测试用例PRF-5:Key=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
      "indent": 3,
      "text": "Data = 54657374205573696e67204c61726765 (\"Test Using Large\") 72205468616e20426c6f636b2d53697a (\"r Than Block-Siz\") 65204b6579202d2048617368204b6579 (\"e Key - Hash Key\") 204669727374 (\" First\")",
      "zh-CHS": "Data=54657374205573696E6724C617C6172661726765（“使用大的测试”）722054686616E20426C6F636B2D53697A（“比块大小大”）65204b6579202d2048617368204b6579（“e键-哈希键”）204669727374（“第一个”）"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-256 = 60e431591ee0b67f0d8a26aacbf5b77f\n                   8e0bc6213728c5140546040f0ee37f54",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-384 = 4ece084485813e9088d2c63a041bc5b4\n                   4f9ef1012a2b588f3cd11f05033ac4c6\n                   0c2ef6ab4030fe8296248df163f44952",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-512 = 80b24263c7c1a3ebb71493c1dd7be8b4\n                   9b46d1f41b4aeec1121b013783f8f352\n                   6b56d037e05f2598bd0fd2215d6a1e52\n                   95e64f73f63f0aec8b915a985d786598",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Test Case PRF-6:",
      "zh-CHS": "测试用例PRF-6："
    },
    {
      "indent": 3,
      "text": "Key = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaa (131 bytes)",
      "zh-CHS": "Key=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
      "indent": 3,
      "text": "Data = 54686973206973206120746573742075 (\"This is a test u\") 73696e672061206c6172676572207468 (\"sing a larger th\") 616e20626c6f636b2d73697a65206b65 (\"an block-size ke\") 7920616e642061206c61726765722074 (\"y and a larger t\") 68616e20626c6f636b2d73697a652064 (\"han block-size d\") 6174612e20546865206b6579206e6565 (\"ata. The key nee\") 647320746f2062652068617368656420 (\"ds to be hashed \") 6265666f7265206265696e6720757365 (\"before being use\") 642062792074686520484d414320616c (\"d by the HMAC al\") 676f726974686d2e (\"gorithm.\")",
      "zh-CHS": "数据=5468697320697320612074657473742075（“这是一个测试u”）73696E67206C617267657207468（“唱一个更大的th”）616E20626C6F636B2D73697A6520665（“一个块大小ke”）7920616E6420616E6420616C66765722074（“y和一个更大的t”）68616E20626C6F636B73697A652064（“han块大小d”）6174612E205466565656565656565656565（“数据块大小nee”）647320746f2062652068617368656420（“待哈希的ds”）6265666F7265206265696E67207075665（“使用前”）6420627920746686520484D414320616C（“HMAC al的d”）676F726974674686D2E（“gorithm”）"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-256 = 9b09ffa71b942fcb27635fbcd5b0e944\n                   bfdc63644f0713938a7f51535c3a35e2",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-384 = 6617178e941f020d351e2f254e8fd32c\n                   602420feb0b8fb9adccebb82461e99c5\n                   a678cc31e799176d3860e6110c46523e",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-512 = e37b6a775dc87dbaa4dfa9f96e5e3ffd\n                   debd71f8867289865df5a32d20cdc944\n                   b6022cac3c4982b10d5eeb55c3e4de15\n                   134676fb6de0446065c97440fa8c6a58",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "2.7.2. Authenticator Test Vectors",
      "section_title": true,
      "zh-CHS": "2.7.2. 验证器测试向量"
    },
    {
      "indent": 3,
      "text": "The following sections are test cases for HMAC-SHA256-128, HMAC-SHA384-192, and HMAC-SHA512-256. PRF outputs are also included for convenience. These test cases were generated using the SHA256+ reference code provided in [SHA256+].",
      "zh-CHS": "以下部分是HMAC-SHA256-128、HMAC-SHA384-192和HMAC-SHA512-256的测试用例。为方便起见，还包括PRF输出。这些测试用例是使用[SHA256+]中提供的SHA256+参考代码生成的。"
    },
    {
      "indent": 0,
      "text": "2.7.2.1. SHA256 Authentication Test Vectors",
      "section_title": true,
      "zh-CHS": "2.7.2.1. SHA256认证测试向量"
    },
    {
      "indent": 3,
      "text": "Test Case AUTH256-1: Key = 0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b 0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b (32 bytes)",
      "zh-CHS": "测试用例AUTH256-1:Key=0B0B0B0B0B0B0B0B0B0B0B0B0B 0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B（32字节）"
    },
    {
      "indent": 3,
      "text": "Data = 4869205468657265 (\"Hi There\")",
      "zh-CHS": "数据=48692054687265（“你好”）"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-256 = 198a607eb44bfbc69903a0f1cf2bbdc5\n                   ba0aa3f3d9ae3c1c7a3b1696a0b68cf7",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-256-128 = 198a607eb44bfbc69903a0f1cf2bbdc5",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Test Case AUTH256-2: Key = 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\") 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\")",
      "zh-CHS": "测试用例AUTH256-2:Key=4a6566654a6566654a6566654a656665（“JEFEJEFEJEJEFE”）4a6566654a6566654a6566654a656665（“JEFEJEFE”）"
    },
    {
      "indent": 3,
      "text": "Data = 7768617420646f2079612077616e7420 (\"what do ya want \") 666f72206e6f7468696e673f (\"for nothing?\")",
      "zh-CHS": "Data=7768617420646f2079612077616e7420（“你想要什么”）666f72206e6f7468696e673f（“免费的？”）"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-256 = 167f928588c5cc2eef8e3093caa0e87c\n                   9ff566a14794aa61648d81621a2a40c6",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-256-128 = 167f928588c5cc2eef8e3093caa0e87c",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Test Case AUTH256-3: Key = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa (32 bytes)",
      "zh-CHS": "测试用例AUTH256-3:Key=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
      "indent": 3,
      "text": "Data = dddddddddddddddddddddddddddddddd dddddddddddddddddddddddddddddddd dddddddddddddddddddddddddddddddd dddd (50 bytes)",
      "zh-CHS": "数据=DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-256 = cdcb1220d1ecccea91e53aba3092f962\n                   e549fe6ce9ed7fdc43191fbde45c30b0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-256-128 = cdcb1220d1ecccea91e53aba3092f962",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Test Case AUTH256-4: Key = 0102030405060708090a0b0c0d0e0f10 1112131415161718191a1b1c1d1e1f20 (32 bytes)",
      "zh-CHS": "测试用例AUTH256-4:Key=0102030405060708090a0b0c0d0e0f10 11121314151617191A1B1C1D1E1F20（32字节）"
    },
    {
      "indent": 3,
      "text": "Data = cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcd (50 bytes)",
      "zh-CHS": "数据=CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-256 = 372efcf9b40b35c2115b1346903d2ef4\n                   2fced46f0846e7257bb156d3d7b30d3f",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-256-128 = 372efcf9b40b35c2115b1346903d2ef4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "2.7.2.2. SHA384 Authentication Test Vectors",
      "section_title": true,
      "zh-CHS": "2.7.2.2. SHA384认证测试向量"
    },
    {
      "indent": 3,
      "text": "Test Case AUTH384-1: Key = 0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b 0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b 0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b (48 bytes)",
      "zh-CHS": "测试用例AUTH384-1：键=0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B 0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B 0B0B0B0B0B0B0B0B0B0B（48字节）"
    },
    {
      "indent": 3,
      "text": "Data = 4869205468657265 (\"Hi There\")",
      "zh-CHS": "数据=48692054687265（“你好”）"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-384 = b6a8d5636f5c6a7224f9977dcf7ee6c7\n                   fb6d0c48cbdee9737a959796489bddbc\n                   4c5df61d5b3297b4fb68dab9f1b582c2",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-384-128 = b6a8d5636f5c6a7224f9977dcf7ee6c7 fb6d0c48cbdee973",
      "zh-CHS": "HMAC-SHA-384-128=b6a8d5636f5c6a7224f9977dcf7ee6c7 fb6d0c48cbdee973"
    },
    {
      "indent": 3,
      "text": "Test Case AUTH384-2: Key = 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\") 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\") 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\")",
      "zh-CHS": "测试用例AUTH384-2:Key=4a6566654a6566654a6566654a656665（“jefejefejejefe”）4a6566654a6566654a6566654a656665（“jefejefe”）4a6566654a6566654a6566654a656665（“jefejefe”）"
    },
    {
      "indent": 3,
      "text": "Data = 7768617420646f2079612077616e7420 (\"what do ya want \") 666f72206e6f7468696e673f (\"for nothing?\")",
      "zh-CHS": "Data=7768617420646f2079612077616e7420（“你想要什么”）666f72206e6f7468696e673f（“免费的？”）"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-384 = 2c7353974f1842fd66d53c452ca42122\n                   b28c0b594cfb184da86a368e9b8e16f5\n                   349524ca4e82400cbde0686d403371c9",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-384-192 = 2c7353974f1842fd66d53c452ca42122 b28c0b594cfb184d",
      "zh-CHS": "HMAC-SHA-384-192=2c7353974f1842fd66d53c452ca42122 b28c0b594cfb184d"
    },
    {
      "indent": 3,
      "text": "Test Case AUTH384-3: Key = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa (48 bytes)",
      "zh-CHS": "测试用例AUTH384-3:Key=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
      "indent": 3,
      "text": "Data = dddddddddddddddddddddddddddddddd dddddddddddddddddddddddddddddddd dddddddddddddddddddddddddddddddd dddd (50 bytes)",
      "zh-CHS": "数据=DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-384 = 809f439be00274321d4a538652164b53\n                   554a508184a0c3160353e3428597003d\n                   35914a18770f9443987054944b7c4b4a",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-384-192 = 809f439be00274321d4a538652164b53 554a508184a0c316",
      "zh-CHS": "HMAC-SHA-384-192=809f439be00274321d4a538652164b53 554a508184a0c316"
    },
    {
      "indent": 3,
      "text": "Test Case AUTH384-4: Key = 0102030405060708090a0b0c0d0e0f10 1112131415161718191a1b1c1d1e1f20 0a0b0c0d0e0f10111213141516171819 (48 bytes)",
      "zh-CHS": "测试用例AUTH384-4:Key=0102030405060708090a0b0c0d0e0f10 11121314151617191A1B1C1D1E1F20 0A0B0C0D0E0F101111213141516171819（48字节）"
    },
    {
      "indent": 3,
      "text": "Data = cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcd (50 bytes)",
      "zh-CHS": "数据=CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-384 = 5b540085c6e6358096532b2493609ed1\n                   cb298f774f87bb5c2ebf182c83cc7428\n                   707fb92eab2536a5812258228bc96687",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-384-192 = 5b540085c6e6358096532b2493609ed1 cb298f774f87bb5c",
      "zh-CHS": "HMAC-SHA-384-192=5b540085c6e6358096532b2493609ed1 cb298f774f87bb5c"
    },
    {
      "indent": 0,
      "text": "2.7.2.3. SHA512 Authentication Test Vectors",
      "section_title": true,
      "zh-CHS": "2.7.2.3. SHA512身份验证测试向量"
    },
    {
      "indent": 3,
      "text": "Test Case AUTH512-1: Key = 0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b 0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b 0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b 0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b (64 bytes)",
      "zh-CHS": "测试用例AUTH512-1：键=0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B（64字节）"
    },
    {
      "indent": 3,
      "text": "Data = 4869205468657265 (\"Hi There\")",
      "zh-CHS": "数据=48692054687265（“你好”）"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-512 = 637edc6e01dce7e6742a99451aae82df\n                   23da3e92439e590e43e761b33e910fb8\n                   ac2878ebd5803f6f0b61dbce5e251ff8\n                   789a4722c1be65aea45fd464e89f8f5b",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-512-256 = 637edc6e01dce7e6742a99451aae82df\n                   23da3e92439e590e43e761b33e910fb8",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Test Case AUTH512-2: Key = 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\") 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\") 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\") 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\")",
      "zh-CHS": "Test Case AUTH512-2: Key = 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\") 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\") 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\") 4a6566654a6566654a6566654a656665 (\"JefeJefeJefeJefe\")translate error, please retry"
    },
    {
      "indent": 3,
      "text": "Data = 7768617420646f2079612077616e7420 (\"what do ya want \") 666f72206e6f7468696e673f (\"for nothing?\")",
      "zh-CHS": "Data=7768617420646f2079612077616e7420（“你想要什么”）666f72206e6f7468696e673f（“免费的？”）"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-512 = cb370917ae8a7ce28cfd1d8f4705d614\n                   1c173b2a9362c15df235dfb251b15454\n                   6aa334ae9fb9afc2184932d8695e397b\n                   fa0ffb93466cfcceaae38c833b7dba38",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-512-256 = cb370917ae8a7ce28cfd1d8f4705d614\n                   1c173b2a9362c15df235dfb251b15454",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Test Case AUTH512-3: Key = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa (64 bytes)",
      "zh-CHS": "测试用例AUTH512-3:Key=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa（64字节）"
    },
    {
      "indent": 3,
      "text": "Data = dddddddddddddddddddddddddddddddd dddddddddddddddddddddddddddddddd dddddddddddddddddddddddddddddddd dddd (50 bytes)",
      "zh-CHS": "数据=DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-512 = 2ee7acd783624ca9398710f3ee05ae41\n                   b9f9b0510c87e49e586cc9bf961733d8\n                   623c7b55cebefccf02d5581acc1c9d5f\n                   b1ff68a1de45509fbe4da9a433922655",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-512-256 = 2ee7acd783624ca9398710f3ee05ae41\n                   b9f9b0510c87e49e586cc9bf961733d8",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Test Case AUTH512-4: Key = 0a0b0c0d0e0f10111213141516171819 0102030405060708090a0b0c0d0e0f10 1112131415161718191a1b1c1d1e1f20 2122232425262728292a2b2c2d2e2f30 3132333435363738393a3b3c3d3e3f40 (64 bytes)",
      "zh-CHS": "测试用例AUTH512-4:Key=0A0B0C0D0E0F101111213141516171819 0102030405060708090a0b0c0d0e0f10 11121314151617191A1B1C1D1E1F20 2122232425627292A2B2C2D2E2F30 313233343536383393B3C3D3E3F40（64字节）"
    },
    {
      "indent": 3,
      "text": "Data = cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd cdcd (50 bytes)",
      "zh-CHS": "数据=CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD"
    },
    {
      "indent": 3,
      "text": "PRF-HMAC-SHA-512 = 5e6688e5a3daec826ca32eaea224eff5\n                   e700628947470e13ad01302561bab108\n                   b8c48cbc6b807dcfbd850521a685babc\n                   7eae4a2a2e660dc0e86b931d65503fd2",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "HMAC-SHA-512-256 = 5e6688e5a3daec826ca32eaea224eff5\n                   e700628947470e13ad01302561bab108",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "3. Security Considerations",
      "section_title": true,
      "zh-CHS": "3. 安全考虑"
    },
    {
      "indent": 3,
      "text": "In a general sense, the security provided by the HMAC-SHA-256+ algorithms is based both upon the strength of the underlying hash algorithm, and upon the additional strength derived from the HMAC construct. At the time of this writing, there are no practical cryptographic attacks against SHA-256, SHA-384, SHA-512, or HMAC. However, as with any cryptographic algorithm, an important component of these algorithms' strength lies in the correctness of the algorithm implementation, the security of the key management mechanism, the strength of the associated secret key, and upon the correctness of the implementation in all of the participating systems. This specification contains test vectors to assist in verifying the correctness of the algorithm implementation, but these in no way verify the correctness (or security) of the surrounding security infrastructure.",
      "zh-CHS": "在一般意义上，HMAC-SHA-256+算法提供的安全性既基于底层哈希算法的强度，也基于源自HMAC构造的附加强度。在撰写本文时，还没有针对SHA-256、SHA-384、SHA-512或HMAC的实际加密攻击。然而，与任何密码算法一样，这些算法的优势的一个重要组成部分在于算法实现的正确性、密钥管理机制的安全性、相关密钥的优势以及所有参与系统中实现的正确性。本规范包含用于帮助验证算法实现正确性的测试向量，但这些测试向量绝不能验证周围安全基础设施的正确性（或安全性）。"
    },
    {
      "indent": 0,
      "text": "3.1. HMAC Key Length vs Truncation Length",
      "section_title": true,
      "zh-CHS": "3.1. HMAC密钥长度与截断长度"
    },
    {
      "indent": 3,
      "text": "There are important differences between the security levels afforded by HMAC-SHA1-96 [HMAC-SHA1] and the HMAC-SHA-256+ algorithms, but there are also considerations that are somewhat counter-intuitive. There are two different axes along which we gauge the security of these algorithms: HMAC output length and HMAC key length. If we assume the HMAC key is a well-guarded secret that can only be determined through offline attacks on observed values, and that its length is less than or equal to the output length of the underlying hash algorithm, then the key's strength is directly proportional to its length. And if we assume an adversary has no knowledge of the HMAC key, then the probability of guessing a correct MAC value for any given packet is directly proportional to the HMAC output length.",
      "zh-CHS": "HMAC-SHA1-96[HMAC-SHA1]和HMAC-SHA-256+算法提供的安全级别之间存在重要差异，但也存在一些违反直觉的考虑因素。我们沿着两个不同的轴来衡量这些算法的安全性：HMAC输出长度和HMAC密钥长度。如果我们假设HMAC密钥是一个精心保护的秘密，只能通过对观察值的离线攻击来确定，并且其长度小于或等于基础哈希算法的输出长度，那么密钥的强度与其长度成正比。如果我们假设对手不知道HMAC密钥，那么猜测任何给定数据包的正确MAC值的概率与HMAC输出长度成正比。"
    },
    {
      "indent": 3,
      "text": "This specification defines truncation to output lengths of either 128 192, or 256 bits. It is important to note that at this time, it is not clear that HMAC-SHA-256 with a truncation length of 128 bits is any more secure than HMAC-SHA1 with the same truncation length, assuming the adversary has no knowledge of the HMAC key. This is because in such cases, the adversary must predict only those bits that remain after truncation. Since in both cases that output length is the same (128 bits), the adversary's odds of correctly guessing the value are also the same in either case: 1 in 2^128. Again, if we assume the HMAC key remains unknown to the attacker, then only a bias in one of the algorithms would distinguish one from the other. Currently, no such bias is known to exist in either HMAC-SHA1 or HMAC-SHA-256+.",
      "zh-CHS": "本规范定义了输出长度为128、192或256位的截断。需要注意的是，此时，假设对手不知道HMAC密钥，则不清楚截断长度为128位的HMAC-SHA-256是否比截断长度相同的HMAC-SHA1更安全。这是因为在这种情况下，对手必须仅预测截断后剩余的比特。因为在这两种情况下，输出长度相同（128位），所以在这两种情况下，对手正确猜测值的几率也相同：1/2^128。同样，如果我们假设攻击者仍然不知道HMAC密钥，那么只有一种算法中的偏差才能将一种算法与另一种算法区分开来。目前，已知HMAC-SHA1或HMAC-SHA-256+中均不存在此类偏差。"
    },
    {
      "indent": 3,
      "text": "If, on the other hand, the attacker is focused on guessing the HMAC key, and we assume that the hash algorithms are indistinguishable",
      "zh-CHS": "另一方面，如果攻击者专注于猜测HMAC密钥，并且我们假设哈希算法无法区分"
    },
    {
      "indent": 3,
      "text": "when viewed as PRF's, then the HMAC key length provides a direct measure of the underlying security: the longer the key, the harder it is to guess. This means that with respect to passive attacks on the HMAC key, size matters - and the HMAC-SHA-256+ algorithms provide more security in this regard than HMAC-SHA1-96.",
      "zh-CHS": "当被视为PRF时，HMAC密钥长度提供了对底层安全性的直接度量：密钥越长，猜测就越困难。这意味着对于HMAC密钥的被动攻击，大小很重要，HMAC-SHA-256+算法在这方面比HMAC-SHA1-96提供了更多的安全性。"
    },
    {
      "indent": 0,
      "text": "4. IANA Considerations",
      "section_title": true,
      "zh-CHS": "4. IANA考虑"
    },
    {
      "indent": 3,
      "text": "This document does not specify the conventions for using SHA256+ for IKE Phase 1 negotiations, except to note that IANA has made the following IKE hash algorithm attribute assignments:",
      "zh-CHS": "本文档未指定将SHA256+用于IKE第1阶段协商的约定，但需要注意的是，IANA已进行了以下IKE哈希算法属性分配："
    },
    {
      "indent": 3,
      "text": "SHA2-256: 4",
      "zh-CHS": "SHA2-256:4"
    },
    {
      "indent": 3,
      "text": "SHA2-384: 5",
      "zh-CHS": "SHA2-384:5"
    },
    {
      "indent": 3,
      "text": "SHA2-512: 6",
      "zh-CHS": "SHA2-512:6"
    },
    {
      "indent": 3,
      "text": "For IKE Phase 2 negotiations, IANA has assigned the following authentication algorithm identifiers:",
      "zh-CHS": "对于IKE第2阶段协商，IANA已分配以下身份验证算法标识符："
    },
    {
      "indent": 3,
      "text": "HMAC-SHA2-256: 5",
      "zh-CHS": "HMAC-SHA2-256:5"
    },
    {
      "indent": 3,
      "text": "HMAC-SHA2-384: 6",
      "zh-CHS": "HMAC-SHA2-384:6"
    },
    {
      "indent": 3,
      "text": "HMAC-SHA2-512: 7",
      "zh-CHS": "HMAC-SHA2-512:7"
    },
    {
      "indent": 3,
      "text": "For use of HMAC-SHA-256+ as a PRF in IKEv2, IANA has assigned the following IKEv2 Pseudo-random function (type 2) transform identifiers:",
      "zh-CHS": "为了将HMAC-SHA-256+用作IKEv2中的PRF，IANA分配了以下IKEv2伪随机函数（类型2）变换标识符："
    },
    {
      "indent": 3,
      "text": "PRF_HMAC_SHA2_256 5",
      "zh-CHS": "PRF_HMAC_SHA2_256 5"
    },
    {
      "indent": 3,
      "text": "PRF_HMAC_SHA2_384 6",
      "zh-CHS": "PRF_HMAC_SHA2_384 6"
    },
    {
      "indent": 3,
      "text": "PRF_HMAC_SHA2_512 7",
      "zh-CHS": "PRF_HMAC_SHA2_512 7"
    },
    {
      "indent": 3,
      "text": "For the use of HMAC-SHA-256+ algorithms for data origin authentication and integrity verification in IKEv2, ESP, or AH, IANA has assigned the following IKEv2 integrity (type 3) transform identifiers:",
      "zh-CHS": "为了在IKEv2、ESP或AH中使用HMAC-SHA-256+算法进行数据源身份验证和完整性验证，IANA分配了以下IKEv2完整性（类型3）转换标识符："
    },
    {
      "indent": 3,
      "text": "AUTH_HMAC_SHA2_256_128 12",
      "zh-CHS": "AUTH_HMAC_SHA2_256_128 12"
    },
    {
      "indent": 3,
      "text": "AUTH_HMAC_SHA2_384_192 13",
      "zh-CHS": "认证号HMAC\\U SHA2\\U 384\\U 192 13"
    },
    {
      "indent": 3,
      "text": "AUTH_HMAC_SHA2_512_256 14",
      "zh-CHS": "AUTH_HMAC_SHA2_512_256 14"
    },
    {
      "indent": 0,
      "text": "5. Acknowledgements",
      "section_title": true,
      "zh-CHS": "5. 致谢"
    },
    {
      "indent": 3,
      "text": "Portions of this text were unabashedly borrowed from [HMAC-SHA1] and [HMAC-TEST]. Thanks to Hugo Krawczyk for comments and recommendations on early revisions of this document, and thanks also to Russ Housley and Steve Bellovin for various security-related comments and recommendations.",
      "zh-CHS": "本文的部分内容是毫不掩饰地从[HMAC-SHA1]和[HMAC-TEST]中借用的。感谢Hugo Krawczyk对本文件早期修订的意见和建议，也感谢Russ Housley和Steve Bellovin对各种安全相关意见和建议。"
    },
    {
      "indent": 0,
      "text": "6. References",
      "section_title": true,
      "zh-CHS": "6. 工具书类"
    },
    {
      "indent": 0,
      "text": "6.1. Normative References",
      "section_title": true,
      "zh-CHS": "6.1. 规范性引用文件"
    },
    {
      "indent": 3,
      "text": "[AH] Kent, S., \"IP Authentication Header\", RFC 4302, December 2005.",
      "zh-CHS": "[AH]Kent，S.，“IP认证头”，RFC 4302，2005年12月。"
    },
    {
      "indent": 3,
      "text": "[ARCH] Kent, S. and K. Seo, \"Security Architecture for the Internet Protocol\", RFC 4301, December 2005.",
      "zh-CHS": "[ARCH]Kent，S.和K.Seo，“互联网协议的安全架构”，RFC 43012005年12月。"
    },
    {
      "indent": 3,
      "text": "[ESP] Kent, S., \"IP Encapsulating Security Payload (ESP)\", RFC 4303, December 2005.",
      "zh-CHS": "[ESP]Kent，S.，“IP封装安全有效负载（ESP）”，RFC 4303，2005年12月。"
    },
    {
      "indent": 3,
      "text": "[HMAC] Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC: Keyed-Hashing for Message Authentication\", RFC 2104, February 1997.",
      "zh-CHS": "[HMAC]Krawczyk，H.，Bellare，M.，和R.Canetti，“HMAC：用于消息身份验证的键控哈希”，RFC 2104，1997年2月。"
    },
    {
      "indent": 3,
      "text": "[HMAC-SHA1] Madsen, C. and R. Glenn, \"The Use of HMAC-SHA-1-96 within ESP and AH\", RFC 2404, November 1998.",
      "zh-CHS": "[HMAC-SHA1]Madsen，C.和R.Glenn，“在ESP和AH中使用HMAC-SHA-1-96”，RFC 2404，1998年11月。"
    },
    {
      "indent": 3,
      "text": "[HMAC-TEST] Nystrom, M., \"Identifiers and Test Vectors for HMAC-SHA-224, HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512\", RFC 4231, December 2005.",
      "zh-CHS": "[HMAC-TEST]Nystrom，M.，“HMAC-SHA-224、HMAC-SHA-256、HMAC-SHA-384和HMAC-SHA-512的标识符和测试向量”，RFC 42312005年12月。"
    },
    {
      "indent": 3,
      "text": "[IKE] Harkins, D. and D. Carrel, \"The Internet Key Exchange (IKE)\", RFC 2409, November 1998.",
      "zh-CHS": "[IKE]Harkins，D.和D.Carrel，“互联网密钥交换（IKE）”，RFC 2409，1998年11月。"
    },
    {
      "indent": 3,
      "text": "[IKEv2] Kaufman, C., \"Internet Key Exchange (IKEv2) Protocol\", RFC 4306, December 2005.",
      "zh-CHS": "[IKEv2]Kaufman，C.，“互联网密钥交换（IKEv2）协议”，RFC4306，2005年12月。"
    },
    {
      "indent": 3,
      "text": "[SHA2-1] NIST, \"FIPS PUB 180-2 'Specifications for the Secure Hash Standard'\", 2004 FEB, <http://csrc.nist.gov/ publications/fips/fips180-2/ fips180-2withchangenotice.pdf>.",
      "zh-CHS": "[SHA2-1]NIST，“FIPS PUB 180-2‘安全哈希标准规范’”，2004年2月<http://csrc.nist.gov/ 出版物/fips/fips180-2/fips180-2 WithChangeNotice.pdf>。"
    },
    {
      "indent": 3,
      "text": "[SHA256+] Eastlake, D. and T. Hansen, \"US Secure Hash Algorithms (SHA and HMAC-SHA)\", RFC 4634, July 2006.",
      "zh-CHS": "[SHA256+]Eastlake，D.和T.Hansen，“美国安全哈希算法（SHA和HMAC-SHA）”，RFC 46342006年7月。"
    },
    {
      "indent": 0,
      "text": "6.2. Informative References",
      "section_title": true,
      "zh-CHS": "6.2. 资料性引用"
    },
    {
      "indent": 3,
      "text": "[SHA2-2] NIST, \"Descriptions of SHA-256, SHA-384, and SHA-512\", 2001 MAY, <http://csrc.nist.gov/cryptval/shs/sha256-384-512.pdf>.",
      "zh-CHS": "[SHA2-2]NIST，“SHA-256、SHA-384和SHA-512的说明”，2001年5月<http://csrc.nist.gov/cryptval/shs/sha256-384-512.pdf>."
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "zh-CHS": "作者地址"
    },
    {
      "indent": 3,
      "text": "Scott G. Kelly Aruba Networks 1322 Crossman Ave Sunnyvale, CA 94089 US",
      "zh-CHS": "美国加利福尼亚州桑尼维尔市克罗斯曼大道1322号斯科特·G·凯利阿鲁巴网络公司，邮编94089"
    },
    {
      "indent": 3,
      "text": "EMail: scott@hyperthought.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Sheila Frankel NIST Bldg. 222 Room B264 Gaithersburg, MD 20899 US",
      "zh-CHS": "美国马里兰州盖瑟斯堡希拉·弗兰克尔NIST大厦222室B264"
    },
    {
      "indent": 3,
      "text": "EMail: sheila.frankel@nist.gov",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Full Copyright Statement",
      "zh-CHS": "完整版权声明"
    },
    {
      "indent": 3,
      "text": "Copyright (C) The IETF Trust (2007).",
      "zh-CHS": "版权所有（C）IETF信托基金（2007年）。"
    },
    {
      "indent": 3,
      "text": "This document is subject to the rights, licenses and restrictions contained in BCP 78, and except as set forth therein, the authors retain all their rights.",
      "zh-CHS": "本文件受BCP 78中包含的权利、许可和限制的约束，除其中规定外，作者保留其所有权利。"
    },
    {
      "indent": 3,
      "text": "This document and the information contained herein are provided on an \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.",
      "zh-CHS": "本文件及其包含的信息以“原样”为基础提供，贡献者、他/她所代表或赞助的组织（如有）、互联网协会、IETF信托基金和互联网工程任务组不承担任何明示或暗示的担保，包括但不限于任何保证，即使用本文中的信息不会侵犯任何权利，或对适销性或特定用途适用性的任何默示保证。"
    },
    {
      "indent": 0,
      "text": "Intellectual Property",
      "zh-CHS": "知识产权"
    },
    {
      "indent": 3,
      "text": "The IETF takes no position regarding the validity or scope of any Intellectual Property Rights or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; nor does it represent that it has made any independent effort to identify any such rights. Information on the procedures with respect to rights in RFC documents can be found in BCP 78 and BCP 79.",
      "zh-CHS": "IETF对可能声称与本文件所述技术的实施或使用有关的任何知识产权或其他权利的有效性或范围，或此类权利下的任何许可可能或可能不可用的程度，不采取任何立场；它也不表示它已作出任何独立努力来确定任何此类权利。有关RFC文件中权利的程序信息，请参见BCP 78和BCP 79。"
    },
    {
      "indent": 3,
      "text": "Copies of IPR disclosures made to the IETF Secretariat and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the IETF on-line IPR repository at http://www.ietf.org/ipr.",
      "zh-CHS": "向IETF秘书处披露的知识产权副本和任何许可证保证，或本规范实施者或用户试图获得使用此类专有权利的一般许可证或许可的结果，可从IETF在线知识产权存储库获取，网址为http://www.ietf.org/ipr."
    },
    {
      "indent": 3,
      "text": "The IETF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights that may cover technology that may be required to implement this standard. Please address the information to the IETF at ietf-ipr@ietf.org.",
      "zh-CHS": "IETF邀请任何相关方提请其注意任何版权、专利或专利申请，或其他可能涵盖实施本标准所需技术的专有权利。请将信息发送至IETF的IETF-ipr@ietf.org."
    },
    {
      "indent": 0,
      "text": "Acknowledgement",
      "zh-CHS": "确认"
    },
    {
      "indent": 3,
      "text": "Funding for the RFC Editor function is currently provided by the Internet Society.",
      "zh-CHS": "RFC编辑功能的资金目前由互联网协会提供。"
    }
  ]
}