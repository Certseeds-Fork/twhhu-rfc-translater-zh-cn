{
  "title": {
    "text": "RFC 5833: Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Base MIB",
    "zh-CHS": "RFC 5833"
  },
  "number": 5833,
  "created_at": "2021-11-09 00:11:37.780648+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                       Y. Shi, Ed.\nRequest for Comments: 5833                  Hangzhou H3C Tech. Co., Ltd.\nCategory: Informational                                  D. Perkins, Ed.\nISSN: 2070-1721                                          C. Elliott, Ed.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 58,
      "text": " Y. Zhang, Ed. Fortinet, Inc. May 2010",
      "zh-CHS": "张勇，Ed.Fortinet，Inc.2010年5月"
    },
    {
      "indent": 2,
      "text": "Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Base MIB",
      "zh-CHS": "无线接入点（CAPWAP）协议基MIB的控制和配置"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "This memo defines a portion of the Management Information Base (MIB) for use with network management protocols. In particular, it describes the managed objects for modeling the Control And Provisioning of Wireless Access Points (CAPWAP) Protocol. This MIB module is presented as a basis for future work on the SNMP management of the CAPWAP protocol.",
      "zh-CHS": "此备忘录定义了用于网络管理协议的管理信息库（MIB）的一部分。特别是，它描述了用于对无线接入点（CAPWAP）协议的控制和供应进行建模的托管对象。此MIB模块作为CAPWAP协议SNMP管理未来工作的基础。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "zh-CHS": "关于下段备忘"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "zh-CHS": "本文件不是互联网标准跟踪规范；它是为了提供信息而发布的。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "zh-CHS": "本文件是互联网工程任务组（IETF）的产品。它代表了IETF社区的共识。它已经接受了公众审查，并已被互联网工程指导小组（IESG）批准出版。并非IESG批准的所有文件都适用于任何级别的互联网标准；见RFC 5741第2节。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc5833.",
      "zh-CHS": "有关本文件当前状态、任何勘误表以及如何提供反馈的信息，请访问http://www.rfc-editor.org/info/rfc5833."
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2010 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "zh-CHS": "版权所有（c）2010 IETF信托基金和确定为文件作者的人员。版权所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "zh-CHS": "本文件受BCP 78和IETF信托有关IETF文件的法律规定的约束(http://trustee.ietf.org/license-info)自本文件出版之日起生效。请仔细阅读这些文件，因为它们描述了您对本文件的权利和限制。从本文件中提取的代码组件必须包括信托法律条款第4.e节中所述的简化BSD许可证文本，并提供简化BSD许可证中所述的无担保。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n2.  The Internet-Standard Management Framework . . . . . . . . . .  3\n3.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  3\n4.  Conventions  . . . . . . . . . . . . . . . . . . . . . . . . .  4\n5.  Overview . . . . . . . . . . . . . . . . . . . . . . . . . . .  5\n  5.1.  Requirements and Constraints . . . . . . . . . . . . . . .  5\n  5.2.  Wireless Binding MIB Modules . . . . . . . . . . . . . . .  5\n  5.3.  Design Objectives  . . . . . . . . . . . . . . . . . . . .  5\n  5.4.  Design Idea  . . . . . . . . . . . . . . . . . . . . . . .  6\n  5.5.  Mechanism of Reusing Wireless Binding MIB Modules  . . . .  6\n  5.6.  CAPWAP Protocol Wireless Binding MIB Module  . . . . . . .  7\n  5.7.  WTP Profile  . . . . . . . . . . . . . . . . . . . . . . .  7\n6.  Structure of the MIB Module  . . . . . . . . . . . . . . . . .  8\n7.  Relationship to Other MIB Modules  . . . . . . . . . . . . . .  9\n  7.1.  Relationship to SNMPv2-MIB Module  . . . . . . . . . . . .  9\n  7.2.  Relationship to IF-MIB Module  . . . . . . . . . . . . . .  9\n  7.3.  Relationship to ENTITY-MIB Module  . . . . . . . . . . . . 10\n  7.4.  Relationship to Wireless Binding MIB Modules . . . . . . . 10\n  7.5.  MIB Modules Required for IMPORTS . . . . . . . . . . . . . 10\n8.  Example of CAPWAP-BASE-MIB Module Usage  . . . . . . . . . . . 10\n9.  Definitions  . . . . . . . . . . . . . . . . . . . . . . . . . 14\n10. Security Considerations  . . . . . . . . . . . . . . . . . . . 69\n11. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 70\n  11.1. IANA Considerations for CAPWAP-BASE-MIB Module . . . . . . 70\n  11.2. IANA Considerations for ifType . . . . . . . . . . . . . . 70\n12. Contributors . . . . . . . . . . . . . . . . . . . . . . . . . 70\n13. Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 71\n14. References . . . . . . . . . . . . . . . . . . . . . . . . . . 71\n  14.1. Normative References . . . . . . . . . . . . . . . . . . . 71\n  14.2. Informative References . . . . . . . . . . . . . . . . . . 72",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "The CAPWAP Protocol [RFC5415] defines a standard, interoperable protocol, which enables an Access Controller (AC) to manage a collection of Wireless Termination Points (WTPs).",
      "zh-CHS": "CAPWAP协议[RFC5415]定义了一个标准的、可互操作的协议，该协议使接入控制器（AC）能够管理无线终端点（WTP）的集合。"
    },
    {
      "indent": 3,
      "text": "This document defines a MIB module that can be used to manage the CAPWAP implementations. This MIB module covers both configuration and WTP status-monitoring aspects of CAPWAP, and provides a way to reuse MIB modules for any wireless technology. It presented as a basis for future work on a SNMP management of the CAPWAP protocol.",
      "zh-CHS": "本文档定义了可用于管理CAPWAP实施的MIB模块。此MIB模块涵盖CAPWAP的配置和WTP状态监控方面，并提供了一种将MIB模块重新用于任何无线技术的方法。它作为未来CAPWAP协议SNMP管理工作的基础。"
    },
    {
      "indent": 0,
      "text": "2. The Internet-Standard Management Framework",
      "section_title": true,
      "zh-CHS": "2. 因特网标准管理框架"
    },
    {
      "indent": 3,
      "text": "For a detailed overview of the documents that describe the current Internet-Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].",
      "zh-CHS": "有关描述当前互联网标准管理框架的文件的详细概述，请参阅RFC 3410[RFC3410]第7节。"
    },
    {
      "indent": 3,
      "text": "Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB. MIB objects are generally accessed through the Simple Network Management Protocol (SNMP). Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI). This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579], and STD 58, RFC 2580 [RFC2580].",
      "zh-CHS": "托管对象通过虚拟信息存储（称为管理信息库或MIB）进行访问。MIB对象通常通过简单网络管理协议（SNMP）进行访问。MIB中的对象是使用管理信息结构（SMI）中定义的机制定义的。本备忘录规定了符合SMIv2的MIB模块，如STD 58、RFC 2578[RFC2578]、STD 58、RFC 2579[RFC2579]和STD 58、RFC 2580[RFC2580]所述。"
    },
    {
      "indent": 0,
      "text": "3. Terminology",
      "section_title": true,
      "zh-CHS": "3. 术语"
    },
    {
      "indent": 3,
      "text": "This document uses terminology from the CAPWAP Protocol specification [RFC5415] and the Architecture Taxonomy for CAPWAP [RFC4118].",
      "zh-CHS": "本文档使用CAPWAP协议规范[RFC5415]和CAPWAP架构分类[RFC4118]中的术语。"
    },
    {
      "indent": 3,
      "text": "Access Controller (AC): The network entity that provides WTP access to the network infrastructure in the data plane, control plane, management plane, or a combination therein.",
      "zh-CHS": "访问控制器（AC）：提供WTP访问数据平面、控制平面、管理平面或其中组合中网络基础设施的网络实体。"
    },
    {
      "indent": 3,
      "text": "Wireless Termination Point (WTP): The physical or network entity that contains an radio frequency (RF) antenna and wireless physical layer (PHY) to transmit and receive station traffic for wireless access networks.",
      "zh-CHS": "无线终端点（WTP）：包含射频（RF）天线和无线物理层（PHY）的物理或网络实体，用于为无线接入网络发送和接收站点流量。"
    },
    {
      "indent": 3,
      "text": "Control And Provisioning of Wireless Access Points (CAPWAP): It is a generic protocol defining AC and WTP control and data plane communication via a CAPWAP protocol transport mechanism. CAPWAP control messages, and optionally CAPWAP data messages, are secured using Datagram Transport Layer Security (DTLS) [RFC4347].",
      "zh-CHS": "无线接入点的控制和供应（CAPWAP）：它是一种通用协议，通过CAPWAP协议传输机制定义AC和WTP控制和数据平面通信。CAPWAP控制消息和可选的CAPWAP数据消息使用数据报传输层安全性（DTLS）[RFC4347]进行保护。"
    },
    {
      "indent": 3,
      "text": "CAPWAP Control Channel: A bi-directional flow defined by the AC IP Address, WTP IP Address, AC control port, WTP control port, and the transport-layer protocol (UDP or UDP-Lite) over which CAPWAP control packets are sent and received.",
      "zh-CHS": "CAPWAP控制通道：由AC IP地址、WTP IP地址、AC控制端口、WTP控制端口和传输层协议（UDP或UDP Lite）定义的双向流，通过该协议发送和接收CAPWAP控制数据包。"
    },
    {
      "indent": 3,
      "text": "CAPWAP Data Channel: A bi-directional flow defined by the AC IP Address, WTP IP Address, AC data port, WTP data port, and the transport-layer protocol (UDP or UDP-Lite) over which CAPWAP data packets are sent and received.",
      "zh-CHS": "CAPWAP数据通道：由AC IP地址、WTP IP地址、AC数据端口、WTP数据端口和传输层协议（UDP或UDP Lite）定义的双向流，通过该协议发送和接收CAPWAP数据包。"
    },
    {
      "indent": 3,
      "text": "Station (STA): A device that contains an interface to a wireless medium (WM).",
      "zh-CHS": "工作站（STA）：包含无线媒体（WM）接口的设备。"
    },
    {
      "indent": 3,
      "text": "Split and Local MAC: The CAPWAP protocol supports two modes of operation: Split and Local MAC (medium access control). In Split MAC mode, all Layer 2 wireless data and management frames are encapsulated via the CAPWAP protocol and exchanged between the AC and the WTPs. The Local MAC mode allows the data frames to be either locally bridged or tunneled as 802.3 frames.",
      "zh-CHS": "拆分和本地MAC:CAPWAP协议支持两种操作模式：拆分和本地MAC（介质访问控制）。在拆分MAC模式下，所有第2层无线数据和管理帧通过CAPWAP协议封装，并在AC和WTP之间交换。本地MAC模式允许数据帧作为802.3帧进行本地桥接或隧道传输。"
    },
    {
      "indent": 3,
      "text": "Wireless Binding: The CAPWAP protocol is independent of a specific WTP radio technology, as well its associated wireless link-layer protocol. Elements of the CAPWAP protocol are designed to accommodate the specific needs of each wireless technology in a standard way. Implementation of the CAPWAP protocol for a particular wireless technology MUST define a binding protocol for it, e.g., the binding for IEEE 802.11, provided in [RFC5416].",
      "zh-CHS": "无线绑定：CAPWAP协议独立于特定的WTP无线电技术及其相关的无线链路层协议。CAPWAP协议的元素旨在以标准方式满足每种无线技术的特定需求。特定无线技术的CAPWAP协议的实施必须为其定义绑定协议，例如[RFC5416]中提供的IEEE 802.11绑定。"
    },
    {
      "indent": 3,
      "text": "Autonomous Wireless Local Area Network (WLAN) Architecture: It is the traditional autonomous WLAN architecture, in which each WTP is a single physical device that implements all the wireless services.",
      "zh-CHS": "自主无线局域网（WLAN）体系结构：它是传统的自主WLAN体系结构，其中每个WTP是实现所有无线服务的单个物理设备。"
    },
    {
      "indent": 3,
      "text": "Centralized WLAN Architecture: It is an emerging hierarchical architecture utilizing one or more centralized controllers for managing a large number of WTP devices. It can be said that the full wireless functions are implemented across multiple physical network devices, namely, the WTPs and ACs.",
      "zh-CHS": "集中式WLAN架构：它是一种新兴的分层架构，使用一个或多个集中式控制器来管理大量WTP设备。可以说，完整的无线功能是跨多个物理网络设备实现的，即WTP和ACs。"
    },
    {
      "indent": 0,
      "text": "4. Conventions",
      "section_title": true,
      "zh-CHS": "4. 习俗"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC 2119 [RFC2119].",
      "zh-CHS": "本文件中的关键词“必须”、“不得”、“要求”、“应”、“不应”、“应”、“不应”、“建议”、“可”和“可选”应按照RFC 2119[RFC2119]中所述进行解释。"
    },
    {
      "indent": 0,
      "text": "5. Overview",
      "section_title": true,
      "zh-CHS": "5. 概述"
    },
    {
      "indent": 0,
      "text": "5.1. Requirements and Constraints",
      "section_title": true,
      "zh-CHS": "5.1. 要求和限制"
    },
    {
      "indent": 3,
      "text": "The CAPWAP Protocol MIB module (CAPWAP-BASE-MIB) is designed to:",
      "zh-CHS": "CAPWAP协议MIB模块（CAPWAP-BASE-MIB）设计用于："
    },
    {
      "indent": 3,
      "text": "- Support centralized management and monitoring of WTPs from the AC in combination with the CAPWAP protocol;",
      "zh-CHS": "- 支持AC结合CAPWAP协议对WTP进行集中管理和监控；"
    },
    {
      "indent": 3,
      "text": "- Allow operators to make configurations for WTPs before and after they connect to the AC;",
      "zh-CHS": "- 允许操作员在WTP连接到AC之前和之后对其进行配置；"
    },
    {
      "indent": 3,
      "text": "- Support querying of CAPWAP protocol parameters;",
      "zh-CHS": "- 支持CAPWAP协议参数查询；"
    },
    {
      "indent": 3,
      "text": "- Support displaying of WTPs' current states and configurations;",
      "zh-CHS": "- 支持显示WTP的当前状态和配置；"
    },
    {
      "indent": 3,
      "text": "- Provide basic property information about the AC, WTPs, radios, and stations, and their relationships;",
      "zh-CHS": "- 提供有关AC、WTP、无线电和电台及其关系的基本属性信息；"
    },
    {
      "indent": 3,
      "text": "- Provide counters for events on WTPs and radios such as reboot and hardware failure;",
      "zh-CHS": "- 为WTP和无线电上的事件（如重新启动和硬件故障）提供计数器；"
    },
    {
      "indent": 3,
      "text": "- Provide various notifications such as channel up and join failure.",
      "zh-CHS": "- 提供各种通知，如通道启动和连接失败。"
    },
    {
      "indent": 0,
      "text": "5.2. Wireless Binding MIB Modules",
      "section_title": true,
      "zh-CHS": "5.2. 无线绑定MIB模块"
    },
    {
      "indent": 3,
      "text": "Other Standards Development Organizations (SDOs), such as IEEE, have already defined MIB modules for a specific wireless technology, e.g., IEEE 802.11 MIB module [IEEE.802-11.2007]. Such MIB modules are called wireless binding MIB modules.",
      "zh-CHS": "其他标准开发组织（SDO），例如IEEE，已经为特定无线技术定义了MIB模块，例如IEEE 802.11 MIB模块[IEEE.802-11.2007]。这种MIB模块称为无线绑定MIB模块。"
    },
    {
      "indent": 0,
      "text": "5.3. Design Objectives",
      "section_title": true,
      "zh-CHS": "5.3. 设计目标"
    },
    {
      "indent": 3,
      "text": "This document introduces a mechanism to avoid redefining MIB objects in the existing MIB modules for a specific wireless technology, in other words, a mechanism to reuse wireless binding MIB modules defined by other SDOs.",
      "zh-CHS": "本文档介绍了一种避免为特定无线技术在现有MIB模块中重新定义MIB对象的机制，换句话说，一种重用由其他SDO定义的无线绑定MIB模块的机制。"
    },
    {
      "indent": 3,
      "text": "In summary, the CAPWAP-BASE-MIB module has the following design objectives:",
      "zh-CHS": "总之，CAPWAP-BASE-MIB模块具有以下设计目标："
    },
    {
      "indent": 3,
      "text": "- To implement an architecture that uses SNMP for the management and control of wireless networks, and answering the operator's requirements for centralized management, whatever the wireless devices are configured and deployed (centralized, autonomous, or some mix);",
      "zh-CHS": "- 实施一种使用SNMP管理和控制无线网络的体系结构，并满足运营商对集中管理的要求，无论无线设备是配置和部署的（集中、自主或混合）；"
    },
    {
      "indent": 3,
      "text": "- To be consistent with the CAPWAP protocol;",
      "zh-CHS": "- 与CAPWAP协议保持一致；"
    },
    {
      "indent": 3,
      "text": "- To be independent of any wireless technologies and be able to reuse wireless binding MIB modules defined by other SDOs;",
      "zh-CHS": "- 独立于任何无线技术，能够重用其他SDO定义的无线绑定MIB模块；"
    },
    {
      "indent": 3,
      "text": "- To enable interoperability between vendors;",
      "zh-CHS": "- 实现供应商之间的互操作性；"
    },
    {
      "indent": 3,
      "text": "- To meet the management requirements for the centralized WLAN architecture.",
      "zh-CHS": "- 满足集中式WLAN架构的管理要求。"
    },
    {
      "indent": 0,
      "text": "5.4. Design Idea",
      "section_title": true,
      "zh-CHS": "5.4. 设计理念"
    },
    {
      "indent": 3,
      "text": "The basic design idea of the CAPWAP-BASE-MIB module is:",
      "zh-CHS": "CAPWAP-BASE-MIB模块的基本设计思想是："
    },
    {
      "indent": 3,
      "text": "- The SNMP agent MUST be run on the AC devices and is not REQUIRED on the WTP devices. It follows the same model as the CAPWAP protocol: Centralized Control.",
      "zh-CHS": "- SNMP代理必须在AC设备上运行，在WTP设备上不需要。它遵循与CAPWAP协议相同的模型：集中控制。"
    },
    {
      "indent": 3,
      "text": "- It is designed to accommodate the specific needs of each wireless technology in a standard way. It is independent of any wireless technologies.",
      "zh-CHS": "- 它旨在以标准方式满足每种无线技术的特定需求。它独立于任何无线技术。"
    },
    {
      "indent": 3,
      "text": "- The ifIndex [RFC2863] is used as a common index for corresponding interfaces in the CAPWAP-BASE-MIB and the MIB modules of specific wireless technologies.",
      "zh-CHS": "- ifIndex[RFC2863]用作CAPWAP-BASE-MIB和特定无线技术的MIB模块中相应接口的通用索引。"
    },
    {
      "indent": 3,
      "text": "- The operator could manage and control the centralized WLAN architectures using multiple MIB modules defined by multiple SDOs, while keeping them loosely coupled.",
      "zh-CHS": "- 运营商可以使用多个SDO定义的多个MIB模块管理和控制集中式WLAN架构，同时保持它们松散耦合。"
    },
    {
      "indent": 0,
      "text": "5.5. Mechanism of Reusing Wireless Binding MIB Modules",
      "section_title": true,
      "zh-CHS": "5.5. 无线绑定MIB模块的复用机制"
    },
    {
      "indent": 3,
      "text": "For any wireless technology, the configuration and management of radios are very important. As usual, wireless binding MIB modules support radio management on their own. For example, the MIB tables such as the dot11OperationTable [IEEE.802-11.2007] are able to support WTP radio configuration. These tables use the ifIndex as the index, and work well under autonomous WLAN architecture.",
      "zh-CHS": "对于任何无线技术而言，无线设备的配置和管理都非常重要。与往常一样，无线绑定MIB模块本身支持无线电管理。例如，MIB表，如dot11OperationTable[IEEE.802-11.2007]能够支持WTP无线电配置。这些表使用ifIndex作为索引，在自主WLAN体系结构下运行良好。"
    },
    {
      "indent": 3,
      "text": "To reuse such wireless binding MIB modules is very important to centralized WLAN architectures. According to [RFC5415], a specific PHY radio could be identified by the combination of the identifiers of the WTP and radio (WTP ID + Radio ID), so the key point is to make use of the ifIndex idea and find a way to maintain the mappings between 'WTP ID + radio ID' and the ifIndex. As a generic mechanism, an ifIndex can identify an interface in an abstract way, and it does NOT care for the interface's PHY location (either on the WTP or AC). The AC can have WTP Virtual Radio Interfaces to logically represent PHY radios on the WTP. From the operator's perspective, it appears that PHY radios are located on the AC, and the PHY location of the",
      "zh-CHS": "重用这样的无线绑定MIB模块对于集中式WLAN架构非常重要。根据[RFC5415]，特定的PHY无线电可以通过WTP和无线电的标识符（WTP ID+无线电ID）的组合来识别，因此关键点是利用ifIndex思想并找到一种方法来维护“WTP ID+无线电ID”和ifIndex之间的映射。作为一种通用机制，ifIndex可以抽象地标识接口，它不关心接口的PHY位置（在WTP或AC上）。AC可以具有WTP虚拟无线电接口，以逻辑方式表示WTP上的PHY无线电。从运营商的角度来看，PHY无线电似乎位于AC上，并且"
    },
    {
      "indent": 3,
      "text": "WTP (radio) is hidden. The operator can operate radios through MIB tables with the ifIndex of a WTP Virtual Radio Interface. As a type of abstract interface, the WTP Virtual Radio Interface could be used by any wireless technology such as IEEE 802.11 and 802.16. The capwapBaseWirelessBindingTable in the CAPWAP-BASE-MIB module is used to store the mappings between the 'WTP ID + Radio ID' and the ifIndex.",
      "zh-CHS": "WTP（收音机）已隐藏。操作员可以使用WTP虚拟无线电接口的ifIndex通过MIB表操作无线电。作为一种抽象接口，WTP虚拟无线电接口可用于任何无线技术，如IEEE 802.11和802.16。CAPWAP-BASE-MIB模块中的capwapBaseWirelessBindingTable用于存储“WTP ID+无线电ID”和ifIndex之间的映射。"
    },
    {
      "indent": 0,
      "text": "5.6. CAPWAP Protocol Wireless Binding MIB Module",
      "section_title": true,
      "zh-CHS": "5.6. CAPWAP协议无线绑定MIB模块"
    },
    {
      "indent": 3,
      "text": "According to the CAPWAP Protocol specification [RFC5415], when defining a binding for wireless technologies, the authors MUST include any necessary definitions for technology-specific messages and all technology-specific message elements for those messages. A CAPWAP binding protocol is required for a specific wireless binding technology, e.g., the protocol of [RFC5416] for IEEE 802.11 binding.",
      "zh-CHS": "根据CAPWAP协议规范[RFC5415]，在定义无线技术的绑定时，作者必须包括技术特定消息的任何必要定义以及这些消息的所有技术特定消息元素。特定无线绑定技术需要CAPWAP绑定协议，例如用于IEEE 802.11绑定的[RFC5416]协议。"
    },
    {
      "indent": 3,
      "text": "Sometimes, not all the technology-specific message elements in a CAPWAP binding protocol have MIB objects defined by other SDOs. For example, the protocol of [RFC5416] defines WLAN management. The WLAN refers to a logical component instantiated on a WTP device. A single physical WTP MAY operate a number of WLANs. Also, Local or Split MAC modes could be specified for a WLAN. The MAC mode for a WLAN is not in the scope of IEEE 802.11 [IEEE.802-11.2007]. In such cases, in addition to the existing wireless binding MIB modules defined by other SDOs, a CAPWAP protocol wireless binding MIB module is required to be defined for a wireless binding, e.g, the CAPWAP Protocol Binding MIB for IEEE 802.11 [RFC5834].",
      "zh-CHS": "有时，CAPWAP绑定协议中并非所有特定于技术的消息元素都具有由其他SDO定义的MIB对象。例如，[RFC5416]的协议定义了WLAN管理。WLAN是指在WTP设备上实例化的逻辑组件。单个物理WTP可以操作多个wlan。此外，可以为WLAN指定本地或分割MAC模式。WLAN的MAC模式不在IEEE 802.11[IEEE.802-11.2007]的范围内。在这种情况下，除了其他SDO定义的现有无线绑定MIB模块外，还需要为无线绑定定义CAPWAP协议无线绑定MIB模块，例如，IEEE 802.11的CAPWAP协议绑定MIB[RFC5834]。"
    },
    {
      "indent": 0,
      "text": "5.7. WTP Profile",
      "section_title": true,
      "zh-CHS": "5.7. 水处理厂概况"
    },
    {
      "indent": 3,
      "text": "In a centralized WLAN architecture, a WTP profile is used to make configurations such as a static IP address for a WTP before and after it connects to the AC. It MUST contain the Base MAC address [RFC5415] of the WTP because the CAPWAP message received from the WTP contains the Base MAC address and the AC uses this Base MAC address to find the corresponding WTP profile.",
      "zh-CHS": "在集中式WLAN架构中，WTP配置文件用于在WTP连接到AC之前和之后进行配置，例如WTP的静态IP地址。它必须包含基本MAC地址[RFC5415]因为从WTP接收的CAPWAP消息包含基本MAC地址，AC使用此基本MAC地址查找相应的WTP配置文件。"
    },
    {
      "indent": 3,
      "text": "Section 4.6.40 of [RFC5415] omits indicating that the WTP's Base MAC address MUST be included in the WTP Board Data message element. This is a known errata item [Err1832] and should be fixed in any future revision of RFC 5415.",
      "zh-CHS": "[RFC5415]第4.6.40节省略了WTP的基本MAC地址必须包含在WTP板数据消息元素中的指示。这是一个已知的勘误表项[Err1832]，应在RFC 5415的任何未来版本中予以修正。"
    },
    {
      "indent": 3,
      "text": "Another important function of WTP profile is to trigger the creation of WTP Virtual Radio Interfaces on the AC. To implement this function, a WTP profile MUST include the WTP's model number [RFC5415], which reflects the number of PHY radios on the WTP. In this way, the creation of a WTP profile triggers the AC to",
      "zh-CHS": "WTP配置文件的另一个重要功能是触发在AC上创建WTP虚拟无线电接口。要实现此功能，WTP配置文件必须包括WTP的型号[RFC5415]，该型号反映了WTP上的PHY无线电数量。这样，WTP配置文件的创建将触发AC"
    },
    {
      "indent": 3,
      "text": "automatically create the same number of WTP Virtual Radio Interfaces corresponding to the WTP's PHY radios without manual intervention. With the ifIndexes of WTP Virtual Radio Interfaces, the operator could configure and manage the WTP's PHY radios through the wireless binding MIB modules.",
      "zh-CHS": "自动创建与WTP的PHY无线电对应的相同数量的WTP虚拟无线电接口，无需手动干预。通过WTP虚拟无线电接口的iIndex，操作员可以通过无线绑定MIB模块配置和管理WTP的PHY无线电。"
    },
    {
      "indent": 0,
      "text": "6. Structure of the MIB Module",
      "section_title": true,
      "zh-CHS": "6. MIB模块的结构"
    },
    {
      "indent": 3,
      "text": "The MIB objects are derived from the CAPWAP protocol document [RFC5415].",
      "zh-CHS": "MIB对象来自CAPWAP协议文档[RFC5415]。"
    },
    {
      "indent": 3,
      "text": "1) capwapBaseAcNameListTable",
      "zh-CHS": "1) capwapBaseAcNameListTable"
    },
    {
      "indent": 6,
      "text": "The AC name list table is used to configure the AC name list.",
      "zh-CHS": "AC名称列表表用于配置AC名称列表。"
    },
    {
      "indent": 3,
      "text": "2) capwapBaseMacAclTable",
      "zh-CHS": "2) CapwapBaseMaclactable"
    },
    {
      "indent": 6,
      "text": "The ACL table is used to configure stations' Access Control Lists (ACLs).",
      "zh-CHS": "ACL表用于配置站点的访问控制列表（ACL）。"
    },
    {
      "indent": 3,
      "text": "3) capwapBaseWtpProfileTable",
      "zh-CHS": "3) CAPWAPBASEWTPROFILETABLE"
    },
    {
      "indent": 6,
      "text": "The WTP profile table is used to configure WTP profiles for WTPs to be managed before they connect to the AC. An operator could change a WTP's current configuration by changing the values of parameters in the corresponding WTP profile, then the WTP could get the new configuration through the CAPWAP control channel.",
      "zh-CHS": "WTP配置文件表用于在WTP连接到AC之前为其配置要管理的WTP配置文件。操作员可以通过更改相应WTP配置文件中的参数值来更改WTP的当前配置，然后WTP可以通过CAPWAP控制通道获得新配置。"
    },
    {
      "indent": 3,
      "text": "4) capwapBaseWtpStateTable",
      "zh-CHS": "4) capwapBaseWtpStateTable"
    },
    {
      "indent": 6,
      "text": "The state table of WTPs is used to indicate the AC's CAPWAP FSM state for each WTP, and helps the operator to query a WTP's current configuration.",
      "zh-CHS": "WTP的状态表用于指示每个WTP的AC CAPWAP FSM状态，并帮助操作员查询WTP的当前配置。"
    },
    {
      "indent": 3,
      "text": "5) capwapBaseWtpTable",
      "zh-CHS": "5) CapwapBasewTable"
    },
    {
      "indent": 6,
      "text": "The WTP table is used to display properties of the WTPs in running state.",
      "zh-CHS": "WTP表用于显示处于运行状态的WTP的属性。"
    },
    {
      "indent": 3,
      "text": "6) capwapBaseWirelessBindingTable",
      "zh-CHS": "6) capwapBaseWirelessBindingTable"
    },
    {
      "indent": 6,
      "text": "The wireless binding table is used to display the mappings between WTP Virtual Radio Interfaces and PHY radios, and the wireless binding type for each PHY radio.",
      "zh-CHS": "无线绑定表用于显示WTP虚拟无线电接口和PHY无线电之间的映射，以及每个PHY无线电的无线绑定类型。"
    },
    {
      "indent": 3,
      "text": "7) capwapBaseStationTable",
      "zh-CHS": "7) capwapBaseStationTable"
    },
    {
      "indent": 6,
      "text": "The station table is used for providing stations' basic property information.",
      "zh-CHS": "桩号表用于提供桩号的基本属性信息。"
    },
    {
      "indent": 3,
      "text": "8) capwapBaseWtpEventsStatsTable",
      "zh-CHS": "8) CapwapBasetPeventsStats表"
    },
    {
      "indent": 6,
      "text": "The WTP events statistic table is used for collecting WTP reboot count, link failure count, hardware failure count and so on.",
      "zh-CHS": "WTP事件统计表用于收集WTP重新启动计数、链路故障计数、硬件故障计数等。"
    },
    {
      "indent": 3,
      "text": "9) capwapBaseRadioEventsStatsTable",
      "zh-CHS": "9) capwapBaseRadioEventsStatsTable"
    },
    {
      "indent": 6,
      "text": "The radio events statistic table is used for collecting radio reset count, channel change count, hardware failure count, and so on.",
      "zh-CHS": "无线电事件统计表用于收集无线电重置计数、频道更改计数、硬件故障计数等。"
    },
    {
      "indent": 0,
      "text": "7. Relationship to Other MIB Modules",
      "section_title": true,
      "zh-CHS": "7. 与其他MIB模块的关系"
    },
    {
      "indent": 0,
      "text": "7.1. Relationship to SNMPv2-MIB Module",
      "section_title": true,
      "zh-CHS": "7.1. 与SNMPv2 MIB模块的关系"
    },
    {
      "indent": 3,
      "text": "The CAPWAP-BASE-MIB module does not duplicate the objects of the 'system' group in the SNMPv2-MIB [RFC3418] that is defined as being mandatory for all systems, and the objects apply to the entity as a whole. The 'system' group provides identification of the management entity and certain other system-wide data.",
      "zh-CHS": "CAPWAP-BASE-MIB模块不会复制SNMPv2 MIB[RFC3418]中定义为所有系统必需的“系统”组的对象，这些对象作为一个整体应用于实体。“系统”组提供管理实体和某些其他系统范围数据的标识。"
    },
    {
      "indent": 0,
      "text": "7.2. Relationship to IF-MIB Module",
      "section_title": true,
      "zh-CHS": "7.2. 与IF-MIB模块的关系"
    },
    {
      "indent": 3,
      "text": "The Interfaces Group [RFC2863] defines generic managed objects for managing interfaces. This memo contains the media-specific extensions to the Interfaces Group for managing WTP PHY radios that are modeled as interfaces.",
      "zh-CHS": "接口组[RFC2863]定义了用于管理接口的通用托管对象。此备忘录包含接口组的媒体特定扩展，用于管理建模为接口的WTP PHY无线电。"
    },
    {
      "indent": 3,
      "text": "The IF-MIB module is required to be supported on the AC. Each PHY radio on the WTP corresponds to a WTP Virtual Radio Interface on the AC. The WTP Virtual Radio Interface provides a way to configure the radio's parameters and query radio's traffic statistics, and reuse wireless binding modules defined by other SDOs. The interface MUST be modeled as an ifEntry, and ifEntry objects such as ifIndex, ifDescr, ifName, and ifAlias are to be used as per [RFC2863].",
      "zh-CHS": "AC上需要支持IF-MIB模块。WTP上的每个PHY无线电与AC上的WTP虚拟无线电接口相对应。WTP虚拟无线电接口提供了一种配置无线电参数和查询无线电通信统计信息的方法，并重用由其他SDO定义的无线绑定模块。接口必须建模为ifEntry，并且ifEntry对象（如ifIndex、ifDescr、ifName和ifAlias）将按照[RFC2863]使用。"
    },
    {
      "indent": 3,
      "text": "Also, as an ifIndex [RFC2863] is used as a common index for corresponding interfaces in the CAPWAP-BASE-MIB and specific wireless technologies MIB modules, the AC MUST have a mechanism that preserves the values of the ifIndexes in the ifTable at AC reboot.",
      "zh-CHS": "此外，由于ifIndex[RFC2863]用作CAPWAP-BASE-MIB和特定无线技术MIB模块中相应接口的通用索引，AC必须具有在AC重新启动时保留ifTable中ifIndex值的机制。"
    },
    {
      "indent": 0,
      "text": "7.3. Relationship to ENTITY-MIB Module",
      "section_title": true,
      "zh-CHS": "7.3. 与ENTITY-MIB模块的关系"
    },
    {
      "indent": 3,
      "text": "The ENTITY-MIB module [RFC4133] meets the need for a standardized way of representing a single agent that supports multiple instances of one MIB. It could express a certain relationship between multiple entities and provide entity properties for each entity.",
      "zh-CHS": "ENTITY-MIB模块[RFC4133]满足了以标准方式表示支持一个MIB的多个实例的单个代理的需求。它可以表示多个实体之间的某种关系，并为每个实体提供实体属性。"
    },
    {
      "indent": 3,
      "text": "In a centralized WLAN architecture, the SNMP agent runs on the AC and is not required on the WTP. With the ENTITY-MIB module on the AC, it could keep entity information such as firmware revision and software revision of the AC and WTPs. From the ENTITY-MIB module's perspective, the overall physical entity (AC) is a 'compound' of multiple physical entities (that is, the WTPs connected to AC), and all entities are each identified by a physical index. The capwapBaseWtpTable of the CAPWAP-BASE-MIB module uses the capwapBaseWtpPhyIndex object to store the mappings of WTP object between CAPWAP-BASE-MIB and ENTITY-MIB modules.",
      "zh-CHS": "在集中式WLAN体系结构中，SNMP代理在AC上运行，在WTP上不需要。通过AC上的ENTITY-MIB模块，它可以保存AC和WTP的固件版本和软件版本等实体信息。从ENTITY-MIB模块的角度来看，整体物理实体（AC）是多个物理实体（即连接到AC的WTP）的“复合物”，所有实体均由物理索引标识。CAPWAP-BASE-MIB模块的CAPWAPBASEWTTAPTABLE使用CAPWAPBASEWTPHYINDEX对象存储CAPWAP-BASE-MIB模块和ENTITY-MIB模块之间WTP对象的映射。"
    },
    {
      "indent": 3,
      "text": "By querying both the CAPWAP-BASE-MIB and ENTITY-MIB modules, operators could query the status and properties of the AC and WTPs. For example, they could get a WTP's current status through the CAPWAP-BASE-MIB module, and a WTP's software revision information through the ENTITY-MIB module. The CAPWAP-BASE-MIB module does not duplicate those objects defined in the ENTITY-MIB module.",
      "zh-CHS": "通过查询CAPWAP-BASE-MIB和ENTITY-MIB模块，操作员可以查询AC和WTP的状态和属性。例如，他们可以通过CAPWAP-BASE-MIB模块获取WTP的当前状态，并通过ENTITY-MIB模块获取WTP的软件版本信息。CAPWAP-BASE-MIB模块不复制在ENTITY-MIB模块中定义的对象。"
    },
    {
      "indent": 0,
      "text": "7.4. Relationship to Wireless Binding MIB Modules",
      "section_title": true,
      "zh-CHS": "7.4. 与无线绑定MIB模块的关系"
    },
    {
      "indent": 3,
      "text": "The wireless binding MIB module of a wireless technology (such as [IEEE.802-11.2007]) is required to be supported on the AC. The CAPWAP-BASE-MIB module is able to support any wireless binding. Through the ifIndexes of WTP Virtual Radio Interfaces, it provides a consistent and abstract way of reusing MIB objects in the wireless binding MIB modules. The CAPWAP-BASE-MIB module does not duplicate those objects defined in the wireless binding MIB modules.",
      "zh-CHS": "AC上需要支持无线技术（如[IEEE.802-11.2007]）的无线绑定MIB模块。CAPWAP-BASE-MIB模块能够支持任何无线绑定。通过WTP虚拟无线电接口的IFINDEX，它提供了一种在无线绑定MIB模块中重用MIB对象的一致和抽象的方法。CAPWAP-BASE-MIB模块不会复制无线绑定MIB模块中定义的对象。"
    },
    {
      "indent": 0,
      "text": "7.5. MIB Modules Required for IMPORTS",
      "section_title": true,
      "zh-CHS": "7.5. 导入所需的MIB模块"
    },
    {
      "indent": 3,
      "text": "The following MIB module IMPORTS objects from SYSAPPL-MIB [RFC2287], SNMPv2-SMI [RFC2578], SNMPv2-TC [RFC2579], SNMPv2-CONF [RFC2580], IF-MIB [RFC2863], SNMP-FRAMEWORK-MIB [RFC3411], INET-ADDRESS-MIB [RFC4001], and ENTITY-MIB [RFC4133].",
      "zh-CHS": "以下MIB模块从SYSAPPL-MIB[RFC2287]、SNMPv2 SMI[RFC2578]、SNMPv2 TC[RFC2579]、SNMPv2 CONF[RFC2580]、IF-MIB[RFC2863]、SNMP-FRAMEWORK-MIB[RFC3411]、INET-ADDRESS-MIB[RFC4001]和ENTITY-MIB[RFC4133]导入对象。"
    },
    {
      "indent": 0,
      "text": "8. Example of CAPWAP-BASE-MIB Module Usage",
      "section_title": true,
      "zh-CHS": "8. CAPWAP-BASE-MIB模块使用示例"
    },
    {
      "indent": 3,
      "text": "Below, the IEEE 802.11 binding is used as an example of how the MIB modules operate.",
      "zh-CHS": "下面，IEEE 802.11绑定用作MIB模块如何操作的示例。"
    },
    {
      "indent": 3,
      "text": "1) Create a WTP profile.",
      "zh-CHS": "1) 创建WTP配置文件。"
    },
    {
      "indent": 6,
      "text": "Suppose the WTP's Base MAC address is '00:01:01:01:01:00'. Create the WTP profile as follows:",
      "zh-CHS": "假设WTP的基本MAC地址为“00:01:01:01:01:00”。创建WTP配置文件，如下所示："
    },
    {
      "indent": 5,
      "text": "In capwapBaseWtpProfileTable\n{\n  capwapBaseWtpProfileId                  = 1,\n  capwapBaseWtpProfileName                = 'WTP Profile 123456',\n  capwapBaseWtpProfileWtpMacAddress       = '00:01:01:01:01:00',\n  capwapBaseWtpProfileWtpModelNumber             = 'WTP123',\n  capwapBaseWtpProfileWtpName                    = 'WTP 123456',\n  capwapBaseWtpProfileWtpLocation                = 'office',\n  capwapBaseWtpProfileWtpStaticIpEnable          = true(1),\n  capwapBaseWtpProfileWtpStaticIpType            = ipv4(1),\n  capwapBaseWtpProfileWtpStaticIpAddress         = '192.0.2.10',\n  capwapBaseWtpProfileWtpNetmask                 = '255.255.255.0',\n  capwapBaseWtpProfileWtpGateway                 = '192.0.2.1',\n  capwapBaseWtpProfileWtpFallbackEnable          = true(1),\n  capwapBaseWtpProfileWtpEchoInterval            = 30,\n  capwapBaseWtpProfileWtpIdleTimeout             = 300,\n  capwapBaseWtpProfileWtpMaxDiscoveryInterval    = 20,\n  capwapBaseWtpProfileWtpReportInterval          = 120,\n  capwapBaseWtpProfileWtpStatisticsTimer         = 120,\n  capwapBaseWtpProfileWtpEcnSupport              = limited(0)\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "Suppose the WTP with model number 'WTP123' has one PHY radio, which is identified by ID 1. The creation of this WTP profile triggers the AC to automatically create a WTP Virtual Radio Interface and add a new row object to the capwapBaseWirelessBindingTable without manual intervention. Suppose the ifIndex of the WTP Virtual Radio Interface is 10. The following information is stored in the capwapBaseWirelessBindingTable.",
      "zh-CHS": "假设型号为“WTP123”的WTP有一个PHY无线电，由ID 1标识。创建此WTP配置文件会触发AC自动创建WTP虚拟无线电接口，并在无需手动干预的情况下向CapwapBaseWirelessBinding表添加新的行对象。假设WTP虚拟无线电接口的ifIndex为10。以下信息存储在CapwapBaseWirelessBinding表中。"
    },
    {
      "indent": 6,
      "text": "In capwapBaseWirelessBindingTable\n{\n  capwapBaseWtpProfileId                          = 1,\n  capwapBaseWirelessBindingRadioId                = 1,\n  capwapBaseWirelessBindingVirtualRadioIfIndex    = 10,\n  capwapBaseWirelessBindingType                   = dot11(2)\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "The WTP Virtual Radio Interfaces on the AC correspond to the PHY radios on the WTP. The WTP Virtual Radio Interface is modeled by ifTable [RFC2863].",
      "zh-CHS": "AC上的WTP虚拟无线电接口对应于WTP上的PHY无线电。WTP虚拟无线电接口由ifTable[RFC2863]建模。"
    },
    {
      "indent": 6,
      "text": "In ifTable\n{\n  ifIndex              = 10,\n  ifDescr              = 'WTP Virtual Radio Interface',\n  ifType               = 254,\n  ifMtu                = 0,\n  ifSpeed              = 0,\n  ifPhysAddress        = '00:00:00:00:00:00',\n  ifAdminStatus        = true(1),\n  ifOperStatus         = false(0),\n  ifLastChange         = 0,\n  ifInOctets           = 0,\n  ifInUcastPkts        = 0,\n  ifInDiscards         = 0,\n  ifInErrors           = 0,\n  ifInUnknownProtos    = 0,\n  ifOutOctets          = 0,\n  ifOutUcastPkts       = 0,\n  ifOutDiscards        = 0,\n  ifOutErrors          = 0\n }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "2) Query the ifIndexes of WTP Virtual Radio Interfaces.",
      "zh-CHS": "2) 查询WTP虚拟无线电接口的IFIndex。"
    },
    {
      "indent": 6,
      "text": "Before configuring PHY radios, the operator needs to get the ifIndexes of WTP Virtual Radio Interfaces corresponding to the PHY radios.",
      "zh-CHS": "在配置PHY无线电之前，操作员需要获取与PHY无线电相对应的WTP虚拟无线电接口的IFIndex。"
    },
    {
      "indent": 6,
      "text": "As capwapBaseWirelessBindingTable already stores the mappings between PHY radios (Radio IDs) and the ifIndexes of WTP Virtual Radio Interfaces, the operator can get the ifIndex information by querying this table. Such a query operation SHOULD run from radio ID 1 to radio ID 31 according to [RFC5415]), and stop when an invalid ifIndex value (0) is returned.",
      "zh-CHS": "由于capwapBaseWirelessBindingTable已经存储了物理层无线电（无线电ID）和WTP虚拟无线电接口的ifIndex之间的映射，操作员可以通过查询此表来获取ifIndex信息。根据[RFC5415]），这种查询操作应从无线电ID 1运行到无线电ID 31，并在返回无效的ifIndex值（0）时停止。"
    },
    {
      "indent": 6,
      "text": "This example uses capwapBaseWtpProfileId = 1 and capwapBaseWirelessBindingRadioId = 1 as inputs to query the capwapBaseWirelessBindingTable, and gets capwapBaseWirelessBindingVirtualRadioIfIndex = 10. Then it uses capwapBaseWtpProfileId = 1 and capwapBaseWirelessBindingRadioId = 2, and gets an invalid ifIndex value (0), so the query operation ends. This method gets not only the ifIndexes of WTP Virtual Radio Interfaces, but also the numbers of PHY radios. Besides checking whether the ifIndex value is valid, the operator SHOULD check whether the capwapBaseWirelessBindingType is the desired binding type.",
      "zh-CHS": "此示例使用capwapBaseWtpProfileId=1和capwapBaseWirelessBindingRadioId=1作为输入来查询capwapBaseWirelessBindingTable，并获取capwapBaseWirelessBindingVirtualRadioIfIndex=10。然后它使用capwapBaseWtpProfileId=1和capwapBaseWirelessBindingRadioId=2，并获取无效的ifIndex值（0），因此查询操作结束。该方法不仅可以获取WTP虚拟无线电接口的IFIndex，还可以获取PHY无线电的数量。除了检查ifIndex值是否有效外，操作员还应检查capwapBaseWirelessBindingType是否为所需的绑定类型。"
    },
    {
      "indent": 3,
      "text": "3) Configure specific wireless binding parameters for a WTP Virtual Radio Interface.",
      "zh-CHS": "3) 为WTP虚拟无线电接口配置特定的无线绑定参数。"
    },
    {
      "indent": 6,
      "text": "This configuration is made on the AC through a specific wireless binding MIB module such as the IEEE 802.11 MIB module.",
      "zh-CHS": "此配置通过特定的无线绑定MIB模块（如IEEE 802.11 MIB模块）在AC上进行。"
    },
    {
      "indent": 6,
      "text": "The following shows an example of configuring parameters for a WTP Virtual Radio Interface with ifIndex 10 through the IEEE 802.11 dot11OperationTable [IEEE.802-11.2007].",
      "zh-CHS": "以下显示了通过IEEE 802.11 dot11OperationTable[IEEE.802-11.2007]为具有ifIndex 10的WTP虚拟无线电接口配置参数的示例。"
    },
    {
      "indent": 6,
      "text": "In dot11OperationTable\n{\n  ifIndex                                  = 10,\n  dot11MACAddress                          = '00:00:00:00:00:00',\n  dot11RTSThreshold                        = 2347,\n  dot11ShortRetryLimit                     = 7,\n  dot11LongRetryLimit                      = 4,\n  dot11FragmentationThreshold              = 256,\n  dot11MaxTransmitMSDULifetime             = 512,\n  dot11MaxReceiveLifetime                  = 512,\n  dot11ManufacturerID                      = 'capwap',\n  dot11ProductID                           = 'capwap',\n  dot11CAPLimit                            = 2,\n  dot11HCCWmin                             = 0,\n  dot11HCCWmax                             = 0,\n  dot11HCCAIFSN                            = 1,\n  dot11ADDBAResponseTimeout                = 1,\n  dot11ADDTSResponseTimeout                = 1,\n  dot11ChannelUtilizationBeaconInterval    = 50,\n  dot11ScheduleTimeout                     = 10,\n  dot11DLSResponseTimeout                  = 10,\n  dot11QAPMissingAckRetryLimit             = 1,\n  dot11EDCAAveragingPeriod                 = 5\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "4) Get the current configuration status report from the WTP to the AC.",
      "zh-CHS": "4) 从WTP向AC获取当前配置状态报告。"
    },
    {
      "indent": 6,
      "text": "According to [RFC5415], before a WTP that has joined the AC gets configuration from the AC, it needs to report its current configuration status by sending a configuration status request message to the AC, which uses the message to update MIB objects on the AC. For example, for IEEE 802.11 binding, the AC updates data in the ifTable [RFC2863] and IEEE 802.11 MIB module, and so on, according to the message. For ifIndex 10, its ifOperStatus in ifTable is updated according to the current radio operational status in the CAPWAP message.",
      "zh-CHS": "根据[RFC5415]，在加入AC的WTP从AC获取配置之前，它需要通过向AC发送配置状态请求消息来报告其当前配置状态，AC使用该消息更新AC上的MIB对象。例如，对于IEEE 802.11绑定，AC更新ifTable[RFC2863]中的数据和ieee802.11mib模块等，根据消息。对于ifIndex 10，其ifTable中的IFOperaStatus将根据CAPWAP消息中的当前无线电操作状态进行更新。"
    },
    {
      "indent": 3,
      "text": "5) Query WTP and radio statistical data.",
      "zh-CHS": "5) 查询WTP和无线电统计数据。"
    },
    {
      "indent": 6,
      "text": "After WTPs start to run, the operator could query WTP and radio statistical data through CAPWAP-BASE-MIB and the specific binding MIB module on the AC. For example, through dot11CountersTable in the IEEE 802.11 MIB module, the operator could query the counter data of a radio using the ifIndex of the corresponding WTP Virtual Radio Interface. With the capwapBaseWtpTable table in the CAPWAP-BASE-MIB module, the operator could query the properties of running WTPs.",
      "zh-CHS": "WTPs开始运行后，操作员可以通过AC上的CAPWAP-BASE-MIB和特定绑定MIB模块查询WTP和无线电统计数据。例如，通过IEEE 802.11 MIB模块中的dot11CountersTable，操作员可以使用相应WTP虚拟无线电接口的ifIndex查询无线电的计数器数据。通过CAPWAP-BASE-MIB模块中的CAPWAPBASEWTTPTABLE表，操作员可以查询正在运行的WTP的属性。"
    },
    {
      "indent": 3,
      "text": "6) Run MIB operations through a CAPWAP protocol wireless binding MIB module.",
      "zh-CHS": "6) 通过CAPWAP协议无线绑定MIB模块运行MIB操作。"
    },
    {
      "indent": 6,
      "text": "For example, for the CAPWAP IEEE 802.11 binding protocol [RFC5416], some MIB operations such as MAC mode configuration for a WLAN depend on the CAPWAP Protocol Binding MIB for IEEE 802.11 [RFC5834]. For more information, refer to [RFC5834].",
      "zh-CHS": "例如，对于CAPWAP IEEE 802.11绑定协议[RFC5416]，一些MIB操作（如WLAN的MAC模式配置）取决于IEEE 802.11[RFC5834]的CAPWAP协议绑定MIB。有关更多信息，请参阅[RFC5834]。"
    },
    {
      "indent": 3,
      "text": "7) Query other properties of a WTP.",
      "zh-CHS": "7) 查询WTP的其他属性。"
    },
    {
      "indent": 6,
      "text": "The Operator could query MIB objects in the ENTITY-MIB [RFC4133] module by using the capwapBaseWtpPhyIndex in the capwapBaseWtpTable of CAPWAP-BASE-MIB module. The properties of a WTP such as software version, hardware version are available in the ENTITY-MIB module.",
      "zh-CHS": "操作员可以使用CAPWAP-BASE-MIB模块的CAPWAPBASEWTTPTABLE中的CAPWAPBASEWTTPPHYINDEX查询实体-MIB[RFC4133]模块中的MIB对象。WTP的属性（如软件版本、硬件版本）在ENTITY-MIB模块中可用。"
    },
    {
      "indent": 0,
      "text": "9. Definitions",
      "section_title": true,
      "zh-CHS": "9. 定义"
    },
    {
      "indent": 0,
      "text": "CAPWAP-BASE-MIB DEFINITIONS ::= BEGIN",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "IMPORTS",
      "zh-CHS": "进口"
    },
    {
      "indent": 3,
      "text": "PhysAddress, TEXTUAL-CONVENTION, TruthValue, DateAndTime, RowStatus FROM SNMPv2-TC LongUtf8String FROM SYSAPPL-MIB InterfaceIndex, ifGeneralInformationGroup FROM IF-MIB PhysicalIndex FROM ENTITY-MIB SnmpAdminString FROM SNMP-FRAMEWORK-MIB NOTIFICATION-GROUP, OBJECT-GROUP, MODULE-COMPLIANCE FROM SNMPv2-CONF MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE, mib-2, Integer32, Unsigned32, Counter32, Gauge32, TimeTicks",
      "zh-CHS": "physadress、text-CONVENTION、TruthValue、DateAndTime、SNMPv2中的RowStatus、SYSAPPL-MIB接口索引中的TC LongUtf8String、IF-MIB物理索引中的ifGeneralInformationGroup、ENTITY-MIB中的snmpadmin、SNMP-FRAMEWORK-MIB NOTIFICATION-GROUP、OBJECT-GROUP、SNMPv2 CONF-IDENTITY中的MODULE-COMPLIANCE、OBJECT-TYPE、，通知类型、mib-2、整数32、无符号32、计数器32、仪表32、时间刻度"
    },
    {
      "indent": 3,
      "text": " FROM SNMPv2-SMI InetAddressType, InetAddress FROM INET-ADDRESS-MIB;",
      "zh-CHS": "来自SNMPv2 SMI InetAddressType，来自INET-ADDRESS-MIB的InetAddress；"
    },
    {
      "indent": 0,
      "text": "capwapBaseMIB MODULE-IDENTITY\n    LAST-UPDATED \"201004300000Z\"        -- 30 April 2010\n    ORGANIZATION \"IETF Control And Provisioning of Wireless Access\n                  Points (CAPWAP) Working Group\n                  http://www.ietf.org/html.charters/capwap-charter.html\"\n    CONTACT-INFO\n        \"General Discussion: capwap@frascone.com\n         To Subscribe: http://lists.frascone.com/mailman/listinfo/capwap",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "Yang Shi (editor) Hangzhou H3C Tech. Co., Ltd. Beijing R&D Center of H3C, Digital Technology Plaza NO. 9 Shangdi 9th Street, Haidian District Beijing 100085 China Phone: +86 010 82775276 Email: rishyang@gmail.com",
      "zh-CHS": "杨石（编辑）杭州华三科技有限公司北京华三研发中心北京市海淀区上地九街9号数码科技广场100085中国电话：+86 010 82775276电子邮件：rishyang@gmail.com"
    },
    {
      "indent": 9,
      "text": "David T. Perkins (editor) 228 Bayview Dr. San Carlos, CA 94070 USA Phone: +1 408 394-8702 Email: dperkins@dsperkins.com",
      "zh-CHS": "David T.Perkins（编辑）228 Bayview美国加利福尼亚州圣卡洛斯博士94070电话：+1 408 394-8702电子邮件：dperkins@dsperkins.com"
    },
    {
      "indent": 9,
      "text": "Chris Elliott (editor) 1516 Kent St. Durham, NC 27707 USA Phone: +1 919-308-1216 Email: chelliot@pobox.com",
      "zh-CHS": "Chris Elliott（编辑）1516美国北卡罗来纳州肯特圣达勒姆市27707电话：+1 919-308-1216电子邮件：chelliot@pobox.com"
    },
    {
      "indent": 9,
      "text": "Yong Zhang (editor) Fortinet, Inc. 1090 Kifer Road Sunnyvale, CA 94086 USA Email: yzhang@fortinet.com\"",
      "zh-CHS": "张勇（编辑）Fortinet，Inc.地址：美国加利福尼亚州森尼维尔基弗路1090号邮编：94086电子邮件：yzhang@fortinet.com\""
    },
    {
      "indent": 4,
      "text": "DESCRIPTION \"Copyright (c) 2010 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "zh-CHS": "描述“版权所有（c）2010 IETF信托基金和被确定为代码作者的人员。保留所有权利。"
    },
    {
      "indent": 9,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info).",
      "zh-CHS": "根据IETF信托有关IETF文件的法律规定第4.c节规定的简化BSD许可证中包含的许可条款，允许以源代码和二进制格式重新分发和使用，无论是否修改(http://trustee.ietf.org/license-info)."
    },
    {
      "indent": 9,
      "text": "This version of this MIB module is part of RFC 5833; see the RFC itself for full legal notices.",
      "zh-CHS": "此版本的MIB模块是RFC 5833的一部分；有关完整的法律通知，请参见RFC本身。"
    },
    {
      "indent": 4,
      "text": "     This MIB module contains managed object definitions for\n     the CAPWAP Protocol.\"\nREVISION    \"201004300000Z\"\nDESCRIPTION\n    \"Initial version published as RFC 5833\"\n     ::= { mib-2 196 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- Textual Conventions",
      "zh-CHS": "--文本约定"
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpProfileIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"d\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP profile.\"\n    SYNTAX      Unsigned32 (0..4096)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"1x:\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP instance.\n         As usual, the Base MAC address of the WTP is used.\"\n    SYNTAX      OCTET STRING (SIZE(6|8))",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseStationIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"1x:\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a station instance.\n         As usual, the MAC address of the station is used.\"\n    SYNTAX      OCTET STRING (SIZE(6|8))",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseRadioIdTC ::= TEXTUAL-CONVENTION\n    DISPLAY-HINT \"d\"\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a radio on a WTP.\"\n    SYNTAX      Unsigned32 (1..31)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseTunnelModeTC ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the tunneling modes of operation that are\n         supported by a WTP.\n         The WTP MAY support more than one option, represented by\n         the bit field below:\n           localBridging(0) - Local bridging mode\n           dot3Tunnel(1)    - 802.3 frame tunnel mode\n           nativeTunnel(2)  - Native frame tunnel mode\"\n    REFERENCE\n        \"Section 4.6.43 of CAPWAP Protocol Specification, RFC 5415.\"\n    SYNTAX      BITS {\n                  localBridging(0),\n                  dot3Tunnel(1),\n                  nativeTunnel(2)\n                }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseMacTypeTC ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the MAC mode of operation supported by a WTP.\n         The following enumerated values are supported:\n           localMAC(0) - Local-MAC mode\n           splitMAC(1) - Split-MAC mode\n           both(2)     - Both Local-MAC and Split-MAC\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object\n         follows that rule.\"\n    REFERENCE\n        \"Section 4.6.44 of CAPWAP Protocol Specification, RFC 5415.\"\n    SYNTAX      INTEGER {\n                  localMAC(0),\n                  splitMAC(1),\n                  both(2)\n                }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseChannelTypeTC::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the channel type for CAPWAP protocol.\n         The following enumerated values are supported:\n           data(1)    - Data channel\n           control(2) - Control channel\"\n    SYNTAX      INTEGER {\n                  data(1),\n                  control(2)\n                }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseAuthenMethodTC ::= TEXTUAL-CONVENTION\n    STATUS      current\n    DESCRIPTION\n        \"Represents the authentication credential type for a WTP.\n         The following enumerated values are supported:\n           other(1) - Other method, for example, vendor specific\n           clear(2) - Clear text and no authentication\n           x509(3)  - X.509 certificate authentication\n           psk(4)   - Pre-Shared secret authentication\n         As a mandatory requirement, CAPWAP control channel\n         authentication SHOULD use DTLS, either by certificate or\n         PSK.  For data channel authentication, DTLS is optional.\"\n    SYNTAX      INTEGER {\n                  other(1),\n                  clear(2),\n                  x509(3),\n                  psk(4)\n                }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- Top-level components of this MIB module",
      "zh-CHS": "--此MIB模块的顶级组件"
    },
    {
      "indent": 0,
      "text": "-- Notifications\ncapwapBaseNotifications OBJECT IDENTIFIER\n    ::= { capwapBaseMIB 0 }\n-- Tables, Scalars\ncapwapBaseObjects OBJECT IDENTIFIER\n    ::= { capwapBaseMIB 1 }\n-- Conformance\ncapwapBaseConformance OBJECT IDENTIFIER\n    ::= { capwapBaseMIB 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- AC Objects Group",
      "zh-CHS": "--AC对象组"
    },
    {
      "indent": 0,
      "text": "capwapBaseAc OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpSessions OBJECT-TYPE\n    SYNTAX      Gauge32 (0..65535)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the total number of WTPs that are connecting to\n         the AC.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpSessionsLimit  OBJECT-TYPE\n    SYNTAX      Unsigned32 (0..65535)\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum number of WTP sessions configured on\n         the AC.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseStationSessions  OBJECT-TYPE\n    SYNTAX      Gauge32 (0..65535)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the total number of stations that are accessing\n         the wireless service provided by the AC.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseStationSessionsLimit  OBJECT-TYPE\n    SYNTAX      Unsigned32 (0..65535)\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum number of station sessions configured\n         on the AC.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseDataChannelDTLSPolicyOptions  OBJECT-TYPE\n    SYNTAX      BITS {\n                  other(0),\n                  clear(1),\n                  dtls(2)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"The AC communicates its policy on the use of DTLS for\n         the CAPWAP data channel.\n         The AC MAY support more than one option, represented by the bit\n         field below:",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "       other(0) - Other method, for example, vendor specific\n       clear(1) - Clear text\n       dtls(2)  - DTLS\"\nREFERENCE\n    \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseAc 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseControlChannelAuthenOptions  OBJECT-TYPE\n    SYNTAX      BITS {\n                  x509(0),\n                  psk(1)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the authentication credential type supported by the\n         AC for CAPWAP control channel.\n         The AC MAY support more than one option, represented by the bit\n         field below:\n           x509(0) - X.509 certificate based\n           psk(1)  - Pre-Shared secret\"\n    REFERENCE\n        \"Section 4.6.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- capwapBaseAcNameListTable table",
      "zh-CHS": "--capwapBaseAcNameListTable表"
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseAcNameListEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that configure the AC name list.\n         Values of all read-create objects in this table are\n         persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 9 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseAcNameListEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that configures the AC name list.\"\n    INDEX { capwapBaseAcNameListId }\n    ::= { capwapBaseAcNameListTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseAcNameListEntry ::= SEQUENCE {\n      capwapBaseAcNameListId          Unsigned32,\n      capwapBaseAcNameListName        LongUtf8String,\n      capwapBaseAcNameListPriority    Unsigned32,\n      capwapBaseAcNameListRowStatus   RowStatus\n    }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListId OBJECT-TYPE\n    SYNTAX      Unsigned32 (1..255)\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of an AC Name list.\"\n    ::= { capwapBaseAcNameListEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListName OBJECT-TYPE\n    SYNTAX      LongUtf8String (SIZE(1..512))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the name of an AC, and it is expected to be\n         an UTF-8 encoded string.\"\n    REFERENCE\n        \"Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAcNameListEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListPriority OBJECT-TYPE\n    SYNTAX      Unsigned32 (1..255)\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the priority order of the preferred AC.\n         For instance, the value of one (1) is used to set the primary\n         AC, the value of two (2) is used to set the secondary AC, etc.\"\n    REFERENCE\n        \"Section 4.6.5 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAcNameListEntry 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListRowStatus OBJECT-TYPE SYNTAX RowStatus MAX-ACCESS read-create STATUS current DESCRIPTION \"This object is used to create, modify, and/or delete a row in this table. The value of capwapBaseAcNameListName and capwapBaseAcNameListPriority can be changed when this object is in state 'active' or in 'notInService'.",
      "zh-CHS": "capwapBaseAcNameListRowStatus对象类型语法RowStatus MAX-ACCESS read create STATUS current DESCRIPTION“此对象用于创建、修改和/或删除此表中的行。当此对象处于“活动”或“notInService”状态时，可以更改capwapBaseAcNameListName和capwapBaseAcNameListPriority的值。"
    },
    {
      "indent": 4,
      "text": "     The capwapBaseAcNameListRowStatus may be changed to 'active'\n     if all the managed objects in the conceptual row with\n     MAX-ACCESS read-create have been assigned valid values.\"\n::= { capwapBaseAcNameListEntry 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseAcNameListTable table",
      "zh-CHS": "--capwapBaseAcNameListTable的结尾"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseMacAclTable table",
      "zh-CHS": "--CAPWAPBASEMACALTABLE表格"
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseMacAclEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that configure station Access Control\n         Lists (ACLs).\n         The WTP will not provide service to the MAC addresses\n         configured in this table.\n         Values of all read-create objects in this table are persistent\n         at AC restart/reboot.\"\n    REFERENCE\n        \"Section 4.6.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseAc 10 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseMacAclEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that configures station Access Control\n         Lists (ACLs).\"\n    INDEX { capwapBaseMacAclId }\n    ::= { capwapBaseMacAclTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseMacAclEntry ::= SEQUENCE {\n      capwapBaseMacAclId           Unsigned32,\n      capwapBaseMacAclStationId    CapwapBaseStationIdTC,\n      capwapBaseMacAclRowStatus    RowStatus\n    }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclId OBJECT-TYPE\n    SYNTAX      Unsigned32\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of an ACL.\"\n    ::= { capwapBaseMacAclEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclStationId OBJECT-TYPE\n    SYNTAX      CapwapBaseStationIdTC\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the MAC address of a station to which WTPs will\n         no longer provides service.\"\n    REFERENCE\n        \"Section 4.6.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseMacAclEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclRowStatus OBJECT-TYPE\n    SYNTAX      RowStatus\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"This object is used to create, modify, and/or delete a row\n         in this table.\n         The value of capwapBaseMacAclStationId can be changed when\n         this object is in state 'active' or in 'notInService'.\n         The capwapBaseMacAclRowStatus may be changed to 'active'\n         if all the managed objects in the conceptual row with\n         MAX-ACCESS read-create have been assigned valid values.\"\n    ::= { capwapBaseMacAclEntry 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseMacAclTable table",
      "zh-CHS": "--CAPWAPBASEMACALTABLE表格的结尾"
    },
    {
      "indent": 0,
      "text": "-- End of AC Objects Group",
      "zh-CHS": "--AC对象组结束"
    },
    {
      "indent": 0,
      "text": "-- WTP Objects Group",
      "zh-CHS": "--WTP对象组"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtps OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpProfileTable Table",
      "zh-CHS": "--CAPWAPBASEWTPROFILETABLE表格"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileTable OBJECT-TYPE SYNTAX SEQUENCE OF CapwapBaseWtpProfileEntry MAX-ACCESS not-accessible STATUS current DESCRIPTION \"A table of objects that configure WTP profiles for WTPs to be managed before they connect to the AC. An operator could change a WTP's configuration by changing the values of parameters in the corresponding WTP profile, then the WTP could get the new configuration through the CAPWAP control channel.",
      "zh-CHS": "CapwapBaseWtpProfileEntry的capwapBaseWtpProfileTable对象类型语法序列MAX-ACCESS不可访问状态当前描述“一个对象表，用于在WTP连接到AC之前为其配置要管理的WTP配置文件。操作员可以通过更改相应WTP配置文件中的参数值来更改WTP的配置，然后WTP可以通过CAPWAP控制通道获得新配置。"
    },
    {
      "indent": 4,
      "text": "     Values of all read-create objects in this table are\n     persistent at restart/reboot.\"\n::= { capwapBaseWtps 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpProfileEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that configures and displays a WTP profile.\"\n    INDEX { capwapBaseWtpProfileId }\n    ::= { capwapBaseWtpProfileTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpProfileEntry ::= SEQUENCE {\n      capwapBaseWtpProfileId                  CapwapBaseWtpProfileIdTC,\n      capwapBaseWtpProfileName                       SnmpAdminString,\n      capwapBaseWtpProfileWtpMacAddress              CapwapBaseWtpIdTC,\n      capwapBaseWtpProfileWtpModelNumber             SnmpAdminString,\n      capwapBaseWtpProfileWtpName                    LongUtf8String,\n      capwapBaseWtpProfileWtpLocation                LongUtf8String,\n      capwapBaseWtpProfileWtpStaticIpEnable          TruthValue,\n      capwapBaseWtpProfileWtpStaticIpType            InetAddressType,\n      capwapBaseWtpProfileWtpStaticIpAddress         InetAddress,\n      capwapBaseWtpProfileWtpNetmask                 InetAddress,\n      capwapBaseWtpProfileWtpGateway                 InetAddress,\n      capwapBaseWtpProfileWtpFallbackEnable          INTEGER,\n      capwapBaseWtpProfileWtpEchoInterval            Unsigned32,\n      capwapBaseWtpProfileWtpIdleTimeout             Unsigned32,\n      capwapBaseWtpProfileWtpMaxDiscoveryInterval    Unsigned32,\n      capwapBaseWtpProfileWtpReportInterval          Unsigned32,\n      capwapBaseWtpProfileWtpStatisticsTimer         Unsigned32,\n      capwapBaseWtpProfileWtpEcnSupport              INTEGER,\n      capwapBaseWtpProfileRowStatus                  RowStatus\n    }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpProfileIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP profile.\"\n    ::= { capwapBaseWtpProfileEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileName OBJECT-TYPE SYNTAX SnmpAdminString MAX-ACCESS read-create STATUS current DESCRIPTION",
      "zh-CHS": "capwapBaseWtpProfileName对象类型语法SNMPAdministring MAX-ACCESS读取创建状态当前描述"
    },
    {
      "indent": 4,
      "text": "    \"Represents the name of a WTP profile.\"\n::= { capwapBaseWtpProfileEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpMacAddress  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the Base MAC address of a WTP.\n         A WTP profile MUST contain the Base MAC address of the WTP\n         because the CAPWAP message received from the WTP contains\n         its Base MAC address and the AC uses the Base MAC address to\n         find the corresponding WTP profile.\n         Section 4.6.40 of [RFC5415] omits indicating that the WTP's\n         Base MAC address must be included in the WTP Board Data\n         message element.  This is a known errata item and should be\n         fixed in any future revision of the RFC 5415.\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpModelNumber  OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the model number of a WTP.\n         A WTP profile MUST include the WTP's model number, which\n         reflects the number of Physical Layer (PHY) radios on the WTP.\n         In this way, the creation of a WTP profile triggers the AC\n         to automatically create the same number of WTP Virtual Radio\n         Interfaces corresponding to the WTP's PHY radios without\n         manual intervention.  With the ifIndexes of WTP Virtual\n         Radio Interfaces, the operator could configure and manage\n         the WTP's PHY radios through the wireless binding MIB\n         modules.\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpName OBJECT-TYPE SYNTAX LongUtf8String (SIZE(1..512)) MAX-ACCESS read-create STATUS current DESCRIPTION \"Represents the name of the WTP.\" REFERENCE \"Section 4.6.45 of CAPWAP Protocol Specification, RFC 5415.\"",
      "zh-CHS": "capwapBaseWtpProfileWtpName对象类型语法LongUtf8String（大小（1..512））MAX-ACCESS read create STATUS current DESCRIPTION“表示WTP的名称。“参考”CAPWAP协议规范RFC 5415第4.6.45节"
    },
    {
      "indent": 4,
      "text": "::= { capwapBaseWtpProfileEntry 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpLocation  OBJECT-TYPE\n    SYNTAX      LongUtf8String (SIZE(1..1024))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the location of the WTP.\"\n    REFERENCE\n        \"Section 4.6.30 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStaticIpEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the WTP SHOULD use a static IP address\n         or not.  A value of false disables the static IP address,\n         while a value of true enables it.\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStaticIpType OBJECT-TYPE\n    SYNTAX      InetAddressType {ipv4(1)}\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the static IP address type used by the WTP.\n         Only ipv4(1) is supported by the object.\n         Although the CAPWAP protocol [RFC5415] supports both IPv4\n         and IPv6, note that the CAPWAP field modeled by this\n         object does not support IPv6, so the object does not\n         support ipv6(2).\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStaticIpAddress OBJECT-TYPE SYNTAX InetAddress (SIZE(4)) MAX-ACCESS read-create STATUS current DESCRIPTION \"When capwapBaseWtpProfileWtpStaticIpEnable is true, it represents the static IP address to be assigned to the WTP. The format of this IP address is determined by the corresponding instance of object",
      "zh-CHS": "CapwapBaseWTPProfileUpStaticIPAddress对象类型语法InetAddress（大小（4））MAX-ACCESS读取创建状态当前描述“当CapwapBaseWTPProfileUpStaticIPEnable为true时，它表示要分配给WTP的静态IP地址。此IP地址的格式由对象的相应实例确定"
    },
    {
      "indent": 4,
      "text": "     capwapBaseWtpProfileWtpStaticIpType.\"\nREFERENCE\n    \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpProfileEntry 9 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpNetmask OBJECT-TYPE\n    SYNTAX      InetAddress (SIZE(4))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"When capwapBaseWtpProfileWtpStaticIpEnable is true,\n         it represents the netmask to be assigned to the WTP.\n         The format of this netmask is determined by the\n         corresponding instance of object\n         capwapBaseWtpProfileWtpStaticIpType.\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 10 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpGateway OBJECT-TYPE\n    SYNTAX      InetAddress (SIZE(4))\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"When capwapBaseWtpProfileWtpStaticIpEnable is true,\n         it represents the gateway to be assigned to the WTP.\n         The format of this IP address is determined by the\n         corresponding instance of object\n         capwapBaseWtpProfileWtpStaticIpType.\"\n    REFERENCE\n        \"Section 4.6.48 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 11 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpFallbackEnable OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  enabled(1),\n                  disabled(2)\n                }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether to enable or disable automatic CAPWAP\n         fallback in the event that a WTP detects its preferred AC\n         and is not currently connected to it.\n         The following enumerated values are supported:\n           enabled(1)  - The fallback mode is enabled\n           disabled(2) - The fallback mode is disabled\"\n    REFERENCE",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.42 of CAPWAP Protocol Specification, RFC 5415.\"\nDEFVAL { enabled }\n ::= { capwapBaseWtpProfileEntry 12 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpEchoInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, between sending Echo\n         Request messages to the AC that the WTP has joined.\"\n    REFERENCE\n        \"Section 4.7.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseWtpProfileEntry 13 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpIdleTimeout OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the idle timeout value that the WTP SHOULD enforce\n         for its active stations.\"\n    REFERENCE\n        \"Section 4.7.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 300 }\n    ::= { capwapBaseWtpProfileEntry 14 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpMaxDiscoveryInterval OBJECT-TYPE\n    SYNTAX      Unsigned32 (2..180)\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum time allowed between sending Discovery\n         Request messages, in seconds.\"\n    REFERENCE\n        \"Section 4.7.10 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 20 }\n    ::= { capwapBaseWtpProfileEntry 15 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpReportInterval OBJECT-TYPE SYNTAX Unsigned32 UNITS \"second\" MAX-ACCESS read-create STATUS current",
      "zh-CHS": "CapwapBaseWTPProfileWPreportInterval对象类型语法无符号32个单位“秒”最大访问读取创建状态当前"
    },
    {
      "indent": 4,
      "text": "DESCRIPTION\n    \"Represents the interval for WTP to send the Decryption Error\n     report.\"\nREFERENCE\n    \"Section 4.7.11 of CAPWAP Protocol Specification, RFC 5415.\"\nDEFVAL { 120 }\n::= { capwapBaseWtpProfileEntry 16 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpStatisticsTimer OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the interval the WTP uses between the WTP Event\n         Requests it transmits to the AC to communicate its statistics,\n         in seconds.\"\n    REFERENCE\n        \"Section 4.7.14 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 120 }\n    ::= { capwapBaseWtpProfileEntry 17 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileWtpEcnSupport OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  limited(0),\n                  fullAndLimited(1)\n                }\n    MAX-ACCESS  read-create\n    STATUS      current\n    DESCRIPTION\n        \"Represents the support for the Explicit Congestion Notification\n         (ECN) bits, as defined in [RFC3168].\n         The following enumerated values are supported:\n           limited(0)        - Limited ECN support\n           fullAndLimited(1) - Full and limited ECN support\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object follows\n         that rule.\"\n    REFERENCE\n        \"Section 4.6.25 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpProfileEntry 18 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileRowStatus OBJECT-TYPE SYNTAX RowStatus MAX-ACCESS read-create STATUS current DESCRIPTION \"This object is used to create, modify, and/or delete a row",
      "zh-CHS": "CAPWAPBASEWTPROFILEROWSTATUS对象类型语法RowStatus MAX-ACCESS read create STATUS current DESCRIPTION“此对象用于创建、修改和/或删除行"
    },
    {
      "indent": 9,
      "text": "in this table. The value of capwapBaseWtpProfileName, capwapBaseWtpProfileWtpName and capwapBaseWtpProfileWtpLocation can be changed when this object is in state 'active' or in 'notInService'. The other objects in a row can be modified only when the value of this object in the corresponding conceptual row is not 'active'. Thus, to modify one or more of the objects in this conceptual row: a. change the row status to 'notInService' b. change the values of the row c. change the row status to 'active' The capwapBaseWtpProfileRowStatus may be changed to 'active' if the managed objects capwapBaseWtpProfileName, capwapBaseWtpProfileWtpMacAddress, capwapBaseWtpProfileWtpModelNumber, capwapBaseWtpProfileWtpName, and capwapBaseWtpProfileWtpLocation in the conceptual row have been assigned valid values.",
      "zh-CHS": "在这张桌子上。当此对象处于“活动”或“notInService”状态时，可以更改capwapBaseWtpProfileName、capwapBaseWtpProfileWtpName和capwapBaseWtpProfileWtpLocation的值。只有当相应概念行中此对象的值不为“活动”时，才能修改行中的其他对象。因此，要修改此概念行中的一个或多个对象，请执行以下操作：a。将行状态更改为“notInService”b。更改行c的值。将行状态更改为“活动”如果已为概念行中的托管对象capwapBaseWtpProfileName、CAPWAPBaseWTPProfileUpmacAddress、CAPWAPBaseWTPProfileUpModelNumber、CAPWAPBaseWTPProfileUpName和CAPWAPBaseWTPProfileUpLocation分配了有效值，则capwapBaseWtpProfileRowStatus可能会更改为“活动”。"
    },
    {
      "indent": 4,
      "text": "     Deleting a WTP profile in use will disconnect the WTP from\n     the AC.  So the network management system SHOULD\n     ask the operator to confirm such an operation.\n     When a WTP profile entry is removed from the table,\n     the corresponding WTP Virtual Radio Interfaces are also\n     removed from the capwapBaseWirelessBindingTable and\n     ifTable [RFC2863].\n     Also, the related object instances SHOULD be removed from\n     the wireless binding MIB modules such as the IEEE 802.11\n     MIB module [IEEE.802-11.2007].\"\n::= { capwapBaseWtpProfileEntry 19 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpProfileTable table",
      "zh-CHS": "--CAPWAPBASEWTPROFILETABLE表的结尾"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpStateTable table",
      "zh-CHS": "--capwapBaseWtpStateTable表格"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWtpStateEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that indicate the AC's CAPWAP FSM state\n         for each WTP, and helps the operator to query a WTP's\n         current configuration.\"\n    ::= { capwapBaseWtps 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateEntry OBJECT-TYPE",
      "zh-CHS": "capwapBaseWtpStateEntry对象类型"
    },
    {
      "indent": 4,
      "text": "SYNTAX      CapwapBaseWtpStateEntry\nMAX-ACCESS  not-accessible\nSTATUS      current\nDESCRIPTION\n    \"A set of objects that displays the AC's CAPWAP FSM state\n     for each WTP.\n     Also, the operator could query the current configuration\n     of a WTP by using the identifier of the corresponding\n     WTP profile.\"\nINDEX { capwapBaseWtpStateWtpId }\n::= { capwapBaseWtpStateTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpStateEntry ::= SEQUENCE {\n      capwapBaseWtpStateWtpId                   CapwapBaseWtpIdTC,\n      capwapBaseWtpStateWtpIpAddressType        InetAddressType,\n      capwapBaseWtpStateWtpIpAddress            InetAddress,\n      capwapBaseWtpStateWtpLocalIpAddressType   InetAddressType,\n      capwapBaseWtpStateWtpLocalIpAddress       InetAddress,\n      capwapBaseWtpStateWtpBaseMacAddress       PhysAddress,\n      capwapBaseWtpState                        INTEGER,\n      capwapBaseWtpStateWtpUpTime               TimeTicks,\n      capwapBaseWtpStateWtpCurrWtpProfileId     CapwapBaseWtpProfileIdTC\n    }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP.\"\n    ::= { capwapBaseWtpStateEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpIpAddressType OBJECT-TYPE\n    SYNTAX      InetAddressType\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the IP address type of a WTP.\n         Only ipv4(1) and ipv6(2) are supported by the object.\"\n    ::= { capwapBaseWtpStateEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpIpAddress OBJECT-TYPE SYNTAX InetAddress MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the IP address of a WTP that corresponds to the IP address in the IP packet header.",
      "zh-CHS": "capwapBaseWtpStateWtpIpAddress对象类型语法InetAddress MAX-ACCESS只读状态current DESCRIPTION“表示与IP数据包头中的IP地址相对应的WTP的IP地址。"
    },
    {
      "indent": 4,
      "text": "     The format of this IP address is determined by\n     the corresponding instance of object\n     capwapBaseWtpStateWtpIpAddressType.\"\nREFERENCE\n    \"Section 4 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpStateEntry 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpLocalIpAddressType OBJECT-TYPE\n    SYNTAX      InetAddressType\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the local IP address type of a WTP.\n         Only ipv4(1) and ipv6(2) are supported by the object.\"\n    ::= { capwapBaseWtpStateEntry 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpLocalIpAddress OBJECT-TYPE\n    SYNTAX      InetAddress\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the local IP address of a WTP and models the\n         CAPWAP Local IPv4 Address or CAPWAP Local IPv6 Address fields\n         [RFC5415].\n         If a Network Address Translation (NAT) device is present\n         between WTP and AC, the value of\n         capwapBaseWtpStateWtpLocalIpAddress will be different from the\n         value of capwapBaseWtpStateWtpIpAddress.\n         The format of this IP address is determined by\n         the corresponding instance of object\n         capwapBaseWtpStateWtpLocalIpAddressType.\"\n    REFERENCE\n        \"Sections 4.6.11 and 4.6.12 of CAPWAP Protocol Specification,\n         RFC 5415.\"\n    ::= { capwapBaseWtpStateEntry 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpBaseMacAddress  OBJECT-TYPE\n    SYNTAX      PhysAddress (SIZE(6|8))\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the WTP's Base MAC Address, which MAY be\n         assigned to the primary Ethernet interface.\n         The instance of the object corresponds to the Base MAC Address\n         sub-element in the CAPWAP protocol [RFC5415].\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpStateEntry 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpState  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  dtls(1),\n                  join(2),\n                  image(3),\n                  configure(4),\n                  dataCheck(5),\n                  run(6),\n                  reset(7),\n                  dtlsTeardown(8),\n                  unknown(9)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the various possibilities of the AC's CAPWAP FSM\n         state for each WTP.\n         The following enumerated values are supported:\n           dtls(1)         - DTLS negotiation states, which include\n                             DTLS setup, authorize, DTLS connect\n           join(2)         - The WTP is joining with the AC\n           image(3)        - The WTP is downloading software\n           configure(4)    - The WTP is getting configuration from\n                             the AC\n           dataCheck(5)    - The AC is waiting for the Data Channel Keep\n                             Alive Packet\n           run(6)          - The WTP enters the running state\n           reset(7)        - The AC transmits a reset request message\n                             to the WTP\n           dtlsTeardown(8) - DTLS session is torn down\n           unknown(9)      - Operator already prepared configuration\n                             for the WTP, while the WTP has not\n                             contacted the AC until now\"\n    REFERENCE\n        \"Section 2.3.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpStateEntry 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpUpTime  OBJECT-TYPE\n    SYNTAX      TimeTicks\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the time (in hundredths of a second) since the\n         WTP has been in the running state (corresponding to the\n         value run(6) of capwapBaseWtpState).\"\n    ::= { capwapBaseWtpStateEntry 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateWtpCurrWtpProfileId OBJECT-TYPE",
      "zh-CHS": "CAPWAPBASEWTPSTATEWTPCURRWTPROFILEID对象类型"
    },
    {
      "indent": 4,
      "text": "SYNTAX      CapwapBaseWtpProfileIdTC\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the current identifier of a WTP profile.\n     The operator could query a WTP's current configuration\n     with the identifier of a WTP profile.\"\n::= { capwapBaseWtpStateEntry 9 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpStateTable Table",
      "zh-CHS": "--CAPWAPBASEWTPSTATETATE表格的结尾"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpTable Table",
      "zh-CHS": "--CAPWAPBASEWTABLE表格"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWtpEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display properties of the WTPs\n         in running state.\"\n    ::= { capwapBaseWtps 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays properties of the WTPs\n         in running state.\"\n    INDEX { capwapBaseWtpCurrId }\n    ::= { capwapBaseWtpTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpEntry ::= SEQUENCE {\n      capwapBaseWtpCurrId                       CapwapBaseWtpIdTC,\n      capwapBaseWtpPhyIndex                     PhysicalIndex,\n      capwapBaseWtpBaseMacAddress               PhysAddress,\n      capwapBaseWtpTunnelModeOptions            CapwapBaseTunnelModeTC,\n      capwapBaseWtpMacTypeOptions               CapwapBaseMacTypeTC,\n      capwapBaseWtpDiscoveryType                INTEGER,\n      capwapBaseWtpRadiosInUseNum               Gauge32,\n      capwapBaseWtpRadioNumLimit                Unsigned32,\n      capwapBaseWtpRetransmitCount              Counter32\n    }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpCurrId OBJECT-TYPE SYNTAX CapwapBaseWtpIdTC MAX-ACCESS not-accessible",
      "zh-CHS": "capwapBaseWtpCurrId对象类型语法CapwapBaseWtpIdTC MAX-ACCESS不可访问"
    },
    {
      "indent": 4,
      "text": "STATUS      current\nDESCRIPTION\n    \"Represents the unique identifier of a WTP in running state.\"\n::= { capwapBaseWtpEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpPhyIndex OBJECT-TYPE\n    SYNTAX      PhysicalIndex\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique physical index of a physical entity\n         in the ENTITY-MIB module [RFC4133].\n         Information about a specific WTP such as its software version\n         could be accessed through this index.\"\n    ::= { capwapBaseWtpEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpBaseMacAddress  OBJECT-TYPE\n    SYNTAX      PhysAddress (SIZE(6|8))\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the WTP's Base MAC Address, which MAY be assigned\n         to the primary Ethernet interface.\n         The instance of the object corresponds to the Base MAC Address\n         sub-element in the CAPWAP protocol [RFC5415].\"\n    REFERENCE\n        \"Section 4.6.40 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpTunnelModeOptions  OBJECT-TYPE\n    SYNTAX      CapwapBaseTunnelModeTC\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the tunneling modes of operation supported by\n         the WTP.\"\n    REFERENCE\n        \"Section 4.6.43 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpMacTypeOptions OBJECT-TYPE SYNTAX CapwapBaseMacTypeTC MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the MAC mode of operation supported by the WTP.\" REFERENCE \"Section 4.6.44 of CAPWAP Protocol Specification, RFC 5415.\"",
      "zh-CHS": "capwapBaseWtpMacTypeOptions对象类型语法CapwapBaseMacTypeTC MAX-ACCESS只读状态当前描述“表示WTP支持的MAC操作模式。”参考“CAPWAP协议规范RFC 5415第4.6.44节”"
    },
    {
      "indent": 4,
      "text": "::= { capwapBaseWtpEntry 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpDiscoveryType OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unknown(0),\n                  staticConfig(1),\n                  dhcp(2),\n                  dns(3),\n                  acRef(4)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents how the WTP discovers the AC.\n         The following enumerated values are supported:\n           unknown(0)      - Unknown\n           staticConfig(1) - Static configuration\n           dhcp(2)         - DHCP\n           dns(3)          - DNS\n           acRef(4)        - AC referral\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object\n         follows that rule.\"\n    REFERENCE\n        \"Section 4.6.21 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpRadiosInUseNum OBJECT-TYPE\n    SYNTAX      Gauge32 (0..255)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of radios in use on the WTP.\"\n    REFERENCE\n        \"Section 4.6.41 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpRadioNumLimit OBJECT-TYPE\n    SYNTAX      Unsigned32 (0..255)\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum radio number supported by the WTP.\"\n    REFERENCE\n        \"Section 4.6.41 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEntry 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpRetransmitCount OBJECT-TYPE",
      "zh-CHS": "capwapBaseWtpRetransmitCount对象类型"
    },
    {
      "indent": 4,
      "text": "SYNTAX      Counter32\nUNITS       \"retransmissions\"\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the number of retransmissions for a given\n     CAPWAP packet.\"\nREFERENCE\n    \"Section 4.8.8 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEntry 9 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpTable table",
      "zh-CHS": "--CAPWAPBASEWTABLE表格末尾"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWirelessBindingTable Table",
      "zh-CHS": "--CapwapBaseWirelessBinding表"
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWirelessBindingEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display the mappings between\n         WTP Virtual Radio Interfaces and PHY radios, and the\n         wireless binding type for each PHY radio.\n         As capwapBaseWirelessBindingTable stores the mappings between\n         PHY radios (Radio IDs) and the ifIndexes of WTP Virtual Radio\n         Interfaces, the operator can get the ifIndex information by\n         querying this table.  Such a query operation SHOULD run from\n         radio ID 1 to radio ID 31 according to [RFC5415],\n         and stop when an invalid ifIndex value (0) is returned.\n         Values of all objects in this table are persistent at\n         restart/reboot.\"\n    ::= { capwapBaseWtps 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWirelessBindingEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays the mapping between\n         a specific WTP Virtual Radio Interface and a PHY\n         radio, and the wireless binding type for the PHY radio.\"\n    INDEX {\n      capwapBaseWtpProfileId,\n      capwapBaseWirelessBindingRadioId\n    }\n    ::= { capwapBaseWirelessBindingTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseWirelessBindingEntry ::= SEQUENCE {\n      capwapBaseWirelessBindingRadioId              CapwapBaseRadioIdTC,\n      capwapBaseWirelessBindingVirtualRadioIfIndex  InterfaceIndex,\n      capwapBaseWirelessBindingType                 INTEGER\n    }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingRadioId OBJECT-TYPE\n    SYNTAX      CapwapBaseRadioIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the identifier of a PHY radio on a WTP, which\n         is required to be unique on a WTP.\n         For example, WTP A and WTP B use a same value of\n         capwapBaseWirelessBindingRadioId for their first radio.\"\n    REFERENCE\n        \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWirelessBindingEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingVirtualRadioIfIndex OBJECT-TYPE\n    SYNTAX      InterfaceIndex\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the index value that uniquely identifies a\n         WLAN Virtual Radio Interface.  The interface identified by\n         a particular value of this index is the same interface as\n         identified by the same value of the ifIndex.\n         Before WTPs contact the AC to get configuration,\n         the operator configures WTP profiles for them.\n         The creation of a WTP profile triggers the system to\n         automatically create a specific number of WTP Virtual Radio\n         Interfaces and add a new row object in the\n         capwapBaseWirelessBindingTable without manual intervention.\n         As most MIB modules use the ifIndex to identify an interface\n         for configuration and statistical data (for example, the IEEE\n         802.11 MIB module [IEEE.802-11.2007]), it will be easy to\n         reuse other wireless binding MIB modules through the WTP\n         Virtual Radio Interface in the Centralized WLAN\n         Architecture.\"\n    ::= { capwapBaseWirelessBindingEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWirelessBindingType OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  dot11(1),\n                  epc(3)\n                }\n    MAX-ACCESS  read-only",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "STATUS      current\nDESCRIPTION\n    \"Represents the wireless binding type for the radio.\n     The following enumerated values are supported:\n       dot11(1) - IEEE 802.11\n       epc(3)   - EPCGlobal\"\nREFERENCE\n    \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWirelessBindingEntry 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWirelessBindingTable Table",
      "zh-CHS": "--CapwapBaseWirelessBinding表末尾"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseStationTable Table",
      "zh-CHS": "--capwapBaseStationTable表"
    },
    {
      "indent": 0,
      "text": "capwapBaseStationTable OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseStationEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display stations that are accessing\n         the wireless service provided by the AC.\"\n    REFERENCE\n        \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtps 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseStationEntry OBJECT-TYPE\n    SYNTAX      CapwapBaseStationEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays a station that is\n         associated with the specific radio on the WTP.\n         Note that in some cases such as roaming that a station may\n         simultaneously associate with two WTPs for some (short) time.\n         The MIB implementation MUST ensure there is only one valid\n         and meaningful entry for a specific station.\"\n    INDEX { capwapBaseStationId }\n    ::= { capwapBaseStationTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseStationEntry ::= SEQUENCE {\n      capwapBaseStationId            CapwapBaseStationIdTC,\n      capwapBaseStationWtpId         CapwapBaseWtpIdTC,\n      capwapBaseStationWtpRadioId    CapwapBaseRadioIdTC,\n      capwapBaseStationAddedTime     DateAndTime,\n      capwapBaseStationVlanName      SnmpAdminString\n    }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseStationId OBJECT-TYPE\n    SYNTAX      CapwapBaseStationIdTC\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of the station.\"\n    REFERENCE\n        \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStationEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseStationWtpId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP in running state.\"\n    ::= { capwapBaseStationEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseStationWtpRadioId OBJECT-TYPE\n    SYNTAX      CapwapBaseRadioIdTC\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the identifier of a PHY radio on a WTP, which\n         is required to be unique on a WTP.\n         For example, WTP A and WTP B use a same value of\n         capwapBaseStationWtpRadioId for their first radio.\"\n    REFERENCE\n        \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStationEntry 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseStationAddedTime OBJECT-TYPE\n    SYNTAX      DateAndTime\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the time when the station is added.\"\n    REFERENCE\n        \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStationEntry 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseStationVlanName OBJECT-TYPE SYNTAX SnmpAdminString (SIZE(0..32)) MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents VLAN name to which the station is associated.\" REFERENCE",
      "zh-CHS": "CapwapBaseStationVLANAME对象类型语法SnmpAdminString（大小（0..32））MAX-ACCESS只读状态当前描述“表示与站点关联的VLAN名称。”参考"
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.8 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseStationEntry 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseStationTable Table",
      "zh-CHS": "--capwapBaseStationTable表的末尾"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseWtpEventsStatsTable",
      "zh-CHS": "--CapwapBasetPeventsStats表"
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsTable  OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseWtpEventsStatsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display the WTPs' events statistics.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtps 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsEntry  OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpEventsStatsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A set of objects that displays the events statistics\n         of a WTP.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    INDEX { capwapBaseWtpCurrId }\n    ::= { capwapBaseWtpEventsStatsTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseWtpEventsStatsEntry ::= SEQUENCE {\n      capwapBaseWtpEventsStatsRebootCount            Counter32,\n      capwapBaseWtpEventsStatsInitCount              Counter32,\n      capwapBaseWtpEventsStatsLinkFailureCount       Counter32,\n      capwapBaseWtpEventsStatsSwFailureCount         Counter32,\n      capwapBaseWtpEventsStatsHwFailureCount         Counter32,\n      capwapBaseWtpEventsStatsOtherFailureCount      Counter32,\n      capwapBaseWtpEventsStatsUnknownFailureCount    Counter32,\n      capwapBaseWtpEventsStatsLastFailureType        INTEGER\n    }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsRebootCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the number of reboots that have occurred due to a WTP crash.",
      "zh-CHS": "capwapBaseWtpEventsStatsRebootCount对象类型语法计数器32 MAX-ACCESS只读状态当前描述”表示由于WTP崩溃而发生的重新引导次数。"
    },
    {
      "indent": 4,
      "text": "     Note that the CAPWAP field [RFC5415] modeled by this counter\n     takes the value 65535 to indicate that the information is not\n     available on the WTP.  This MIB object does not follow this\n     behavior, which would not be standard in SMIv2.  If the WTP\n     does not have the information, the agent will not instantiate\n     the object.\"\nREFERENCE\n    \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEventsStatsEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsInitCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of reboots that have occurred at the\n         request of a CAPWAP protocol message, such as a change in\n         configuration that requires a reboot or an explicit CAPWAP\n         protocol reset request.\n         Note that the CAPWAP field [RFC5415] modeled by this counter\n         takes the value 65535 to indicate that the information is not\n         available on the WTP.  This MIB object does not follow this\n         behavior, which would not be standard in SMIv2.  If the WTP\n         does not have the information, the agent will not instantiate\n         the object.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsLinkFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed due to link failures.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsSwFailureCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the number of times that a CAPWAP protocol connection with an AC has failed due to software-related reasons.\"",
      "zh-CHS": "capwapBaseWtpEventsStatsSwFailureCount对象类型语法计数器32 MAX-ACCESS只读状态当前描述“表示由于软件相关原因与AC的CAPWAP协议连接失败的次数。”"
    },
    {
      "indent": 4,
      "text": "REFERENCE\n    \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEventsStatsEntry 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsHwFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed due to hardware-related\n         reasons.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsOtherFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed due to known reasons, other\n         than the AC-initiated, link, software or hardware failures.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsUnknownFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that a CAPWAP protocol\n         connection with an AC has failed for unknown reasons.\"\n    REFERENCE\n        \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtpEventsStatsEntry 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsLastFailureType OBJECT-TYPE SYNTAX INTEGER { unsupported(0), acInit(1), linkFailure(2), swFailure(3), hwFailure(4), otherFailure(5), unknown(255)",
      "zh-CHS": "capwapBaseWtpEventsStatsLastFailureType对象类型语法整数{不支持（0），acInit（1），linkFailure（2），swFailure（3），hwFailure（4），otherFailure（5），未知（255）"
    },
    {
      "indent": 4,
      "text": "            }\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the failure type of the most recent WTP failure.\n     The following enumerated values are supported:\n       unsupported(0)  - Not supported\n       acInit(1)       - The AC initiated\n       linkFailure(2)  - Link failure\n       swFailure(3)    - Software failure\n       hwFailure(4)    - Hardware failure\n       otherFailure(5) - Other failure\n       unknown(255)    - Unknown (e.g., WTP doesn't keep track\n                         of info)\n     Note that the CAPWAP field [RFC5415] modeled by this\n     object takes zero as starting value; this MIB object\n     follows that rule.\"\nREFERENCE\n    \"Section 4.6.47 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseWtpEventsStatsEntry 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseWtpEventsStatsTable table",
      "zh-CHS": "--CAPWAPBASETPEVENTSSTATSTABLE表格末尾"
    },
    {
      "indent": 0,
      "text": "-- capwapBaseRadioEventsStatsTable table",
      "zh-CHS": "--capwapBaseRadioEventsStatsTable表"
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsTable  OBJECT-TYPE\n    SYNTAX      SEQUENCE OF CapwapBaseRadioEventsStatsEntry\n    MAX-ACCESS  not-accessible\n    STATUS      current\n    DESCRIPTION\n        \"A table of objects that display statistics on the radios'\n         behaviors and reasons why the WTP radio has been reset.\n         To get the events statistics of all radios on a specific WTP\n         (identified by the capwapBaseWtpCurrId), a query\n         operation SHOULD run from radio ID 1 to radio ID 31 until there\n         is no data returned.  The radio ID here corresponds to the\n         object capwapBaseRadioEventsWtpRadioId.  If the previous MIB\n         operations such as query on the capwapBaseWirelessBindingTable\n         know the exact value of each radio ID, the query operation on\n         the capwapBaseRadioEventsStatsTable could use that value\n         of Radio IDs.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseWtps 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsEntry OBJECT-TYPE SYNTAX CapwapBaseRadioEventsStatsEntry",
      "zh-CHS": "capwapBaseRadioEventsStatsEntry对象类型语法capwapBaseRadioEventsStatsEntry"
    },
    {
      "indent": 4,
      "text": "MAX-ACCESS  not-accessible\nSTATUS      current\nDESCRIPTION\n    \"A set of objects that displays the statistical data of\n     events that happened on a specific radio of a WTP.\"\nINDEX { capwapBaseWtpCurrId, capwapBaseRadioEventsWtpRadioId }\n::= { capwapBaseRadioEventsStatsTable 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CapwapBaseRadioEventsStatsEntry ::= SEQUENCE {\n      capwapBaseRadioEventsWtpRadioId             CapwapBaseRadioIdTC,\n      capwapBaseRadioEventsStatsResetCount             Counter32,\n      capwapBaseRadioEventsStatsSwFailureCount         Counter32,\n      capwapBaseRadioEventsStatsHwFailureCount         Counter32,\n      capwapBaseRadioEventsStatsOtherFailureCount      Counter32,\n      capwapBaseRadioEventsStatsUnknownFailureCount    Counter32,\n      capwapBaseRadioEventsStatsConfigUpdateCount      Counter32,\n      capwapBaseRadioEventsStatsChannelChangeCount     Counter32,\n      capwapBaseRadioEventsStatsBandChangeCount        Counter32,\n      capwapBaseRadioEventsStatsCurrNoiseFloor         Integer32,\n      capwapBaseRadioEventsStatsDecryptErrorCount      Counter32,\n      capwapBaseRadioEventsStatsLastFailureType        INTEGER\n    }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsWtpRadioId OBJECT-TYPE\n     SYNTAX      CapwapBaseRadioIdTC\n     MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n         \"Represents the identifier of a PHY radio on a WTP, which\n          is required to be unique on a WTP.\n          For example, WTP A and WTP B use the same value of\n          capwapBaseRadioEventsWtpRadioId for their first radio.\"\n     REFERENCE\n         \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n     ::= { capwapBaseRadioEventsStatsEntry 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsResetCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has been\n         reset.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsSwFailureCount OBJECT-TYPE",
      "zh-CHS": "CapwapBaseRadioEventsStatsWfailureCount对象类型"
    },
    {
      "indent": 4,
      "text": "SYNTAX      Counter32\nMAX-ACCESS  read-only\nSTATUS      current\nDESCRIPTION\n    \"Represents the number of times that the radio has failed due\n     to software-related reasons.\"\nREFERENCE\n    \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseRadioEventsStatsEntry 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsHwFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has failed due\n         to hardware-related reasons.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsOtherFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has failed due to\n         known reasons, other than software or hardware failure.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsUnknownFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has failed for\n         unknown reasons.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsConfigUpdateCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION",
      "zh-CHS": "capwapBaseRadioEventsStatsConfigUpdateCount对象类型语法计数器32 MAX-ACCESS只读状态当前说明"
    },
    {
      "indent": 4,
      "text": "    \"Represents the number of times that the radio configuration has\n     been updated.\"\nREFERENCE\n    \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseRadioEventsStatsEntry 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsChannelChangeCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio channel has\n         been changed.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsBandChangeCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of times that the radio has changed\n         frequency bands.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 9 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsCurrNoiseFloor OBJECT-TYPE\n    SYNTAX      Integer32\n    UNITS       \"dBm\"\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the noise floor of the radio receiver in units of\n         dBm.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 10 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsDecryptErrorCount OBJECT-TYPE SYNTAX Counter32 MAX-ACCESS read-only STATUS current DESCRIPTION \"Represents the number of decryption errors that have occurred on the WTP. Note that this field is only valid in cases where the WTP provides encryption/decryption services.\"",
      "zh-CHS": "capwapBaseRadioEventsStatsDecryptErrorCount对象类型语法计数器32 MAX-ACCESS只读状态当前描述“表示WTP上发生的解密错误数。请注意，此字段仅在WTP提供加密/解密服务的情况下有效。”"
    },
    {
      "indent": 4,
      "text": "REFERENCE\n    \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseRadioEventsStatsEntry 11 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsLastFailureType OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unsupported(0),\n                  swFailure(1),\n                  hwFailure(2),\n                  otherFailure(3),\n                  unknown(255)\n                }\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the failure type of the most recent radio failure.\n         The following enumerated values are supported:\n           unsupported(0)  - Not supported\n           swFailure(1)    - Software failure\n           hwFailure(2)    - Hardware failure\n           otherFailure(3) - Other failure\n           unknown(255)    - Unknown\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object follows\n         that rule.\"\n    REFERENCE\n        \"Section 4.6.46 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseRadioEventsStatsEntry 12 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- End of capwapBaseRadioEventsStatsTable table",
      "zh-CHS": "--capwapBaseRadioEventsStatsTable表结束"
    },
    {
      "indent": 0,
      "text": "-- End of WTP Objects Group",
      "zh-CHS": "--WTP对象组结束"
    },
    {
      "indent": 0,
      "text": "-- CAPWAP Base Parameters Group",
      "zh-CHS": "--CAPWAP基本参数组"
    },
    {
      "indent": 0,
      "text": "capwapBaseParameters OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcMaxRetransmit OBJECT-TYPE SYNTAX Unsigned32 MAX-ACCESS read-write STATUS current DESCRIPTION \"Represents the maximum number of retransmissions for a given CAPWAP packet before the link layer considers the peer dead. The value of the object is persistent at restart/reboot.\" REFERENCE",
      "zh-CHS": "capwapBaseAcMaxRetransmit对象类型语法Unsigned32 MAX-ACCESS读写状态当前描述“表示在链路层认为对等方已死亡之前，给定CAPWAP数据包的最大重新传输次数。该对象的值在重新启动/重新启动时保持不变。”参考"
    },
    {
      "indent": 4,
      "text": "    \"Section 4.8.7 of CAPWAP Protocol Specification, RFC 5415.\"\nDEFVAL { 5 }\n::= { capwapBaseParameters 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcChangeStatePendingTimer OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum time, in seconds, the AC will wait\n         for the Change State Event Request from the WTP after having\n         transmitted a successful Configuration Status Response\n         message.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.1 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 25 }\n    ::= { capwapBaseParameters 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcDataCheckTimer OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents The number of seconds the AC will wait for\n         the Data Channel Keep Alive, which is required by the\n         CAPWAP state machine's Data Check state.\n         The AC resets the state machine if this timer expires\n         prior to transitioning to the next state.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.4 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseParameters 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcDTLSSessionDeleteTimer OBJECT-TYPE SYNTAX Unsigned32 UNITS \"second\" MAX-ACCESS read-write STATUS current DESCRIPTION \"Represents the minimum time, in seconds, the AC MUST wait for DTLS session deletion. The value of the object is persistent at restart/reboot.\" REFERENCE \"Section 4.7.6 of CAPWAP Protocol Specification, RFC 5415.\"",
      "zh-CHS": "capwapBaseAcDTLSSessionDeleteTimer对象类型语法Unsigned32个单位“秒”MAX-ACCESS读写状态当前描述“表示AC必须等待DTLS会话删除的最短时间（以秒为单位）。该对象的值在重新启动/重新启动时保持不变。“参考CAPWAP协议规范RFC 5415第4.7.6节。”"
    },
    {
      "indent": 4,
      "text": "DEFVAL { 5 }\n::= { capwapBaseParameters 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcEchoInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, between sending Echo\n         Request messages to the AC with which the WTP has joined.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.7 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseParameters 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcRetransmitInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, in which a\n         non-acknowledged CAPWAP packet will be retransmitted.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.12 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 3 }\n    ::= { capwapBaseParameters 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcSilentInterval OBJECT-TYPE\n    SYNTAX      Unsigned32\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the minimum time, in seconds, during which the AC\n         SHOULD ignore all CAPWAP and DTLS packets received from the\n         WTP that is in the Sulking state.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.13 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 30 }\n    ::= { capwapBaseParameters 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcWaitDTLSTimer OBJECT-TYPE SYNTAX Unsigned32 (30..4294967295)",
      "zh-CHS": "CapwapBaseAcWaitdTLTimer对象类型语法Unsigned32（30..4294967295）"
    },
    {
      "indent": 4,
      "text": "UNITS       \"second\"\nMAX-ACCESS  read-write\nSTATUS      current\nDESCRIPTION\n    \"Represents the maximum time, in seconds, the AC MUST wait\n     without having received a DTLS Handshake message from an AC.\n     This timer MUST be greater than 30 seconds.\n     The value of the object is persistent at restart/reboot.\"\nREFERENCE\n    \"Section 4.7.15 of CAPWAP Protocol Specification, RFC 5415.\"\nDEFVAL { 60 }\n::= { capwapBaseParameters 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcWaitJoinTimer OBJECT-TYPE\n    SYNTAX      Unsigned32 (20..4294967295)\n    UNITS       \"second\"\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the maximum time, in seconds, the AC will wait\n         after the DTLS session has been established until it receives\n         the Join Request from the WTP.  This timer MUST be greater\n         than 20 seconds.\n         The value of the object is persistent at restart/reboot.\"\n    REFERENCE\n        \"Section 4.7.16 of CAPWAP Protocol Specification, RFC 5415.\"\n    DEFVAL { 60 }\n    ::= { capwapBaseParameters 9 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcEcnSupport OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  limited(0),\n                  fullAndLimited(1)\n                }\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents the support for the Explicit Congestion Notification\n         (ECN) bits, as defined in [RFC3168].\n         The value of the object is persistent at restart/reboot.\n         The following enumerated values are supported:\n           limited(0)        - Limited ECN support\n           fullAndLimited(1) - Full and limited ECN support\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object follows\n         that rule.\"\n    REFERENCE\n        \"Section 4.6.25 of CAPWAP Protocol Specification, RFC 5415.\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "::= { capwapBaseParameters 10 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- End of CAPWAP Base Parameters Group",
      "zh-CHS": "--CAPWAP基本参数组结束"
    },
    {
      "indent": 0,
      "text": "-- CAPWAP Statistics Group",
      "zh-CHS": "--CAPWAP统计组"
    },
    {
      "indent": 0,
      "text": "capwapBaseStats OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseFailedDTLSAuthFailureCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of failed DTLS session establishment\n         attempts due to authentication failures.\"\n    REFERENCE\n        \"Section 4.8.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStats 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseFailedDTLSSessionCount OBJECT-TYPE\n    SYNTAX      Counter32\n    MAX-ACCESS  read-only\n    STATUS      current\n    DESCRIPTION\n        \"Represents the number of failed DTLS session\n         establishment attempts.\"\n    REFERENCE\n        \"Section 4.8.4 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseStats 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- Notifications",
      "zh-CHS": "--通知"
    },
    {
      "indent": 0,
      "text": "capwapBaseChannelUp NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfChannelType,\n                  capwapBaseNtfAuthenMethod\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is sent by the AC when a CAPWAP channel\n         is established.\n         The notification is separated for data or control channel.\"\n    ::= { capwapBaseNotifications 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseChannelDown NOTIFICATION-TYPE",
      "zh-CHS": "capwapBaseChannelDown通知类型"
    },
    {
      "indent": 4,
      "text": "OBJECTS     {\n              capwapBaseNtfWtpId,\n              capwapBaseNtfChannelType,\n              capwapBaseNtfChannelDownReason\n            }\nSTATUS      current\nDESCRIPTION\n    \"This notification is sent by the AC when a CAPWAP channel\n     is down.\n     The notification is separated for data or control channel.\"\n::= { capwapBaseNotifications 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseDecryptErrorReport NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfRadioId,\n                  capwapBaseNtfStationIdList\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated when a WTP has had a\n         decryption error since the last report.\"\n    REFERENCE\n        \"Section 4.6.17 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseJoinFailure NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfJoinFailureReason\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated when a WTP fails to join.\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseImageUpgradeFailure NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfImageFailureReason\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated when a WTP fails to update\n         the firmware image.\"\n    REFERENCE",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseNotifications 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseConfigMsgError NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfConfigMsgErrorType,\n                  capwapBaseNtfMsgErrorElements\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This notification is generated when a WTP receives message\n         elements in the configuration management messages that it\n         is unable to apply locally.\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioOperableStatus NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfRadioId,\n                  capwapBaseNtfRadioOperStatusFlag,\n                  capwapBaseNtfRadioStatusCause\n                }\n    STATUS      current\n    DESCRIPTION\n        \"The notification is generated when a radio's operational state\n         has changed.\"\n    REFERENCE\n        \"Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifications 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAuthenFailure NOTIFICATION-TYPE\n    OBJECTS     {\n                  capwapBaseNtfWtpId,\n                  capwapBaseNtfChannelType,\n                  capwapBaseNtfAuthenMethod,\n                  capwapBaseNtfAuthenFailureReason\n                }\n    STATUS      current\n    DESCRIPTION\n        \"This is notification of an authentication failure event\n         and provides the reason for it.\"\n    ::= { capwapBaseNotifications 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- Objects used only in notifications",
      "zh-CHS": "--仅在通知中使用的对象"
    },
    {
      "indent": 0,
      "text": "-- Notification Objects\ncapwapBaseNotifyVarObjects OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfWtpId OBJECT-TYPE\n    SYNTAX      CapwapBaseWtpIdTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the unique identifier of a WTP.\"\n    ::= { capwapBaseNotifyVarObjects 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfRadioId OBJECT-TYPE\n    SYNTAX      CapwapBaseRadioIdTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the identifier of a PHY radio on a WTP, which is\n         only required to be unique on a WTP.\n         For example, WTP A and WTP B can use the same value of\n         capwapBaseNtfRadioId for their first radio.\"\n    REFERENCE\n        \"Section 4.3 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfChannelType OBJECT-TYPE\n    SYNTAX      CapwapBaseChannelTypeTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the channel type for the CAPWAP protocol.\"\n    ::= { capwapBaseNotifyVarObjects 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfAuthenMethod OBJECT-TYPE\n    SYNTAX      CapwapBaseAuthenMethodTC\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the authentication method for the CAPWAP Channel.\"\n    ::= { capwapBaseNotifyVarObjects 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfChannelDownReason OBJECT-TYPE SYNTAX INTEGER { timeout(1), rekeyFailure(2), acRebootWtp(3), dtlsError(4), maxRetransmit(5)",
      "zh-CHS": "capwapBaseNtfChannelDownReason对象类型语法整数{超时（1），rekeyFailure（2），AcreBotWTP（3），dtlsError（4），maxRetransmit（5）"
    },
    {
      "indent": 4,
      "text": "            }\nMAX-ACCESS  accessible-for-notify\nSTATUS      current\nDESCRIPTION\n    \"Represents the reason the channel is down.\n     The following enumerated values are supported:\n       timeout(1)       - The keepalive timed out\n       rekeyFailure(2)  - Rekey process failed; channel will be\n                          broken\n       acRebootWtp(3)   - The AC rebooted the WTP\n       dtlsError(4)     - DTLS notifications: DTLSAborted,\n                          DTLSReassemblyFailure, DTLSPeerDisconnect,\n                          or frequent DTLSDecapFailure\n       maxRetransmit(5) - The underlying reliable transport's\n                          RetransmitCount counter has reached the\n                          MaxRetransmit variable\"\n::= { capwapBaseNotifyVarObjects 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfStationIdList OBJECT-TYPE\n    SYNTAX      LongUtf8String (SIZE (6..1024))\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents a list of station MAC addresses separated by\n         semicolons.\"\n    REFERENCE\n        \"Section 4.6.17 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfAuthenFailureReason OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  keyMismatch(1),\n                  invalidCert(2),\n                  reassemblyFailure(3),\n                  decapFailure(4),\n                  encapFailure(5),\n                  timeout(6),\n                  unknown(8)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the reason for WTP authorization failure.\n         The following enumerated values are supported:\n           keyMismatch(1)       - WTP's and AC's keys did not match\n           invalidCert(2)       - Certification is not valid\n           reassemblyFailure(3) - Fragment reassembly failure\n           decapFailure(4)      - Decapsulation error",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "       encapFailure(5)      - Encapsulation error\n       timeout(6)           - WaitDTLS timer timeout\n       unknown(8)           - Unknown reason\"\nREFERENCE\n    \"Section 2.3.1 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseNotifyVarObjects 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfRadioOperStatusFlag OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  operable(0),\n                  inoperable(1)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the operation status of a radio.\n         The following enumerated values are supported:\n           operable(0)   - The radio is operable\n           inoperable(1) - The radio is inoperable, and the\n                           capwapBaseNtfRadioStatusCause object\n                           gives the reason in detail\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object\n         follows that rule.\"\n    REFERENCE\n        \"Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfRadioStatusCause OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  normal(0),\n                  hwError(1),\n                  swError(2),\n                  adminSet(3)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the reason why the radio is out of service.\n         The following enumerated values are supported:\n           normal(0)   - Normal status\n           hwError(1)  - Radio failure\n           swError(2)  - Software failure\n           adminSet(3) - Administratively set\n         Note that the CAPWAP field [RFC5415] modeled by this\n         object takes zero as starting value; this MIB object\n         follows that rule.\"\n    REFERENCE",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "    \"Section 4.6.34 of CAPWAP Protocol Specification, RFC 5415.\"\n::= { capwapBaseNotifyVarObjects 9 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfJoinFailureReason  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unspecified(1),\n                  resDepletion(2),\n                  unknownSource(3),\n                  incorrectData(4),\n                  sessionIdInUse(5),\n                  unsupportedHw(6),\n                  unsupportedBinding(7)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the reason of join failure.\n         The following enumerated values are supported:\n           unspecified(1)        - Unspecified failure\n           resDepletion(2)       - Resource depletion\n           unknownSource(3)      - Unknown source\n           incorrectData(4)      - Incorrect data\n           sessionIdInUse(5)     - Session ID already in use\n           unsupportedHw(6)      - WTP hardware not supported\n           unsupportedBinding(7) - Binding not supported\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 10 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfImageFailureReason  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  invalidChecksum(1),\n                  invalidLength(2),\n                  other(3),\n                  inStorage(4)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the reason of image failure.\n         The following enumerated values are supported:\n           invalidChecksum(1) - Invalid checksum\n           invalidLength(2)   - Invalid data length\n           other(3)           - Other error\n           inStorage(4)       - Image already present\"\n    REFERENCE\n        \"Section 4.6.35 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 11 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfConfigMsgErrorType  OBJECT-TYPE\n    SYNTAX      INTEGER {\n                  unknownElement(1),\n                  unsupportedElement(2),\n                  unknownValue(3),\n                  unsupportedValue(4)\n                }\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the type of configuration message error.\n         The following enumerated values are supported:\n           unknownElement(1)     - Unknown message element\n           unsupportedElement(2) - Unsupported message element\n           unknownValue(3)       - Unknown message element value\n           unsupportedValue(4)   - Unsupported message element value\"\n    REFERENCE\n        \"Section 4.6.36 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 12 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNtfMsgErrorElements  OBJECT-TYPE\n    SYNTAX      SnmpAdminString\n    MAX-ACCESS  accessible-for-notify\n    STATUS      current\n    DESCRIPTION\n        \"Represents the message elements sent by the AC in the\n         Configuration Status Response message that caused the error.\"\n    REFERENCE\n        \"Section 4.6.36 of CAPWAP Protocol Specification, RFC 5415.\"\n    ::= { capwapBaseNotifyVarObjects 13 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- Notification Control\ncapwapBaseNotifyControlObjects OBJECT IDENTIFIER\n    ::= { capwapBaseObjects 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseChannelUpDownNotifyEnable  OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the Channel Up / Channel Down notification\n         should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { false }\n    ::= { capwapBaseNotifyControlObjects 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseDecryptErrorNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the decryption error notification should\n         be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseJoinFailureNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of a WTP join failure\n         should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseImageUpgradeFailureNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of a WTP image upgrade\n         failure should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseConfigMsgErrorNotifyEnable OBJECT-TYPE SYNTAX TruthValue MAX-ACCESS read-write STATUS current DESCRIPTION \"Represents whether the notification of configuration message error should be generated. A value of true(1) means that the notification is enabled. A value of false(2) means that the notification is disabled.",
      "zh-CHS": "CapwapBaseConfigumSgerRorNotifyEnable对象类型语法TruthValue MAX-ACCESS读写状态当前描述”表示是否应生成配置消息错误通知。true值（1）表示通知已启用。false值（2）表示通知已禁用。"
    },
    {
      "indent": 4,
      "text": "     The value of the object is persistent at restart/reboot.\"\nDEFVAL { false }\n::= { capwapBaseNotifyControlObjects 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioOperableStatusNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of a radio's operational\n         state change should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { false }\n    ::= { capwapBaseNotifyControlObjects 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAuthenFailureNotifyEnable OBJECT-TYPE\n    SYNTAX      TruthValue\n    MAX-ACCESS  read-write\n    STATUS      current\n    DESCRIPTION\n        \"Represents whether the notification of authentication failure\n         should be generated.\n         A value of true(1) means that the notification is enabled.\n         A value of false(2) means that the notification is disabled.\n         The value of the object is persistent at restart/reboot.\"\n    DEFVAL { true }\n    ::= { capwapBaseNotifyControlObjects 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- Module compliance",
      "zh-CHS": "--模块符合性"
    },
    {
      "indent": 0,
      "text": "capwapBaseCompliances OBJECT IDENTIFIER\n    ::= { capwapBaseConformance 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseGroups OBJECT IDENTIFIER\n    ::= { capwapBaseConformance 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseCompliance MODULE-COMPLIANCE STATUS current DESCRIPTION \"Describes the requirements for conformance to the CAPWAP-BASE-MIB module.\"",
      "zh-CHS": "capwapBaseCompliance MODULE-COMPLIANCE STATUS current DESCRIPTION“描述了与CAPWAP-BASE-MIB模块的一致性要求。”"
    },
    {
      "indent": 4,
      "text": "MODULE IF-MIB -- The Interfaces MIB, RFC 2863\nMANDATORY-GROUPS {\n   ifGeneralInformationGroup\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "MODULE -- this module\n MANDATORY-GROUPS {\n   capwapBaseAcNodeGroup,\n   capwapBaseWtpProfileGroup,\n   capwapBaseWtpStateGroup,\n   capwapBaseWtpGroup,\n   capwapBaseRadioGroup,\n   capwapBaseStationGroup\n }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseAcNodeGroup2 DESCRIPTION \"The capwapBaseAcNodeGroup2 group is optional.\"",
      "zh-CHS": "GROUP capwapBaseAcNodeGroup2 DESCRIPTION“capwapBaseAcNodeGroup2组是可选的。”"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseAcNameListGroup DESCRIPTION \"The capwapBaseAcNameListGroup group is optional.\"",
      "zh-CHS": "GROUP capwapBaseAcNameListGroup DESCRIPTION“capwapBaseAcNameListGroup组是可选的。”"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseMacAclsGroup DESCRIPTION \"The capwapBaseMacAclsGroup group is optional.\"",
      "zh-CHS": "组CAPWAPBASEMACALSGroup DESCRIPTION“CAPWAPBASEMACALSGroup组是可选的。”"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseWtpProfileGroup2 DESCRIPTION \"The capwapBaseWtpProfileGroup2 group is optional.\"",
      "zh-CHS": "组CAPWAPBaseWTPProfileGroup 2说明“CAPWAPBaseWTPProfileGroup 2组是可选的。”"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseWtpGroup2 DESCRIPTION \"The capwapBaseWtpGroup2 group is optional.\"",
      "zh-CHS": "组capwapBaseWtpGroup2说明“capwapBaseWtpGroup2组是可选的。”"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseWtpEventsStatsGroup DESCRIPTION \"The capwapBaseWtpEventsStatsGroup group is optional.\"",
      "zh-CHS": "组CAPWAPBASETPEVENTSSTATSGROUP DESCRIPTION“CAPWAPBASETPEVENTSSTATSGROUP是可选的。”"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseRadioEventsStatsGroup DESCRIPTION \"The capwapBaseRadioEventsStatsGroup group is optional.\"",
      "zh-CHS": "组capwapBaseRadioEventsStatsGroup描述“capwapBaseRadioEventsStatsGroup组是可选的。”"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseParametersGroup DESCRIPTION \"The capwapBaseParametersGroup group is optional.\"",
      "zh-CHS": "GROUP capwapBaseParametersGroup DESCRIPTION“capwapBaseParametersGroup组是可选的。”"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseStatsGroup DESCRIPTION \"The capwapBaseStatsGroup group is optional.\"",
      "zh-CHS": "组capwapBaseStatsGroup DESCRIPTION“capwapBaseStatsGroup是可选的。”"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseNotificationsGroup DESCRIPTION",
      "zh-CHS": "组CAPWAPBASE通知组说明"
    },
    {
      "indent": 10,
      "text": "\"The capwapBaseNotificationsGroup group is optional.\"",
      "zh-CHS": "“capwapBaseNotificationsGroup组是可选的。”"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseNotifyVarsGroup DESCRIPTION \"The capwapBaseNotifyVarsGroup group is optional. If capwapBaseNotificationsGroup is supported, this group must be implemented.\"",
      "zh-CHS": "GROUP capwapBaseNotifyVarsGroup DESCRIPTION“capwapBaseNotifyVarsGroup组是可选的。如果支持capwapBaseNotificationsGroup，则必须实现此组。”"
    },
    {
      "indent": 5,
      "text": "GROUP capwapBaseNotifyControlGroup\nDESCRIPTION\n   \"The capwapBaseNotifyControlGroup group is optional.\n    If capwapBaseNotificationsGroup is supported,\n    this group must be implemented.\"\n::= { capwapBaseCompliances 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNodeGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpSessions,\n      capwapBaseWtpSessionsLimit,\n      capwapBaseStationSessions,\n      capwapBaseStationSessionsLimit\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the basic properties of the AC from the CAPWAP\n         protocol perspective.\"\n    ::= { capwapBaseGroups 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNodeGroup2   OBJECT-GROUP\n    OBJECTS {\n      capwapBaseDataChannelDTLSPolicyOptions,\n      capwapBaseControlChannelAuthenOptions\n     }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the other properties (such as security) of the AC from\n         the CAPWAP protocol perspective.\"\n    ::= { capwapBaseGroups 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseAcNameListGroup  OBJECT-GROUP\n    OBJECTS {\n      capwapBaseAcNameListName,\n      capwapBaseAcNameListPriority,\n      capwapBaseAcNameListRowStatus\n    }\n    STATUS  current",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "DESCRIPTION\n    \"A collection of objects that is used to configure\n     the AC name list.\"\n::= { capwapBaseGroups 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseMacAclsGroup  OBJECT-GROUP\n    OBJECTS {\n      capwapBaseMacAclStationId,\n      capwapBaseMacAclRowStatus\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to configure\n         the stations ACL.\"\n    ::= { capwapBaseGroups 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpProfileName,\n      capwapBaseWtpProfileWtpMacAddress,\n      capwapBaseWtpProfileWtpModelNumber,\n      capwapBaseWtpProfileWtpName,\n      capwapBaseWtpProfileWtpLocation,\n      capwapBaseWtpProfileRowStatus\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to configure\n         the WTP profile.\"\n    ::= { capwapBaseGroups 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpProfileGroup2    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpProfileWtpStaticIpEnable,\n      capwapBaseWtpProfileWtpStaticIpType,\n      capwapBaseWtpProfileWtpStaticIpAddress,\n      capwapBaseWtpProfileWtpNetmask,\n      capwapBaseWtpProfileWtpGateway,\n      capwapBaseWtpProfileWtpFallbackEnable,\n      capwapBaseWtpProfileWtpEchoInterval,\n      capwapBaseWtpProfileWtpIdleTimeout,\n      capwapBaseWtpProfileWtpMaxDiscoveryInterval,\n      capwapBaseWtpProfileWtpReportInterval,\n      capwapBaseWtpProfileWtpStatisticsTimer,\n      capwapBaseWtpProfileWtpEcnSupport\n    }\n    STATUS  current\n    DESCRIPTION",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "    \"A collection of optional objects that is used to\n     configure the WTP profile.\"\n::= { capwapBaseGroups 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpStateGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpStateWtpIpAddressType,\n      capwapBaseWtpStateWtpIpAddress,\n      capwapBaseWtpStateWtpLocalIpAddressType,\n      capwapBaseWtpStateWtpLocalIpAddress,\n      capwapBaseWtpStateWtpBaseMacAddress,\n      capwapBaseWtpState,\n      capwapBaseWtpStateWtpUpTime,\n      capwapBaseWtpStateWtpCurrWtpProfileId\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the WTP's state information.\"\n    ::= { capwapBaseGroups 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpBaseMacAddress,\n      capwapBaseWtpTunnelModeOptions,\n      capwapBaseWtpMacTypeOptions,\n      capwapBaseWtpDiscoveryType,\n      capwapBaseWtpRadiosInUseNum,\n      capwapBaseWtpRadioNumLimit\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the properties information for the WTPs in running state.\"\n    ::= { capwapBaseGroups 8 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpGroup2   OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpPhyIndex,\n      capwapBaseWtpRetransmitCount\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of optional objects that is used to represent\n         the properties of the WTPs in running state.\"\n    ::= { capwapBaseGroups 9 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioGroup OBJECT-GROUP",
      "zh-CHS": "capwapBaseRadioGroup对象组"
    },
    {
      "indent": 4,
      "text": "OBJECTS {\n  capwapBaseWirelessBindingVirtualRadioIfIndex,\n  capwapBaseWirelessBindingType\n}\nSTATUS  current\nDESCRIPTION\n    \"A collection of objects that is used to represent\n     the wireless binding type and the mappings between the\n     ifIndexes of WLAN Virtual Radio Interfaces and PHY radios.\"\n::= { capwapBaseGroups 10 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseStationGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseStationWtpId,\n      capwapBaseStationWtpRadioId,\n      capwapBaseStationAddedTime,\n      capwapBaseStationVlanName\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used to represent\n         the stations' basic properties.\"\n    ::= { capwapBaseGroups 11 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseWtpEventsStatsGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseWtpEventsStatsRebootCount,\n      capwapBaseWtpEventsStatsInitCount,\n      capwapBaseWtpEventsStatsLinkFailureCount,\n      capwapBaseWtpEventsStatsSwFailureCount,\n      capwapBaseWtpEventsStatsHwFailureCount,\n      capwapBaseWtpEventsStatsOtherFailureCount,\n      capwapBaseWtpEventsStatsUnknownFailureCount,\n      capwapBaseWtpEventsStatsLastFailureType\n    }\n    STATUS  current\n    DESCRIPTION\n        \"A collection of objects that is used for collecting\n         WTP reboot count, link failure count, hardware failure\n         count, and so on.\"\n    ::= { capwapBaseGroups 12 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseRadioEventsStatsGroup OBJECT-GROUP OBJECTS { capwapBaseRadioEventsStatsResetCount, capwapBaseRadioEventsStatsSwFailureCount, capwapBaseRadioEventsStatsHwFailureCount, capwapBaseRadioEventsStatsOtherFailureCount,",
      "zh-CHS": "capwapBaseRadioEventsStatsGroup对象组对象{CapwapBaseRadioEventsStatsSetCount，CapwapBaseRadioEventsStatsWFFailureCount，CapwapBaseRadioEventsStatsWFFailureCount，CapwapBaseRadioEventsStatsSotherFailureCount，"
    },
    {
      "indent": 4,
      "text": "  capwapBaseRadioEventsStatsUnknownFailureCount,\n  capwapBaseRadioEventsStatsConfigUpdateCount,\n  capwapBaseRadioEventsStatsChannelChangeCount,\n  capwapBaseRadioEventsStatsBandChangeCount,\n  capwapBaseRadioEventsStatsCurrNoiseFloor,\n  capwapBaseRadioEventsStatsDecryptErrorCount,\n  capwapBaseRadioEventsStatsLastFailureType\n}\nSTATUS  current\nDESCRIPTION\n    \"A collection of objects that is used for collecting\n     radio reset count, channel change count, hardware failure\n     count, and so on\"\n::= { capwapBaseGroups 13 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseParametersGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseAcMaxRetransmit,\n      capwapBaseAcChangeStatePendingTimer,\n      capwapBaseAcDataCheckTimer,\n      capwapBaseAcDTLSSessionDeleteTimer,\n      capwapBaseAcEchoInterval,\n      capwapBaseAcRetransmitInterval,\n      capwapBaseAcSilentInterval,\n      capwapBaseAcWaitDTLSTimer,\n      capwapBaseAcWaitJoinTimer,\n      capwapBaseAcEcnSupport\n    }\n    STATUS  current\n    DESCRIPTION\n        \"Objects used for the CAPWAP protocol's parameters.\"\n    ::= { capwapBaseGroups 14 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseStatsGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseFailedDTLSAuthFailureCount,\n      capwapBaseFailedDTLSSessionCount\n    }\n    STATUS  current\n    DESCRIPTION\n        \"Objects used for collecting the CAPWAP protocol's statistics.\"\n    ::= { capwapBaseGroups 15 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNotificationsGroup NOTIFICATION-GROUP NOTIFICATIONS { capwapBaseChannelUp, capwapBaseChannelDown, capwapBaseDecryptErrorReport,",
      "zh-CHS": "capwapBaseNotificationsGroup NOTIFICATION-GROUP NOTIFICATIONS{capwapBaseChannelUp、capwapBaseChannelDown、capwapBaseDecryptErrorReport、，"
    },
    {
      "indent": 4,
      "text": "  capwapBaseJoinFailure,\n  capwapBaseImageUpgradeFailure,\n  capwapBaseConfigMsgError,\n  capwapBaseRadioOperableStatus,\n  capwapBaseAuthenFailure\n}\nSTATUS  current\nDESCRIPTION\n    \"A collection of notifications in this MIB module.\"\n::= { capwapBaseGroups 16 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNotifyVarsGroup    OBJECT-GROUP\n    OBJECTS {\n      capwapBaseNtfWtpId,\n      capwapBaseNtfRadioId,\n      capwapBaseNtfChannelType,\n      capwapBaseNtfAuthenMethod,\n      capwapBaseNtfChannelDownReason,\n      capwapBaseNtfStationIdList,\n      capwapBaseNtfAuthenFailureReason,\n      capwapBaseNtfRadioOperStatusFlag,\n      capwapBaseNtfRadioStatusCause,\n      capwapBaseNtfJoinFailureReason,\n      capwapBaseNtfImageFailureReason,\n      capwapBaseNtfConfigMsgErrorType,\n      capwapBaseNtfMsgErrorElements\n    }\n    STATUS  current\n    DESCRIPTION\n        \"Objects used for notifications.\"\n    ::= { capwapBaseGroups 17 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capwapBaseNotifyControlGroup OBJECT-GROUP\n    OBJECTS {\n      capwapBaseChannelUpDownNotifyEnable,\n      capwapBaseDecryptErrorNotifyEnable,\n      capwapBaseJoinFailureNotifyEnable,\n      capwapBaseImageUpgradeFailureNotifyEnable,\n      capwapBaseConfigMsgErrorNotifyEnable,\n      capwapBaseRadioOperableStatusNotifyEnable,\n      capwapBaseAuthenFailureNotifyEnable\n   }\n   STATUS  current\n   DESCRIPTION\n        \"Objects used to enable or disable notifications.\"\n   ::= { capwapBaseGroups 18 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "10. Security Considerations",
      "section_title": true,
      "zh-CHS": "10. 安全考虑"
    },
    {
      "indent": 3,
      "text": "There are a number of management objects defined in this MIB module with a MAX-ACCESS clause of read-write and/or read-create. Such objects MAY be considered sensitive or vulnerable in some network environments. The support for SET operations in a non-secure environment without proper protection can have a negative effect on network operations. The followings are the tables and objects and their sensitivity/vulnerability:",
      "zh-CHS": "此MIB模块中定义了许多管理对象，其MAX-ACCESS子句为read-write和/或read-create。在某些网络环境中，此类对象可能被视为敏感或易受攻击。在没有适当保护的非安全环境中支持SET操作可能会对网络操作产生负面影响。以下是表格和对象及其敏感性/脆弱性："
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to the capwapBaseWtProfileTable and writable objects under capwapBaseAcs group MAY disrupt allocation of resources in the network. For example, a WTP's static IP address could be changed by setting the capwapBaseWtpProfileWtpStaticIpAddress object.",
      "zh-CHS": "- 对capwapBaseAcs组下的capwapBaseWtProfileTable和writable对象进行未经授权的更改可能会中断网络中的资源分配。例如，WTP的静态IP地址可以通过设置CAPWAPBaseWTPProfileWPStaticIPAddress对象来更改。"
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to writable objects under the capwapBaseAc group MAY disrupt allocation of resources in the network. For example, an invalid value for the capwapBaseWtpSessionsLimit object will increase the AC's traffic burden.",
      "zh-CHS": "- 对capwapBaseAc组下的可写对象进行未经授权的更改可能会中断网络中的资源分配。例如，capwapBaseWtpSessionsLimit对象的无效值将增加AC的流量负担。"
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to the capwapBaseMacAclTable MAY prevent legal stations from being able to access the network, while illegal stations are able to access it.",
      "zh-CHS": "- 对CAPWAPBASEMACALTABLE的未经授权的更改可能会阻止合法电台访问网络，而非法电台可以访问网络。"
    },
    {
      "indent": 3,
      "text": "- Unauthorized changes to writable objects under the capwapBaseParameters group MAY influence CAPWAP protocol behavior and status. For example, an invalid value set for the capwapBaseAcDataCheckTimer MAY influence the CAPWAP state machine.",
      "zh-CHS": "- 对capwapBaseParameters组下的可写对象进行未经授权的更改可能会影响CAPWAP协议的行为和状态。例如，为capwapBaseAcDataCheckTimer设置的无效值可能会影响CAPWAP状态机。"
    },
    {
      "indent": 3,
      "text": "Some of the readable objects in this MIB module (i.e., objects with a MAX-ACCESS other than not-accessible) MAY be considered sensitive or vulnerable in some network environments. It is thus important to control even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP. The followings are the tables and objects and their sensitivity/vulnerability:",
      "zh-CHS": "在某些网络环境中，此MIB模块中的某些可读对象（即具有MAX-ACCESS而非not ACCESS的对象）可能被视为敏感或易受攻击。因此，在通过SNMP通过网络发送这些对象时，控制甚至获取和/或通知对这些对象的访问，甚至可能加密这些对象的值，这一点非常重要。以下是表格和对象及其敏感性/脆弱性："
    },
    {
      "indent": 3,
      "text": "- The capwapBaseDataChannelDTLSPolicyOptions and capwapBaseControlChannelAuthenOptions under the capwapBaseAc group expose the current security option for CAPWAP data and control channels.",
      "zh-CHS": "- capwapBaseAc组下的capwapBaseDataChannelDTLSPolicyOptions和CAPWAPBASeControlChannelAuthenopions公开了CAPWAP数据和控制通道的当前安全选项。"
    },
    {
      "indent": 3,
      "text": "- The capwapBaseWtpTable exposes a WTP's important information like tunnel mode, MAC type, and so on.",
      "zh-CHS": "- capwapBaseWtpTable公开WTP的重要信息，如隧道模式、MAC类型等。"
    },
    {
      "indent": 3,
      "text": "- The capwapBaseWtpEventsStatsTable exposes a WTP's failure information.",
      "zh-CHS": "- CapwapBaseWTPeventsStats表公开WTP的故障信息。"
    },
    {
      "indent": 3,
      "text": "- The capwapBaseRadioEventsStatsTable exposes a radio's failure information.",
      "zh-CHS": "- capwapBaseRadioEventsStatsTable显示收音机的故障信息。"
    },
    {
      "indent": 3,
      "text": "SNMP versions prior to SNMPv3 did not include adequate security. Even if the network itself is secure (for example by using IPsec), even then, there is no control as to who on the secure network is allowed to access and GET/SET (read/change/create/delete) the objects in this MIB module.",
      "zh-CHS": "SNMPv3之前的SNMP版本未包含足够的安全性。即使网络本身是安全的（例如通过使用IPsec），即使如此，也无法控制安全网络上的谁可以访问和获取/设置（读取/更改/创建/删除）此MIB模块中的对象。"
    },
    {
      "indent": 3,
      "text": "It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).",
      "zh-CHS": "建议实施者考虑SNMPv3框架所提供的安全特性（参见[RCFC310]，第8节），包括对SNMPv3加密机制的完全支持（用于身份验证和隐私）。"
    },
    {
      "indent": 3,
      "text": "Further, the deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED. Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security. It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET (change/create/delete) them.",
      "zh-CHS": "此外，不建议部署SNMPv3之前的SNMP版本。相反，建议部署SNMPv3并启用加密安全性。然后，客户/运营商应负责确保授予访问此MIB模块实例权限的SNMP实体已正确配置为仅授予那些拥有确实获取或设置（更改/创建/删除）对象的合法权限的主体（用户）访问对象。"
    },
    {
      "indent": 0,
      "text": "11. IANA Considerations",
      "section_title": true,
      "zh-CHS": "11. IANA考虑"
    },
    {
      "indent": 0,
      "text": "11.1. IANA Considerations for CAPWAP-BASE-MIB Module The MIB module in this document uses the following IANA-assigned OBJECT IDENTIFIER value recorded in the SMI Numbers registry:",
      "zh-CHS": "11.1. CAPWAP-BASE-MIB模块的IANA注意事项本文档中的MIB模块使用SMI编号注册表中记录的以下IANA分配对象标识符值："
    },
    {
      "indent": 8,
      "text": "Descriptor     OBJECT IDENTIFIER value\n----------     -----------------------\ncapwapBaseMIB  { mib-2 196 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "11.2. IANA Considerations for ifType",
      "section_title": true,
      "zh-CHS": "11.2. ifType的IANA注意事项"
    },
    {
      "indent": 3,
      "text": "IANA has assigned the following ifType:",
      "zh-CHS": "IANA已分配以下ifType："
    },
    {
      "indent": 7,
      "text": "Decimal   Name                   Description\n-------   ------------           -------------------------------\n254       capwapWtpVirtualRadio  WTP Virtual Radio Interface",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "12. Contributors",
      "section_title": true,
      "zh-CHS": "12. 贡献者"
    },
    {
      "indent": 3,
      "text": "This MIB module is based on contributions from Long Gao.",
      "zh-CHS": "此MIB模块基于Long Gao的贡献。"
    },
    {
      "indent": 0,
      "text": "13. Acknowledgements",
      "section_title": true,
      "zh-CHS": "13. 致谢"
    },
    {
      "indent": 3,
      "text": "Thanks to David Harrington, Dan Romascanu, Abhijit Choudhury, Bert Wijnen, and David L. Black for helpful comments on this document and guiding some technical solutions.",
      "zh-CHS": "感谢David Harrington、Dan Romascanu、Abhijit Choudhury、Bert Wijnen和David L.Black对本文档的有益评论和指导一些技术解决方案。"
    },
    {
      "indent": 3,
      "text": "The authors also thank the following friends and coworkers: Fei Fang, Xuebin Zhu, Hao Song, Yu Liu, Sachin Dutta, Ju Wang, Hao Wang, Yujin Zhao, Haitao Zhang, Xiansen Cai, and Xiaolan Wan.",
      "zh-CHS": "作者还感谢以下朋友和同事：方飞、朱学斌、宋浩、刘宇、萨钦·杜塔、王菊、王浩、赵宇金、张海涛、蔡先森和万小兰。"
    },
    {
      "indent": 0,
      "text": "14. References",
      "section_title": true,
      "zh-CHS": "14. 工具书类"
    },
    {
      "indent": 0,
      "text": "14.1. Normative References",
      "section_title": true,
      "zh-CHS": "14.1. 规范性引用文件"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "zh-CHS": "[RFC2119]Bradner，S.，“RFC中用于表示需求水平的关键词”，BCP 14，RFC 2119，1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2287] Krupczak, C. and J. Saperia, \"Definitions of System-Level Managed Objects for Applications\", RFC 2287, February 1998.",
      "zh-CHS": "[RFC2287]Krupczak，C.和J.Saperia，“应用程序系统级托管对象的定义”，RFC 2287，1998年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC2578] McCloghrie, K., Ed., Perkins, D., Ed., and J. Schoenwaelder, Ed., \"Structure of Management Information Version 2 (SMIv2)\", STD 58, RFC 2578, April 1999.",
      "zh-CHS": "[RFC2578]McCloghrie，K.，Ed.，Perkins，D.，Ed.，和J.Schoenwaeld，Ed.“管理信息的结构版本2（SMIv2）”，STD 58，RFC 2578，1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2579] McCloghrie, K., Ed., Perkins, D., Ed., and J. Schoenwaelder, Ed., \"Textual Conventions for SMIv2\", STD 58, RFC 2579, April 1999.",
      "zh-CHS": "[RFC2579]McCloghrie，K.，Ed.，Perkins，D.，Ed.，和J.Schoenwaeld，Ed.“SMIv2的文本约定”，STD 58，RFC 2579，1999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2580] McCloghrie, K., Perkins, D., and J. Schoenwaelder, \"Conformance Statements for SMIv2\", STD 58, RFC 2580, April 1999.",
      "zh-CHS": "[RFC2580]McCloghrie，K.，Perkins，D.，和J.Schoenwaeld，“SMIv2的一致性声明”，STD 58，RFC 25801999年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC2863] McCloghrie, K. and F. Kastenholz, \"The Interfaces Group MIB\", RFC 2863, June 2000.",
      "zh-CHS": "[RFC2863]McCloghrie，K.和F.Kastenholz，“接口组MIB”，RFC 28632000年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3411] Harrington, D., Presuhn, R., and B. Wijnen, \"An Architecture for Describing Simple Network Management Protocol (SNMP) Management Frameworks\", STD 62, RFC 3411, December 2002.",
      "zh-CHS": "[RFC3411]Harrington，D.，Presohn，R.，和B.Wijnen，“描述简单网络管理协议（SNMP）管理框架的体系结构”，STD 62，RFC 3411，2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC3418] Presuhn, R., \"Management Information Base (MIB) for the Simple Network Management Protocol (SNMP)\", STD 62, RFC 3418, December 2002.",
      "zh-CHS": "[RFC3418]Presohn，R.，“简单网络管理协议（SNMP）的管理信息库（MIB）”，STD 62，RFC 3418，2002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4001] Daniele, M., Haberman, B., Routhier, S., and J. Schoenwaelder, \"Textual Conventions for Internet Network Addresses\", RFC 4001, February 2005.",
      "zh-CHS": "[RFC4001]Daniele，M.，Haberman，B.，Routhier，S.，和J.Schoenwaeld，“互联网网络地址的文本约定”，RFC 4001，2005年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4133] Bierman, A. and K. McCloghrie, \"Entity MIB (Version 3)\", RFC 4133, August 2005.",
      "zh-CHS": "[RFC4133]Bierman，A.和K.McCloghrie，“实体MIB（版本3）”，RFC 41332005年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5415] Calhoun, P., Montemurro, M., and D. Stanley, \"Control And Provisioning of Wireless Access Points (CAPWAP) Protocol Specification\", RFC 5415, March 2009.",
      "zh-CHS": "[RFC5415]Calhoun，P.，Montemurro，M.，和D.Stanley，“无线接入点的控制和供应（CAPWAP）协议规范”，RFC 5415，2009年3月。"
    },
    {
      "indent": 0,
      "text": "14.2. Informative References",
      "section_title": true,
      "zh-CHS": "14.2. 资料性引用"
    },
    {
      "indent": 3,
      "text": "[Err1832] RFC Errata, \"Errata ID 1832\", for RFC 5415, <http://www.rfc-editor.org>.",
      "zh-CHS": "[Err1832]RFC勘误表，“勘误表ID 1832”，适用于RFC 5415<http://www.rfc-editor.org>."
    },
    {
      "indent": 3,
      "text": "[IEEE.802-11.2007] \"Information technology - Telecommunications and information exchange between systems - Local and metropolitan area networks - Specific requirements - Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) specifications\", IEEE Standard 802.11, 2007, <htt p://standards.ieee.org/getieee802/download/ 802.11-2007.pdf>.",
      "zh-CHS": "[IEEE.802-11.2007]“信息技术-系统间的电信和信息交换-局域网和城域网-特定要求-第11部分：无线局域网介质访问控制（MAC）和物理层（PHY）规范”，IEEE标准802.112007，<htt p://standards.ieee.org/getieee802/download/802.11-2007.pdf>。"
    },
    {
      "indent": 3,
      "text": "[RFC3168] Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition of Explicit Congestion Notification (ECN) to IP\", RFC 3168, September 2001.",
      "zh-CHS": "[RFC3168]Ramakrishnan，K.，Floyd，S.，和D.Black，“向IP添加显式拥塞通知（ECN）”，RFC 3168，2001年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC3410] Case, J., Mundy, R., Partain, D., and B. Stewart, \"Introduction and Applicability Statements for Internet-Standard Management Framework\", RFC 3410, December 2002.",
      "zh-CHS": "[RFC3410]Case，J.，Mundy，R.，Partain，D.，和B.Stewart，“互联网标准管理框架的介绍和适用性声明”，RFC 34102002年12月。"
    },
    {
      "indent": 3,
      "text": "[RFC4118] Yang, L., Zerfos, P., and E. Sadot, \"Architecture Taxonomy for Control and Provisioning of Wireless Access Points (CAPWAP)\", RFC 4118, June 2005.",
      "zh-CHS": "[RFC4118]Yang，L.，Zerfos，P.，和E.Sadot，“无线接入点控制和供应（CAPWAP）的体系结构分类”，RFC 4118，2005年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4347] Rescorla, E. and N. Modadugu, \"Datagram Transport Layer Security\", RFC 4347, April 2006.",
      "zh-CHS": "[RFC4347]Rescorla，E.和N.Modadugu，“数据报传输层安全”，RFC 4347，2006年4月。"
    },
    {
      "indent": 3,
      "text": "[RFC5416] Calhoun, P., Montemurro, M., and D. Stanley, \"Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Binding for IEEE 802.11\", RFC 5416, March 2009.",
      "zh-CHS": "[RFC5416]Calhoun，P.，Montemurro，M.，和D.Stanley，“IEEE 802.11无线接入点（CAPWAP）协议绑定的控制和供应”，RFC 5416，2009年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC5834] Shi, Y., Ed., Perkins, D., Ed., Elliott, C., Ed., and Y. Zhang, Ed., \"Control and Provisioning of Wireless Access Points (CAPWAP) Protocol Binding MIB for IEEE 802.11\", RFC 5834, May 2010.",
      "zh-CHS": "[RFC5834]Shi，Y.，Ed.，Perkins，D.，Ed.，Elliott，C.，Ed.，和Y.Zhang，Ed.，“IEEE 802.11无线接入点（CAPWAP）协议绑定MIB的控制和供应”，RFC 5834，2010年5月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "zh-CHS": "作者地址"
    },
    {
      "indent": 3,
      "text": "Yang Shi (editor) Hangzhou H3C Tech. Co., Ltd. Beijing R&D Center of H3C, Digital Technology Plaza NO. 9 Shangdi 9th Street, Haidian District Beijing 100085 China",
      "zh-CHS": "杨石（编辑）杭州华三科技有限公司中国北京海淀区上地九街9号数码科技广场华三北京研发中心100085"
    },
    {
      "indent": 3,
      "text": "Phone: +86 010 82775276\nEMail: rishyang@gmail.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "David T. Perkins (editor) 228 Bayview Dr. San Carlos, CA 94070 USA",
      "zh-CHS": "David T.Perkins（编辑）228 Bayview圣卡洛斯博士，美国加利福尼亚州94070"
    },
    {
      "indent": 3,
      "text": "Phone: +1 408 394-8702\nEMail: dperkins@dsperkins.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Chris Elliott (editor) 1516 Kent St. Durham, NC 27707 USA",
      "zh-CHS": "克里斯·埃利奥特（编辑）美国北卡罗来纳州达勒姆肯特街1516号，邮编27707"
    },
    {
      "indent": 3,
      "text": "Phone: +1 919-308-1216\nEMail: chelliot@pobox.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Yong Zhang (editor) Fortinet, Inc. 1090 Kifer Road Sunnyvale, CA 94086 USA",
      "zh-CHS": "张勇（编辑）美国加利福尼亚州桑尼维尔基弗路1090号富通公司，邮编94086"
    },
    {
      "indent": 3,
      "text": "EMail: yzhang@fortinet.com",
      "raw": true,
      "zh-CHS": " "
    }
  ]
}