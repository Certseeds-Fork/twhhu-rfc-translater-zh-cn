{
  "title": {
    "text": "RFC 5911: New ASN.1 Modules for Cryptographic Message Syntax (CMS) and S/MIME",
    "zh-CHS": "RFC 5911"
  },
  "number": 5911,
  "created_at": "2021-11-09 05:27:14.950591+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        P. Hoffman\nRequest for Comments: 5911                                VPN Consortium\nCategory: Informational                                        J. Schaad\nISSN: 2070-1721                                  Soaring Hawk Consulting\n                                                               June 2010",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "New ASN.1 Modules for Cryptographic Message Syntax (CMS) and S/MIME",
      "zh-CHS": "用于加密消息语法（CMS）和S/MIME的新ASN.1模块"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "The Cryptographic Message Syntax (CMS) format, and many associated formats, are expressed using ASN.1. The current ASN.1 modules conform to the 1988 version of ASN.1. This document updates those ASN.1 modules to conform to the 2002 version of ASN.1. There are no bits-on-the-wire changes to any of the formats; this is simply a change to the syntax.",
      "zh-CHS": "加密消息语法（CMS）格式和许多相关格式使用ASN.1表示。当前ASN.1模块符合1988年版ASN.1。本文档更新了这些ASN.1模块，以符合2002年版的ASN.1。导线上没有对任何格式进行更改的位；这只是对语法的一个更改。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "zh-CHS": "关于下段备忘"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "zh-CHS": "本文件不是互联网标准跟踪规范；它是为了提供信息而发布的。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "zh-CHS": "本文件是互联网工程任务组（IETF）的产品。它代表了IETF社区的共识。它已经接受了公众审查，并已被互联网工程指导小组（IESG）批准出版。并非IESG批准的所有文件都适用于任何级别的互联网标准；见RFC 5741第2节。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc5911.",
      "zh-CHS": "有关本文件当前状态、任何勘误表以及如何提供反馈的信息，请访问http://www.rfc-editor.org/info/rfc5911."
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2010 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "zh-CHS": "版权所有（c）2010 IETF信托基金和确定为文件作者的人员。版权所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "zh-CHS": "本文件受BCP 78和IETF信托有关IETF文件的法律规定的约束(http://trustee.ietf.org/license-info)自本文件出版之日起生效。请仔细阅读这些文件，因为它们描述了您对本文件的权利和限制。从本文件中提取的代码组件必须包括信托法律条款第4.e节中所述的简化BSD许可证文本，并提供简化BSD许可证中所述的无担保。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "zh-CHS": "本文件可能包含2008年11月10日之前发布或公开的IETF文件或IETF贡献中的材料。控制某些材料版权的人员可能未授予IETF信托允许在IETF标准流程之外修改此类材料的权利。在未从控制此类材料版权的人员处获得充分许可的情况下，不得在IETF标准流程之外修改本文件，也不得在IETF标准流程之外创建其衍生作品，除了将其格式化以RFC形式发布或将其翻译成英语以外的其他语言。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n  1.1.  Design Notes . . . . . . . . . . . . . . . . . . . . . . .  4\n2.  ASN.1 Module AlgorithmInformation  . . . . . . . . . . . . . .  4\n3.  ASN.1 Module for RFC 3370  . . . . . . . . . . . . . . . . . . 14\n4.  ASN.1 Module for RFC 3565  . . . . . . . . . . . . . . . . . . 20\n5.  ASN.1 Module for RFC 3851  . . . . . . . . . . . . . . . . . . 22\n6.  ASN.1 Module for RFC 3852  . . . . . . . . . . . . . . . . . . 24\n7.  ASN.1 Module for RFC 4108  . . . . . . . . . . . . . . . . . . 34\n8.  ASN.1 Module for RFC 4998  . . . . . . . . . . . . . . . . . . 40\n9.  ASN.1 Module for RFC 5035  . . . . . . . . . . . . . . . . . . 41\n10. ASN.1 Module for RFC 5083  . . . . . . . . . . . . . . . . . . 47\n11. ASN.1 Module for RFC 5084  . . . . . . . . . . . . . . . . . . 48\n12. ASN.1 Module for RFC 5275  . . . . . . . . . . . . . . . . . . 50\n13. Security Considerations  . . . . . . . . . . . . . . . . . . . 57\n14. Normative References . . . . . . . . . . . . . . . . . . . . . 57",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "Some developers would like the IETF to use the latest version of ASN.1 in its standards. Most of the RFCs that relate to security protocols still use ASN.1 from the 1988 standard, which has been deprecated. This is particularly true for the standards that relate to PKIX, CMS, and S/MIME.",
      "zh-CHS": "一些开发人员希望IETF在其标准中使用最新版本的ASN.1。大多数与安全协议相关的RFC仍然使用1988年标准中的ASN.1，该标准已被弃用。对于与PKIX、CMS和S/MIME相关的标准来说尤其如此。"
    },
    {
      "indent": 3,
      "text": "This document updates the following RFCs to use ASN.1 modules that conform to the 2002 version of ASN.1 [ASN1-2002]. Note that not all the modules are updated; some are included to simply make the set complete.",
      "zh-CHS": "本文件更新了以下RFC，以使用符合2002年版ASN.1[ASN1-2002]的ASN.1模块。请注意，并非所有模块都已更新；其中一些只是为了使这一套完整。"
    },
    {
      "indent": 3,
      "text": "o RFC 3370, CMS Algorithms [RFC3370]",
      "zh-CHS": "o RFC3370，CMS算法[RFC3370]"
    },
    {
      "indent": 3,
      "text": "o RFC 3565, Use of AES in CMS [RFC3565]",
      "zh-CHS": "o RFC 3565，在CMS中使用AES[RFC3565]"
    },
    {
      "indent": 3,
      "text": "o RFC 3851, S/MIME Version 3.1 Message Specification [RFC3851]",
      "zh-CHS": "o RFC 3851，S/MIME版本3.1消息规范[RFC3851]"
    },
    {
      "indent": 3,
      "text": "o RFC 3852, CMS main [RFC3852]",
      "zh-CHS": "o RFC 3852，CMS干管[RFC3852]"
    },
    {
      "indent": 3,
      "text": "o RFC 4108, Using CMS to Protect Firmware Packages [RFC4108]",
      "zh-CHS": "o RFC 4108，使用CMS保护固件包[RFC4108]"
    },
    {
      "indent": 3,
      "text": "o RFC 4998, Evidence Record Syntax (ERS) [RFC4998]",
      "zh-CHS": "o RFC 4998，证据记录语法（ERS）[RFC4998]"
    },
    {
      "indent": 3,
      "text": "o RFC 5035, Enhanced Security Services (ESS) [RFC5035]",
      "zh-CHS": "o RFC 5035，增强型安全服务（ESS）[RFC5035]"
    },
    {
      "indent": 3,
      "text": "o RFC 5083, CMS Authenticated-Enveloped-Data Content Type [RFC5083]",
      "zh-CHS": "o RFC 5083，CMS认证的信封数据内容类型[RFC5083]"
    },
    {
      "indent": 3,
      "text": "o RFC 5084, Using AES-CCM and AES-GCM Authenticated Encryption in CMS [RFC5084]",
      "zh-CHS": "o RFC 5084，在CMS中使用AES-CCM和AES-GCM认证加密[RFC5084]"
    },
    {
      "indent": 3,
      "text": "o RFC 5275, CMS Symmetric Key Management and Distribution [RFC5275]",
      "zh-CHS": "o RFC 5275，CMS对称密钥管理和分发[RFC5275]"
    },
    {
      "indent": 3,
      "text": "Note that some of the modules in this document get some of their definitions from places different than the modules in the original RFCs. The idea is that these modules, when combined with the modules in [RFC5912] can stand on their own and do not need to import definitions from anywhere else. Also note that the ASN.1 modules in this document have references in their text comments that need to be looked up in original RFCs, and that some of those references may have already been superseded by later RFCs.",
      "zh-CHS": "请注意，本文档中的一些模块从与原始RFC中的模块不同的地方获得了一些定义。其思想是，当这些模块与[RFC5912]中的模块组合时，它们可以独立存在，不需要从任何其他地方导入定义。还请注意，本文档中的ASN.1模块在其文本注释中有引用，需要在原始RFC中查找，其中一些引用可能已被以后的RFC取代。"
    },
    {
      "indent": 3,
      "text": "The document also includes a module of common definitions called \"AlgorithmInformation\". These definitions are used here and in [RFC5912].",
      "zh-CHS": "该文件还包括一个名为“算法信息”的通用定义模块。此处和[RFC5912]中使用了这些定义。"
    },
    {
      "indent": 3,
      "text": "Note that some of the modules here import definitions from the common definitions module, \"PKIX-CommonTypes\", in [RFC5912].",
      "zh-CHS": "请注意，此处的一些模块从[RFC5912]中的公共定义模块“PKIX CommonTypes”导入定义。"
    },
    {
      "indent": 0,
      "text": "1.1. Design Notes",
      "section_title": true,
      "zh-CHS": "1.1. 设计说明"
    },
    {
      "indent": 3,
      "text": "The modules in this document use the object model available in the 2002 ASN.1 documents to a great extent. Objects for each of the different algorithm types are defined. Also, all of the places where the 1988 ASN.1 syntax had ANY holes to allow for variable syntax now use objects.",
      "zh-CHS": "本文档中的模块在很大程度上使用了2002 ASN.1文档中提供的对象模型。定义了每种不同算法类型的对象。此外，1988年ASN.1语法中所有允许变量语法的地方现在都使用对象。"
    },
    {
      "indent": 3,
      "text": "Much like the way that the PKIX and S/MIME working groups use the prefix of id- for object identifiers, this document has also adopted a set of two-, three-, and four-letter prefixes to allow for quick identification of the type of an object based on its name. This allows, for example, the same back half of the name to be used for the different objects. Thus, \"id-sha1\" is the object identifier, while \"mda-sha1\" is the message digest object for \"sha1\".",
      "zh-CHS": "与PKIX和S/MIME工作组使用id前缀作为对象标识符的方式非常相似，本文档还采用了一组两个、三个和四个字母的前缀，以便根据对象的名称快速识别对象的类型。例如，这允许对不同的对象使用相同的名称后半部分。因此，“id-sha1”是对象标识符，“mda-sha1”是“sha1”的消息摘要对象。"
    },
    {
      "indent": 3,
      "text": "One or more object sets for the different types of algorithms are defined. A single consistent name for each different algorithm type is used. For example, an object set named PublicKeys contains the public keys defined in that module. If no public keys are defined, then the object set is not created. When importing these object sets into an ASN.1 module, one needs to be able to distinguish between the different object sets with the same name. This is done by using both the module name (as specified in the IMPORT statement) and the object set name. For example, in the module for RFC 5280:",
      "zh-CHS": "为不同类型的算法定义了一个或多个对象集。每个不同的算法类型使用一个统一的名称。例如，名为PublicKeys的对象集包含该模块中定义的公钥。如果未定义公钥，则不会创建对象集。将这些对象集导入ASN.1模块时，需要能够区分具有相同名称的不同对象集。这是通过使用模块名（如IMPORT语句中指定的）和对象集名来完成的。例如，在RFC 5280的模块中："
    },
    {
      "indent": 3,
      "text": "PublicKeys FROM PKIXAlgs-2008 { 1 3 6 1 5 5 7 0 995 }\nPublicKeys FROM PKIX1-PSS-OAEP-Algorithms { 1 3 6 1 5 5 7  33 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PublicKeyAlgorithms PUBLIC-KEY ::= { PKIXAlgs-2008.PublicKeys, ...,\n    PKIX1-PSS-OAEP-Algorithms.PublicKeys }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "2. ASN.1 Module AlgorithmInformation",
      "section_title": true,
      "zh-CHS": "2. ASN.1模块算法信息"
    },
    {
      "indent": 3,
      "text": "This section contains a module that is imported by many other modules in this document. Note that this module is also given in [RFC5912]. This module does not come from any existing RFC.",
      "zh-CHS": "本节包含本文档中许多其他模块导入的模块。请注意，[RFC5912]中也给出了该模块。此模块不来自任何现有的RFC。"
    },
    {
      "indent": 0,
      "text": "AlgorithmInformation-2009\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "DEFINITIONS EXPLICIT TAGS ::=\nBEGIN\nEXPORTS ALL;\nIMPORTS",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "KeyUsage\nFROM PKIX1Implicit-2009\n    {iso(1) identified-organization(3) dod(6) internet(1)\n    security(5) mechanisms(5) pkix(7) id-mod(0)\n    id-mod-pkix1-implicit-02(59)} ;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--  Suggested prefixes for algorithm objects are:\n--\n--  mda-   Message Digest Algorithms\n--  sa-    Signature Algorithms\n--  kta-   Key Transport Algorithms (Asymmetric)\n--  kaa-   Key Agreement Algorithms  (Asymmetric)\n--  kwa-   Key Wrap Algorithms (Symmetric)\n--  kda-   Key Derivation Algorithms\n--  maca-  Message Authentication Code Algorithms\n--  pk-    Public Key\n--  cea-   Content (symmetric) Encryption Algorithms\n--  cap-   S/MIME Capabilities",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "ParamOptions ::= ENUMERATED {\n   required,         -- Parameters MUST be encoded in structure\n   preferredPresent, -- Parameters SHOULD be encoded in structure\n   preferredAbsent,  -- Parameters SHOULD NOT be encoded in structure\n   absent,           -- Parameters MUST NOT be encoded in structure\n   inheritable,      -- Parameters are inherited if not present\n   optional,         -- Parameters MAY be encoded in the structure\n   ...\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--  DIGEST-ALGORITHM\n--\n--  Describes the basic information for ASN.1 and a digest\n--      algorithm.\n--\n--  &id - contains the OID identifying the digest algorithm\n--  &Params - if present, contains the type for the algorithm\n--               parameters; if absent, implies no parameters\n--  &paramPresence - parameter presence requirement\n--\n--  Additional information such as the length of the hash could have\n--      been encoded.  Without a clear understanding of what information\n--      is needed by applications, such extraneous information was not\n--      considered to be of sufficient importance.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--\n--  Example:\n--  mda-sha1 DIGEST-ALGORITHM ::= {\n--      IDENTIFIER id-sha1\n--      PARAMS TYPE NULL ARE preferredAbsent\n--  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "DIGEST-ALGORITHM ::= CLASS {\n    &id                 OBJECT IDENTIFIER UNIQUE,\n    &Params             OPTIONAL,\n    &paramPresence      ParamOptions DEFAULT absent\n} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence ]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--  SIGNATURE-ALGORITHM\n--\n--  Describes the basic properties of a signature algorithm\n--\n--  &id - contains the OID identifying the signature algorithm\n--  &Value - contains a type definition for the value structure of\n--              the signature; if absent, implies that no ASN.1\n--              encoding is performed on the value\n--  &Params - if present, contains the type for the algorithm\n--               parameters; if absent, implies no parameters\n--  &paramPresence - parameter presence requirement\n--  &HashSet - The set of hash algorithms used with this\n--                  signature algorithm\n--  &PublicKeySet - the set of public key algorithms for this\n--                  signature algorithm\n--  &smimeCaps - contains the object describing how the S/MIME\n--              capabilities are presented.\n--\n--  Example:\n--  sig-RSA-PSS SIGNATURE-ALGORITHM ::= {\n--     IDENTIFIER id-RSASSA-PSS\n--     PARAMS TYPE RSASSA-PSS-params ARE required\n--     HASHES { mda-sha1 | mda-md5, ... }\n--     PUBLIC-KEYS { pk-rsa | pk-rsa-pss }\n-- }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "SIGNATURE-ALGORITHM ::= CLASS {\n    &id             OBJECT IDENTIFIER UNIQUE,\n    &Value          OPTIONAL,\n    &Params         OPTIONAL,\n    &paramPresence  ParamOptions DEFAULT absent,\n    &HashSet        DIGEST-ALGORITHM OPTIONAL,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "    &PublicKeySet   PUBLIC-KEY OPTIONAL,\n    &smimeCaps      SMIME-CAPS OPTIONAL\n} WITH SYNTAX {\n    IDENTIFIER &id\n    [VALUE &Value]\n    [PARAMS [TYPE &Params] ARE &paramPresence ]\n    [HASHES &HashSet]\n    [PUBLIC-KEYS &PublicKeySet]\n    [SMIME-CAPS &smimeCaps]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--  PUBLIC-KEY\n--\n--  Describes the basic properties of a public key\n--\n--  &id - contains the OID identifying the public key\n--  &KeyValue - contains the type for the key value\n--  &Params - if present, contains the type for the algorithm\n--               parameters; if absent, implies no parameters\n--  &paramPresence - parameter presence requirement\n--  &keyUsage - contains the set of bits that are legal for this\n--              key type.  Note that it does not make any statement\n--              about how bits may be paired.\n--  &PrivateKey - contains a type structure for encoding the private\n--              key information.\n--\n--  Example:\n--  pk-rsa-pss PUBLIC-KEY ::= {\n--      IDENTIFIER id-RSASSA-PSS\n--      KEY RSAPublicKey\n--      PARAMS TYPE RSASSA-PSS-params ARE optional\n--      CERT-KEY-USAGE { .... }\n--  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "PUBLIC-KEY ::= CLASS {\n    &id             OBJECT IDENTIFIER UNIQUE,\n    &KeyValue       OPTIONAL,\n    &Params         OPTIONAL,\n    &paramPresence  ParamOptions DEFAULT absent,\n    &keyUsage       KeyUsage OPTIONAL,\n    &PrivateKey     OPTIONAL\n} WITH SYNTAX {\n    IDENTIFIER &id\n    [KEY &KeyValue]\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n    [CERT-KEY-USAGE &keyUsage]\n    [PRIVATE-KEY &PrivateKey]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--  KEY-TRANSPORT\n--\n--  Describes the basic properties of a key transport algorithm\n--\n--  &id - contains the OID identifying the key transport algorithm\n--  &Params - if present, contains the type for the algorithm\n--               parameters; if absent, implies no parameters\n--  &paramPresence - parameter presence requirement\n--  &PublicKeySet - specifies which public keys are used with\n--                       this algorithm\n--  &smimeCaps - contains the object describing how the S/MIME\n--              capabilities are presented.\n--\n--  Example:\n--  kta-rsaTransport KEY-TRANSPORT ::= {\n--      IDENTIFIER &id\n--      PARAMS TYPE NULL ARE required\n--      PUBLIC-KEYS  { pk-rsa | pk-rsa-pss }\n--  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "KEY-TRANSPORT ::= CLASS {\n    &id                 OBJECT IDENTIFIER UNIQUE,\n    &Params             OPTIONAL,\n    &paramPresence      ParamOptions DEFAULT absent,\n    &PublicKeySet       PUBLIC-KEY OPTIONAL,\n    &smimeCaps          SMIME-CAPS OPTIONAL\n} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n    [PUBLIC-KEYS &PublicKeySet]\n    [SMIME-CAPS &smimeCaps]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--  KEY-AGREE\n--\n--  Describes the basic properties of a key agreement algorithm\n--\n--  &id - contains the OID identifying the key agreement algorithm\n--  &Params - if present, contains the type for the algorithm\n--               parameters; if absent, implies no parameters\n--  &paramPresence - parameter presence requirement\n--  &PublicKeySet - specifies which public keys are used with\n--                        this algorithm\n--  &Ukm - type of user keying material used\n--  &ukmPresence - specifies the requirements to define the UKM field\n--  &smimeCaps - contains the object describing how the S/MIME\n--              capabilities are presented.\n--",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--  Example:\n--  kaa-dh-static-ephemeral KEY-AGREE ::= {\n--      IDENTIFIER id-alg-ESDH\n--      PARAMS TYPE KeyWrapAlgorithm ARE required\n--      PUBLIC-KEYS {\n--         {IDENTIFIER dh-public-number KEY DHPublicKey\n--            PARAMS TYPE DHDomainParameters ARE inheritable }\n--      }\n--      - - UKM should be present but is not separately ASN.1-encoded\n--      UKM ARE preferredPresent\n--  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "KEY-AGREE ::= CLASS {\n    &id             OBJECT IDENTIFIER UNIQUE,\n    &Params         OPTIONAL,\n    &paramPresence  ParamOptions DEFAULT absent,\n    &PublicKeySet   PUBLIC-KEY OPTIONAL,\n    &Ukm            OPTIONAL,\n    &ukmPresence    ParamOptions DEFAULT absent,\n    &smimeCaps      SMIME-CAPS OPTIONAL\n} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n    [PUBLIC-KEYS &PublicKeySet]\n    [UKM [TYPE &Ukm] ARE &ukmPresence]\n    [SMIME-CAPS &smimeCaps]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--  KEY-WRAP\n--\n--  Describes the basic properties of a key wrap algorithm\n--\n--  &id - contains the OID identifying the key wrap algorithm\n--  &Params - if present, contains the type for the algorithm\n--               parameters; if absent, implies no parameters\n--  &paramPresence - parameter presence requirement\n--  &smimeCaps - contains the object describing how the S/MIME\n--              capabilities are presented.\n--\n--  Example:\n--  kwa-cms3DESwrap KEY-WRAP ::= {\n--      IDENTIFIER id-alg-CMS3DESwrap\n--      PARAMS TYPE NULL ARE required\n--  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "KEY-WRAP ::= CLASS {\n    &id                OBJECT IDENTIFIER UNIQUE,\n    &Params            OPTIONAL,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "    &paramPresence     ParamOptions DEFAULT absent,\n    &smimeCaps         SMIME-CAPS OPTIONAL\n} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n    [SMIME-CAPS &smimeCaps]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--  KEY-DERIVATION\n--\n--  Describes the basic properties of a key derivation algorithm\n--\n--  &id - contains the OID identifying the key derivation algorithm\n--  &Params - if present, contains the type for the algorithm\n--               parameters; if absent, implies no parameters\n--  &paramPresence - parameter presence requirement\n--  &smimeCaps - contains the object describing how the S/MIME\n--              capabilities are presented.\n--\n--  Example:\n--  kda-pbkdf2 KEY-DERIVATION ::= {\n--      IDENTIFIER id-PBKDF2\n--      PARAMS TYPE PBKDF2-params ARE required\n--  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "KEY-DERIVATION ::= CLASS {\n    &id                OBJECT IDENTIFIER UNIQUE,\n    &Params            OPTIONAL,\n    &paramPresence     ParamOptions DEFAULT absent,\n    &smimeCaps         SMIME-CAPS OPTIONAL\n} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n    [SMIME-CAPS &smimeCaps]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- MAC-ALGORITHM\n--\n--  Describes the basic properties of a message\n--      authentication code (MAC) algorithm\n--\n--  &id - contains the OID identifying the MAC algorithm\n--  &Params - if present, contains the type for the algorithm\n--               parameters; if absent, implies no parameters\n--  &paramPresence - parameter presence requirement\n--  &keyed - MAC algorithm is a keyed MAC algorithm\n--  &smimeCaps - contains the object describing how the S/MIME\n--              capabilities are presented.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--\n--  Some parameters that perhaps should have been added would be\n--  fields with the minimum and maximum MAC lengths for\n--  those MAC algorithms that allow truncations.\n--\n--  Example:\n--  maca-hmac-sha1 MAC-ALGORITHM ::= {\n--      IDENTIFIER hMAC-SHA1\n--      PARAMS TYPE NULL ARE preferredAbsent\n--      IS KEYED MAC TRUE\n--      SMIME-CAPS {IDENTIFIED BY hMAC-SHA1}\n--  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "MAC-ALGORITHM ::= CLASS {\n    &id                 OBJECT IDENTIFIER UNIQUE,\n    &Params             OPTIONAL,\n    &paramPresence      ParamOptions DEFAULT absent,\n    &keyed              BOOLEAN,\n    &smimeCaps          SMIME-CAPS OPTIONAL\n} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n    IS-KEYED-MAC &keyed\n    [SMIME-CAPS &smimeCaps]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--  CONTENT-ENCRYPTION\n--\n--  Describes the basic properties of a content encryption\n--      algorithm\n--\n--  &id - contains the OID identifying the content\n--        encryption algorithm\n--  &Params - if present, contains the type for the algorithm\n--               parameters; if absent, implies no parameters\n--  &paramPresence - parameter presence requirement\n--  &smimeCaps - contains the object describing how the S/MIME\n--              capabilities are presented.\n--\n--  Example:\n--  cea-3DES-cbc CONTENT-ENCRYPTION ::= {\n--      IDENTIFIER des-ede3-cbc\n--      PARAMS TYPE IV ARE required\n--      SMIME-CAPS { IDENTIFIED BY des-ede3-cbc }\n--  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CONTENT-ENCRYPTION ::= CLASS {\n    &id                OBJECT IDENTIFIER UNIQUE,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "    &Params            OPTIONAL,\n    &paramPresence     ParamOptions DEFAULT absent,\n    &smimeCaps         SMIME-CAPS OPTIONAL\n} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n    [SMIME-CAPS &smimeCaps]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- ALGORITHM\n--\n-- Describes a generic algorithm identifier\n--\n--  &id - contains the OID identifying the algorithm\n--  &Params - if present, contains the type for the algorithm\n--               parameters; if absent, implies no parameters\n--  &paramPresence - parameter presence requirement\n--  &smimeCaps - contains the object describing how the S/MIME\n--              capabilities are presented.\n--\n--  This would be used for cases where an algorithm of an unknown\n--  type is used.  In general however, one should either define\n--  a more complete algorithm structure (such as the one above)\n--  or use the TYPE-IDENTIFIER class.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "ALGORITHM ::= CLASS {\n    &id OBJECT   IDENTIFIER UNIQUE,\n    &Params      OPTIONAL,\n    &paramPresence ParamOptions DEFAULT absent,\n    &smimeCaps   SMIME-CAPS OPTIONAL\n} WITH SYNTAX {\n    IDENTIFIER &id\n    [PARAMS [TYPE &Params] ARE &paramPresence]\n    [SMIME-CAPS &smimeCaps]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- AlgorithmIdentifier\n--\n-- Provides the generic structure that is used to encode algorithm\n--    identification and the parameters associated with the\n--    algorithm.\n--\n-- The first parameter represents the type of the algorithm being\n--    used.\n-- The second parameter represents an object set containing the\n--    algorithms that may occur in this situation.\n--    The initial list of required algorithms should occur to the\n--      left of an extension marker; all other algorithms should",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--      occur to the right of an extension marker.\n--\n-- The object class ALGORITHM can be used for generic unspecified\n--     items.\n-- If new ALGORITHM classes are defined, the fields &id and &Params\n--     need to be present as fields in the object in order to use\n--     this parameterized type.\n--\n-- Example:\n--    SignatureAlgorithmIdentifier ::=\n--       AlgorithmIdentifier{SIGNATURE-ALGORITHM, {SignatureAlgSet}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "AlgorithmIdentifier{ALGORITHM-TYPE, ALGORITHM-TYPE:AlgorithmSet} ::=\n        SEQUENCE {\n            algorithm   ALGORITHM-TYPE.&id({AlgorithmSet}),\n            parameters  ALGORITHM-TYPE.\n                   &Params({AlgorithmSet}{@algorithm}) OPTIONAL\n        }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--  S/MIME Capabilities\n--\n--  We have moved the SMIME-CAPS from the module for RFC 3851 to here\n--  because it is used in RFC 4262 (X.509 Certificate Extension for\n--  S/MIME Capabilities)\n--\n--\n--  This class is used to represent an S/MIME capability.  S/MIME\n--  capabilities are used to represent what algorithm capabilities\n--  an individual has.  The classic example was the content encryption\n--  algorithm RC2 where the algorithm id and the RC2 key lengths\n--  supported needed to be advertised, but the IV used is not fixed.\n--  Thus, for RC2 we used\n--\n--  cap-RC2CBC SMIME-CAPS ::= {\n--      TYPE INTEGER ( 40 | 128 ) IDENTIFIED BY rc2-cbc }\n--\n--  where 40 and 128 represent the RC2 key length in number of bits.\n--\n--  Another example where information needs to be shown is for\n--  RSA-OAEP where only specific hash functions or mask generation\n--  functions are supported, but the saltLength is specified by the\n--  sender and not the recipient.  In this case, one can either\n--  generate a number of capability items,\n--  or a new S/MIME capability type could be generated where\n--  multiple hash functions could be specified.\n--\n--\n--  SMIME-CAP",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "--\n--  This class is used to associate the type that describes the\n--  capabilities with the object identifier.\n--",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "SMIME-CAPS ::= CLASS {\n    &id         OBJECT IDENTIFIER UNIQUE,\n    &Type       OPTIONAL\n}\nWITH SYNTAX { [TYPE &Type] IDENTIFIED BY &id }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- -- Generic type - this is used for defining values. --",
      "zh-CHS": "----泛型类型-用于定义值--"
    },
    {
      "indent": 0,
      "text": "-- Define a single S/MIME capability encoding",
      "zh-CHS": "--定义单个S/MIME功能编码"
    },
    {
      "indent": 0,
      "text": "SMIMECapability{SMIME-CAPS:CapabilitySet} ::= SEQUENCE {\n    capabilityID        SMIME-CAPS.&id({CapabilitySet}),\n    parameters          SMIME-CAPS.&Type({CapabilitySet}\n                            {@capabilityID}) OPTIONAL\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "-- Define a sequence of S/MIME capability values",
      "zh-CHS": "--定义一系列S/MIME功能值"
    },
    {
      "indent": 0,
      "text": "SMIMECapabilities { SMIME-CAPS:CapabilitySet } ::=\n        SEQUENCE SIZE (1..MAX) OF SMIMECapability{{CapabilitySet} }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "3. ASN.1 Module for RFC 3370",
      "section_title": true,
      "zh-CHS": "3. RFC 3370的ASN.1模块"
    },
    {
      "indent": 3,
      "text": "CryptographicMessageSyntaxAlgorithms-2009\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-cmsalg-2001-02(37) }\nDEFINITIONS IMPLICIT TAGS ::=\nBEGIN\nIMPORTS",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "ParamOptions, DIGEST-ALGORITHM, SIGNATURE-ALGORITHM,\n   PUBLIC-KEY, KEY-DERIVATION, KEY-WRAP, MAC-ALGORITHM,\n   KEY-AGREE, KEY-TRANSPORT, CONTENT-ENCRYPTION, ALGORITHM,\n   AlgorithmIdentifier{}, SMIME-CAPS\nFROM AlgorithmInformation-2009\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "pk-rsa, pk-dh, pk-dsa, rsaEncryption, DHPublicKey, dhpublicnumber\nFROM PKIXAlgs-2009\n     {iso(1) identified-organization(3) dod(6)\n     internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-mod-pkix1-algorithms2008-02(56)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "cap-RC2CBC\nFROM SecureMimeMessageV3dot1-2009\n     {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n     smime(16) modules(0) id-mod-msg-v3dot1-02(39)};",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- 2. Hash algorithms in this document",
      "zh-CHS": "-- 2. 本文档中的哈希算法"
    },
    {
      "indent": 3,
      "text": "MessageDigestAlgs DIGEST-ALGORITHM ::= {\n--   mda-md5 | mda-sha1,\n     ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- 3. Signature algorithms in this document",
      "zh-CHS": "-- 3. 本文档中的签名算法"
    },
    {
      "indent": 3,
      "text": "SignatureAlgs SIGNATURE-ALGORITHM ::= {\n--  See RFC 3279\n--  sa-dsaWithSHA1 |  sa-rsaWithMD5 | sa-rsaWithSHA1,\n    ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "--  4.  Key Management Algorithms\n--  4.1 Key Agreement Algorithms",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "KeyAgreementAlgs KEY-AGREE ::= { kaa-esdh | kaa-ssdh, ...}\nKeyAgreePublicKeys PUBLIC-KEY ::= { pk-dh, ...}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- 4.2 Key Transport Algorithms",
      "zh-CHS": "--4.2关键传输算法"
    },
    {
      "indent": 3,
      "text": "KeyTransportAlgs KEY-TRANSPORT ::= { kt-rsa, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- 4.3 Symmetric Key-Encryption Key Algorithms",
      "zh-CHS": "--4.3对称密钥加密密钥算法"
    },
    {
      "indent": 3,
      "text": "KeyWrapAlgs KEY-WRAP ::= { kwa-3DESWrap | kwa-RC2Wrap, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- 4.4 Key Derivation Algorithms",
      "zh-CHS": "--4.4密钥派生算法"
    },
    {
      "indent": 3,
      "text": "KeyDerivationAlgs KEY-DERIVATION ::= { kda-PBKDF2, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- 5. Content Encryption Algorithms",
      "zh-CHS": "-- 5. 内容加密算法"
    },
    {
      "indent": 3,
      "text": "ContentEncryptionAlgs CONTENT-ENCRYPTION ::=\n    { cea-3DES-cbc | cea-RC2-cbc, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- 6. Message Authentication Code Algorithms",
      "zh-CHS": "-- 6. 消息认证码算法"
    },
    {
      "indent": 3,
      "text": "MessageAuthAlgs MAC-ALGORITHM ::= { maca-hMAC-SHA1, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- S/MIME Capabilities for these items",
      "zh-CHS": "--这些项目的S/MIME功能"
    },
    {
      "indent": 3,
      "text": "SMimeCaps SMIME-CAPS ::= {\n    kaa-esdh.&smimeCaps         |\n    kaa-ssdh.&smimeCaps         |\n    kt-rsa.&smimeCaps           |\n    kwa-3DESWrap.&smimeCaps     |\n    kwa-RC2Wrap.&smimeCaps      |\n    cea-3DES-cbc.&smimeCaps     |\n    cea-RC2-cbc.&smimeCaps      |\n    maca-hMAC-SHA1.&smimeCaps,\n    ...}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- -- --",
      "zh-CHS": "-- -- --"
    },
    {
      "indent": 3,
      "text": "-- Algorithm Identifiers",
      "zh-CHS": "--算法标识符"
    },
    {
      "indent": 3,
      "text": "-- rsaEncryption OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n--    us(840) rsadsi(113549) pkcs(1) pkcs-1(1) 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "id-alg-ESDH OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)\n   rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) alg(3) 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "id-alg-SSDH OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)\n   rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) alg(3) 10 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "id-alg-CMS3DESwrap OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) alg(3) 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "id-alg-CMSRC2wrap OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) alg(3) 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "des-ede3-cbc OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) encryptionAlgorithm(3) 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "rc2-cbc OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)\n   rsadsi(113549) encryptionAlgorithm(3) 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "hMAC-SHA1 OBJECT IDENTIFIER ::= { iso(1) identified-organization(3)\n   dod(6) internet(1) security(5) mechanisms(5) 8 1 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "id-PBKDF2 OBJECT IDENTIFIER ::= { iso(1) member-body(2) us(840)\n   rsadsi(113549) pkcs(1) pkcs-5(5) 12 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- Algorithm Identifier Parameter Types",
      "zh-CHS": "--算法标识符参数类型"
    },
    {
      "indent": 3,
      "text": "KeyWrapAlgorithm ::=\n    AlgorithmIdentifier {KEY-WRAP, {KeyWrapAlgs }}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "RC2wrapParameter ::= RC2ParameterVersion\nRC2ParameterVersion ::= INTEGER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "CBCParameter ::= IV",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "IV ::= OCTET STRING  -- exactly 8 octets",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "RC2CBCParameter ::= SEQUENCE {\n    rc2ParameterVersion INTEGER (1..256),\n    iv OCTET STRING  }  -- exactly 8 octets",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "maca-hMAC-SHA1 MAC-ALGORITHM ::= {\n    IDENTIFIER hMAC-SHA1\n    PARAMS TYPE NULL ARE preferredAbsent\n    IS-KEYED-MAC TRUE\n    SMIME-CAPS {IDENTIFIED BY hMAC-SHA1}\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PBKDF2-PRFsAlgorithmIdentifier ::= AlgorithmIdentifier{ ALGORITHM,\n                                       {PBKDF2-PRFs} }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "alg-hMAC-SHA1 ALGORITHM ::=\n    { IDENTIFIER hMAC-SHA1 PARAMS TYPE NULL ARE required }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PBKDF2-PRFs ALGORITHM ::= { alg-hMAC-SHA1, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PBKDF2-SaltSources ALGORITHM ::= { ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PBKDF2-SaltSourcesAlgorithmIdentifier ::=\n    AlgorithmIdentifier {ALGORITHM, {PBKDF2-SaltSources}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "defaultPBKDF2 PBKDF2-PRFsAlgorithmIdentifier ::=\n    { algorithm alg-hMAC-SHA1.&id, parameters NULL:NULL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PBKDF2-params ::= SEQUENCE {\n    salt CHOICE {\n        specified OCTET STRING,\n        otherSource PBKDF2-SaltSourcesAlgorithmIdentifier },\n    iterationCount INTEGER (1..MAX),\n    keyLength INTEGER (1..MAX) OPTIONAL,\n    prf PBKDF2-PRFsAlgorithmIdentifier DEFAULT\n            defaultPBKDF2\n        }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "--\n--  This object is included for completeness.  It should not be used\n--      for encoding of signatures, but was sometimes used in older\n--      versions of CMS for encoding of RSA signatures.\n--\n--\n-- sa-rsa SIGNATURE-ALGORITHM ::= {\n--         IDENTIFIER rsaEncryption\n--         - - value is not ASN.1 encoded\n--         PARAMS TYPE NULL ARE required\n--         HASHES {mda-sha1 | mda-md5, ...}\n--         PUBLIC-KEYS { pk-rsa}\n-- }\n--\n-- No ASN.1 encoding is applied to the signature value\n--    for these items",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "kaa-esdh KEY-AGREE ::= {\n     IDENTIFIER id-alg-ESDH\n     PARAMS TYPE KeyWrapAlgorithm ARE required\n     PUBLIC-KEYS { pk-dh }\n     -- UKM is not ASN.1 encoded\n     UKM ARE optional\n     SMIME-CAPS {TYPE KeyWrapAlgorithm IDENTIFIED BY id-alg-ESDH}\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "kaa-ssdh KEY-AGREE ::= {\n     IDENTIFIER id-alg-SSDH\n     PARAMS TYPE KeyWrapAlgorithm ARE required\n     PUBLIC-KEYS {pk-dh}\n     -- UKM is not ASN.1 encoded\n     UKM ARE optional\n     SMIME-CAPS {TYPE KeyWrapAlgorithm IDENTIFIED BY id-alg-SSDH}\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "dh-public-number OBJECT IDENTIFIER ::= dhpublicnumber",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "pk-originator-dh PUBLIC-KEY ::= {\n    IDENTIFIER dh-public-number\n    KEY DHPublicKey\n    PARAMS ARE absent\n    CERT-KEY-USAGE {keyAgreement, encipherOnly, decipherOnly}\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "kwa-3DESWrap KEY-WRAP ::= {\n     IDENTIFIER id-alg-CMS3DESwrap\n     PARAMS TYPE NULL ARE required\n     SMIME-CAPS {IDENTIFIED BY id-alg-CMS3DESwrap}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "}",
      "zh-CHS": "}"
    },
    {
      "indent": 3,
      "text": "kwa-RC2Wrap KEY-WRAP ::= {\n     IDENTIFIER id-alg-CMSRC2wrap\n     PARAMS TYPE RC2wrapParameter ARE required\n     SMIME-CAPS { IDENTIFIED BY id-alg-CMSRC2wrap }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "kda-PBKDF2 KEY-DERIVATION ::= {\n    IDENTIFIER id-PBKDF2\n    PARAMS TYPE PBKDF2-params ARE required\n    -- No S/MIME caps defined\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "cea-3DES-cbc CONTENT-ENCRYPTION ::= {\n    IDENTIFIER des-ede3-cbc\n    PARAMS TYPE IV ARE required\n    SMIME-CAPS { IDENTIFIED BY des-ede3-cbc }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "cea-RC2-cbc CONTENT-ENCRYPTION ::= {\n    IDENTIFIER rc2-cbc\n    PARAMS TYPE RC2CBCParameter ARE required\n    SMIME-CAPS cap-RC2CBC\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "kt-rsa KEY-TRANSPORT ::= {\n    IDENTIFIER rsaEncryption\n    PARAMS TYPE NULL ARE required\n    PUBLIC-KEYS { pk-rsa }\n    SMIME-CAPS {IDENTIFIED BY rsaEncryption}\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- S/MIME Capabilities - most have no label.",
      "zh-CHS": "--S/MIME功能—大多数都没有标签。"
    },
    {
      "indent": 3,
      "text": "cap-3DESwrap SMIME-CAPS ::= { IDENTIFIED BY id-alg-CMS3DESwrap }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "4. ASN.1 Module for RFC 3565",
      "section_title": true,
      "zh-CHS": "4. RFC 3565的ASN.1模块"
    },
    {
      "indent": 3,
      "text": "CMSAesRsaesOaep-2009 {iso(1) member-body(2) us(840) rsadsi(113549)\n    pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-aes-02(38)}\nDEFINITIONS IMPLICIT TAGS ::=\nBEGIN\nIMPORTS",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "CONTENT-ENCRYPTION, KEY-WRAP, SMIME-CAPS\nFROM AlgorithmInformation-2009\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58)};",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "AES-ContentEncryption CONTENT-ENCRYPTION ::= {\n    cea-aes128-cbc | cea-aes192-cbc | cea-aes256-cbc, ...\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "AES-KeyWrap KEY-WRAP ::= {\n    kwa-aes128-wrap | kwa-aes192-wrap | kwa-aes256-wrap, ...\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "SMimeCaps SMIME-CAPS ::= {\n   cea-aes128-cbc.&smimeCaps |\n   cea-aes192-cbc.&smimeCaps |\n   cea-aes256-cbc.&smimeCaps |\n   kwa-aes128-wrap.&smimeCaps |\n   kwa-aes192-wrap.&smimeCaps |\n   kwa-aes256-wrap.&smimeCaps, ...\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- AES information object identifiers --",
      "zh-CHS": "--AES信息对象标识符--"
    },
    {
      "indent": 3,
      "text": "aes OBJECT IDENTIFIER ::=\n    { joint-iso-itu-t(2) country(16) us(840) organization(1) gov(101)\n    csor(3) nistAlgorithms(4)  1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- AES using CBC mode for key sizes of 128, 192, 256",
      "zh-CHS": "--AES使用CBC模式，密钥大小为128、192、256"
    },
    {
      "indent": 3,
      "text": "cea-aes128-cbc CONTENT-ENCRYPTION ::= {\n    IDENTIFIER id-aes128-CBC\n    PARAMS TYPE AES-IV ARE required\n    SMIME-CAPS { IDENTIFIED BY id-aes128-CBC }\n}\nid-aes128-CBC OBJECT IDENTIFIER ::= { aes 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "cea-aes192-cbc CONTENT-ENCRYPTION ::= {\n    IDENTIFIER id-aes192-CBC",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "    PARAMS TYPE AES-IV ARE required\n    SMIME-CAPS { IDENTIFIED BY id-aes192-CBC }\n}\nid-aes192-CBC OBJECT IDENTIFIER ::= { aes 22 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "cea-aes256-cbc CONTENT-ENCRYPTION ::= {\n    IDENTIFIER id-aes256-CBC\n    PARAMS TYPE AES-IV ARE required\n    SMIME-CAPS { IDENTIFIED BY id-aes256-CBC }\n}\nid-aes256-CBC OBJECT IDENTIFIER ::= { aes 42 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- AES-IV is the parameter for all the above object identifiers.",
      "zh-CHS": "--AES-IV是上述所有对象标识符的参数。"
    },
    {
      "indent": 3,
      "text": "AES-IV ::= OCTET STRING (SIZE(16))",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "-- AES Key Wrap Algorithm Identifiers - Parameter is absent",
      "zh-CHS": "--AES密钥包裹算法标识符-缺少参数"
    },
    {
      "indent": 3,
      "text": "kwa-aes128-wrap KEY-WRAP ::= {\n    IDENTIFIER id-aes128-wrap\n    PARAMS ARE absent\n    SMIME-CAPS { IDENTIFIED BY id-aes128-wrap }\n}\nid-aes128-wrap OBJECT IDENTIFIER ::= { aes 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "kwa-aes192-wrap KEY-WRAP ::= {\n    IDENTIFIER id-aes192-wrap\n    PARAMS ARE absent\n    SMIME-CAPS { IDENTIFIED BY id-aes192-wrap }\n}\nid-aes192-wrap OBJECT IDENTIFIER ::= { aes 25 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "kwa-aes256-wrap KEY-WRAP ::= {\n    IDENTIFIER id-aes256-wrap\n    PARAMS ARE absent\n    SMIME-CAPS { IDENTIFIED BY id-aes256-wrap }\n}\nid-aes256-wrap OBJECT IDENTIFIER ::= { aes 45 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "5. ASN.1 Module for RFC 3851",
      "section_title": true,
      "zh-CHS": "5. RFC 3851的ASN.1模块"
    },
    {
      "indent": 1,
      "text": "SecureMimeMessageV3dot1-2009\n      {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) modules(0) id-mod-msg-v3dot1-02(39)}\nDEFINITIONS IMPLICIT TAGS ::=\nBEGIN\nIMPORTS",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "SMIME-CAPS, SMIMECapabilities{}\nFROM AlgorithmInformation-2009\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "ATTRIBUTE\nFROM PKIX-CommonTypes-2009\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "SubjectKeyIdentifier, IssuerAndSerialNumber, RecipientKeyIdentifier\nFROM CryptographicMessageSyntax-2009\n    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-cms-2004-02(41)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "rc2-cbc, SMimeCaps\nFROM CryptographicMessageSyntaxAlgorithms-2009\n    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-cmsalg-2001-02(37)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "SMimeCaps\nFROM PKIXAlgs-2009\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-pkix1-algorithms2008-02(56)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "SMimeCaps\nFROM PKIX1-PSS-OAEP-Algorithms-2009\n     {iso(1) identified-organization(3) dod(6) internet(1)\n     security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-mod-pkix1-rsa-pkalgs-02(54)};",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "SMimeAttributeSet ATTRIBUTE ::=\n    { aa-smimeCapabilities | aa-encrypKeyPref, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "--  id-aa is the arc with all new authenticated and unauthenticated\n--  attributes produced by the S/MIME Working Group",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "id-aa OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) usa(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) attributes(2)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "-- The S/MIME Capabilities attribute provides a method of broadcasting\n-- the symmetric capabilities understood.  Algorithms SHOULD be ordered\n-- by preference and grouped by type",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "aa-smimeCapabilities ATTRIBUTE ::=\n    { TYPE SMIMECapabilities{{SMimeCapsSet}} IDENTIFIED BY\n          smimeCapabilities }\nsmimeCapabilities OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    15 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "SMimeCapsSet SMIME-CAPS ::=\n    { cap-preferBinaryInside | cap-RC2CBC |\n    PKIXAlgs-2009.SMimeCaps |\n    CryptographicMessageSyntaxAlgorithms-2009.SMimeCaps |\n    PKIX1-PSS-OAEP-Algorithms-2009.SMimeCaps, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "-- Encryption Key Preference provides a method of broadcasting the\n-- preferred encryption certificate.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "aa-encrypKeyPref ATTRIBUTE ::=\n    { TYPE SMIMEEncryptionKeyPreference\n        IDENTIFIED BY id-aa-encrypKeyPref }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "id-aa-encrypKeyPref OBJECT IDENTIFIER ::= {id-aa 11}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "SMIMEEncryptionKeyPreference ::= CHOICE {\n   issuerAndSerialNumber   [0] IssuerAndSerialNumber,\n   receipentKeyId          [1] RecipientKeyIdentifier,\n   subjectAltKeyIdentifier [2] SubjectKeyIdentifier\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "-- receipentKeyId is spelt incorrectly, but kept for historical\n-- reasons.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "id-smime OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs9(9) 16 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "id-cap  OBJECT IDENTIFIER ::= { id-smime 11 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "-- The preferBinaryInside indicates an ability to receive messages\n-- with binary encoding inside the CMS wrapper",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "cap-preferBinaryInside SMIME-CAPS ::=",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "{ -- No value -- IDENTIFIED BY id-cap-preferBinaryInside }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "id-cap-preferBinaryInside  OBJECT IDENTIFIER ::= { id-cap 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "-- The following list OIDs to be used with S/MIME V3",
      "zh-CHS": "--下面列出了与S/MIME V3一起使用的OID"
    },
    {
      "indent": 1,
      "text": "-- Signature Algorithms Not Found in [RFC3370]\n--\n-- md2WithRSAEncryption OBJECT IDENTIFIER ::=\n--    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-1(1)\n--     2}\n--\n-- Other Signed Attributes\n--\n-- signingTime OBJECT IDENTIFIER ::=\n--    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n--     5}\n--    See [RFC5652] for a description of how to encode the attribute\n--    value.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "cap-RC2CBC SMIME-CAPS ::=\n    { TYPE SMIMECapabilitiesParametersForRC2CBC\n        IDENTIFIED BY rc2-cbc}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "SMIMECapabilitiesParametersForRC2CBC ::= INTEGER (40 | 128, ...)\n--    (RC2 Key Length (number of bits))",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "6. ASN.1 Module for RFC 3852",
      "section_title": true,
      "zh-CHS": "6. RFC 3852的ASN.1模块"
    },
    {
      "indent": 3,
      "text": "This module has an ASN.1 idiom for noting in which version of CMS changes were made from the original PKCS #7; that idiom is \"[[v:\", where \"v\" is an integer. For example:",
      "zh-CHS": "本模块有一个ASN.1习惯用法，用于说明CMS的哪个版本是从原始PKCS#7修改而来的；这个成语是“[[v:”，其中“v”是一个整数。例如："
    },
    {
      "indent": 3,
      "text": "RevocationInfoChoice ::= CHOICE {\n    crl CertificateList,\n    ...,\n    [[5: other [1] IMPLICIT OtherRevocationInfoFormat ]] }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Similarly, this module adds the ASN.1 idiom for extensibility (the \"...,\") in all places that have been extended in the past. See the example above.",
      "zh-CHS": "类似地，这个模块在过去扩展过的所有地方都添加了ASN.1的可扩展性（即“…”）。请参见上面的示例。"
    },
    {
      "indent": 2,
      "text": "CryptographicMessageSyntax-2009\n    { iso(1) member-body(2) us(840) rsadsi(113549)\n    pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-2004-02(41) }\nDEFINITIONS IMPLICIT TAGS ::=",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "BEGIN IMPORTS",
      "zh-CHS": "开始进口"
    },
    {
      "indent": 2,
      "text": "ParamOptions, DIGEST-ALGORITHM, SIGNATURE-ALGORITHM,\n    PUBLIC-KEY, KEY-DERIVATION, KEY-WRAP, MAC-ALGORITHM,\n    KEY-AGREE, KEY-TRANSPORT, CONTENT-ENCRYPTION, ALGORITHM,\n    AlgorithmIdentifier\nFROM AlgorithmInformation-2009\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58)}\nSignatureAlgs, MessageDigestAlgs, KeyAgreementAlgs,\n    MessageAuthAlgs, KeyWrapAlgs, ContentEncryptionAlgs,\n    KeyTransportAlgs, KeyDerivationAlgs, KeyAgreePublicKeys\nFROM CryptographicMessageSyntaxAlgorithms-2009\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-cmsalg-2001-02(37) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Certificate, CertificateList, CertificateSerialNumber,\n    Name, ATTRIBUTE\nFROM PKIX1Explicit-2009\n    { iso(1) identified-organization(3) dod(6) internet(1)\n    security(5) mechanisms(5) pkix(7) id-mod(0)\n    id-mod-pkix1-explicit-02(51) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "AttributeCertificate\nFROM PKIXAttributeCertificate-2009\n    { iso(1) identified-organization(3) dod(6) internet(1)\n    security(5) mechanisms(5) pkix(7) id-mod(0)\n    id-mod-attribute-cert-02(47) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "AttributeCertificateV1\nFROM AttributeCertificateVersion1-2009\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-v1AttrCert-02(49) } ;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Cryptographic Message Syntax",
      "zh-CHS": "--加密消息语法"
    },
    {
      "indent": 2,
      "text": "-- The following are used for version numbers using the ASN.1\n--   idiom \"[[n:\"\n--   Version 1 = PKCS #7\n--   Version 2 = S/MIME V2\n--   Version 3 = RFC 2630\n--   Version 4 = RFC 3369\n--   Version 5 = RFC 3852",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "CONTENT-TYPE ::= TYPE-IDENTIFIER\nContentType ::= CONTENT-TYPE.&id",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ContentInfo ::= SEQUENCE {\n    contentType        CONTENT-TYPE.\n                    &id({ContentSet}),\n    content            [0] EXPLICIT CONTENT-TYPE.\n                    &Type({ContentSet}{@contentType})}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ContentSet CONTENT-TYPE ::= {\n    --  Define the set of content types to be recognized.\n    ct-Data | ct-SignedData | ct-EncryptedData | ct-EnvelopedData |\n    ct-AuthenticatedData | ct-DigestedData, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SignedData ::= SEQUENCE {\n    version CMSVersion,\n    digestAlgorithms SET OF DigestAlgorithmIdentifier,\n    encapContentInfo EncapsulatedContentInfo,\n    certificates [0] IMPLICIT CertificateSet OPTIONAL,\n    crls [1] IMPLICIT RevocationInfoChoices OPTIONAL,\n    signerInfos SignerInfos }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SignerInfos ::= SET OF SignerInfo",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "EncapsulatedContentInfo ::= SEQUENCE {\n    eContentType       CONTENT-TYPE.&id({ContentSet}),\n    eContent           [0] EXPLICIT OCTET STRING\n            ( CONTAINING CONTENT-TYPE.\n                &Type({ContentSet}{@eContentType})) OPTIONAL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SignerInfo ::= SEQUENCE {\n    version CMSVersion,\n    sid SignerIdentifier,\n    digestAlgorithm DigestAlgorithmIdentifier,\n    signedAttrs [0] IMPLICIT SignedAttributes OPTIONAL,\n    signatureAlgorithm SignatureAlgorithmIdentifier,\n    signature SignatureValue,\n    unsignedAttrs [1] IMPLICIT Attributes\n        {{UnsignedAttributes}} OPTIONAL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SignedAttributes ::= Attributes {{ SignedAttributesSet }}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SignerIdentifier ::= CHOICE {\n    issuerAndSerialNumber IssuerAndSerialNumber,\n    ...,\n    [[3: subjectKeyIdentifier [0] SubjectKeyIdentifier ]] }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SignedAttributesSet ATTRIBUTE ::=\n    { aa-signingTime | aa-messageDigest | aa-contentType, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "UnsignedAttributes ATTRIBUTE ::= { aa-countersignature, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SignatureValue ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "EnvelopedData ::= SEQUENCE {\n    version CMSVersion,\n    originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n    recipientInfos RecipientInfos,\n    encryptedContentInfo EncryptedContentInfo,\n    ...,\n    [[2: unprotectedAttrs [1] IMPLICIT Attributes\n        {{ UnprotectedAttributes }} OPTIONAL ]] }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OriginatorInfo ::= SEQUENCE {\n    certs [0] IMPLICIT CertificateSet OPTIONAL,\n    crls [1] IMPLICIT RevocationInfoChoices OPTIONAL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "RecipientInfos ::= SET SIZE (1..MAX) OF RecipientInfo",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "EncryptedContentInfo ::= SEQUENCE {\n    contentType        CONTENT-TYPE.&id({ContentSet}),\n    contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\n    encryptedContent   [0] IMPLICIT OCTET STRING OPTIONAL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- If you want to do constraints, you might use:\n-- EncryptedContentInfo ::= SEQUENCE {\n--  contentType        CONTENT-TYPE.&id({ContentSet}),\n--  contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,\n--  encryptedContent   [0] IMPLICIT ENCRYPTED {CONTENT-TYPE.\n--      &Type({ContentSet}{@contentType}) OPTIONAL }\n-- ENCRYPTED {ToBeEncrypted} ::= OCTET STRING ( CONSTRAINED BY\n--        { ToBeEncrypted } )",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "UnprotectedAttributes ATTRIBUTE ::=  { ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "RecipientInfo ::= CHOICE {\n    ktri           KeyTransRecipientInfo,\n    ...,\n    [[3: kari  [1] KeyAgreeRecipientInfo ]],\n    [[4: kekri [2] KEKRecipientInfo]],\n    [[5: pwri  [3] PasswordRecipientInfo,\n         ori   [4] OtherRecipientInfo ]] }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "EncryptedKey ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "KeyTransRecipientInfo ::= SEQUENCE {\n    version CMSVersion,  -- always set to 0 or 2\n    rid RecipientIdentifier,\n    keyEncryptionAlgorithm AlgorithmIdentifier\n        {KEY-TRANSPORT, {KeyTransportAlgorithmSet}},",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "encryptedKey EncryptedKey }",
      "zh-CHS": "encryptedKey encryptedKey}"
    },
    {
      "indent": 2,
      "text": "KeyTransportAlgorithmSet KEY-TRANSPORT ::= { KeyTransportAlgs, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "RecipientIdentifier ::= CHOICE {\n    issuerAndSerialNumber IssuerAndSerialNumber,\n    ...,\n    [[2: subjectKeyIdentifier [0] SubjectKeyIdentifier ]] }\nKeyAgreeRecipientInfo ::= SEQUENCE {\n    version CMSVersion,  -- always set to 3\n    originator [0] EXPLICIT OriginatorIdentifierOrKey,\n    ukm [1] EXPLICIT UserKeyingMaterial OPTIONAL,\n    keyEncryptionAlgorithm AlgorithmIdentifier\n        {KEY-AGREE, {KeyAgreementAlgorithmSet}},\n    recipientEncryptedKeys RecipientEncryptedKeys }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "KeyAgreementAlgorithmSet KEY-AGREE ::= { KeyAgreementAlgs, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OriginatorIdentifierOrKey ::= CHOICE {\n    issuerAndSerialNumber IssuerAndSerialNumber,\n    subjectKeyIdentifier [0] SubjectKeyIdentifier,\n    originatorKey [1] OriginatorPublicKey }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OriginatorPublicKey ::= SEQUENCE {\n    algorithm AlgorithmIdentifier {PUBLIC-KEY, {OriginatorKeySet}},\n    publicKey BIT STRING }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OriginatorKeySet PUBLIC-KEY ::= { KeyAgreePublicKeys, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "RecipientEncryptedKeys ::= SEQUENCE OF RecipientEncryptedKey",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "RecipientEncryptedKey ::= SEQUENCE {\n    rid KeyAgreeRecipientIdentifier,\n    encryptedKey EncryptedKey }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "KeyAgreeRecipientIdentifier ::= CHOICE {\n    issuerAndSerialNumber IssuerAndSerialNumber,\n    rKeyId [0] IMPLICIT RecipientKeyIdentifier }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "RecipientKeyIdentifier ::= SEQUENCE {\n    subjectKeyIdentifier SubjectKeyIdentifier,\n    date GeneralizedTime OPTIONAL,\n    other OtherKeyAttribute OPTIONAL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SubjectKeyIdentifier ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "KEKRecipientInfo ::= SEQUENCE {\n    version CMSVersion,  -- always set to 4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "kekid KEKIdentifier, keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier, encryptedKey EncryptedKey }",
      "zh-CHS": "kekid KEKIdentifier，keyEncryptionAlgorithm KeyEncryptionalGorithmidIdentifier，encryptedKey encryptedKey}"
    },
    {
      "indent": 2,
      "text": "KEKIdentifier ::= SEQUENCE {\n    keyIdentifier OCTET STRING,\n    date GeneralizedTime OPTIONAL,\n    other OtherKeyAttribute OPTIONAL }\nPasswordRecipientInfo ::= SEQUENCE {\n    version CMSVersion,   -- always set to 0\n    keyDerivationAlgorithm [0] KeyDerivationAlgorithmIdentifier\n                            OPTIONAL,\n    keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\n    encryptedKey EncryptedKey }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OTHER-RECIPIENT ::= TYPE-IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OtherRecipientInfo ::= SEQUENCE {\n    oriType    OTHER-RECIPIENT.\n            &id({SupportedOtherRecipInfo}),\n    oriValue   OTHER-RECIPIENT.\n            &Type({SupportedOtherRecipInfo}{@oriType})}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SupportedOtherRecipInfo OTHER-RECIPIENT ::= { ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "DigestedData ::= SEQUENCE {\n    version CMSVersion,\n    digestAlgorithm DigestAlgorithmIdentifier,\n    encapContentInfo EncapsulatedContentInfo,\n    digest Digest, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Digest ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "EncryptedData ::= SEQUENCE {\n    version CMSVersion,\n    encryptedContentInfo EncryptedContentInfo,\n    ...,\n    [[2: unprotectedAttrs [1] IMPLICIT Attributes\n        {{UnprotectedAttributes}} OPTIONAL ]] }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "AuthenticatedData ::= SEQUENCE {\n    version CMSVersion,\n    originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n    recipientInfos RecipientInfos,\n    macAlgorithm MessageAuthenticationCodeAlgorithm,\n    digestAlgorithm [1] DigestAlgorithmIdentifier OPTIONAL,\n    encapContentInfo EncapsulatedContentInfo,\n    authAttrs [2] IMPLICIT AuthAttributes OPTIONAL,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "mac MessageAuthenticationCode, unauthAttrs [3] IMPLICIT UnauthAttributes OPTIONAL }",
      "zh-CHS": "mac MessageAuthenticationCode，unauthAttrs[3]隐式UnauthAttributes可选}"
    },
    {
      "indent": 2,
      "text": "AuthAttributes ::= SET SIZE (1..MAX) OF Attribute\n    {{AuthAttributeSet}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "AuthAttributeSet ATTRIBUTE ::= { aa-contentType | aa-messageDigest\n                                     | aa-signingTime, ...}\nMessageAuthenticationCode ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "UnauthAttributes ::= SET SIZE (1..MAX) OF Attribute\n    {{UnauthAttributeSet}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "UnauthAttributeSet ATTRIBUTE ::= {...}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- -- General algorithm definitions --",
      "zh-CHS": "----通用算法定义--"
    },
    {
      "indent": 2,
      "text": "DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n    {DIGEST-ALGORITHM, {DigestAlgorithmSet}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "DigestAlgorithmSet DIGEST-ALGORITHM ::= {\n    CryptographicMessageSyntaxAlgorithms-2009.MessageDigestAlgs, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SignatureAlgorithmIdentifier ::= AlgorithmIdentifier\n    {SIGNATURE-ALGORITHM, {SignatureAlgorithmSet}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SignatureAlgorithmSet SIGNATURE-ALGORITHM ::=\n    { SignatureAlgs, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n    {KEY-WRAP, {KeyEncryptionAlgorithmSet}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "KeyEncryptionAlgorithmSet KEY-WRAP ::= { KeyWrapAlgs, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n    {CONTENT-ENCRYPTION, {ContentEncryptionAlgorithmSet}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ContentEncryptionAlgorithmSet CONTENT-ENCRYPTION ::=\n    { ContentEncryptionAlgs, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "MessageAuthenticationCodeAlgorithm ::= AlgorithmIdentifier\n    {MAC-ALGORITHM, {MessageAuthenticationCodeAlgorithmSet}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "MessageAuthenticationCodeAlgorithmSet MAC-ALGORITHM ::=\n    { MessageAuthAlgs, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "KeyDerivationAlgorithmIdentifier ::= AlgorithmIdentifier\n    {KEY-DERIVATION, {KeyDerivationAlgs, ...}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "RevocationInfoChoices ::= SET OF RevocationInfoChoice",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "RevocationInfoChoice ::= CHOICE {\n    crl CertificateList,\n    ...,\n    [[5: other [1] IMPLICIT OtherRevocationInfoFormat ]] }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OTHER-REVOK-INFO ::= TYPE-IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OtherRevocationInfoFormat ::= SEQUENCE {\n    otherRevInfoFormat    OTHER-REVOK-INFO.\n            &id({SupportedOtherRevokInfo}),\n    otherRevInfo          OTHER-REVOK-INFO.\n            &Type({SupportedOtherRevokInfo}{@otherRevInfoFormat})}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SupportedOtherRevokInfo OTHER-REVOK-INFO ::= { ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "CertificateChoices ::= CHOICE {\n    certificate Certificate,\n    extendedCertificate [0] IMPLICIT ExtendedCertificate,\n         -- Obsolete\n    ...,\n    [[3: v1AttrCert [1] IMPLICIT AttributeCertificateV1]],\n         -- Obsolete\n    [[4: v2AttrCert [2] IMPLICIT AttributeCertificateV2]],\n    [[5: other      [3] IMPLICIT OtherCertificateFormat]] }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "AttributeCertificateV2 ::= AttributeCertificate",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OTHER-CERT-FMT ::= TYPE-IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OtherCertificateFormat ::= SEQUENCE {\n    otherCertFormat OTHER-CERT-FMT.\n            &id({SupportedCertFormats}),\n    otherCert       OTHER-CERT-FMT.\n            &Type({SupportedCertFormats}{@otherCertFormat})}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SupportedCertFormats OTHER-CERT-FMT ::= { ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "CertificateSet ::= SET OF CertificateChoices",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "IssuerAndSerialNumber ::= SEQUENCE {\n    issuer Name,\n    serialNumber CertificateSerialNumber }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "CMSVersion ::= INTEGER  { v0(0), v1(1), v2(2), v3(3), v4(4), v5(5) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "UserKeyingMaterial ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "KEY-ATTRIBUTE ::= TYPE-IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OtherKeyAttribute ::= SEQUENCE {\n    keyAttrId  KEY-ATTRIBUTE.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "        &id({SupportedKeyAttributes}),\nkeyAttr    KEY-ATTRIBUTE.\n        &Type({SupportedKeyAttributes}{@keyAttrId})}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SupportedKeyAttributes KEY-ATTRIBUTE ::= { ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Content Type Object Identifiers",
      "zh-CHS": "--内容类型对象标识符"
    },
    {
      "indent": 2,
      "text": "id-ct-contentInfo OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs9(9) smime(16) ct(1) 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ct-Data CONTENT-TYPE ::= {OCTET STRING IDENTIFIED BY id-data}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-data OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ct-SignedData CONTENT-TYPE ::=\n    { SignedData IDENTIFIED BY id-signedData}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ct-EnvelopedData CONTENT-TYPE ::=\n    { EnvelopedData IDENTIFIED BY id-envelopedData}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-envelopedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ct-DigestedData CONTENT-TYPE ::=\n    { DigestedData IDENTIFIED BY id-digestedData}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-digestedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ct-EncryptedData CONTENT-TYPE ::=\n    { EncryptedData IDENTIFIED BY id-encryptedData}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-encryptedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ct-AuthenticatedData CONTENT-TYPE ::=\n    { AuthenticatedData IDENTIFIED BY id-ct-authData}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-ct-authData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) ct(1) 2 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- -- The CMS Attributes --",
      "zh-CHS": "--——CMS属性--"
    },
    {
      "indent": 2,
      "text": "MessageDigest ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SigningTime  ::= Time",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Time ::= CHOICE {\n    utcTime UTCTime,\n    generalTime GeneralizedTime }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Countersignature ::= SignerInfo",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Attribute Object Identifiers",
      "zh-CHS": "--属性对象标识符"
    },
    {
      "indent": 2,
      "text": "aa-contentType ATTRIBUTE ::=\n    { TYPE ContentType IDENTIFIED BY id-contentType }\nid-contentType OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs9(9) 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "aa-messageDigest ATTRIBUTE ::=\n    { TYPE MessageDigest IDENTIFIED BY id-messageDigest}\nid-messageDigest OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs9(9) 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "aa-signingTime ATTRIBUTE ::=\n    { TYPE SigningTime IDENTIFIED BY id-signingTime }\nid-signingTime OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs9(9) 5 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "aa-countersignature ATTRIBUTE ::=\n    { TYPE Countersignature IDENTIFIED BY id-countersignature }\nid-countersignature OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   us(840) rsadsi(113549) pkcs(1) pkcs9(9) 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- -- Obsolete Extended Certificate syntax from PKCS#6 --",
      "zh-CHS": "----PKCS#6中过时的扩展证书语法--"
    },
    {
      "indent": 2,
      "text": "ExtendedCertificateOrCertificate ::= CHOICE {\n    certificate Certificate,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "extendedCertificate [0] IMPLICIT ExtendedCertificate }",
      "zh-CHS": "extendedCertificate[0]隐式extendedCertificate}"
    },
    {
      "indent": 2,
      "text": "ExtendedCertificate ::= SEQUENCE {\n    extendedCertificateInfo ExtendedCertificateInfo,\n    signatureAlgorithm SignatureAlgorithmIdentifier,\n    signature Signature }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ExtendedCertificateInfo ::= SEQUENCE {\n    version CMSVersion,\n    certificate Certificate,\n    attributes UnauthAttributes }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Signature ::= BIT STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Attribute{ ATTRIBUTE:AttrList } ::= SEQUENCE {\n    attrType           ATTRIBUTE.\n            &id({AttrList}),\n    attrValues         SET OF ATTRIBUTE.\n            &Type({AttrList}{@attrType})  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Attributes { ATTRIBUTE:AttrList } ::=\n    SET SIZE (1..MAX) OF Attribute {{ AttrList }}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "7. ASN.1 Module for RFC 4108",
      "section_title": true,
      "zh-CHS": "7. RFC 4108的ASN.1模块"
    },
    {
      "indent": 2,
      "text": "CMSFirmwareWrapper-2009\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-cms-firmware-wrap-02(40) }\nDEFINITIONS IMPLICIT TAGS ::=\nBEGIN\nIMPORTS",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "OTHER-NAME\nFROM PKIX1Implicit-2009\n    { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "EnvelopedData, CONTENT-TYPE, ATTRIBUTE\nFROM CryptographicMessageSyntax-2009\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-cms-2004-02(41) };",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "FirmwareContentTypes CONTENT-TYPE ::= {\n        ct-firmwarePackage | ct-firmwareLoadReceipt |\n        ct-firmwareLoadError,... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "FirmwareSignedAttrs ATTRIBUTE ::= {\n        aa-firmwarePackageID | aa-targetHardwareIDs |\n        aa-decryptKeyID | aa-implCryptoAlgs | aa-implCompressAlgs |\n        aa-communityIdentifiers | aa-firmwarePackageInfo,... }\nFirmwareUnsignedAttrs ATTRIBUTE ::= {\n        aa-wrappedFirmwareKey, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "FirmwareOtherNames OTHER-NAME ::= {\n        on-hardwareModuleName, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Firmware Package Content Type and Object Identifier",
      "zh-CHS": "--固件包内容类型和对象标识符"
    },
    {
      "indent": 2,
      "text": "ct-firmwarePackage CONTENT-TYPE ::=\n        { FirmwarePkgData IDENTIFIED BY id-ct-firmwarePackage }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-ct-firmwarePackage OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) ct(1) 16 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "FirmwarePkgData ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Firmware Package Signed Attributes and Object Identifiers",
      "zh-CHS": "--固件包签名属性和对象标识符"
    },
    {
      "indent": 2,
      "text": "aa-firmwarePackageID ATTRIBUTE ::=\n    { TYPE FirmwarePackageIdentifier IDENTIFIED BY\n        id-aa-firmwarePackageID }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-aa-firmwarePackageID OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) aa(2) 35 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "FirmwarePackageIdentifier ::= SEQUENCE {\n    name PreferredOrLegacyPackageIdentifier,\n    stale PreferredOrLegacyStalePackageIdentifier OPTIONAL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "PreferredOrLegacyPackageIdentifier ::= CHOICE {\n    preferred PreferredPackageIdentifier,\n    legacy OCTET STRING }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "PreferredPackageIdentifier ::= SEQUENCE {\n    fwPkgID OBJECT IDENTIFIER,\n    verNum INTEGER (0..MAX) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "PreferredOrLegacyStalePackageIdentifier ::= CHOICE {\n    preferredStaleVerNum INTEGER (0..MAX),\n    legacyStaleVersion OCTET STRING }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "aa-targetHardwareIDs ATTRIBUTE ::=",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "{ TYPE TargetHardwareIdentifiers IDENTIFIED BY id-aa-targetHardwareIDs }",
      "zh-CHS": "{由id aa targetHardwareIDs标识的类型TARGETHARDWAREIDIFIER}"
    },
    {
      "indent": 2,
      "text": "id-aa-targetHardwareIDs OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) aa(2) 36 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "TargetHardwareIdentifiers ::= SEQUENCE OF OBJECT IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "aa-decryptKeyID ATTRIBUTE ::=\n        { TYPE DecryptKeyIdentifier IDENTIFIED BY id-aa-decryptKeyID}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-aa-decryptKeyID OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) aa(2) 37 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "DecryptKeyIdentifier ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "aa-implCryptoAlgs ATTRIBUTE ::=\n    { TYPE ImplementedCryptoAlgorithms IDENTIFIED BY\n        id-aa-implCryptoAlgs }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-aa-implCryptoAlgs OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) aa(2) 38 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ImplementedCryptoAlgorithms ::= SEQUENCE OF OBJECT IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "aa-implCompressAlgs ATTRIBUTE ::=\n    { TYPE ImplementedCompressAlgorithms IDENTIFIED BY\n        id-aa-implCompressAlgs }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-aa-implCompressAlgs OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) aa(2) 43 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ImplementedCompressAlgorithms ::= SEQUENCE OF OBJECT IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "aa-communityIdentifiers ATTRIBUTE ::=\n    { TYPE CommunityIdentifiers IDENTIFIED BY\n        id-aa-communityIdentifiers }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-aa-communityIdentifiers OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) aa(2) 40 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "CommunityIdentifiers ::= SEQUENCE OF CommunityIdentifier",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "CommunityIdentifier ::= CHOICE {\n    communityOID OBJECT IDENTIFIER,\n    hwModuleList HardwareModules }\nHardwareModules ::= SEQUENCE {\n    hwType OBJECT IDENTIFIER,\n    hwSerialEntries SEQUENCE OF HardwareSerialEntry }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "HardwareSerialEntry ::= CHOICE {\n    all NULL,\n    single OCTET STRING,\n    block SEQUENCE {\n        low OCTET STRING,\n        high OCTET STRING\n    }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "aa-firmwarePackageInfo ATTRIBUTE ::=\n    { TYPE FirmwarePackageInfo IDENTIFIED BY\n        id-aa-firmwarePackageInfo }\nid-aa-firmwarePackageInfo OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) aa(2) 42 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "FirmwarePackageInfo ::= SEQUENCE {\n    fwPkgType INTEGER OPTIONAL,\n    dependencies SEQUENCE OF\n    PreferredOrLegacyPackageIdentifier OPTIONAL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Firmware Package Unsigned Attributes and Object Identifiers",
      "zh-CHS": "--固件包未签名属性和对象标识符"
    },
    {
      "indent": 2,
      "text": "aa-wrappedFirmwareKey ATTRIBUTE ::=\n    { TYPE WrappedFirmwareKey IDENTIFIED BY\n        id-aa-wrappedFirmwareKey }\nid-aa-wrappedFirmwareKey OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) aa(2) 39 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "WrappedFirmwareKey ::= EnvelopedData",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Firmware Package Load Receipt Content Type and Object Identifier",
      "zh-CHS": "--固件包加载接收内容类型和对象标识符"
    },
    {
      "indent": 2,
      "text": "ct-firmwareLoadReceipt CONTENT-TYPE ::=\n    { FirmwarePackageLoadReceipt IDENTIFIED BY\n        id-ct-firmwareLoadReceipt }\nid-ct-firmwareLoadReceipt OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) ct(1) 17 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "FirmwarePackageLoadReceipt ::= SEQUENCE {\n    version FWReceiptVersion DEFAULT v1,\n    hwType OBJECT IDENTIFIER,\n    hwSerialNum OCTET STRING,\n    fwPkgName PreferredOrLegacyPackageIdentifier,\n    trustAnchorKeyID OCTET STRING OPTIONAL,\n    decryptKeyID [1] OCTET STRING OPTIONAL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "FWReceiptVersion ::= INTEGER { v1(1) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Firmware Package Load Error Report Content Type\n-- and Object Identifier",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ct-firmwareLoadError CONTENT-TYPE ::=\n    { FirmwarePackageLoadError\n        IDENTIFIED BY id-ct-firmwareLoadError }\nid-ct-firmwareLoadError OBJECT IDENTIFIER ::= {\n    iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) ct(1) 18 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "FirmwarePackageLoadError ::= SEQUENCE {\n    version FWErrorVersion DEFAULT v1,\n    hwType OBJECT IDENTIFIER,\n    hwSerialNum OCTET STRING,\n    errorCode FirmwarePackageLoadErrorCode,\n    vendorErrorCode VendorLoadErrorCode OPTIONAL,\n    fwPkgName PreferredOrLegacyPackageIdentifier OPTIONAL,\n    config [1] SEQUENCE OF CurrentFWConfig OPTIONAL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "FWErrorVersion ::= INTEGER { v1(1) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "CurrentFWConfig ::= SEQUENCE {\n    fwPkgType INTEGER OPTIONAL,\n    fwPkgName PreferredOrLegacyPackageIdentifier }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "FirmwarePackageLoadErrorCode ::= ENUMERATED {\n    decodeFailure                (1),\n    badContentInfo               (2),\n    badSignedData                (3),\n    badEncapContent              (4),\n    badCertificate               (5),\n    badSignerInfo                (6),\n    badSignedAttrs               (7),\n    badUnsignedAttrs             (8),\n    missingContent               (9),\n    noTrustAnchor               (10),\n    notAuthorized               (11),\n    badDigestAlgorithm          (12),",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "badSignatureAlgorithm (13), unsupportedKeySize (14), signatureFailure (15), contentTypeMismatch (16), badEncryptedData (17), unprotectedAttrsPresent (18), badEncryptContent (19), badEncryptAlgorithm (20), missingCiphertext (21), noDecryptKey (22), decryptFailure (23), badCompressAlgorithm (24), missingCompressedContent (25), decompressFailure (26), wrongHardware (27), stalePackage (28), notInCommunity (29), unsupportedPackageType (30), missingDependency (31), wrongDependencyVersion (32), insufficientMemory (33), badFirmware (34), unsupportedParameters (35), breaksDependency (36), otherError (99) }",
      "zh-CHS": "badSignatureAlgorithm（13）、unsupportedKeySize（14）、signatureFailure（15）、contentTypeMismatch（16）、badEncryptedData（17）、unprotectedAttrsPresent（18）、badEncryptContent（19）、BadEncryptedAlgorithm（20）、missingCiphertext（21）、noDecryptKey（22）、decryptFailure（23）、badCompressAlgorithm（24）、missingCompressedContent（25）、DecompressedFailure（26），错误的硬件（27）、陈旧的包（28）、不独立的包（29）、不支持的包类型（30）、缺少依赖项（31）、错误的依赖项版本（32）、内存不足（33）、固件错误（34）、不支持的参数（35）、中断依赖项（36）、其他错误（99）}"
    },
    {
      "indent": 2,
      "text": "VendorLoadErrorCode ::= INTEGER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Other Name syntax for Hardware Module Name",
      "zh-CHS": "--硬件模块名称的其他名称语法"
    },
    {
      "indent": 2,
      "text": "on-hardwareModuleName OTHER-NAME ::=\n        { HardwareModuleName IDENTIFIED BY id-on-hardwareModuleName }\nid-on-hardwareModuleName OBJECT IDENTIFIER ::= {\n    iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) on(8) 4 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "HardwareModuleName ::= SEQUENCE {\n    hwType OBJECT IDENTIFIER,\n    hwSerialNum OCTET STRING }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "8. ASN.1 Module for RFC 4998",
      "section_title": true,
      "zh-CHS": "8. RFC 4998的ASN.1模块"
    },
    {
      "indent": 3,
      "text": "ERS {iso(1) identified-organization(3) dod(6) internet(1)\n    security(5) mechanisms(5) ltans(11) id-mod(0) id-mod-ers(1)\n    id-mod-ers-v1(1) }\nDEFINITIONS IMPLICIT TAGS ::=\nBEGIN\nIMPORTS",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "AttributeSet{}, ATTRIBUTE\nFROM PKIX-CommonTypes\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "AlgorithmIdentifier{}, ALGORITHM, DIGEST-ALGORITHM\nFROM AlgorithmInformation-2009\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "ContentInfo\nFROM CryptographicMessageSyntax2004\n    { iso(1) member-body(2) us(840) rsadsi(113549)\n    pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-2004-02(41) } ;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "aa-er-Internal ATTRIBUTE ::=\n    { TYPE EvidenceRecord IDENTIFIED BY id-aa-er-internal }\nid-aa-er-internal OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) id-aa(2) 49 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "aa-er-External ATTRIBUTE ::=\n    { TYPE EvidenceRecord IDENTIFIED BY id-aa-er-external }\nid-aa-er-external OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) id-aa(2) 50 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "ltans OBJECT IDENTIFIER ::=\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) ltans(11) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "EvidenceRecord ::= SEQUENCE {\n    version                   INTEGER { v1(1) } ,\n    digestAlgorithms          SEQUENCE OF AlgorithmIdentifier\n                                  {DIGEST-ALGORITHM, {...}},\n    cryptoInfos               [0] CryptoInfos OPTIONAL,\n    encryptionInfo            [1] EncryptionInfo OPTIONAL,\n    archiveTimeStampSequence  ArchiveTimeStampSequence",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "}",
      "zh-CHS": "}"
    },
    {
      "indent": 3,
      "text": "CryptoInfos ::= SEQUENCE SIZE (1..MAX) OF AttributeSet{{...}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "ArchiveTimeStampSequence ::= SEQUENCE OF ArchiveTimeStampChain\nArchiveTimeStampChain    ::= SEQUENCE OF ArchiveTimeStamp",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "ArchiveTimeStamp ::= SEQUENCE {\n   digestAlgorithm [0] AlgorithmIdentifier{DIGEST-ALGORITHM, {...}}\n                           OPTIONAL,\n   attributes      [1] Attributes OPTIONAL,\n   reducedHashtree [2] SEQUENCE OF PartialHashtree OPTIONAL,\n   timeStamp       ContentInfo\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "PartialHashtree ::= SEQUENCE OF OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Attributes ::= SET SIZE (1..MAX) OF AttributeSet{{...}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "EncryptionInfo       ::=     SEQUENCE {\n    encryptionInfoType   ENCINFO-TYPE.\n                             &id({SupportedEncryptionAlgorithms}),\n    encryptionInfoValue  ENCINFO-TYPE.\n                             &Type({SupportedEncryptionAlgorithms}\n                                 {@encryptionInfoType})\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "ENCINFO-TYPE ::= TYPE-IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "SupportedEncryptionAlgorithms ENCINFO-TYPE ::= {...}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "9. ASN.1 Module for RFC 5035",
      "section_title": true,
      "zh-CHS": "9. RFC 5035的ASN.1模块"
    },
    {
      "indent": 3,
      "text": "Section numbers in the module refer to the sections of RFC 2634 as updated by RFC 5035.",
      "zh-CHS": "模块中的章节编号指由RFC 5035更新的RFC 2634章节。"
    },
    {
      "indent": 2,
      "text": "ExtendedSecurityServices-2009\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-ess-2006-02(42) }\nDEFINITIONS IMPLICIT TAGS ::=\nBEGIN\nIMPORTS",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "AttributeSet{}, ATTRIBUTE, SECURITY-CATEGORY, SecurityCategory{}\nFROM PKIX-CommonTypes-2009\n    { iso(1) identified-organization(3) dod(6) internet(1) security(5)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "mechanisms(5) pkix(7) id-mod(0) id-mod-pkixCommon-02(57) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "AlgorithmIdentifier{}, ALGORITHM, DIGEST-ALGORITHM\nFROM AlgorithmInformation-2009\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ContentType, IssuerAndSerialNumber, SubjectKeyIdentifier,\n    CONTENT-TYPE\nFROM CryptographicMessageSyntax-2009\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-cms-2004-02(41) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "CertificateSerialNumber\nFROM PKIX1Explicit-2009\n    { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "PolicyInformation, GeneralNames\nFROM PKIX1Implicit-2009\n    { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "mda-sha256\nFROM PKIX1-PSS-OAEP-Algorithms-2009\n     { iso(1) identified-organization(3) dod(6)\n       internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)\n       id-mod-pkix1-rsa-pkalgs-02(54) } ;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "EssSignedAttributes ATTRIBUTE ::= {\n    aa-receiptRequest | aa-contentIdentifier | aa-contentHint |\n    aa-msgSigDigest | aa-contentReference | aa-securityLabel |\n    aa-equivalentLabels | aa-mlExpandHistory | aa-signingCertificate |\n    aa-signingCertificateV2, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "EssContentTypes CONTENT-TYPE ::= { ct-receipt, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Extended Security Services\n-- The construct \"SEQUENCE SIZE (1..MAX) OF\" appears in several ASN.1\n-- constructs in this module.  A valid ASN.1 SEQUENCE can have zero or\n-- more entries.  The SIZE (1..MAX) construct constrains the SEQUENCE\n-- to have at least one entry.  MAX indicates the upper bound is\n-- unspecified.  Implementations are free to choose an upper bound\n-- that suits their environment.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Section 2.7",
      "zh-CHS": "--第2.7节"
    },
    {
      "indent": 2,
      "text": "aa-receiptRequest ATTRIBUTE ::=\n    { TYPE ReceiptRequest IDENTIFIED BY id-aa-receiptRequest}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ReceiptRequest ::= SEQUENCE {\n    signedContentIdentifier ContentIdentifier,\n    receiptsFrom ReceiptsFrom,\n    receiptsTo SEQUENCE SIZE (1..ub-receiptsTo) OF GeneralNames\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ub-receiptsTo INTEGER ::= 16",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "aa-contentIdentifier ATTRIBUTE ::=\n    { TYPE ContentIdentifier IDENTIFIED BY id-aa-contentIdentifier}\nid-aa-receiptRequest OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) id-aa(2) 1}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ContentIdentifier ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-aa-contentIdentifier OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 7}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ct-receipt CONTENT-TYPE ::=\n    { Receipt IDENTIFIED BY id-ct-receipt }\nid-ct-receipt OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) id-ct(1) 1}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ReceiptsFrom ::= CHOICE {\n    allOrFirstTier [0] AllOrFirstTier,\n        -- formerly \"allOrNone [0]AllOrNone\"\n    receiptList [1] SEQUENCE OF GeneralNames }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "AllOrFirstTier ::= INTEGER { -- Formerly AllOrNone\n    allReceipts (0),\n    firstTierRecipients (1) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Section 2.8",
      "zh-CHS": "--第2.8节"
    },
    {
      "indent": 2,
      "text": "Receipt ::= SEQUENCE {\n    version                   ESSVersion,\n    contentType               ContentType,\n    signedContentIdentifier   ContentIdentifier,\n    originatorSignatureValue  OCTET STRING\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ESSVersion ::= INTEGER  { v1(1) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Section 2.9",
      "zh-CHS": "--第2.9节"
    },
    {
      "indent": 2,
      "text": "aa-contentHint ATTRIBUTE ::=\n    { TYPE ContentHints IDENTIFIED BY id-aa-contentHint }\nid-aa-contentHint OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) id-aa(2) 4}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ContentHints ::= SEQUENCE {\n    contentDescription UTF8String (SIZE (1..MAX)) OPTIONAL,\n    contentType ContentType }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Section 2.10",
      "zh-CHS": "--第2.10节"
    },
    {
      "indent": 2,
      "text": "aa-msgSigDigest ATTRIBUTE ::=\n    { TYPE MsgSigDigest IDENTIFIED BY id-aa-msgSigDigest }\nid-aa-msgSigDigest OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 5}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "MsgSigDigest ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Section 2.11",
      "zh-CHS": "--第2.11节"
    },
    {
      "indent": 2,
      "text": "aa-contentReference ATTRIBUTE ::=\n    { TYPE ContentReference IDENTIFIED BY id-aa-contentReference }\nid-aa-contentReference OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) id-aa(2) 10 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ContentReference ::= SEQUENCE {\n    contentType ContentType,\n    signedContentIdentifier ContentIdentifier,\n    originatorSignatureValue OCTET STRING }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Section 3.2",
      "zh-CHS": "--第3.2节"
    },
    {
      "indent": 2,
      "text": "aa-securityLabel ATTRIBUTE ::=\n    { TYPE ESSSecurityLabel IDENTIFIED BY id-aa-securityLabel }\nid-aa-securityLabel OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) id-aa(2) 2}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ESSSecurityLabel ::= SET {\n    security-policy-identifier SecurityPolicyIdentifier,\n    security-classification SecurityClassification OPTIONAL,\n    privacy-mark ESSPrivacyMark OPTIONAL,\n    security-categories SecurityCategories OPTIONAL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SecurityPolicyIdentifier ::= OBJECT IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SecurityClassification ::= INTEGER {\n    unmarked (0),\n    unclassified (1),\n    restricted (2),\n    confidential (3),\n    secret (4),\n    top-secret (5)\n} (0..ub-integer-options)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ub-integer-options INTEGER ::= 256",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ESSPrivacyMark ::= CHOICE {\n    pString      PrintableString (SIZE (1..ub-privacy-mark-length)),\n    utf8String   UTF8String (SIZE (1..MAX))\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ub-privacy-mark-length INTEGER ::= 128",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SecurityCategories ::=\n    SET SIZE (1..ub-security-categories) OF SecurityCategory\n        {{SupportedSecurityCategories}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ub-security-categories INTEGER ::= 64",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SupportedSecurityCategories SECURITY-CATEGORY ::= { ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Section 3.4",
      "zh-CHS": "--第3.4节"
    },
    {
      "indent": 2,
      "text": "aa-equivalentLabels ATTRIBUTE ::=\n    { TYPE EquivalentLabels IDENTIFIED BY id-aa-equivalentLabels }\nid-aa-equivalentLabels OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) id-aa(2) 9}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "EquivalentLabels ::= SEQUENCE OF ESSSecurityLabel",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Section 4.4",
      "zh-CHS": "--第4.4节"
    },
    {
      "indent": 2,
      "text": "aa-mlExpandHistory ATTRIBUTE ::=\n    { TYPE MLExpansionHistory IDENTIFIED BY id-aa-mlExpandHistory }\nid-aa-mlExpandHistory OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) id-aa(2) 3 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "MLExpansionHistory ::= SEQUENCE\n    SIZE (1..ub-ml-expansion-history) OF MLData",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ub-ml-expansion-history INTEGER ::= 64",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "MLData ::= SEQUENCE {\n    mailListIdentifier EntityIdentifier,\n    expansionTime GeneralizedTime,\n    mlReceiptPolicy MLReceiptPolicy OPTIONAL }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "EntityIdentifier ::= CHOICE {\n    issuerAndSerialNumber IssuerAndSerialNumber,\n    subjectKeyIdentifier SubjectKeyIdentifier }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "MLReceiptPolicy ::= CHOICE {\n    none         [0] NULL,\n    insteadOf    [1] SEQUENCE SIZE (1..MAX) OF GeneralNames,\n    inAdditionTo [2] SEQUENCE SIZE (1..MAX) OF GeneralNames }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Section 5.4",
      "zh-CHS": "--第5.4节"
    },
    {
      "indent": 2,
      "text": "aa-signingCertificate ATTRIBUTE ::=\n    { TYPE SigningCertificate IDENTIFIED BY\n        id-aa-signingCertificate }\nid-aa-signingCertificate OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) id-aa(2) 12 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SigningCertificate ::=  SEQUENCE {\n    certs        SEQUENCE OF ESSCertID,\n    policies     SEQUENCE OF PolicyInformation OPTIONAL\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "aa-signingCertificateV2 ATTRIBUTE ::=\n    { TYPE SigningCertificateV2 IDENTIFIED BY\n        id-aa-signingCertificateV2 }\nid-aa-signingCertificateV2 OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) id-aa(2) 47 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SigningCertificateV2 ::=  SEQUENCE {\n    certs        SEQUENCE OF ESSCertIDv2,\n    policies     SEQUENCE OF PolicyInformation OPTIONAL\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "HashAlgorithm ::= AlgorithmIdentifier{DIGEST-ALGORITHM,\n                      {mda-sha256, ...}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ESSCertIDv2 ::= SEQUENCE {\n    hashAlgorithm    HashAlgorithm\n                        DEFAULT { algorithm mda-sha256.&id },",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "    certHash        Hash,\n    issuerSerial    IssuerSerial OPTIONAL\n}\nESSCertID ::=  SEQUENCE {\n    certHash        Hash,\n    issuerSerial    IssuerSerial OPTIONAL\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Hash ::= OCTET STRING",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "IssuerSerial ::= SEQUENCE {\n    issuer          GeneralNames,\n    serialNumber    CertificateSerialNumber\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "10. ASN.1 Module for RFC 5083",
      "section_title": true,
      "zh-CHS": "10. RFC 5083的ASN.1模块"
    },
    {
      "indent": 3,
      "text": "CMS-AuthEnvelopedData-2009\n    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-cms-authEnvelopedData-02(43)}\nDEFINITIONS IMPLICIT TAGS ::=\nBEGIN\nIMPORTS",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "AuthAttributes, CMSVersion, EncryptedContentInfo,\n    MessageAuthenticationCode, OriginatorInfo, RecipientInfos,\n    UnauthAttributes, CONTENT-TYPE\nFROM CryptographicMessageSyntax-2009\n    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-cms-2004-02(41)} ;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "ContentTypes CONTENT-TYPE ::= {ct-authEnvelopedData, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "ct-authEnvelopedData CONTENT-TYPE ::= {\n   AuthEnvelopedData IDENTIFIED BY id-ct-authEnvelopedData\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "id-ct-authEnvelopedData OBJECT IDENTIFIER ::=\n    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) ct(1) 23}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "AuthEnvelopedData ::= SEQUENCE {\n    version CMSVersion,\n    originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,\n    recipientInfos RecipientInfos,\n    authEncryptedContentInfo EncryptedContentInfo,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": " authAttrs [1] IMPLICIT AuthAttributes OPTIONAL, mac MessageAuthenticationCode, unauthAttrs [2] IMPLICIT UnauthAttributes OPTIONAL }",
      "zh-CHS": "authAttrs[1]隐式AuthAttributes可选，mac MessageAuthenticationCode，unauthAttrs[2]隐式UnauthAttributes可选}"
    },
    {
      "indent": 3,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "11. ASN.1 Module for RFC 5084",
      "section_title": true,
      "zh-CHS": "11. RFC 5084的ASN.1模块"
    },
    {
      "indent": 2,
      "text": "CMS-AES-CCM-and-AES-GCM-2009\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)\n    pkcs-9(9) smime(16) modules(0) id-mod-cms-aes-ccm-gcm-02(44) }\nDEFINITIONS IMPLICIT TAGS ::=\nBEGIN\nEXPORTS ALL;\nIMPORTS",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "CONTENT-ENCRYPTION, SMIME-CAPS\nFROM AlgorithmInformation-2009\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58)};",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "--  Add this algorithm set to include all of the algorithms defined in\n--      this document",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "ContentEncryptionAlgs CONTENT-ENCRYPTION ::= {\n   cea-aes128-CCM | cea-aes192-CCM | cea-aes256-CCM |\n   cea-aes128-GCM | cea-aes192-GCM | cea-aes256-GCM, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SMimeCaps SMIME-CAPS ::= {\n   cea-aes128-CCM.&smimeCaps |\n   cea-aes192-CCM.&smimeCaps |\n   cea-aes256-CCM.&smimeCaps |\n   cea-aes128-GCM.&smimeCaps |\n   cea-aes192-GCM.&smimeCaps |\n   cea-aes256-GCM.&smimeCaps,\n   ...\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Defining objects",
      "zh-CHS": "--定义对象"
    },
    {
      "indent": 2,
      "text": "aes OBJECT IDENTIFIER ::= { joint-iso-itu-t(2) country(16) us(840)\n    organization(1) gov(101) csor(3) nistAlgorithms(4) 1 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "cea-aes128-CCM CONTENT-ENCRYPTION ::= {\n        IDENTIFIER id-aes128-CCM\n        PARAMS TYPE CCMParameters ARE required",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "        SMIME-CAPS { IDENTIFIED BY id-aes128-CCM }\n}\nid-aes128-CCM OBJECT IDENTIFIER ::= { aes 7 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "cea-aes192-CCM CONTENT-ENCRYPTION ::= {\n        IDENTIFIER id-aes192-CCM\n        PARAMS TYPE CCMParameters ARE required\n        SMIME-CAPS { IDENTIFIED BY id-aes192-CCM }\n}\nid-aes192-CCM OBJECT IDENTIFIER ::= { aes 27 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "cea-aes256-CCM CONTENT-ENCRYPTION ::= {\n        IDENTIFIER id-aes256-CCM\n        PARAMS TYPE CCMParameters ARE required\n        SMIME-CAPS { IDENTIFIED BY id-aes256-CCM }\n}\nid-aes256-CCM OBJECT IDENTIFIER ::= { aes 47 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "cea-aes128-GCM CONTENT-ENCRYPTION ::= {\n        IDENTIFIER id-aes128-GCM\n        PARAMS TYPE GCMParameters ARE required\n        SMIME-CAPS { IDENTIFIED BY id-aes128-GCM }\n}\nid-aes128-GCM OBJECT IDENTIFIER ::= { aes 6 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "cea-aes192-GCM CONTENT-ENCRYPTION ::= {\n        IDENTIFIER id-aes128-GCM\n        PARAMS TYPE GCMParameters ARE required\n        SMIME-CAPS { IDENTIFIED BY id-aes192-GCM }\n}\nid-aes192-GCM OBJECT IDENTIFIER ::= { aes 26 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "cea-aes256-GCM CONTENT-ENCRYPTION ::= {\n        IDENTIFIER id-aes128-GCM\n        PARAMS TYPE GCMParameters ARE required\n        SMIME-CAPS { IDENTIFIED BY id-aes256-GCM }\n}\nid-aes256-GCM OBJECT IDENTIFIER ::= { aes 46 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- Parameters for AlgorithmIdentifier",
      "zh-CHS": "--算法识别器的参数"
    },
    {
      "indent": 2,
      "text": "CCMParameters ::= SEQUENCE {\n    aes-nonce         OCTET STRING (SIZE(7..13)),\n    aes-ICVlen        AES-CCM-ICVlen DEFAULT 12 }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "AES-CCM-ICVlen ::= INTEGER (4 | 6 | 8 | 10 | 12 | 14 | 16)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GCMParameters ::= SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "aes-nonce OCTET STRING, -- recommended size is 12 octets aes-ICVlen AES-GCM-ICVlen DEFAULT 12 }",
      "zh-CHS": "aes nonce八位字节字符串，--建议大小为12个八位字节aes ICVlen aes GCM ICVlen DEFAULT 12}"
    },
    {
      "indent": 2,
      "text": "AES-GCM-ICVlen ::= INTEGER (12 | 13 | 14 | 15 | 16)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "12. ASN.1 Module for RFC 5275",
      "section_title": true,
      "zh-CHS": "12. RFC 5275的ASN.1模块"
    },
    {
      "indent": 2,
      "text": "SMIMESymmetricKeyDistribution-2009\n    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-symkeydist-02(36)}\nDEFINITIONS IMPLICIT TAGS ::=\nBEGIN\nEXPORTS ALL;\nIMPORTS",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "AlgorithmIdentifier{}, ALGORITHM, DIGEST-ALGORITHM, KEY-WRAP,\n        SMIMECapability{}, SMIMECapabilities{}, SMIME-CAPS\nFROM AlgorithmInformation-2009\n    {iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0)\n    id-mod-algorithmInformation-02(58)}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GeneralName\nFROM PKIX1Implicit-2009\n    { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Certificate\nFROM PKIX1Explicit-2009\n    { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-explicit-02(51) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "RecipientInfos, KEKIdentifier,CertificateSet\nFROM CryptographicMessageSyntax-2009\n    {iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-cms-2004-02(41) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "cap-3DESwrap\nFROM CryptographicMessageSyntaxAlgorithms\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) modules(0) id-mod-cmsalg-2001-02(37) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "AttributeCertificate\nFROM PKIXAttributeCertificate-2009\n    { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0) id-mod-attribute-cert-02(47) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "CMC-CONTROL, EXTENDED-FAILURE-INFO\nFROM EnrollmentMessageSyntax\n    { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) id-mod(0) id-mod-cmc2002-02(53) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "kwa-aes128-wrap, kwa-aes192-wrap, kwa-aes256-wrap\nFROM CMSAesRsaesOaep-2009\n    { iso(1) member-body(2) us(840) rsadsi(113549)\n    pkcs(1) pkcs-9(9) smime(16) modules(0) id-mod-cms-aes-02(38) } ;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the group list (GL symmetric key distribution OID arc\nid-skd OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) skd(8) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SKD-ControlSet CMC-CONTROL ::= {\n    skd-glUseKEK | skd-glDelete | skd-glAddMember |\n    skd-glDeleteMember | skd-glRekey | skd-glAddOwner |\n    skd-glRemoveOwner | skd-glKeyCompromise |\n    skd-glkRefresh | skd-glaQueryRequest | skd-glProvideCert |\n    skd-glManageCert | skd-glKey, ... }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the GL Use KEK control attribute",
      "zh-CHS": "--这定义了GL Use KEK control属性"
    },
    {
      "indent": 2,
      "text": "skd-glUseKEK CMC-CONTROL ::=\n    { GLUseKEK IDENTIFIED BY id-skd-glUseKEK }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glUseKEK OBJECT IDENTIFIER ::= { id-skd 1}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLUseKEK ::= SEQUENCE {\n    glInfo            GLInfo,\n    glOwnerInfo       SEQUENCE SIZE (1..MAX) OF GLOwnerInfo,\n    glAdministration  GLAdministration DEFAULT managed,\n    glKeyAttributes   GLKeyAttributes OPTIONAL\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLInfo ::= SEQUENCE {\n    glName     GeneralName,\n    glAddress  GeneralName\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLOwnerInfo ::= SEQUENCE {\n    glOwnerName     GeneralName,\n    glOwnerAddress  GeneralName,\n    certificates    Certificates OPTIONAL\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLAdministration ::= INTEGER {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": " unmanaged (0), managed (1), closed (2) }",
      "zh-CHS": "非托管（0）、托管（1）、关闭（2）}"
    },
    {
      "indent": 2,
      "text": "-- -- The advertised set of algorithm capabilities for the document --",
      "zh-CHS": "----文档的公布算法功能集--"
    },
    {
      "indent": 2,
      "text": "SKD-Caps SMIME-CAPS ::= {\n    cap-3DESwrap | kwa-aes128-wrap.&smimeCaps |\n    kwa-aes192-wrap.&smimeCaps | kwa-aes256-wrap.&smimeCaps,  ...\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "cap-aes128-cbc KeyWrapAlgorithm ::=\n    { capabilityID kwa-aes128-wrap.&smimeCaps.&id }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- -- The set of key wrap algorithms supported by this specification --",
      "zh-CHS": "----本规范支持的密钥封装算法集--"
    },
    {
      "indent": 2,
      "text": "KeyWrapAlgorithm ::= SMIMECapability{{SKD-Caps}}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLKeyAttributes ::= SEQUENCE {\n    rekeyControlledByGLO       [0] BOOLEAN DEFAULT FALSE,\n    recipientsNotMutuallyAware [1] BOOLEAN DEFAULT TRUE,\n    duration                   [2] INTEGER DEFAULT 0,\n    generationCounter          [3] INTEGER DEFAULT 2,\n    requestedAlgorithm         [4] KeyWrapAlgorithm\n                       DEFAULT cap-aes128-cbc\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the Delete GL control attribute.\n-- It has the simple type GeneralName.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "skd-glDelete CMC-CONTROL ::=\n    { DeleteGL IDENTIFIED BY id-skd-glDelete }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glDelete OBJECT IDENTIFIER ::= { id-skd 2}\nDeleteGL ::= GeneralName",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the Add GL Member control attribute",
      "zh-CHS": "--这定义了“添加总账成员控件”属性"
    },
    {
      "indent": 2,
      "text": "skd-glAddMember CMC-CONTROL ::=\n    { GLAddMember IDENTIFIED BY id-skd-glAddMember }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glAddMember OBJECT IDENTIFIER ::= { id-skd 3}\nGLAddMember ::= SEQUENCE {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": " glName GeneralName, glMember GLMember }",
      "zh-CHS": "glName GeneralName，glMember glMember}"
    },
    {
      "indent": 2,
      "text": "GLMember ::= SEQUENCE {\n    glMemberName     GeneralName,\n    glMemberAddress  GeneralName OPTIONAL,\n    certificates     Certificates OPTIONAL\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Certificates ::= SEQUENCE {\n    pKC       [0] Certificate OPTIONAL,\n                  -- See RFC 5280\n    aC        [1] SEQUENCE SIZE (1.. MAX) OF\n                    AttributeCertificate OPTIONAL,\n                  -- See RFC 3281\n    certPath  [2] CertificateSet OPTIONAL\n                  -- From RFC 3852\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the Delete GL Member control attribute",
      "zh-CHS": "--这定义了“删除总账成员”控件属性"
    },
    {
      "indent": 2,
      "text": "skd-glDeleteMember CMC-CONTROL ::=\n    { GLDeleteMember IDENTIFIED BY id-skd-glDeleteMember }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glDeleteMember OBJECT IDENTIFIER ::= { id-skd 4}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLDeleteMember ::= SEQUENCE {\n    glName            GeneralName,\n    glMemberToDelete  GeneralName\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the Delete GL Member control attribute",
      "zh-CHS": "--这定义了“删除总账成员”控件属性"
    },
    {
      "indent": 2,
      "text": "skd-glRekey CMC-CONTROL ::=\n    { GLRekey IDENTIFIED BY id-skd-glRekey }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glRekey OBJECT IDENTIFIER ::= { id-skd 5}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLRekey ::= SEQUENCE {\n    glName              GeneralName,\n    glAdministration    GLAdministration OPTIONAL,\n    glNewKeyAttributes  GLNewKeyAttributes OPTIONAL,\n    glRekeyAllGLKeys    BOOLEAN OPTIONAL\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLNewKeyAttributes ::= SEQUENCE {\n    rekeyControlledByGLO       [0] BOOLEAN OPTIONAL,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": " recipientsNotMutuallyAware [1] BOOLEAN OPTIONAL, duration [2] INTEGER OPTIONAL, generationCounter [3] INTEGER OPTIONAL, requestedAlgorithm [4] KeyWrapAlgorithm OPTIONAL }",
      "zh-CHS": "recipientsNotMutuallyAware[1]布尔可选，持续时间[2]整数可选，生成计数器[3]整数可选，requestedAlgorithm[4]KeyWrapAlgorithm可选}"
    },
    {
      "indent": 2,
      "text": "-- This defines the Add and Delete GL Owner control attributes",
      "zh-CHS": "--这定义了添加和删除总账所有者控制属性"
    },
    {
      "indent": 2,
      "text": "skd-glAddOwner CMC-CONTROL ::=\n    { GLOwnerAdministration IDENTIFIED BY id-skd-glAddOwner }\nid-skd-glAddOwner OBJECT IDENTIFIER ::= { id-skd 6}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "skd-glRemoveOwner CMC-CONTROL ::=\n    { GLOwnerAdministration IDENTIFIED BY id-skd-glRemoveOwner }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glRemoveOwner OBJECT IDENTIFIER ::= { id-skd 7}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLOwnerAdministration ::= SEQUENCE {\n    glName       GeneralName,\n    glOwnerInfo  GLOwnerInfo\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the GL Key Compromise control attribute.\n-- It has the simple type GeneralName.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "skd-glKeyCompromise CMC-CONTROL ::=\n    { GLKCompromise IDENTIFIED BY id-skd-glKeyCompromise }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glKeyCompromise OBJECT IDENTIFIER ::= { id-skd 8}\nGLKCompromise ::= GeneralName",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the GL Key Refresh control attribute.",
      "zh-CHS": "--这定义了GL键刷新控制属性。"
    },
    {
      "indent": 2,
      "text": "skd-glkRefresh CMC-CONTROL ::=\n    { GLKRefresh IDENTIFIED BY id-skd-glkRefresh }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glkRefresh OBJECT IDENTIFIER ::= { id-skd 9}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLKRefresh ::= SEQUENCE {\n    glName  GeneralName,\n    dates   SEQUENCE SIZE (1..MAX) OF Date\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Date ::= SEQUENCE {\n    start GeneralizedTime,\n    end   GeneralizedTime OPTIONAL\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the GLA Query Request control attribute.",
      "zh-CHS": "--这定义了GLA查询请求控制属性。"
    },
    {
      "indent": 2,
      "text": "skd-glaQueryRequest CMC-CONTROL ::=\n    { GLAQueryRequest IDENTIFIED BY id-skd-glaQueryRequest }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glaQueryRequest OBJECT IDENTIFIER ::= { id-skd 11}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SKD-QUERY ::= TYPE-IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SkdQuerySet SKD-QUERY ::= {skd-AlgRequest, ...}\nGLAQueryRequest ::= SEQUENCE {\n    glaRequestType   SKD-QUERY.&id ({SkdQuerySet}),\n    glaRequestValue  SKD-QUERY.\n                         &Type ({SkdQuerySet}{@glaRequestType})\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the GLA Query Response control attribute.",
      "zh-CHS": "--这定义了GLA查询响应控制属性。"
    },
    {
      "indent": 2,
      "text": "skd-glaQueryResponse CMC-CONTROL ::=\n    { GLAQueryResponse IDENTIFIED BY id-skd-glaQueryResponse }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glaQueryResponse OBJECT IDENTIFIER ::= { id-skd 12}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SKD-RESPONSE ::= TYPE-IDENTIFIER",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SkdResponseSet SKD-RESPONSE ::= {skd-AlgResponse, ...}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLAQueryResponse ::= SEQUENCE {\n    glaResponseType   SKD-RESPONSE.\n                          &id({SkdResponseSet}),\n    glaResponseValue  SKD-RESPONSE.\n                          &Type({SkdResponseSet}{@glaResponseType})}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the GLA Request/Response (glaRR) arc for\n-- glaRequestType/glaResponseType.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-cmc-glaRR OBJECT IDENTIFIER ::=\n    { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) cmc(7) glaRR(99) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the Algorithm Request",
      "zh-CHS": "--这定义了算法请求"
    },
    {
      "indent": 2,
      "text": "skd-AlgRequest SKD-QUERY ::= {\n   SKDAlgRequest IDENTIFIED BY id-cmc-gla-skdAlgRequest\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-cmc-gla-skdAlgRequest OBJECT IDENTIFIER ::= { id-cmc-glaRR 1 }\nSKDAlgRequest ::= NULL",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the Algorithm Response",
      "zh-CHS": "--这定义了算法响应"
    },
    {
      "indent": 2,
      "text": "skd-AlgResponse SKD-RESPONSE ::= {\n    SMIMECapability{{SKD-Caps}} IDENTIFIED BY\n        id-cmc-gla-skdAlgResponse\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-cmc-gla-skdAlgResponse OBJECT IDENTIFIER ::= { id-cmc-glaRR 2 }\n-- Note that the response for algorithmSupported request is the\n-- smimeCapabilities attribute as defined in RFC 3851.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the control attribute to request an updated\n-- certificate to the GLA.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "skd-glProvideCert CMC-CONTROL ::=\n    { GLManageCert IDENTIFIED BY id-skd-glProvideCert }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glProvideCert OBJECT IDENTIFIER ::= { id-skd 13}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLManageCert ::= SEQUENCE {\n    glName    GeneralName,\n    glMember  GLMember\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the control attribute to return an updated\n-- certificate to the GLA.  It has the type GLManageCert.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "skd-glManageCert CMC-CONTROL ::=\n    { GLManageCert IDENTIFIED BY id-skd-glManageCert }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glManageCert OBJECT IDENTIFIER ::= { id-skd 14}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the control attribute to distribute the GL shared\n-- KEK.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "skd-glKey CMC-CONTROL ::=\n    { GLKey IDENTIFIED BY id-skd-glKey }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-skd-glKey OBJECT IDENTIFIER ::= { id-skd 15}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "GLKey ::= SEQUENCE {\n    glName        GeneralName,\n    glIdentifier  KEKIdentifier,   -- See RFC 3852\n    glkWrapped    RecipientInfos,  -- See RFC 3852\n    glkAlgorithm  KeyWrapAlgorithm,\n    glkNotBefore  GeneralizedTime,\n    glkNotAfter   GeneralizedTime\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "-- This defines the CMC error types",
      "zh-CHS": "--这定义了CMC错误类型"
    },
    {
      "indent": 2,
      "text": "skd-ExtendedFailures EXTENDED-FAILURE-INFO ::= {\n   SKDFailInfo IDENTIFIED BY id-cet-skdFailInfo\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "id-cet-skdFailInfo  OBJECT IDENTIFIER ::=\n    { iso(1) identified-organization(3) dod(6) internet(1) security(5)\n    mechanisms(5) pkix(7) cet(15) skdFailInfo(1) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "SKDFailInfo ::= INTEGER {\n    unspecified           (0),\n    closedGL              (1),\n    unsupportedDuration   (2),\n    noGLACertificate      (3),\n    invalidCert           (4),\n    unsupportedAlgorithm  (5),\n    noGLONameMatch        (6),\n    invalidGLName         (7),\n    nameAlreadyInUse      (8),\n    noSpam                (9),\n    deniedAccess          (10),\n    alreadyAMember        (11),\n    notAMember            (12),\n    alreadyAnOwner        (13),\n    notAnOwner            (14) }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "END",
      "zh-CHS": "终止"
    },
    {
      "indent": 0,
      "text": "13. Security Considerations",
      "section_title": true,
      "zh-CHS": "13. 安全考虑"
    },
    {
      "indent": 3,
      "text": "Even though all the RFCs in this document are security-related, the document itself does not have any security considerations. The ASN.1 modules keep the same bits-on-the-wire as the modules that they replace.",
      "zh-CHS": "即使本文档中的所有RFC都与安全相关，文档本身也没有任何安全考虑。ASN.1模块在导线上保留与其替换的模块相同的位。"
    },
    {
      "indent": 0,
      "text": "14. Normative References",
      "section_title": true,
      "zh-CHS": "14. 规范性引用文件"
    },
    {
      "indent": 3,
      "text": "[ASN1-2002] ITU-T, \"ITU-T Recommendation X.680, X.681, X.682, and X.683\", ITU-T X.680, X.681, X.682, and X.683, 2002.",
      "zh-CHS": "[ASN1-2002]ITU-T，“ITU-T建议X.680、X.681、X.682和X.683”，ITU-T X.680、X.681、X.682和X.683，2002年。"
    },
    {
      "indent": 3,
      "text": "[RFC3370] Housley, R., \"Cryptographic Message Syntax (CMS) Algorithms\", RFC 3370, August 2002.",
      "zh-CHS": "[RFC3370]Housley，R.，“加密消息语法（CMS）算法”，RFC3370，2002年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC3565] Schaad, J., \"Use of the Advanced Encryption Standard (AES) Encryption Algorithm in Cryptographic Message Syntax (CMS)\", RFC 3565, July 2003.",
      "zh-CHS": "[RFC3565]Schaad，J.，“在加密消息语法（CMS）中使用高级加密标准（AES）加密算法”，RFC 3565，2003年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC3851] Ramsdell, B., \"Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.1 Message Specification\", RFC 3851, July 2004.",
      "zh-CHS": "[RFC3851]Ramsdell，B.，“安全/多用途Internet邮件扩展（S/MIME）版本3.1消息规范”，RFC 38512004年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC3852] Housley, R., \"Cryptographic Message Syntax (CMS)\", RFC 3852, July 2004.",
      "zh-CHS": "[RFC3852]Housley，R.，“加密消息语法（CMS）”，RFC3852，2004年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC4108] Housley, R., \"Using Cryptographic Message Syntax (CMS) to Protect Firmware Packages\", RFC 4108, August 2005.",
      "zh-CHS": "[RFC4108]Housley，R.“使用加密消息语法（CMS）保护固件包”，RFC 4108，2005年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC4998] Gondrom, T., Brandner, R., and U. Pordesch, \"Evidence Record Syntax (ERS)\", RFC 4998, August 2007.",
      "zh-CHS": "[RFC4998]Gondrom，T.，Brandner，R.，和U.Pordesch，“证据记录语法（ERS）”，RFC 49982007年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5035] Schaad, J., \"Enhanced Security Services (ESS) Update: Adding CertID Algorithm Agility\", RFC 5035, August 2007.",
      "zh-CHS": "[RFC5035]Schaad，J.，“增强安全服务（ESS）更新：添加CertID算法敏捷性”，RFC 5035，2007年8月。"
    },
    {
      "indent": 3,
      "text": "[RFC5083] Housley, R., \"Cryptographic Message Syntax (CMS) Authenticated-Enveloped-Data Content Type\", RFC 5083, November 2007.",
      "zh-CHS": "[RFC5083]Housley，R.，“加密消息语法（CMS）认证的信封数据内容类型”，RFC 5083，2007年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC5084] Housley, R., \"Using AES-CCM and AES-GCM Authenticated Encryption in the Cryptographic Message Syntax (CMS)\", RFC 5084, November 2007.",
      "zh-CHS": "[RFC5084]Housley，R.，“在加密消息语法（CMS）中使用AES-CCM和AES-GCM认证加密”，RFC 5084，2007年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC5275] Turner, S., \"CMS Symmetric Key Management and Distribution\", RFC 5275, June 2008.",
      "zh-CHS": "[RFC5275]Turner，S.，“CMS对称密钥管理和分发”，RFC 52752008年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC5652] Housley, R., \"Cryptographic Message Syntax (CMS)\", RFC 5652, September 2009.",
      "zh-CHS": "[RFC5652]Housley，R.，“加密消息语法（CMS）”，RFC 56522009年9月。"
    },
    {
      "indent": 3,
      "text": "[RFC5912] Hoffman, P. and J. Schaad, \"New ASN.1 Modules for the Public Key Infrastructure using X.509 (PKIX)\", RFC 5912, June 2010.",
      "zh-CHS": "[RFC5912]Hoffman，P.和J.Schaad，“使用X.509（PKIX）的公钥基础设施的新ASN.1模块”，RFC 5912，2010年6月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "zh-CHS": "作者地址"
    },
    {
      "indent": 3,
      "text": "Paul Hoffman VPN Consortium 127 Segre Place Santa Cruz, CA 95060 US",
      "zh-CHS": "美国加利福尼亚州圣克鲁斯塞格雷广场127号保罗·霍夫曼私人有限公司，邮编95060"
    },
    {
      "indent": 3,
      "text": "Phone: 1-831-426-9827 EMail: paul.hoffman@vpnc.org",
      "zh-CHS": "电话：1-831-426-9827电子邮件：保罗。hoffman@vpnc.org"
    },
    {
      "indent": 3,
      "text": "Jim Schaad Soaring Hawk Consulting",
      "zh-CHS": "吉姆·沙德·霍克咨询公司"
    },
    {
      "indent": 3,
      "text": "EMail: jimsch@exmsft.com",
      "raw": true,
      "zh-CHS": " "
    }
  ]
}