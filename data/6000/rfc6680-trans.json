{
  "title": {
    "text": "RFC 6680: Generic Security Service Application Programming Interface (GSS-API) Naming Extensions",
    "zh-CHS": "RFC 6680"
  },
  "number": 6680,
  "created_at": "2021-11-04 00:35:55.016331+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                       N. Williams\nRequest for Comments: 6680                             Cryptonector, LLC\nCategory: Standards Track                                   L. Johansson\nISSN: 2070-1721                                                    SUNET\n                                                              S. Hartman\n                                                       Painless Security\n                                                            S. Josefsson\n                                                                  SJD AB\n                                                             August 2012",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "Generic Security Service Application Programming Interface (GSS-API) Naming Extensions",
      "zh-CHS": "通用安全服务应用程序编程接口（GSS-API）命名扩展"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "The Generic Security Service Application Programming Interface (GSS-API) provides a simple naming architecture that supports name-based authorization. This document introduces new APIs that extend the GSS-API naming model to support name attribute transfer between GSS-API peers.",
      "zh-CHS": "通用安全服务应用程序编程接口（GSS-API）提供了一个简单的命名体系结构，支持基于名称的授权。本文档介绍了扩展GSS-API命名模型的新API，以支持GSS-API对等方之间的名称属性传输。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "zh-CHS": "关于下段备忘"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "zh-CHS": "这是一份互联网标准跟踪文件。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "zh-CHS": "本文件是互联网工程任务组（IETF）的产品。它代表了IETF社区的共识。它已经接受了公众审查，并已被互联网工程指导小组（IESG）批准出版。有关互联网标准的更多信息，请参见RFC 5741第2节。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc6680.",
      "zh-CHS": "有关本文件当前状态、任何勘误表以及如何提供反馈的信息，请访问http://www.rfc-editor.org/info/rfc6680."
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2012 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "zh-CHS": "版权所有（c）2012 IETF信托基金和确定为文件作者的人员。版权所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of",
      "zh-CHS": "本文件受BCP 78和IETF信托有关IETF文件的法律规定的约束(http://trustee.ietf.org/license-info)自本文件出版之日起生效。请仔细阅读这些文件，因为它们描述了您对本文件的权利和限制。从本文件中提取的代码组件必须包括简化的BSD许可证文本，如本规范第4.e节所述"
    },
    {
      "indent": 3,
      "text": "the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "zh-CHS": "如简化的BSD许可证所述，信托法律条款和许可证不提供任何担保。"
    },
    {
      "indent": 3,
      "text": "This document may contain material from IETF Documents or IETF Contributions published or made publicly available before November 10, 2008. The person(s) controlling the copyright in some of this material may not have granted the IETF Trust the right to allow modifications of such material outside the IETF Standards Process. Without obtaining an adequate license from the person(s) controlling the copyright in such materials, this document may not be modified outside the IETF Standards Process, and derivative works of it may not be created outside the IETF Standards Process, except to format it for publication as an RFC or to translate it into languages other than English.",
      "zh-CHS": "本文件可能包含2008年11月10日之前发布或公开的IETF文件或IETF贡献中的材料。控制某些材料版权的人员可能未授予IETF信托允许在IETF标准流程之外修改此类材料的权利。在未从控制此类材料版权的人员处获得充分许可的情况下，不得在IETF标准流程之外修改本文件，也不得在IETF标准流程之外创建其衍生作品，除了将其格式化以RFC形式发布或将其翻译成英语以外的其他语言。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3\n2.  Conventions Used in This Document  . . . . . . . . . . . . . .  3\n3.  Name Attribute Authenticity  . . . . . . . . . . . . . . . . .  4\n4.  Name Attributes/Values as ACL Subjects . . . . . . . . . . . .  4\n5.  Naming Contexts  . . . . . . . . . . . . . . . . . . . . . . .  4\n6.  Representation of Attribute Names  . . . . . . . . . . . . . .  6\n7.  API  . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  7\n  7.1.  SET OF OCTET STRING  . . . . . . . . . . . . . . . . . . .  7\n  7.2.  Const Types  . . . . . . . . . . . . . . . . . . . . . . .  8\n  7.3.  GSS_Display_name_ext() . . . . . . . . . . . . . . . . . .  8\n    7.3.1.  C-Bindings . . . . . . . . . . . . . . . . . . . . . .  9\n  7.4.  GSS_Inquire_name() . . . . . . . . . . . . . . . . . . . .  9\n    7.4.1.  C-Bindings . . . . . . . . . . . . . . . . . . . . . . 10\n  7.5.  GSS_Get_name_attribute() . . . . . . . . . . . . . . . . . 10\n    7.5.1.  C-Bindings . . . . . . . . . . . . . . . . . . . . . . 11\n  7.6.  GSS_Set_name_attribute() . . . . . . . . . . . . . . . . . 12\n    7.6.1.  C-Bindings . . . . . . . . . . . . . . . . . . . . . . 13\n  7.7.  GSS_Delete_name_attribute()  . . . . . . . . . . . . . . . 14\n    7.7.1.  C-Bindings . . . . . . . . . . . . . . . . . . . . . . 14\n  7.8.  GSS_Export_name_composite()  . . . . . . . . . . . . . . . 14\n    7.8.1.  C-Bindings . . . . . . . . . . . . . . . . . . . . . . 15\n8.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 15\n9.  Security Considerations  . . . . . . . . . . . . . . . . . . . 16\n10. References . . . . . . . . . . . . . . . . . . . . . . . . . . 17\n  10.1. Normative References . . . . . . . . . . . . . . . . . . . 17\n  10.2. Informative References . . . . . . . . . . . . . . . . . . 17",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "As described in [RFC4768], the GSS-API's naming architecture suffers from certain limitations. This document attempts to overcome these limitations.",
      "zh-CHS": "如[RFC4768]所述，GSS-API的命名体系结构受到某些限制。本文件试图克服这些限制。"
    },
    {
      "indent": 3,
      "text": "A number of extensions to the GSS-API [RFC2743] and its C-bindings [RFC2744] are described herein. The goal is to make information modeled as \"name attributes\" available to applications. Such information MAY, for instance, be used by applications to make authorization decisions. For example, Kerberos V authorization data elements, both in their raw forms as well as mapped to more useful value types, can be made available to GSS-API applications through these interfaces.",
      "zh-CHS": "本文描述了对GSS-API[RFC2743]及其C-绑定[RFC2744]的许多扩展。目标是使信息建模为应用程序可用的“名称属性”。例如，应用程序可以使用这些信息来做出授权决策。例如，Kerberos V授权数据元素，无论是原始形式还是映射到更有用的值类型，都可以通过这些接口提供给GSS-API应用程序。"
    },
    {
      "indent": 3,
      "text": "The model is that GSS names have attributes. The attributes of a name may be authenticated (e.g., an X509 attribute certificate or signed Security Assertion Markup Language (SAML) attribute assertion) or may have been set on a GSS name for the purpose of locally \"asserting\" the attribute during credential acquisition or security context exchange. Name attributes' values are network representations thereof (e.g., the actual value octets of the contents of an X.509 certificate extension, for example) and are intended to be useful for constructing portable access control facilities. Applications may often require language- or platform-specific data types, rather than network representations of name attributes, so a function is provided to obtain objects of such types associated with names and name attributes.",
      "zh-CHS": "模型是GSS名称具有属性。名称的属性可能经过身份验证（例如，X509属性证书或签名安全断言标记语言（SAML）属性断言），或者可能已在GSS名称上设置，以便在凭证获取或安全上下文交换期间本地“断言”属性。名称属性的值是其网络表示（例如，X.509证书扩展的内容的实际值八位字节），并且用于构建便携式访问控制设施。应用程序通常可能需要特定于语言或平台的数据类型，而不是名称属性的网络表示，因此提供了一个函数来获取与名称和名称属性关联的此类类型的对象。"
    },
    {
      "indent": 3,
      "text": "Future updates of this specification may involve adding an attribute namespace for attributes that only have application-specific semantics. Note that mechanisms will still need to know how to transport such attributes. The IETF may also wish to add functions by which to inquire whether a mechanism(s) understands a given attribute name or namespace and to list which attributes or attribute namespaces a mechanism understands. Finally, the IETF may want to consider adding a function by which to determine the name of the issuer of a name attribute.",
      "zh-CHS": "本规范的未来更新可能涉及为仅具有应用程序特定语义的属性添加属性命名空间。注意，机制仍然需要知道如何传输这些属性。IETF还可能希望添加一些函数，通过这些函数查询机制是否理解给定的属性名称或命名空间，并列出机制理解的属性或属性命名空间。最后，IETF可能想考虑添加一个函数来确定名称属性的颁发者的名称。"
    },
    {
      "indent": 0,
      "text": "2. Conventions Used in This Document",
      "section_title": true,
      "zh-CHS": "2. 本文件中使用的公约"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "zh-CHS": "本文件中的关键词“必须”、“不得”、“必需”、“应”、“不应”、“应”、“不应”、“建议”、“可”和“可选”应按照[RFC2119]中所述进行解释。"
    },
    {
      "indent": 0,
      "text": "3. Name Attribute Authenticity",
      "section_title": true,
      "zh-CHS": "3. 名称属性真实性"
    },
    {
      "indent": 3,
      "text": "An attribute is \"authenticated\" if and only if there is a secure association between the attribute (and its values) and the trusted source of the peer credential. Examples of authenticated attributes are (any part of) the signed portion of an X.509 certificate or AD-KDCIssued authorization data elements (Section 5.2.6.2 of [RFC4120]) in Kerberos V Tickets, provided, of course, that the authenticity of the respective security associations (e.g., signatures) has been verified.",
      "zh-CHS": "当且仅当属性（及其值）与对等凭据的受信任源之间存在安全关联时，属性才被“验证”。已验证属性的示例包括X.509证书的已签名部分或Kerberos V票据中的已发布授权数据元素（RFC4120的第5.2.6.2节），当然，前提是已验证各个安全关联（例如签名）的真实性。"
    },
    {
      "indent": 3,
      "text": "Note that the fact that an attribute is authenticated does not imply anything about the semantics of the attribute nor that the trusted credential source was authorized to assert the attribute. Such interpretations SHOULD be the result of applying local policy to the attribute.",
      "zh-CHS": "请注意，属性经过身份验证这一事实并不意味着与属性的语义有关，也不意味着受信任的凭证源被授权断言该属性。这种解释应该是对属性应用本地政策的结果。"
    },
    {
      "indent": 3,
      "text": "An unauthenticated attribute is called _asserted_ in what follows. This is not to be confused with other uses of the words \"asserted\" or \"assertion\" such as \"SAML attribute assertion\", the attributes of which may be authenticated in the sense of this document, for instance, if the SAML attribute assertion was signed by a key trusted by the peer.",
      "zh-CHS": "未经验证的属性称为_asserted u，如下所示。这不应与“断言”或“断言”等词的其他用法相混淆，例如“SAML属性断言”，如果SAML属性断言是由对等方信任的密钥签名的，则其属性可以按照本文档的意义进行身份验证。"
    },
    {
      "indent": 0,
      "text": "4. Name Attributes/Values as ACL Subjects",
      "section_title": true,
      "zh-CHS": "4. 将属性/值命名为ACL主题"
    },
    {
      "indent": 3,
      "text": "To facilitate the development of portable applications that make use of name attributes to construct and evaluate portable Access Control Lists (ACLs), the GSS-API makes name attribute values available in canonical network encodings thereof.",
      "zh-CHS": "为了便于开发利用名称属性来构造和评估可移植访问控制列表（ACL）的可移植应用程序，GSS-API使名称属性值在其规范网络编码中可用。"
    },
    {
      "indent": 0,
      "text": "5. Naming Contexts",
      "section_title": true,
      "zh-CHS": "5. 命名上下文"
    },
    {
      "indent": 3,
      "text": "Several factors influence the context in which a name attribute is interpreted. One is the trust context.",
      "zh-CHS": "有几个因素会影响解释名称属性的上下文。一个是信任上下文。"
    },
    {
      "indent": 3,
      "text": "As discussed previously, applications apply local policy to determine whether a particular peer credential issuer is trusted to make a given statement. Different GSS-API mechanisms and deployments have different trust models surrounding attributes they provide about a name.",
      "zh-CHS": "如前所述，应用程序应用本地策略来确定是否信任特定的对等凭证颁发者来发出给定的语句。不同的GSS-API机制和部署围绕其提供的有关名称的属性具有不同的信任模型。"
    },
    {
      "indent": 3,
      "text": "For example, Kerberos deployments in the enterprise typically trust a Key Distribution Center (KDC) to make any statement about principals in a realm. This includes attributes such as group membership.",
      "zh-CHS": "例如，企业中的Kerberos部署通常信任密钥分发中心（KDC）对域中的主体进行任何声明。这包括组成员资格等属性。"
    },
    {
      "indent": 3,
      "text": "In contrast, in a federated SAML environment, the identity provider typically exists in a different organization than the acceptor. In this case, the set of group memberships or entitlements that the IDP is permitted to make needs to be filtered by the policy of the acceptor and federation.",
      "zh-CHS": "相反，在联合SAML环境中，身份提供程序通常存在于与接受程序不同的组织中。在这种情况下，允许IDP进行的组成员资格或权利集需要由接受者和联盟的策略进行过滤。"
    },
    {
      "indent": 3,
      "text": "So even an attribute containing the same information, such as email address, would need to be treated differently by the application in the context of an enterprise deployment from the context of a federation.",
      "zh-CHS": "因此，即使是包含相同信息（如电子邮件地址）的属性，应用程序也需要在企业部署上下文中与联合上下文中区别对待。"
    },
    {
      "indent": 3,
      "text": "Another aspect related to trust is the role of the credential issuer in providing the attribute. Consider Public Key Cryptography for Initial Authentication in Kerberos (PKINIT) [RFC4556]. In this protocol, a public key and associated certificate are used to authenticate to a Kerberos KDC. Consider how attributes related to a PKINIT certificate should be made available in GSS-API authentications based on the Kerberos ticket. In some deployments, the certificate may be fully trusted; by including the certificate information in the ticket, the KDC permits the acceptor to trust the information in the certificate just as if the KDC itself had made these statements. In other deployments, the KDC may have authorized a hash of the certificate without evaluating the content of the certificate or generally trusting the issuing certification authority. In this case, if the certificate were included in the issued ticket, the KDC would only be making the statement that the certificate was used in the authentication. This statement would be authenticated but would not imply that the KDC asserted that particular attributes of the certificate accurately described the initiator.",
      "zh-CHS": "与信任相关的另一个方面是凭证颁发者在提供属性中的角色。考虑Kerberos（PKIIT）中初始身份验证的公钥密码[RCFC5656]。在该协议中，公钥和相关证书用于对Kerberos KDC进行身份验证。考虑基于Kerberos票据的GSS-API认证应该如何获得与PKIMIT证书相关的属性。在某些部署中，证书可能是完全可信的；通过将证书信息包含在票据中，KDC允许接收者信任证书中的信息，就像KDC自己做了这些声明一样。在其他部署中，KDC可能已授权证书的哈希，而不评估证书的内容或通常信任颁发证书的机构。在这种情况下，如果证书包含在颁发的票证中，KDC将只声明证书用于身份验证。该语句将经过身份验证，但并不意味着KDC断言证书的特定属性准确描述了启动器。"
    },
    {
      "indent": 3,
      "text": "Another aspect of context is encoding of the attribute information. An attribute containing an ASCII [ANSI.X3-4.1986] or UTF-8 [RFC3629] version of an email address could not be interpreted the same as an ASN.1 Distinguished Encoding Rules email address in a certificate.",
      "zh-CHS": "上下文的另一个方面是属性信息的编码。包含ASCII[ANSI.X3-4.1986]或UTF-8[RFC3629]版本电子邮件地址的属性不能被解释为证书中的ASN.1可分辨编码规则电子邮件地址。"
    },
    {
      "indent": 3,
      "text": "All of these contextual aspects of a name attribute affect whether two attributes can be treated the same by an application and thus whether they should be considered the same name attribute. In the GSS-API naming extensions, attributes that have different contexts MUST have different names so they can be distinguished by applications. As an unfortunate consequence of this requirement, multiple attribute names will exist for the same basic information. That is, there is no single attribute name for the email address of an initiator. Other aspects of how mechanisms describe information about subjects would already make this true. For example, some mechanisms use OIDs to name attributes; others use URIs.",
      "zh-CHS": "名称属性的所有这些上下文方面都会影响应用程序是否可以将两个属性视为相同的名称属性，从而影响它们是否应被视为相同的名称属性。在GSS-API命名扩展中，具有不同上下文的属性必须具有不同的名称，以便应用程序能够区分它们。这一要求的不幸后果是，对于相同的基本信息，将存在多个属性名称。也就是说，发起人的电子邮件地址没有单一属性名称。机制如何描述受试者信息的其他方面已经证明了这一点。例如，一些机制使用OID命名属性；其他人使用URI。"
    },
    {
      "indent": 3,
      "text": "Local implementations or platforms are likely to have sufficient policy and information to know when contexts can be treated as the same. For example, the GSS-API implementation may know that a particular certification authority can be trusted in the context of a PKINIT authentication. The local implementation may have sufficient policy to know that a particular credential issuer is trusted to make a given statement. In order to take advantage of this local knowledge within the GSS-API implementation, naming extensions support the concept of local attributes in addition to standard attributes. For example, an implementation might provide a local attribute for email address. The implementation would specify the encoding and representation of this attribute; mechanism-specific standards attributes would be re-encoded if necessary to meet this representation. Only email addresses in contexts that meet the requirements of local policy would be mapped into this local attribute.",
      "zh-CHS": "本地实现或平台可能有足够的策略和信息来知道何时可以将上下文视为相同的。例如，GSS-API实现可能知道在PKINIT认证的上下文中可以信任特定的证书颁发机构。本地实现可能具有足够的策略来知道特定凭证颁发者被信任来进行给定语句。为了利用GSS-API实现中的本地知识，命名扩展除了支持标准属性外，还支持本地属性的概念。例如，一个实现可以为电子邮件地址提供一个本地属性。实现将指定该属性的编码和表示；如有必要，将对特定于机制的标准属性进行重新编码，以满足此表示。只有满足本地策略要求的上下文中的电子邮件地址才会映射到此本地属性。"
    },
    {
      "indent": 3,
      "text": "Such local attributes inherently expose a trade-off between interoperability and usability. Using a local attribute in an application requires knowledge of the local implementation. However, using a standardized attribute in an application requires more knowledge of policy and more validation logic in the application. Sharing this logic in the local platform provides more consistency across applications as well as reduces implementation costs. Both options are needed.",
      "zh-CHS": "这种本地属性本质上暴露了互操作性和可用性之间的权衡。在应用程序中使用本地属性需要了解本地实现。但是，在应用程序中使用标准化属性需要更多的策略知识和应用程序中更多的验证逻辑。在本地平台中共享此逻辑可在应用程序之间提供更高的一致性，并降低实施成本。这两种选择都是必要的。"
    },
    {
      "indent": 0,
      "text": "6. Representation of Attribute Names",
      "section_title": true,
      "zh-CHS": "6. 属性名称的表示"
    },
    {
      "indent": 3,
      "text": "Different underlying mechanisms (e.g., SAML or X.509 certificates) provide different representations for the names of their attributes. In X.509 certificates, most objects are named by object identifiers (OIDs). The type of object (certificate extension, name constraint, keyPurposeID, etc.) along with the OID is sufficient to identify the attribute. By contrast, according to Sections 8.2 and 2.7.3.1 of [OASIS.saml-core-2.0-os], the name of an attribute has two parts. The first is a URI describing the format of the name. The second part, whose form depends on the format URI, is the actual name. In other cases, an attribute might represent a certificate that plays some particular role in a GSS-API mechanism; such attributes might have a simple mechanism-defined name.",
      "zh-CHS": "不同的底层机制（例如SAML或X.509证书）为其属性的名称提供了不同的表示。在X.509证书中，大多数对象由对象标识符（OID）命名。对象的类型（证书扩展、名称约束、keyPurposeID等）以及OID足以标识属性。相比之下，根据[OASIS.saml-core-2.0-os]的第8.2节和第2.7.3.1节，属性的名称有两部分。第一个是描述名称格式的URI。第二部分是实际名称，其形式取决于格式URI。在其他情况下，属性可能表示在GSS-API机制中扮演特定角色的证书；这些属性可能有一个简单的机制定义名称。"
    },
    {
      "indent": 3,
      "text": "Attribute names MUST support multiple components. If there is more than one component in an attribute name, the more significant components define the semantics of the less significant components.",
      "zh-CHS": "属性名称必须支持多个组件。如果一个属性名中有多个组件，则更重要的组件定义了不重要组件的语义。"
    },
    {
      "indent": 3,
      "text": "Attribute names are represented as OCTET STRING elements in the API described below. These attribute names have syntax and semantics that are understood by the application and by the lower-layer implementations (some of which are described below).",
      "zh-CHS": "属性名称在下面描述的API中表示为八位字节字符串元素。这些属性名称的语法和语义为应用程序和较低层实现所理解（其中一些将在下面描述）。"
    },
    {
      "indent": 3,
      "text": "If an attribute name contains a space (ASCII 0x20), the first space separates the most significant or primary component of the name from the remainder. We may refer to the primary component of the attribute name as the attribute name's \"prefix\". If there is no space, the primary component is the entire name; otherwise, it defines the interpretation of the remainder of the names.",
      "zh-CHS": "如果属性名称包含空格（ASCII 0x20），则第一个空格将名称的最重要或主要部分与其余部分分开。我们可以将属性名称的主要组件称为属性名称的“前缀”。如果没有空格，则主要组件是整个名称；否则，它将定义其余名称的解释。"
    },
    {
      "indent": 3,
      "text": "If the primary component contains a \":\" (ASCII 0x3a), then the primary component is a URI. Otherwise, the attribute is a local attribute and the primary component has meaning to the implementation of GSS-API or to the specific configuration of the application. Local attribute names with an \"at\" sign (\"@\") in them are reserved for future allocation by the IETF.",
      "zh-CHS": "如果主组件包含“：”（ASCII 0x3a），则主组件是URI。否则，该属性是本地属性，主要组件对GSS-API的实现或应用程序的特定配置具有意义。带有“at”符号（“@”）的本地属性名称保留给IETF将来分配。"
    },
    {
      "indent": 3,
      "text": "Since attribute names are split at the first space into prefix and suffix, there is a potential for ambiguity if a mechanism blindly passes through a name attribute whose name it does not understand. In order to prevent such ambiguities, the mechanism MUST always prefix raw name attributes with a prefix that reflects the context of the attribute.",
      "zh-CHS": "由于属性名称在第一个空格处分为前缀和后缀，因此如果机制盲目地通过其不理解名称的名称属性，则可能会产生歧义。为了防止这种歧义，该机制必须始终使用反映属性上下文的前缀作为原始名称属性的前缀。"
    },
    {
      "indent": 3,
      "text": "Local attribute names under the control of an administrator or a sufficiently trusted part of the platform need not have a prefix to describe context.",
      "zh-CHS": "由管理员或平台的充分受信任部分控制的本地属性名称不需要前缀来描述上下文。"
    },
    {
      "indent": 0,
      "text": "7. API",
      "section_title": true,
      "zh-CHS": "7. 美国石油学会"
    },
    {
      "indent": 0,
      "text": "7.1. SET OF OCTET STRING",
      "section_title": true,
      "zh-CHS": "7.1. 八进制字符串集"
    },
    {
      "indent": 3,
      "text": "The construct \"SET OF OCTET STRING\" occurs once in RFC 2743 [RFC2743], where it is used to represent a set of status strings in the GSS_Display_status call. The Global Grid Forum has defined SET OF OCTET STRING as a buffer set type in GFD.024 [GFD.024], which also provides one API for memory management of these structures. The normative reference to GFD.024 [GFD.024] is for the buffer set functions defined in Section 2.5 and the associated buffer set C types defined in Section 6 (namely gss_buffer_set_desc, gss_buffer_set_t, gss_create_empty_buffer_set, gss_add_buffer_set_member, gss_release_buffer_set). Nothing else from GFD.024 is required to implement this document. In particular, that document specifies changes to the behavior of existing GSS-API",
      "zh-CHS": "构造“八位组字符串集”在RFC 2743[RFC2743]中出现一次，用于表示GSS_Display_status调用中的一组状态字符串。全球网格论坛在GFD.024[GFD.024]中将八位字节字符串集定义为缓冲集类型，它还为这些结构的内存管理提供了一个API。对GFD.024[GFD.024]的规范性引用适用于第2.5节中定义的缓冲集函数和第6节中定义的相关缓冲集C类型（即gss\\U缓冲集描述、gss\\U缓冲集描述、gss\\U创建、空缓冲集、gss\\U添加、缓冲集成员、gss\\U释放、缓冲集）。执行本文件不需要GFD.024中的任何其他内容。特别是，该文档指定了对现有GSS-API行为的更改"
    },
    {
      "indent": 3,
      "text": "functions in Section 3: implementing those changes are not required to implement this document. Any implementation of SET OF OCTET STRING for use by this specification MUST preserve order.",
      "zh-CHS": "实施本文件不需要第3节：实施这些变更中的职能。本规范使用的八位字节字符串集的任何实现都必须保持顺序。"
    },
    {
      "indent": 0,
      "text": "7.2. Const Types",
      "section_title": true,
      "zh-CHS": "7.2. 常量类型"
    },
    {
      "indent": 3,
      "text": "The C-bindings for the new APIs use some types from [RFC5587] to avoid issues with the use of \"const\". The normative reference to [RFC5587] is for the C types specified in Figure 1 of Section 3.4.6. Nothing else from that document is required to implement this document.",
      "zh-CHS": "新API的C绑定使用[RFC5587]中的一些类型，以避免使用“const”时出现问题。[RFC5587]的标准参考适用于第3.4.6节图1中规定的C类型。执行本文件不需要该文件中的任何其他内容。"
    },
    {
      "indent": 0,
      "text": "7.3. GSS_Display_name_ext()",
      "section_title": true,
      "zh-CHS": "7.3. GSS_显示_名称_分机（）"
    },
    {
      "indent": 3,
      "text": "Inputs:",
      "zh-CHS": "投入："
    },
    {
      "indent": 3,
      "text": "o name INTERNAL NAME",
      "zh-CHS": "o 名称内部名称"
    },
    {
      "indent": 3,
      "text": "o display_as_name_type OBJECT IDENTIFIER",
      "zh-CHS": "o 显示\\u为\\u名称\\u类型对象标识符"
    },
    {
      "indent": 3,
      "text": "Outputs:",
      "zh-CHS": "产出："
    },
    {
      "indent": 3,
      "text": "o major_status INTEGER",
      "zh-CHS": "o 主状态整数"
    },
    {
      "indent": 3,
      "text": "o minor_status INTEGER",
      "zh-CHS": "o 次要状态整数"
    },
    {
      "indent": 3,
      "text": "o display_name OCTET STRING -- caller must release with GSS_Release_buffer()",
      "zh-CHS": "o display_name八进制字符串--调用方必须使用GSS_release_buffer（）释放"
    },
    {
      "indent": 3,
      "text": "Return major_status codes:",
      "zh-CHS": "返回主要_状态代码："
    },
    {
      "indent": 3,
      "text": "o GSS_S_COMPLETE indicates no error.",
      "zh-CHS": "o GSS_S_完成表示没有错误。"
    },
    {
      "indent": 3,
      "text": "o GSS_S_UNAVAILABLE indicates that the given name could not be displayed using the syntax of the given name type.",
      "zh-CHS": "o GSS_S_UNAVAILABLE表示无法使用给定名称类型的语法显示给定名称。"
    },
    {
      "indent": 3,
      "text": "o GSS_S_FAILURE indicates a general error.",
      "zh-CHS": "o GSS_故障表示一般错误。"
    },
    {
      "indent": 3,
      "text": "This function displays a given name using the given name syntax, if possible. This operation may require mapping Mechanism Names (MNs) to generic name syntaxes or generic name syntaxes to mechanism-specific name syntaxes. Such mappings may not always be feasible and MAY be inexact or lossy; therefore, this function may fail.",
      "zh-CHS": "如果可能，此函数使用给定名称语法显示给定名称。此操作可能需要将机制名称（MN）映射到泛型名称语法，或将泛型名称语法映射到特定于机制的名称语法。这种映射可能并不总是可行的，可能不精确或有损；因此，此功能可能会失败。"
    },
    {
      "indent": 0,
      "text": "7.3.1. C-Bindings",
      "section_title": true,
      "zh-CHS": "7.3.1. C-绑定"
    },
    {
      "indent": 3,
      "text": "The display_name buffer is de-allocated by the caller with gss_release_buffer.",
      "zh-CHS": "调用方使用gss\\U release\\U buffer取消分配显示\\U名称缓冲区。"
    },
    {
      "indent": 3,
      "text": "OM_uint32 gss_display_name_ext( OM_uint32 *minor_status, gss_const_name_t name, gss_const_OID display_as_name_type, gss_buffer_t display_name );",
      "zh-CHS": "OM_uint32 gss_显示名称外部（OM_uint32*次要状态、gss_常量名称、gss_常量显示类型、gss_缓冲区显示名称）；"
    },
    {
      "indent": 0,
      "text": "7.4. GSS_Inquire_name()",
      "section_title": true,
      "zh-CHS": "7.4. GSS_查询_名称（）"
    },
    {
      "indent": 3,
      "text": "Inputs:",
      "zh-CHS": "投入："
    },
    {
      "indent": 3,
      "text": "o name INTERNAL NAME",
      "zh-CHS": "o 名称内部名称"
    },
    {
      "indent": 3,
      "text": "Outputs:",
      "zh-CHS": "产出："
    },
    {
      "indent": 3,
      "text": "o major_status INTEGER",
      "zh-CHS": "o 主状态整数"
    },
    {
      "indent": 3,
      "text": "o minor_status INTEGER",
      "zh-CHS": "o 次要状态整数"
    },
    {
      "indent": 3,
      "text": "o name_is_MN BOOLEAN",
      "zh-CHS": "o 名称是布尔值"
    },
    {
      "indent": 3,
      "text": "o mn_mech OBJECT IDENTIFIER",
      "zh-CHS": "o 机械对象标识符"
    },
    {
      "indent": 3,
      "text": "o attrs SET OF OCTET STRING -- the caller is responsible for de-allocating memory using GSS_Release_buffer_set",
      "zh-CHS": "o 八位字节字符串的attrs集——调用方负责使用GSS\\u Release\\u buffer\\u集取消分配内存"
    },
    {
      "indent": 3,
      "text": "Return major_status codes:",
      "zh-CHS": "返回主要_状态代码："
    },
    {
      "indent": 3,
      "text": "o GSS_S_COMPLETE indicates no error.",
      "zh-CHS": "o GSS_S_完成表示没有错误。"
    },
    {
      "indent": 3,
      "text": "o GSS_S_FAILURE indicates a general error.",
      "zh-CHS": "o GSS_故障表示一般错误。"
    },
    {
      "indent": 3,
      "text": "This function outputs the set of attributes of a name. It also indicates if a given name is an Mechanism Name (MN) or not and, if it is, the mechanism of which it's an MN.",
      "zh-CHS": "此函数输出名称的属性集。它还指示给定名称是否为机制名称（MN），如果是，则指示其为MN的机制。"
    },
    {
      "indent": 0,
      "text": "7.4.1. C-Bindings",
      "section_title": true,
      "zh-CHS": "7.4.1. C-绑定"
    },
    {
      "indent": 3,
      "text": "OM_uint32 gss_inquire_name( OM_uint32 *minor_status, gss_const_name_t name, int *name_is_MN, gss_OID *MN_mech, gss_buffer_set_t *attrs );",
      "zh-CHS": "OM_uint32 gss_inquire_名称（OM_uint32*次要状态、gss_const_名称、int*名称、gss_OID*MN机械、gss_缓冲区设置属性）；"
    },
    {
      "indent": 3,
      "text": "The gss_buffer_set_t is used here as the C representation of SET OF OCTET STRING. This type is used to represent a set of attributes and is a NULL-terminated array of gss_buffer_t. The gss_buffer_set_t type and associated API is defined in GFD.024 [GFD.024]. The \"attrs\" buffer set is de-allocated by the caller using gss_release_buffer_set().",
      "zh-CHS": "gss_buffer_set_t在这里用作八位字节字符串集的C表示。此类型用于表示一组属性，是以NULL结尾的gss\\u buffer\\t数组。GFD.024[GFD.024]中定义了gss\\u缓冲区\\u集\\t类型和相关API。调用方使用gss\\u release\\u buffer\\u set（）取消分配“attrs”缓冲区集。"
    },
    {
      "indent": 0,
      "text": "7.5. GSS_Get_name_attribute()",
      "section_title": true,
      "zh-CHS": "7.5. GSS_获取_名称_属性（）"
    },
    {
      "indent": 3,
      "text": "Inputs:",
      "zh-CHS": "投入："
    },
    {
      "indent": 3,
      "text": "o name INTERNAL NAME",
      "zh-CHS": "o 名称内部名称"
    },
    {
      "indent": 3,
      "text": "o attr OCTET STRING",
      "zh-CHS": "o attr八位组字符串"
    },
    {
      "indent": 3,
      "text": "Outputs:",
      "zh-CHS": "产出："
    },
    {
      "indent": 3,
      "text": "o major_status INTEGER",
      "zh-CHS": "o 主状态整数"
    },
    {
      "indent": 3,
      "text": "o minor_status INTEGER",
      "zh-CHS": "o 次要状态整数"
    },
    {
      "indent": 3,
      "text": "o authenticated BOOLEAN -- TRUE if and only if authenticated by the trusted peer credential source",
      "zh-CHS": "o authenticated BOOLEAN—当且仅当受信任对等凭据源进行了身份验证时为TRUE"
    },
    {
      "indent": 3,
      "text": "o complete BOOLEAN -- TRUE if and only if this represents a complete set of values for the name",
      "zh-CHS": "o complete BOOLEAN—当且仅当它表示名称的一组完整值时为TRUE"
    },
    {
      "indent": 3,
      "text": "o values SET OF OCTET STRING -- the caller is responsible for de-allocating memory using GSS_Release_buffer_set",
      "zh-CHS": "o 八位字节字符串的值集——调用者负责使用GSS\\u Release\\u buffer\\u集取消分配内存"
    },
    {
      "indent": 3,
      "text": "o display_values SET OF OCTET STRING -- the caller is responsible for de-allocating memory using GSS_Release_buffer_set",
      "zh-CHS": "o 显示八位字节字符串的\\u值集——调用方负责使用GSS\\u Release\\u buffer\\u集取消分配内存"
    },
    {
      "indent": 3,
      "text": "Return major_status codes:",
      "zh-CHS": "返回主要_状态代码："
    },
    {
      "indent": 3,
      "text": "o GSS_S_COMPLETE indicates no error.",
      "zh-CHS": "o GSS_S_完成表示没有错误。"
    },
    {
      "indent": 3,
      "text": "o GSS_S_UNAVAILABLE indicates that the given attribute OID is not known or set.",
      "zh-CHS": "o GSS_S_不可用表示给定的属性OID未知或未设置。"
    },
    {
      "indent": 3,
      "text": "o GSS_S_FAILURE indicates a general error.",
      "zh-CHS": "o GSS_故障表示一般错误。"
    },
    {
      "indent": 3,
      "text": "This function outputs the value(s) associated with a given GSS name object for a given name attribute.",
      "zh-CHS": "此函数输出与给定名称属性的给定GSS名称对象关联的值。"
    },
    {
      "indent": 3,
      "text": "The complete flag denotes that (if TRUE) the set of values represents a complete set of values for this name. The peer being an authoritative source of information for this attribute is a sufficient condition for the complete flag to be set by the peer.",
      "zh-CHS": "complete标志表示（如果为TRUE）值集表示此名称的完整值集。作为该属性的权威信息源的对等方是对等方设置完整标志的充分条件。"
    },
    {
      "indent": 3,
      "text": "In the federated case, when several peers may hold some of the attributes about a name, this flag may be highly dangerous and SHOULD NOT be used.",
      "zh-CHS": "在联邦情况下，当多个对等方可能持有某个名称的某些属性时，此标志可能非常危险，不应使用。"
    },
    {
      "indent": 3,
      "text": "NOTE: This function relies on the GSS-API notion of \"SET OF\" allowing for order preservation; this has been discussed on the KITTEN WG mailing list, and the consensus seems to be that, indeed, that was always the intention. It should be noted, however, that the order presented does not always reflect an underlying order of the mechanism-specific source of the attribute values.",
      "zh-CHS": "注：此函数依赖于GSS-API的“集合”概念，允许保留订单；这已经在KITTEN工作组的邮件列表中讨论过了，大家的共识似乎是，事实上，这一直是我们的意图。然而，应该注意的是，呈现的顺序并不总是反映特定于机制的属性值源的基本顺序。"
    },
    {
      "indent": 0,
      "text": "7.5.1. C-Bindings",
      "section_title": true,
      "zh-CHS": "7.5.1. C-绑定"
    },
    {
      "indent": 3,
      "text": "The C-bindings of GSS_Get_name_attribute() require one function call per attribute value for multi-valued name attributes. This is done by using a single gss_buffer_t for each value and an input/output integer parameter to distinguish initial and subsequent calls and to indicate when all values have been obtained.",
      "zh-CHS": "GSS_Get_name_attribute（）的C绑定要求对多值名称属性的每个属性值调用一个函数。这是通过为每个值使用一个gss_buffer_t和一个输入/输出整数参数来完成的，以区分初始调用和后续调用，并指示何时获得了所有值。"
    },
    {
      "indent": 3,
      "text": "The \"more\" input/output parameter should point to an integer variable whose value, on first call to gss_get_name_attribute(), MUST be -1 and whose value upon function call return will be non-zero to indicate that additional values remain or zero to indicate that no values remain. The caller should not modify this parameter after the initial call. The status of the complete and authenticated flags MUST NOT change between multiple calls to iterate over values for an attribute.",
      "zh-CHS": "“more”输入/输出参数应指向一个整型变量，在第一次调用gss_get_name_attribute（）时，该整型变量的值必须为-1，并且在函数调用返回时，该整型变量的值将为非零，以指示保留了其他值，或为零，以指示不保留任何值。调用方不应在初始调用后修改此参数。在多次调用以迭代某个属性的值之间，complete和authenticated标志的状态不得更改。"
    },
    {
      "indent": 3,
      "text": "The output buffers \"value\" and \"display_value\" are de-allocated by the caller using gss_release_buffer().",
      "zh-CHS": "调用者使用gss_release_buffer（）取消分配输出缓冲区“value”和“display_value”。"
    },
    {
      "indent": 3,
      "text": "OM_uint32 gss_get_name_attribute( OM_uint32 *minor_status, gss_const_name_t name, gss_const_buffer_t attr, int *authenticated, int *complete, gss_buffer_t value, gss_buffer_t display_value, int *more );",
      "zh-CHS": "OM_uint32 gss_get_name_属性（OM_uint32*次要_状态、gss_const_name_名称、gss_const_buffer_属性、int*已验证、int*完成、gss_buffer_值、gss_buffer_t显示值、int*更多）；"
    },
    {
      "indent": 0,
      "text": "7.6. GSS_Set_name_attribute()",
      "section_title": true,
      "zh-CHS": "7.6. GSS_集合_名称_属性（）"
    },
    {
      "indent": 3,
      "text": "Inputs:",
      "zh-CHS": "投入："
    },
    {
      "indent": 3,
      "text": "o name INTERNAL NAME",
      "zh-CHS": "o 名称内部名称"
    },
    {
      "indent": 3,
      "text": "o complete BOOLEAN -- TRUE if and only if this represents a complete set of values for the name",
      "zh-CHS": "o complete BOOLEAN—当且仅当它表示名称的一组完整值时为TRUE"
    },
    {
      "indent": 3,
      "text": "o attr OCTET STRING",
      "zh-CHS": "o attr八位组字符串"
    },
    {
      "indent": 3,
      "text": "o values SET OF OCTET STRING",
      "zh-CHS": "o 八进制字符串的值集"
    },
    {
      "indent": 3,
      "text": "Outputs:",
      "zh-CHS": "产出："
    },
    {
      "indent": 3,
      "text": "o major_status INTEGER",
      "zh-CHS": "o 主状态整数"
    },
    {
      "indent": 3,
      "text": "o minor_status INTEGER",
      "zh-CHS": "o 次要状态整数"
    },
    {
      "indent": 3,
      "text": "Return major_status codes:",
      "zh-CHS": "返回主要_状态代码："
    },
    {
      "indent": 3,
      "text": "o GSS_S_COMPLETE indicates no error.",
      "zh-CHS": "o GSS_S_完成表示没有错误。"
    },
    {
      "indent": 3,
      "text": "o GSS_S_UNAVAILABLE indicates that the given attribute NAME is not known or could not be set.",
      "zh-CHS": "o GSS_S_不可用表示给定的属性名称未知或无法设置。"
    },
    {
      "indent": 3,
      "text": "o GSS_S_FAILURE indicates a general error.",
      "zh-CHS": "o GSS_故障表示一般错误。"
    },
    {
      "indent": 3,
      "text": "When the given NAME object is an MN, this function MUST fail (with GSS_S_FAILURE) if the mechanism for which the name is an MN does not recognize the attribute name or the namespace it belongs to. This is because name attributes generally have some semantics that mechanisms must understand.",
      "zh-CHS": "当给定名称对象是MN时，如果名称为MN的机制无法识别属性名或其所属的命名空间，则此函数必须失败（GSS_S_失败）。这是因为名称属性通常具有一些机制必须理解的语义。"
    },
    {
      "indent": 3,
      "text": "On the other hand, when the given name is not an MN, this function MAY succeed even if none of the available mechanisms understand the given attribute, in which subsequent credential acquisition attempts",
      "zh-CHS": "另一方面，当给定名称不是MN时，即使没有任何可用机制理解后续凭证获取尝试的给定属性，该函数也可能成功"
    },
    {
      "indent": 3,
      "text": "(via GSS_Acquire_cred() or GSS_Add_cred()) with the resulting name MUST fail for mechanisms that do not understand any one or more name attributes set with this function. Applications may wish to use a non-MN, then acquire a credential with that name as the desired name. The acquired credentials will have elements only for the mechanisms that can carry the name attributes set on the name.",
      "zh-CHS": "（通过GSS_Acquire_cred（）或GSS_Add_cred（））生成的名称对于不理解使用此函数设置的任何一个或多个名称属性的机制必须失败。应用程序可能希望使用非MN，然后获取具有该名称作为所需名称的凭证。获取的凭据将仅包含可携带名称上设置的名称属性的机制的元素。"
    },
    {
      "indent": 3,
      "text": "Note that this means that all name attributes are locally critical: the mechanism(s) must understand them. The reason for this is that name attributes must necessarily have some meaning that the mechanism must understand, even in the case of application-specific attributes (in which case the mechanism must know to transport the attribute to any peer). However, there is no provision to ensure that peers understand any given name attribute. Individual name attributes may be critical with respect to peers, and the specification of the attribute will have to indicate whether the mechanism's protocol or the application is expected to enforce criticality.",
      "zh-CHS": "注意，这意味着所有名称属性都是局部关键的：机制必须理解它们。这样做的原因是名称属性必须具有某种机制必须理解的含义，即使是在特定于应用程序的属性的情况下（在这种情况下，机制必须知道如何将属性传输到任何对等方）。但是，没有任何规定可以确保对等方理解任何给定的名称属性。单个名称属性可能对对等方至关重要，属性的规范必须指明机制的协议或应用程序是否会强制执行关键性。"
    },
    {
      "indent": 3,
      "text": "The complete flag denotes that (if TRUE) the set of values represents a complete set of values for this name. The peer being an authoritative source of information for this attribute is a sufficient condition for the complete flag to be set by the peer.",
      "zh-CHS": "complete标志表示（如果为TRUE）值集表示此名称的完整值集。作为该属性的权威信息源的对等方是对等方设置完整标志的充分条件。"
    },
    {
      "indent": 3,
      "text": "In the federated case, when several peers may hold some of the attributes about a name, this flag may be highly dangerous and SHOULD NOT be used.",
      "zh-CHS": "在联邦情况下，当多个对等方可能持有某个名称的某些属性时，此标志可能非常危险，不应使用。"
    },
    {
      "indent": 3,
      "text": "NOTE: This function relies on the GSS-API notion of \"SET OF\" allowing for order preservation; this has been discussed on the KITTEN WG mailing list, and the consensus seems to be that, indeed, that was always the intention. It should be noted that underlying mechanisms may not respect the given order.",
      "zh-CHS": "注：此函数依赖于GSS-API的“集合”概念，允许保留订单；这已经在KITTEN工作组的邮件列表中讨论过了，大家的共识似乎是，事实上，这一直是我们的意图。应当指出，基本机制可能不遵守给定的顺序。"
    },
    {
      "indent": 0,
      "text": "7.6.1. C-Bindings",
      "section_title": true,
      "zh-CHS": "7.6.1. C-绑定"
    },
    {
      "indent": 3,
      "text": "The C-bindings of GSS_Set_name_attribute() requires one function call per attribute value for multi-valued name attributes. Each call adds one value. To replace an attribute's every value, delete the attribute's values first with GSS_Delete_name_attribute().",
      "zh-CHS": "GSS_Set_name_attribute（）的C绑定要求对多值名称属性的每个属性值调用一个函数。每个调用增加一个值。要替换属性的每个值，请首先使用GSS\\u delete\\u name\\u attribute（）删除属性的值。"
    },
    {
      "indent": 3,
      "text": "OM_uint32 gss_set_name_attribute( OM_uint32 *minor_status, gss_const_name_t name, int complete, gss_const_buffer_t attr, gss_const_buffer_t value );",
      "zh-CHS": "OM_uint32 gss_集合\\名称\\属性（OM_uint32*次要\\状态、gss_常量\\名称\\名称、整型完成、gss_常量\\缓冲区\\属性、gss_常量\\缓冲区\\值）；"
    },
    {
      "indent": 0,
      "text": "7.7. GSS_Delete_name_attribute()",
      "section_title": true,
      "zh-CHS": "7.7. GSS_删除_名称_属性（）"
    },
    {
      "indent": 3,
      "text": "Inputs:",
      "zh-CHS": "投入："
    },
    {
      "indent": 3,
      "text": "o name INTERNAL NAME",
      "zh-CHS": "o 名称内部名称"
    },
    {
      "indent": 3,
      "text": "o attr OCTET STRING",
      "zh-CHS": "o attr八位组字符串"
    },
    {
      "indent": 3,
      "text": "Outputs:",
      "zh-CHS": "产出："
    },
    {
      "indent": 3,
      "text": "o major_status INTEGER",
      "zh-CHS": "o 主状态整数"
    },
    {
      "indent": 3,
      "text": "o minor_status INTEGER",
      "zh-CHS": "o 次要状态整数"
    },
    {
      "indent": 3,
      "text": "Return major_status codes:",
      "zh-CHS": "返回主要_状态代码："
    },
    {
      "indent": 3,
      "text": "o GSS_S_COMPLETE indicates no error.",
      "zh-CHS": "o GSS_S_完成表示没有错误。"
    },
    {
      "indent": 3,
      "text": "o GSS_S_UNAVAILABLE indicates that the given attribute NAME is not known.",
      "zh-CHS": "o GSS_S_不可用表示给定的属性名称未知。"
    },
    {
      "indent": 3,
      "text": "o GSS_S_UNAUTHORIZED indicates that a forbidden delete operation was attempted, such as deleting a negative attribute.",
      "zh-CHS": "o GSS_S_UNAUTHORIZED表示试图执行禁止的删除操作，例如删除负属性。"
    },
    {
      "indent": 3,
      "text": "o GSS_S_FAILURE indicates a general error.",
      "zh-CHS": "o GSS_故障表示一般错误。"
    },
    {
      "indent": 3,
      "text": "Deletion of negative authenticated attributes from NAME objects MUST NOT be allowed and must result in a GSS_S_UNAUTHORIZED.",
      "zh-CHS": "不允许从名称对象中删除经过否定身份验证的属性，并且必须导致GSS_未经授权。"
    },
    {
      "indent": 0,
      "text": "7.7.1. C-Bindings",
      "section_title": true,
      "zh-CHS": "7.7.1. C-绑定"
    },
    {
      "indent": 3,
      "text": "OM_uint32 gss_delete_name_attribute( OM_uint32 *minor_status, gss_const_name_t name, gss_const_buffer_t attr );",
      "zh-CHS": "OM_uint32 gss_delete_name_属性（OM_uint32*次要_状态、gss_const_name_名称、gss_const_缓冲区属性）；"
    },
    {
      "indent": 0,
      "text": "7.8. GSS_Export_name_composite()",
      "section_title": true,
      "zh-CHS": "7.8. GSS_导出_名称_组合（）"
    },
    {
      "indent": 3,
      "text": "Inputs:",
      "zh-CHS": "投入："
    },
    {
      "indent": 3,
      "text": "o name INTERNAL NAME",
      "zh-CHS": "o 名称内部名称"
    },
    {
      "indent": 3,
      "text": "Outputs:",
      "zh-CHS": "产出："
    },
    {
      "indent": 3,
      "text": "o major_status INTEGER",
      "zh-CHS": "o 主状态整数"
    },
    {
      "indent": 3,
      "text": "o minor_status INTEGER",
      "zh-CHS": "o 次要状态整数"
    },
    {
      "indent": 3,
      "text": "o exp_composite_name OCTET STRING -- the caller is responsible for de-allocating memory using GSS_Release_buffer",
      "zh-CHS": "o exp_composite_name八进制字符串——调用方负责使用GSS_Release_缓冲区取消分配内存"
    },
    {
      "indent": 3,
      "text": "Return major_status codes:",
      "zh-CHS": "返回主要_状态代码："
    },
    {
      "indent": 3,
      "text": "o GSS_S_COMPLETE indicates no error.",
      "zh-CHS": "o GSS_S_完成表示没有错误。"
    },
    {
      "indent": 3,
      "text": "o GSS_S_FAILURE indicates a general error.",
      "zh-CHS": "o GSS_故障表示一般错误。"
    },
    {
      "indent": 3,
      "text": "This function outputs a token that can be imported with GSS_Import_name(), using GSS_C_NT_COMPOSITE_EXPORT as the name type and that preserves any name attribute information (including the authenticated/complete flags) associated with the input name (which GSS_Export_name() may well not). The token format is not specified here as this facility is intended for inter-process communication only; however, all such tokens MUST start with a two-octet token ID, hex 04 02, in network byte order.",
      "zh-CHS": "此函数输出一个令牌，该令牌可以使用GSS_Import_name（）导入，使用GSS_C_NT_COMPOSITE_EXPORT作为名称类型，并保留与输入名称（GSS_EXPORT_name（）可能不是）关联的任何名称属性信息（包括已验证/完整标志）。此处未指定令牌格式，因为此设施仅用于进程间通信；但是，所有此类令牌必须以网络字节顺序的两个八位字节令牌ID hex 04 02开头。"
    },
    {
      "indent": 3,
      "text": "The OID for GSS_C_NT_COMPOSITE_EXPORT is 1.3.6.1.5.6.6.",
      "zh-CHS": "GSS_C_NT_复合_导出的OID为1.3.6.1.5.6.6。"
    },
    {
      "indent": 0,
      "text": "7.8.1. C-Bindings",
      "section_title": true,
      "zh-CHS": "7.8.1. C-绑定"
    },
    {
      "indent": 3,
      "text": "The \"exp_composite_name\" buffer is de-allocated by the caller with gss_release_buffer.",
      "zh-CHS": "“exp_composite_name”缓冲区由调用方使用gss_release_缓冲区取消分配。"
    },
    {
      "indent": 3,
      "text": "OM_uint32 gss_export_name_composite( OM_uint32 *minor_status, gss_const_name_t name, gss_buffer_t exp_composite_name );",
      "zh-CHS": "OM_uint32 gss_导出名称_组合（OM_uint32*次要状态、gss_const_名称、gss_buffer_exp_组合名称）；"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "zh-CHS": "8. IANA考虑"
    },
    {
      "indent": 3,
      "text": "IANA has registered a new name-type OID in \"SMI Security for Name System Designators Codes (nametypes)\":",
      "zh-CHS": "IANA已在“名称系统标识符代码（名称类型）的SMI安全性”中注册了新的名称类型OID："
    },
    {
      "indent": 6,
      "text": "6 gss-composite-export [RFC6680]",
      "zh-CHS": "6 gss复合出口[RFC6680]"
    },
    {
      "indent": 3,
      "text": "(The absolute OID is 1.3.6.1.5.6.6.)",
      "zh-CHS": "（绝对OID为1.3.6.1.5.6.6。）"
    },
    {
      "indent": 3,
      "text": "This document creates a namespace of GSS-API name attributes. Attributes are named by URIs, so no single authority is technically needed for allocation. However, future deployment experience may indicate the need for an IANA registry for URIs used to reference names specified by IETF standards. It is expected that this will be a registry of URNs, but this document provides no further guidance on this registry.",
      "zh-CHS": "本文档创建GSS-API名称属性的命名空间。属性由URI命名，因此从技术上讲，分配不需要单一的权限。然而，未来的部署经验可能表明，需要一个用于引用IETF标准指定名称的URI的IANA注册表。预计这将是一个URN注册表，但本文档没有提供关于此注册表的进一步指导。"
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "zh-CHS": "9. 安全考虑"
    },
    {
      "indent": 3,
      "text": "This document extends the GSS-API naming model to include support for name attributes. The intention is that name attributes are to be used as a basis for (among other things) authorization decisions or personalization for applications relying on GSS-API security contexts.",
      "zh-CHS": "本文档扩展了GSS-API命名模型，包括对名称属性的支持。其目的是将名称属性用作依赖GSS-API安全上下文的应用程序的授权决策或个性化（除其他外）的基础。"
    },
    {
      "indent": 3,
      "text": "The security of the application may be critically dependent on the security of the attributes. This document classifies attributes as asserted or authenticated. Asserted (non-authenticated) attributes MUST NOT be used if the attribute has security implications for the application (e.g., authorization decisions) since asserted attributes may easily be controlled by the peer directly.",
      "zh-CHS": "应用程序的安全性可能严重依赖于属性的安全性。本文档将属性分类为断言属性或已验证属性。如果属性对应用程序有安全影响（例如，授权决策），则不能使用断言（未经验证）属性，因为断言的属性很容易由对等方直接控制。"
    },
    {
      "indent": 3,
      "text": "It is important to understand the meaning of \"authenticated\" in this setting. Authenticated does not imply that any semantic of the attribute is claimed to be true. The only implication is that a trusted third party has asserted the attribute as opposed to the attribute being asserted by the peer itself. Any additional semantics are always the result of applying policy. For instance, in a given deployment, the mail attribute of the subject may be authenticated and sourced from an email system where \"authoritative\" values are kept. In another situation, users may be allowed to modify their mail addresses freely. In both cases, the \"mail\" attribute may be authenticated by virtue of being included in signed SAML attribute assertions or by other means authenticated by the underlying mechanism.",
      "zh-CHS": "理解此设置中“已验证”的含义非常重要。Authenticated并不意味着属性的任何语义都被声明为true。唯一的含义是受信任的第三方声明了该属性，而不是由对等方自己声明的属性。任何附加语义都是应用策略的结果。例如，在给定的部署中，主题的邮件属性可以通过身份验证，并从保留“权威”值的电子邮件系统中获取。在另一种情况下，可能允许用户自由修改其邮件地址。在这两种情况下，“邮件”属性都可以通过包含在签名的SAML属性断言中的方式进行身份验证，或者通过底层机制进行身份验证的其他方式进行身份验证。"
    },
    {
      "indent": 3,
      "text": "When the underlying security mechanism does not provide a permanent unique identity (e.g., anonymous Kerberos), GSS-API naming extensions may be used to provide a permanent unique identity attribute. This may be a globally unique identifier, a value unique within the namespace of the attribute issuer, or a \"directed\" identifier that is unique per peer acceptor identity. SAML, to use one example technology, offers a number of built-in constructs for this purpose, such as a <NameID> with a Format of \"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\". SAML deployments also typically make use of domain-specific attribute types that can serve as identifiers.",
      "zh-CHS": "当底层安全机制不提供永久唯一标识（例如匿名Kerberos）时，可以使用GSS-API命名扩展来提供永久唯一标识属性。这可以是全局唯一标识符、在属性颁发者的命名空间中唯一的值，或者是每个对等接受者标识唯一的“定向”标识符。使用一种示例技术，SAML为此提供了许多内置构造，例如格式为“urn:oasis:names:tc:SAML:2.0:NameID Format:persistent”的<NameID>。SAML部署通常还使用可以用作标识符的特定于域的属性类型。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "zh-CHS": "10. 工具书类"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "zh-CHS": "10.1. 规范性引用文件"
    },
    {
      "indent": 3,
      "text": "[GFD.024] Meder, S., Welch, V., Tuecke, S., and D. Engert, \"GSS-API Extensions\", Global Grid Forum GFD.024, June 2004, <http://www.ggf.org/documents/GFD.24.pdf>.",
      "zh-CHS": "[GFD.024]Meder，S.，Welch，V.，Tuecke，S.，和D.Engert，“GSS-API扩展”，全球网格论坛GFD.024，2004年6月<http://www.ggf.org/documents/GFD.24.pdf>."
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "zh-CHS": "[RFC2119]Bradner，S.，“RFC中用于表示需求水平的关键词”，BCP 14，RFC 2119，1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2743] Linn, J., \"Generic Security Service Application Program Interface Version 2, Update 1\", RFC 2743, January 2000.",
      "zh-CHS": "[RFC2743]Linn，J.，“通用安全服务应用程序接口版本2，更新1”，RFC 2743，2000年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC2744] Wray, J., \"Generic Security Service API Version 2 : C-bindings\", RFC 2744, January 2000.",
      "zh-CHS": "[RFC2744]Wray，J.，“通用安全服务API第2版：C-绑定”，RFC 2744，2000年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC5587] Williams, N., \"Extended Generic Security Service Mechanism Inquiry APIs\", RFC 5587, July 2009.",
      "zh-CHS": "[RFC5587]Williams，N.，“扩展通用安全服务机制查询API”，RFC5587，2009年7月。"
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "zh-CHS": "10.2. 资料性引用"
    },
    {
      "indent": 3,
      "text": "[ANSI.X3-4.1986] American National Standards Institute, \"Coded Character Set - 7-bit American Standard Code for Information Interchange\", ANSI X3.4, 1986.",
      "zh-CHS": "[ANSI.X3-4.1986]美国国家标准协会，“编码字符集-信息交换用7位美国标准代码”，ANSI X3.41986。"
    },
    {
      "indent": 3,
      "text": "[OASIS.saml-core-2.0-os] Cantor, S., Kemp, J., Philpott, R., and E. Maler, \"Assertions and Protocol for the OASIS Security Assertion Markup Language (SAML) V2.0\", OASIS Standard saml-core-2.0-os, March 2005.",
      "zh-CHS": "[OASIS.saml-core-2.0-os]Cantor，S.，Kemp，J.，Philpott，R.，和E.Maler，“OASIS安全断言标记语言（saml）V2.0的断言和协议”，OASIS标准saml-core-2.0-os，2005年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC3629] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, November 2003.",
      "zh-CHS": "[RFC3629]Yergeau，F.，“UTF-8，ISO 10646的转换格式”，STD 63，RFC 3629，2003年11月。"
    },
    {
      "indent": 3,
      "text": "[RFC4120] Neuman, C., Yu, T., Hartman, S., and K. Raeburn, \"The Kerberos Network Authentication Service (V5)\", RFC 4120, July 2005.",
      "zh-CHS": "[RFC4120]Neuman，C.，Yu，T.，Hartman，S.，和K.Raeburn，“Kerberos网络身份验证服务（V5）”，RFC41202005年7月。"
    },
    {
      "indent": 3,
      "text": "[RFC4556] Zhu, L. and B. Tung, \"Public Key Cryptography for Initial Authentication in Kerberos (PKINIT)\", RFC 4556, June 2006.",
      "zh-CHS": "[RFC4556]Zhu，L.和B.Tung，“Kerberos中初始身份验证的公钥加密（PKINIT）”，RFC 45562006年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC4768] Hartman, S., \"Desired Enhancements to Generic Security Services Application Program Interface (GSS-API) Version 3 Naming\", RFC 4768, December 2006.",
      "zh-CHS": "[RFC4768]Hartman，S.，“通用安全服务应用程序接口（GSS-API）第3版命名的预期增强”，RFC 4768，2006年12月。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "zh-CHS": "作者地址"
    },
    {
      "indent": 3,
      "text": "Nicolas Williams Cryptonector, LLC",
      "zh-CHS": "Nicolas Williams Cryptonector有限责任公司"
    },
    {
      "indent": 3,
      "text": "EMail: nico@cryptonector.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Leif Johansson Swedish University Network Thulegatan 11 Stockholm Sweden",
      "zh-CHS": "Leif Johansson瑞典大学网络Thulegatan 11瑞典斯德哥尔摩"
    },
    {
      "indent": 3,
      "text": "EMail: leifj@sunet.se\nURI:   http://www.sunet.se",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Sam Hartman Painless Security",
      "zh-CHS": "山姆·哈特曼无痛安全"
    },
    {
      "indent": 3,
      "text": "EMail: hartmans-ietf@mit.edu",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Simon Josefsson SJD AB Johan Olof Wallins Vaeg 13 171 64 Solna Sweden",
      "zh-CHS": "Simon Josefsson SJD AB Johan Olof Wallins Vaeg 13 171 64索尔纳瑞典"
    },
    {
      "indent": 3,
      "text": "EMail: simon@josefsson.org\nURI:   http://josefsson.org/",
      "raw": true,
      "zh-CHS": " "
    }
  ]
}