{
  "title": {
    "text": "RFC 7223: A YANG Data Model for Interface Management",
    "zh-CHS": "RFC 7223"
  },
  "number": 7223,
  "created_at": "2021-11-02 07:49:47.257544+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                      M. Bjorklund\nRequest for Comments: 7223                                Tail-f Systems\nCategory: Standards Track                                       May 2014\nISSN: 2070-1721",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "A YANG Data Model for Interface Management",
      "zh-CHS": "面向接口管理的YANG数据模型"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "This document defines a YANG data model for the management of network interfaces. It is expected that interface-type-specific data models augment the generic interfaces data model defined in this document. The data model includes configuration data and state data (status information and counters for the collection of statistics).",
      "zh-CHS": "本文件定义了网络接口管理的数据模型。预计接口类型特定的数据模型将扩展本文档中定义的通用接口数据模型。数据模型包括配置数据和状态数据（用于收集统计数据的状态信息和计数器）。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "zh-CHS": "关于下段备忘"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "zh-CHS": "这是一份互联网标准跟踪文件。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 5741.",
      "zh-CHS": "本文件是互联网工程任务组（IETF）的产品。它代表了IETF社区的共识。它已经接受了公众审查，并已被互联网工程指导小组（IESG）批准出版。有关互联网标准的更多信息，请参见RFC 5741第2节。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7223.",
      "zh-CHS": "有关本文件当前状态、任何勘误表以及如何提供反馈的信息，请访问http://www.rfc-editor.org/info/rfc7223."
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2014 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "zh-CHS": "版权所有（c）2014 IETF信托基金和确定为文件作者的人员。版权所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "zh-CHS": "本文件受BCP 78和IETF信托有关IETF文件的法律规定的约束(http://trustee.ietf.org/license-info)自本文件出版之日起生效。请仔细阅读这些文件，因为它们描述了您对本文件的权利和限制。从本文件中提取的代码组件必须包括信托法律条款第4.e节中所述的简化BSD许可证文本，并提供简化BSD许可证中所述的无担保。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n   1.1. Terminology ................................................3\n   1.2. Tree Diagrams ..............................................4\n2. Objectives ......................................................4\n3. Interfaces Data Model ...........................................5\n   3.1. The Interface Lists ........................................6\n   3.2. Interface References .......................................7\n   3.3. Interface Layering .........................................7\n4. Relationship to the IF-MIB ......................................8\n5. Interfaces YANG Module .........................................11\n6. IANA Considerations ............................................26\n7. Security Considerations ........................................26\n8. Acknowledgments ................................................27\n9. References .....................................................27\n   9.1. Normative References ......................................27\n   9.2. Informative References ....................................28\nAppendix A. Example: Ethernet Interface Module ....................29\nAppendix B. Example: Ethernet Bonding Interface Module ............30\nAppendix C. Example: VLAN Interface Module ........................31\nAppendix D. Example: NETCONF <get> Reply ..........................32\nAppendix E. Examples: Interface Naming Schemes ....................35\n  E.1. Router with Restricted Interface Names .....................35\n  E.2. Router with Arbitrary Interface Names ......................36\n  E.3. Ethernet Switch with Restricted Interface Names ............37\n  E.4. Generic Host with Restricted Interface Names ...............38\n  E.5. Generic Host with Arbitrary Interface Names ................39",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "This document defines a YANG [RFC6020] data model for the management of network interfaces. It is expected that interface-type-specific data models augment the generic interfaces data model defined in this document.",
      "zh-CHS": "本文件定义了用于管理网络接口的YANG[RFC6020]数据模型。预计接口类型特定的数据模型将扩展本文档中定义的通用接口数据模型。"
    },
    {
      "indent": 3,
      "text": "Network interfaces are central to the management of many Internet protocols. Thus, it is important to establish a common data model for how interfaces are identified, configured, and monitored.",
      "zh-CHS": "网络接口是许多互联网协议管理的核心。因此，为如何识别、配置和监控接口建立通用数据模型非常重要。"
    },
    {
      "indent": 3,
      "text": "The data model includes configuration data and state data (status information and counters for the collection of statistics).",
      "zh-CHS": "数据模型包括配置数据和状态数据（用于收集统计数据的状态信息和计数器）。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "zh-CHS": "1.1. 术语"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119].",
      "zh-CHS": "本文件中的关键词“必须”、“不得”、“必需”、“应”、“不应”、“建议”、“不建议”、“可”和“可选”应按照BCP 14[RFC2119]中的说明进行解释。"
    },
    {
      "indent": 3,
      "text": "The following terms are used within this document:",
      "zh-CHS": "本文件中使用了以下术语："
    },
    {
      "indent": 3,
      "text": "o system-controlled interface: An interface is said to be system-controlled if the system creates and deletes the interface independently of what has been explicitly configured. Examples are interfaces representing physical hardware that appear and disappear when hardware (e.g., a line card or hot-pluggable wireless interface) is added or removed. System-controlled interfaces may also appear if a certain functionality is enabled (e.g., a loopback interface might appear if the IP protocol stack is enabled).",
      "zh-CHS": "o 系统控制接口：如果系统独立于显式配置创建和删除接口，则称该接口为系统控制接口。例如，接口表示在添加或删除硬件（如线路卡或热插拔无线接口）时出现和消失的物理硬件。如果启用了特定功能，系统控制的接口也可能出现（例如，如果启用了IP协议栈，则可能出现环回接口）。"
    },
    {
      "indent": 3,
      "text": "o user-controlled interface: An interface is said to be user-controlled if the creation of the interface is controlled by adding explicit interface configuration to the running configuration datastore and the removal of the interface is controlled by removing explicit interface configuration from the running configuration datastore. Examples are VLAN interfaces configured on a system-controlled Ethernet interface.",
      "zh-CHS": "o 用户控制接口：如果通过向运行配置数据存储添加显式接口配置来控制接口的创建，并且通过从运行配置数据存储中删除显式接口配置来控制接口的删除，则称接口为用户控制。例如，在系统控制的以太网接口上配置VLAN接口。"
    },
    {
      "indent": 3,
      "text": "The following terms are defined in [RFC6241] and are not redefined here:",
      "zh-CHS": "[RFC6241]中定义了以下术语，此处未重新定义："
    },
    {
      "indent": 3,
      "text": "o client",
      "zh-CHS": "o 客户"
    },
    {
      "indent": 3,
      "text": "o configuration data",
      "zh-CHS": "o 配置数据"
    },
    {
      "indent": 3,
      "text": "o server",
      "zh-CHS": "o 服务器"
    },
    {
      "indent": 3,
      "text": "o state data",
      "zh-CHS": "o 状态数据"
    },
    {
      "indent": 3,
      "text": "The following terms are defined in [RFC6020] and are not redefined here:",
      "zh-CHS": "[RFC6020]中定义了以下术语，此处未重新定义："
    },
    {
      "indent": 3,
      "text": "o augment",
      "zh-CHS": "o 加强"
    },
    {
      "indent": 3,
      "text": "o data model",
      "zh-CHS": "o 数据模型"
    },
    {
      "indent": 3,
      "text": "o data node",
      "zh-CHS": "o 数据节点"
    },
    {
      "indent": 3,
      "text": "o presence container",
      "zh-CHS": "o 存在容器"
    },
    {
      "indent": 0,
      "text": "1.2. Tree Diagrams",
      "section_title": true,
      "zh-CHS": "1.2. 树形图"
    },
    {
      "indent": 3,
      "text": "A simplified graphical representation of the data model is used in this document. The meaning of the symbols in these diagrams is as follows:",
      "zh-CHS": "本文件中使用了数据模型的简化图形表示。这些图表中符号的含义如下："
    },
    {
      "indent": 3,
      "text": "o Brackets \"[\" and \"]\" enclose list keys.",
      "zh-CHS": "o 括号“[”和“]”包含列表键。"
    },
    {
      "indent": 3,
      "text": "o Abbreviations before data node names: \"rw\" means configuration (read-write), and \"ro\" means state data (read-only).",
      "zh-CHS": "o 数据节点名称前的缩写：“rw”表示配置（读写），“ro”表示状态数据（只读）。"
    },
    {
      "indent": 3,
      "text": "o Symbols after data node names: \"?\" means an optional node, \"!\" means a presence container, and \"*\" denotes a list and leaf-list.",
      "zh-CHS": "o 数据节点名称后的符号：“？”表示可选节点，“！”表示状态容器，“*”表示列表和叶列表。"
    },
    {
      "indent": 3,
      "text": "o Parentheses enclose choice and case nodes, and case nodes are also marked with a colon (\":\").",
      "zh-CHS": "o 括号括住选项和事例节点，事例节点也用冒号（“：”）标记。"
    },
    {
      "indent": 3,
      "text": "o Ellipsis (\"...\") stands for contents of subtrees that are not shown.",
      "zh-CHS": "o 省略号（“…”）表示未显示的子树的内容。"
    },
    {
      "indent": 0,
      "text": "2. Objectives",
      "section_title": true,
      "zh-CHS": "2. 目标"
    },
    {
      "indent": 3,
      "text": "This section describes some of the design objectives for the model presented in Section 5.",
      "zh-CHS": "本节介绍了第5节中介绍的模型的一些设计目标。"
    },
    {
      "indent": 3,
      "text": "o It is recognized that existing implementations will have to map the interface data model defined in this memo to their proprietary native data model. To facilitate such mappings, the data model should be simple.",
      "zh-CHS": "o 我们认识到，现有实现必须将本备忘录中定义的接口数据模型映射到其专有的本机数据模型。为了促进这种映射，数据模型应该简单。"
    },
    {
      "indent": 3,
      "text": "o The data model should be suitable for new implementations to use as is, without requiring a mapping to a different native model.",
      "zh-CHS": "o 数据模型应该适合新的实现按原样使用，而不需要映射到不同的本机模型。"
    },
    {
      "indent": 3,
      "text": "o References to interfaces should be as simple as possible, preferably by using a single leafref.",
      "zh-CHS": "o 对接口的引用应尽可能简单，最好使用单个leafref。"
    },
    {
      "indent": 3,
      "text": "o The mapping to ifIndex [RFC2863] used by the Simple Network Management Protocol (SNMP) to identify interfaces must be clear.",
      "zh-CHS": "o 简单网络管理协议（SNMP）用于标识接口的ifIndex[RFC2863]映射必须清晰。"
    },
    {
      "indent": 3,
      "text": "o The model must support interface layering: both (1) simple layering, where one interface is layered on top of exactly one other interface, and (2) more complex scenarios, where one interface results from the aggregation of N other interfaces or when N interfaces are multiplexed over one other interface.",
      "zh-CHS": "o 该模型必须支持接口分层：（1）简单分层，其中一个接口分层在另一个接口之上；（2）更复杂的场景，其中一个接口由N个其他接口聚合而成，或者N个接口在另一个接口上多路复用。"
    },
    {
      "indent": 3,
      "text": "o The data model should support the pre-provisioning of interface configuration, i.e., it should be possible to configure an interface whose physical interface hardware is not present on the device. It is recommended that devices that support dynamic addition and removal of physical interfaces also support pre-provisioning.",
      "zh-CHS": "o 数据模型应支持接口配置的预配置，即，应能够配置物理接口硬件不在设备上的接口。建议支持动态添加和删除物理接口的设备也支持预配置。"
    },
    {
      "indent": 3,
      "text": "o The data model should support physical interfaces as well as logical interfaces.",
      "zh-CHS": "o 数据模型应支持物理接口和逻辑接口。"
    },
    {
      "indent": 3,
      "text": "o The data model should include read-only counters in order to gather statistics for sent and received octets and packets, received packets with errors, and packets that could not be sent due to errors.",
      "zh-CHS": "o 数据模型应包括只读计数器，以便收集发送和接收的八位字节和数据包、有错误的接收数据包以及由于错误而无法发送的数据包的统计信息。"
    },
    {
      "indent": 0,
      "text": "3. Interfaces Data Model",
      "section_title": true,
      "zh-CHS": "3. 接口数据模型"
    },
    {
      "indent": 3,
      "text": "This document defines the YANG module \"ietf-interfaces\", which has the following structure:",
      "zh-CHS": "本文件定义了模块“ietf接口”，其结构如下："
    },
    {
      "indent": 6,
      "text": "+--rw interfaces\n|  +--rw interface* [name]\n|     +--rw name                        string\n|     +--rw description?                string\n|     +--rw type                        identityref\n|     +--rw enabled?                    boolean\n|     +--rw link-up-down-trap-enable?   enumeration\n+--ro interfaces-state\n   +--ro interface* [name]\n      +--ro name               string\n      +--ro type               identityref\n      +--ro admin-status       enumeration\n      +--ro oper-status        enumeration\n      +--ro last-change?       yang:date-and-time\n      +--ro if-index           int32\n      +--ro phys-address?      yang:phys-address\n      +--ro higher-layer-if*   interface-state-ref\n      +--ro lower-layer-if*    interface-state-ref\n      +--ro speed?             yang:gauge64\n      +--ro statistics\n         +--ro discontinuity-time    yang:date-and-time\n         +--ro in-octets?            yang:counter64\n         +--ro in-unicast-pkts?      yang:counter64\n         +--ro in-broadcast-pkts?    yang:counter64\n         +--ro in-multicast-pkts?    yang:counter64\n         +--ro in-discards?          yang:counter32\n         +--ro in-errors?            yang:counter32\n         +--ro in-unknown-protos?    yang:counter32",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "+--ro out-octets?           yang:counter64\n+--ro out-unicast-pkts?     yang:counter64\n+--ro out-broadcast-pkts?   yang:counter64\n+--ro out-multicast-pkts?   yang:counter64\n+--ro out-discards?         yang:counter32\n+--ro out-errors?           yang:counter32",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "3.1. The Interface Lists",
      "section_title": true,
      "zh-CHS": "3.1. 接口列表"
    },
    {
      "indent": 3,
      "text": "The data model for interfaces presented in this document uses a flat list of interfaces. Each interface in the list is identified by its name. Furthermore, each interface has a mandatory \"type\" leaf.",
      "zh-CHS": "本文档中提供的接口数据模型使用接口的平面列表。列表中的每个接口都由其名称标识。此外，每个接口都有一个强制的“类型”叶。"
    },
    {
      "indent": 3,
      "text": "The \"iana-if-type\" module [RFC7224] defines YANG identities for the interface types in the IANA-maintained \"ifType definitions\" registry.",
      "zh-CHS": "“iana if type”模块[RFC7224]在iana维护的“ifType定义”注册表中定义接口类型的标识。"
    },
    {
      "indent": 3,
      "text": "There is one list of configured interfaces (\"/interfaces/interface\"), and a separate list for the operational state of all interfaces (\"/interfaces-state/interface\").",
      "zh-CHS": "有一个已配置接口列表（“/interfaces/interface”），还有一个单独的所有接口操作状态列表（“/interfaces state/interface”）。"
    },
    {
      "indent": 3,
      "text": "It is expected that interface-type-specific data models augment the interface lists and possibly use the \"type\" leaf to make the augmentation conditional.",
      "zh-CHS": "预计特定于接口类型的数据模型会增加接口列表，并可能使用“类型”叶来使增加有条件。"
    },
    {
      "indent": 3,
      "text": "As an example of such an interface-type-specific augmentation, consider this YANG snippet. For a more complete example, see Appendix A.",
      "zh-CHS": "作为这种接口类型特定增强的一个例子，请考虑这个杨氏片段。有关更完整的示例，请参见附录a。"
    },
    {
      "indent": 5,
      "text": "import interfaces {\n    prefix \"if\";\n}\nimport iana-if-type {\n  prefix ianaift;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "augment \"/if:interfaces/if:interface\" {\n    when \"if:type = 'ianaift:ethernetCsmacd'\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "    container ethernet {\n        leaf duplex {\n            ...\n        }\n    }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "For system-controlled interfaces, the \"name\" is the device-specific name of the interface. The 'config false' list \"/interfaces-state/interface\" contains all existing interfaces on the device.",
      "zh-CHS": "对于系统控制接口，“名称”是接口的设备特定名称。“config false”列表“/接口状态/接口”包含设备上的所有现有接口。"
    },
    {
      "indent": 3,
      "text": "If the device supports arbitrarily named user-controlled interfaces, the Network Configuration Protocol (NETCONF) server advertises the \"arbitrary-names\" feature. If the device does not advertise this feature, the names of user-controlled interfaces MUST match the device's naming scheme. How a client can learn the naming scheme of such devices is outside the scope of this document. See Appendices E.1 and E.2 for examples.",
      "zh-CHS": "如果设备支持任意命名的用户控制接口，则网络配置协议（NETCONF）服务器会播发“任意名称”功能。如果设备未公布此功能，则用户控制接口的名称必须与设备的命名方案匹配。客户如何了解此类设备的命名方案超出了本文档的范围。示例见附录E.1和E.2。"
    },
    {
      "indent": 3,
      "text": "When a system-controlled interface is created by the system, the system tries to apply the interface configuration in \"/interfaces/ interface\" with the same name as the new interface. If no such interface configuration is found, or if the configured type does not match the real interface type, the system creates the interface without applying explicit configuration.",
      "zh-CHS": "当系统创建系统控制的接口时，系统尝试在“/interfaces/interface”中应用与新接口同名的接口配置。如果未找到此类接口配置，或者如果配置的类型与实际接口类型不匹配，则系统将在不应用显式配置的情况下创建接口。"
    },
    {
      "indent": 3,
      "text": "When a user-controlled interface is created, the configuration determines the name of the interface.",
      "zh-CHS": "创建用户控制的界面时，配置将确定界面的名称。"
    },
    {
      "indent": 3,
      "text": "Depending on the operating system and the physical attachment point to which a network interface may be attached or removed, it may be impossible for an implementation to provide predictable and consistent names for system-controlled interfaces across insertion/ removal cycles as well as in anticipation of initial insertion. The ability to provide configurations for such interfaces is therefore dependent on the implementation and cannot be assumed in all cases.",
      "zh-CHS": "根据操作系统和可连接或移除网络接口的物理连接点，实现可能不可能在插入/移除周期以及预期初始插入时为系统控制接口提供可预测和一致的名称。因此，为此类接口提供配置的能力取决于实现，不能在所有情况下都假定。"
    },
    {
      "indent": 0,
      "text": "3.2. Interface References",
      "section_title": true,
      "zh-CHS": "3.2. 接口引用"
    },
    {
      "indent": 3,
      "text": "An interface is identified by its name, which is unique within the server. This property is captured in the \"interface-ref\" and \"interface-state-ref\" typedefs, which other YANG modules SHOULD use when they need to reference a configured interface or operationally used interface, respectively.",
      "zh-CHS": "接口由其名称标识，该名称在服务器中是唯一的。此属性在“interface ref”和“interface state ref”typedefs中捕获，当其他模块需要分别引用配置接口或操作使用的接口时，应使用这些属性。"
    },
    {
      "indent": 0,
      "text": "3.3. Interface Layering",
      "section_title": true,
      "zh-CHS": "3.3. 界面分层"
    },
    {
      "indent": 3,
      "text": "There is no generic mechanism for how an interface is configured to be layered on top of some other interface. It is expected that interface-type-specific models define their own data nodes for interface layering by using \"interface-ref\" types to reference lower layers.",
      "zh-CHS": "对于如何将接口配置为在其他接口之上分层，没有通用机制。预期特定于接口类型的模型通过使用“interface ref”类型引用较低的层来定义自己的接口分层数据节点。"
    },
    {
      "indent": 3,
      "text": "Below is an example of a model with such nodes. For a more complete example, see Appendix B.",
      "zh-CHS": "下面是具有此类节点的模型示例。有关更完整的示例，请参见附录B。"
    },
    {
      "indent": 5,
      "text": "import interfaces {\n    prefix \"if\";\n}\nimport iana-if-type {\n  prefix ianaift;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "augment \"/if:interfaces/if:interface\" {\n    when \"if:type = 'ianaift:ieee8023adLag'\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "    leaf-list slave-if {\n        type if:interface-ref;\n        must \"/if:interfaces/if:interface[if:name = current()]\"\n           + \"/if:type = 'ianaift:ethernetCsmacd'\" {\n            description\n                \"The type of a slave interface must be\n                 'ethernetCsmacd'.\";\n        }\n    }\n    // other bonding config params, failover times, etc.\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "While the interface layering is configured in interface-type-specific models, two generic state data leaf-lists, \"higher-layer-if\" and \"lower-layer-if\", represent a read-only view of the interface layering hierarchy.",
      "zh-CHS": "虽然接口分层是在接口类型特定的模型中配置的，但两个通用状态数据叶列表“较高层if”和“较低层if”表示接口分层层次结构的只读视图。"
    },
    {
      "indent": 0,
      "text": "4. Relationship to the IF-MIB",
      "section_title": true,
      "zh-CHS": "4. 与IF-MIB的关系"
    },
    {
      "indent": 3,
      "text": "If the device implements the IF-MIB [RFC2863], each entry in the \"/ interfaces-state/interface\" list is typically mapped to one ifEntry. The \"if-index\" leaf MUST contain the value of the corresponding ifEntry's ifIndex.",
      "zh-CHS": "如果设备实现If-MIB[RFC2863]，则“/interfaces state/interface”列表中的每个条目通常映射到一个ifEntry。“if index”叶必须包含相应ifEntry的ifIndex值。"
    },
    {
      "indent": 3,
      "text": "In most cases, the \"name\" of an \"/interfaces-state/interface\" entry is mapped to ifName. The IF-MIB allows two different ifEntries to have the same ifName. Devices that support this feature and also support the data model defined in this document cannot have a 1-1 mapping between the \"name\" leaf and ifName.",
      "zh-CHS": "在大多数情况下，“/interfaces state/interface”条目的“name”映射到ifName。IF-MIB允许两个不同的IFENTRY具有相同的ifName。支持此功能并支持本文档中定义的数据模型的设备不能在“name”叶和ifName之间具有1-1映射。"
    },
    {
      "indent": 3,
      "text": "The configured \"description\" of an \"interface\" has traditionally been mapped to ifAlias in some implementations. This document allows this mapping, but implementers should be aware of the differences in the value space and persistence for these objects. See the YANG module definition of the leaf \"description\" in Section 5 for details.",
      "zh-CHS": "在某些实现中，“接口”的配置“描述”传统上映射到IFALIA。本文档允许这种映射，但是实现者应该知道这些对象在值空间和持久性方面的差异。有关详细信息，请参见第5节叶“说明”的模块定义。"
    },
    {
      "indent": 3,
      "text": "The IF-MIB also defines the writable object ifPromiscuousMode. Since this object typically is not implemented as a configuration object by SNMP agents, it is not mapped to the \"ietf-interfaces\" module.",
      "zh-CHS": "IF-MIB还定义了可写对象IFPROMISCUUSMODE。由于SNMP代理通常不会将此对象实现为配置对象，因此不会将其映射到“ietf接口”模块。"
    },
    {
      "indent": 3,
      "text": "The ifMtu object from the IF-MIB is not mapped to the \"ietf-interfaces\" module. It is expected that interface-type-specific YANG modules provide interface-type-specific MTU leafs by augmenting the \"ietf-interfaces\" model.",
      "zh-CHS": "IF-MIB中的ifMtu对象未映射到“ietf接口”模块。预计特定于接口类型的模块通过扩展“ietf接口”模型提供特定于接口类型的MTU LEAF。"
    },
    {
      "indent": 3,
      "text": "There are a number of counters in the IF-MIB that exist in two versions: one with 32 bits and one with 64 bits. The 64-bit versions were added to support high-speed interfaces with a data rate greater than 20,000,000 bits/second. Today's implementations generally support such high-speed interfaces, and hence only 64-bit counters are provided in this data model. Note that NETCONF and SNMP may differ in the time granularity in which they provide access to the counters. For example, it is common that SNMP implementations cache counter values for some time.",
      "zh-CHS": "IF-MIB中有许多计数器存在于两个版本中：一个是32位的，另一个是64位的。添加64位版本是为了支持数据速率大于20000000位/秒的高速接口。今天的实现通常支持这种高速接口，因此在这个数据模型中只提供64位计数器。请注意，NETCONF和SNMP在提供对计数器的访问的时间粒度上可能有所不同。例如，SNMP实现通常会将计数器值缓存一段时间。"
    },
    {
      "indent": 3,
      "text": "The objects ifDescr and ifConnectorPresent from the IF-MIB are not mapped to the \"ietf-interfaces\" module.",
      "zh-CHS": "来自IF-MIB的对象ifDescr和ifConnectorPresent未映射到“ietf接口”模块。"
    },
    {
      "indent": 3,
      "text": "The following tables list the YANG data nodes with corresponding objects in the IF-MIB.",
      "zh-CHS": "下表列出了IF-MIB中具有相应对象的数据节点。"
    },
    {
      "indent": 3,
      "text": "+--------------------------------------+----------------------------+\n| YANG data node in /interfaces-       | IF-MIB object              |\n| state/interface                      |                            |\n+--------------------------------------+----------------------------+\n| name                                 | ifName                     |\n| type                                 | ifType                     |\n| admin-status                         | ifAdminStatus              |\n| oper-status                          | ifOperStatus               |\n| last-change                          | ifLastChange               |\n| if-index                             | ifIndex                    |\n| link-up-down-trap-enable             | ifLinkUpDownTrapEnable     |\n| phys-address                         | ifPhysAddress              |\n| higher-layer-if and lower-layer-if   | ifStackTable               |\n| speed                                | ifSpeed and ifHighSpeed    |\n| discontinuity-time                   | ifCounterDiscontinuityTime |\n| in-octets                            | ifHCInOctets               |\n| in-unicast-pkts                      | ifHCInUcastPkts            |\n| in-broadcast-pkts                    | ifHCInBroadcastPkts        |\n| in-multicast-pkts                    | ifHCInMulticastPkts        |\n| in-discards                          | ifInDiscards               |\n| in-errors                            | ifInErrors                 |\n| in-unknown-protos                    | ifInUnknownProtos          |\n| out-octets                           | ifHCOutOctets              |\n| out-unicast-pkts                     | ifHCOutUcastPkts           |\n| out-broadcast-pkts                   | ifHCOutBroadcastPkts       |\n| out-multicast-pkts                   | ifHCOutMulticastPkts       |\n| out-discards                         | ifOutDiscards              |\n| out-errors                           | ifOutErrors                |\n+--------------------------------------+----------------------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 13,
      "text": "YANG State Data Nodes and Related IF-MIB Objects",
      "zh-CHS": "YANG State数据节点和相关的IF-MIB对象"
    },
    {
      "indent": 8,
      "text": "+-----------------------------------------+---------------+\n| YANG data node in /interfaces/interface | IF-MIB object |\n+-----------------------------------------+---------------+\n| description                             | ifAlias       |\n+-----------------------------------------+---------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 13,
      "text": "YANG Config Data Nodes and Related IF-MIB Objects",
      "zh-CHS": "配置数据节点和相关的IF-MIB对象"
    },
    {
      "indent": 0,
      "text": "5. Interfaces YANG Module",
      "section_title": true,
      "zh-CHS": "5. 杨氏模块接口"
    },
    {
      "indent": 3,
      "text": "This YANG module imports typedefs from [RFC6991].",
      "zh-CHS": "此模块从[RFC6991]导入typedefs。"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS> file \"ietf-interfaces@2014-05-08.yang\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "module ietf-interfaces {",
      "zh-CHS": "模块ietf接口{"
    },
    {
      "indent": 5,
      "text": "namespace \"urn:ietf:params:xml:ns:yang:ietf-interfaces\";\nprefix if;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "import ietf-yang-types {\n  prefix yang;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "organization \"IETF NETMOD (NETCONF Data Modeling Language) Working Group\";",
      "zh-CHS": "组织“IETF NETMOD（NETCONF数据建模语言）工作组”；"
    },
    {
      "indent": 5,
      "text": "contact\n  \"WG Web:   <http://tools.ietf.org/wg/netmod/>\n   WG List:  <mailto:netmod@ietf.org>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "WG Chair: Thomas Nadeau\n          <mailto:tnadeau@lucidvision.com>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "WG Chair: Juergen Schoenwaelder\n          <mailto:j.schoenwaelder@jacobs-university.de>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "Editor:   Martin Bjorklund\n          <mailto:mbj@tail-f.com>\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "description \"This module contains a collection of YANG definitions for managing network interfaces.",
      "zh-CHS": "description“此模块包含用于管理网络接口的定义集合。"
    },
    {
      "indent": 8,
      "text": "Copyright (c) 2014 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "zh-CHS": "版权所有（c）2014 IETF信托基金和被确定为代码作者的人员。版权所有。"
    },
    {
      "indent": 8,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info).",
      "zh-CHS": "根据IETF信托有关IETF文件的法律规定第4.c节规定的简化BSD许可证中包含的许可条款，允许以源代码和二进制格式重新分发和使用，无论是否修改(http://trustee.ietf.org/license-info)."
    },
    {
      "indent": 8,
      "text": "This version of this YANG module is part of RFC 7223; see the RFC itself for full legal notices.\";",
      "zh-CHS": "该模块的此版本是RFC 7223的一部分；有关完整的法律通知，请参见RFC本身。“；"
    },
    {
      "indent": 5,
      "text": "revision 2014-05-08 {\n  description\n    \"Initial revision.\";\n  reference\n    \"RFC 7223: A YANG Data Model for Interface Management\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "/*\n * Typedefs\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "typedef interface-ref {\n  type leafref {\n    path \"/if:interfaces/if:interface/if:name\";\n  }\n  description\n    \"This type is used by data models that need to reference\n     configured interfaces.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "typedef interface-state-ref {\n  type leafref {\n    path \"/if:interfaces-state/if:interface/if:name\";\n  }\n  description\n    \"This type is used by data models that need to reference\n     the operationally present interfaces.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "/*\n * Identities\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity interface-type {\n  description\n    \"Base identity from which specific interface types are\n     derived.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "/*\n * Features\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "feature arbitrary-names {\n  description\n    \"This feature indicates that the device allows user-controlled\n     interfaces to be named arbitrarily.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "feature pre-provisioning {\n  description\n    \"This feature indicates that the device supports\n     pre-provisioning of interface configuration, i.e., it is\n     possible to configure an interface whose physical interface\n     hardware is not present on the device.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "feature if-mib {\n  description\n    \"This feature indicates that the device implements\n     the IF-MIB.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "/*\n * Configuration data nodes\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "container interfaces {\n  description\n    \"Interface configuration parameters.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "list interface {\n  key \"name\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "description \"The list of configured interfaces on the device.",
      "zh-CHS": "description“设备上已配置接口的列表。"
    },
    {
      "indent": 12,
      "text": "The operational state of an interface is available in the\n/interfaces-state/interface list.  If the configuration of a\nsystem-controlled interface cannot be used by the system\n(e.g., the interface hardware present does not match the\ninterface type), then the configuration is not applied to\nthe system-controlled interface shown in the\n/interfaces-state/interface list.  If the configuration\nof a user-controlled interface cannot be used by the system,\nthe configured interface is not instantiated in the\n/interfaces-state/interface list.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf name {\n   type string;\n   description\n     \"The name of the interface.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "A device MAY restrict the allowed values for this leaf, possibly depending on the type of the interface.",
      "zh-CHS": "设备可能会限制此叶的允许值，这可能取决于接口的类型。"
    },
    {
      "indent": 14,
      "text": "For system-controlled interfaces, this leaf is the device-specific name of the interface. The 'config false' list /interfaces-state/interface contains the currently existing interfaces on the device.",
      "zh-CHS": "对于系统控制接口，此叶是接口的设备特定名称。“config false”列表/接口状态/接口包含设备上当前存在的接口。"
    },
    {
      "indent": 14,
      "text": "If a client tries to create configuration for a system-controlled interface that is not present in the /interfaces-state/interface list, the server MAY reject the request if the implementation does not support pre-provisioning of interfaces or if the name refers to an interface that can never exist in the system. A NETCONF server MUST reply with an rpc-error with the error-tag 'invalid-value' in this case.",
      "zh-CHS": "如果客户机尝试为/interfaces state/interface列表中不存在的系统控制接口创建配置，则如果实现不支持接口的预配置，或者如果名称指的是系统中永远不可能存在的接口，则服务器可能会拒绝该请求。在这种情况下，NETCONF服务器必须使用带有错误标记“无效值”的rpc错误进行回复。"
    },
    {
      "indent": 14,
      "text": "If the device supports pre-provisioning of interface configuration, the 'pre-provisioning' feature is advertised.",
      "zh-CHS": "如果设备支持预设置接口配置，则会公布“预设置”功能。"
    },
    {
      "indent": 14,
      "text": "If the device allows arbitrarily named user-controlled interfaces, the 'arbitrary-names' feature is advertised.",
      "zh-CHS": "如果设备允许使用任意命名的用户控制界面，“任意名称”功能将被公布。"
    },
    {
      "indent": 9,
      "text": "     When a configured user-controlled interface is created by\n     the system, it is instantiated with the same name in the\n     /interface-state/interface list.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf description {\n  type string;\n  description\n    \"A textual description of the interface.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "A server implementation MAY map this leaf to the ifAlias MIB object. Such an implementation needs to use some mechanism to handle the differences in size and characters allowed between this leaf and ifAlias. The definition of such a mechanism is outside the scope of this document.",
      "zh-CHS": "服务器实现可以将此叶映射到ifAlias MIB对象。这样的实现需要使用某种机制来处理此leaf和ifAlias之间允许的大小和字符差异。这种机制的定义不在本文件的范围之内。"
    },
    {
      "indent": 14,
      "text": "Since ifAlias is defined to be stored in non-volatile storage, the MIB implementation MUST map ifAlias to the value of 'description' in the persistently stored datastore.",
      "zh-CHS": "由于ifAlias被定义为存储在非易失性存储中，MIB实现必须将ifAlias映射到持久存储的数据存储中的“description”值。"
    },
    {
      "indent": 14,
      "text": "Specifically, if the device supports ':startup', when ifAlias is read the device MUST return the value of 'description' in the 'startup' datastore, and when it is written, it MUST be written to the 'running' and 'startup' datastores. Note that it is up to the implementation to",
      "zh-CHS": "具体而言，如果设备支持“：startup”，则读取ifAlias时，设备必须在“startup”数据存储中返回“description”值，写入时，必须将其写入“running”和“startup”数据存储。请注意，这取决于实现"
    },
    {
      "indent": 14,
      "text": "decide whether to modify this single leaf in 'startup' or perform an implicit copy-config from 'running' to 'startup'.",
      "zh-CHS": "决定是在“startup”中修改此单个叶，还是执行从“running”到“startup”的隐式复制配置。"
    },
    {
      "indent": 9,
      "text": "     If the device does not support ':startup', ifAlias MUST\n     be mapped to the 'description' leaf in the 'running'\n     datastore.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifAlias\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf type {\n  type identityref {\n    base interface-type;\n  }\n  mandatory true;\n  description\n    \"The type of the interface.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "When an interface entry is created, a server MAY initialize the type leaf with a valid value, e.g., if it is possible to derive the type from the name of the interface.",
      "zh-CHS": "创建接口条目时，服务器可以使用有效值初始化类型叶，例如，如果可以从接口名称派生类型。"
    },
    {
      "indent": 9,
      "text": "     If a client tries to set the type of an interface to a\n     value that can never be used by the system, e.g., if the\n     type is not supported or if the type does not match the\n     name of the interface, the server MUST reject the request.\n     A NETCONF server MUST reply with an rpc-error with the\n     error-tag 'invalid-value' in this case.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifType\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf enabled {\n  type boolean;\n  default \"true\";\n  description\n    \"This leaf contains the configured, desired state of the\n     interface.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "Systems that implement the IF-MIB use the value of this leaf in the 'running' datastore to set IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry has been initialized, as described in RFC 2863.",
      "zh-CHS": "实现IF-MIB的系统使用“正在运行”数据存储中此叶的值，在初始化ifEntry后将IF-MIB.ifAdminStatus设置为“向上”或“向下”，如RFC 2863中所述。"
    },
    {
      "indent": 9,
      "text": "     Changes in this leaf in the 'running' datastore are\n     reflected in ifAdminStatus, but if ifAdminStatus is\n     changed over SNMP, this leaf is not affected.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifAdminStatus\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf link-up-down-trap-enable {\n  if-feature if-mib;\n  type enumeration {\n    enum enabled {\n      value 1;\n    }\n    enum disabled {\n      value 2;\n    }\n  }\n  description\n    \"Controls whether linkUp/linkDown SNMP notifications\n     should be generated for this interface.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "         If this node is not configured, the value 'enabled' is\n         operationally used by the server for interfaces that do\n         not operate on top of any other interface (i.e., there are\n         no 'lower-layer-if' entries), and 'disabled' otherwise.\";\n      reference\n        \"RFC 2863: The Interfaces Group MIB -\n                   ifLinkUpDownTrapEnable\";\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "/*\n * Operational state data nodes\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "container interfaces-state {\n  config false;\n  description\n    \"Data nodes for the operational state of interfaces.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "list interface {\n  key \"name\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "description \"The list of interfaces on the device.",
      "zh-CHS": "description“设备上的接口列表。"
    },
    {
      "indent": 12,
      "text": "System-controlled interfaces created by the system are always present in this list, whether they are configured or not.\";",
      "zh-CHS": "由系统创建的系统控制接口始终存在于此列表中，无论它们是否已配置。“；"
    },
    {
      "indent": 9,
      "text": "leaf name {\n  type string;\n  description\n    \"The name of the interface.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "     A server implementation MAY map this leaf to the ifName\n     MIB object.  Such an implementation needs to use some\n     mechanism to handle the differences in size and characters\n     allowed between this leaf and ifName.  The definition of\n     such a mechanism is outside the scope of this document.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifName\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf type {\n  type identityref {\n    base interface-type;\n  }\n  mandatory true;\n  description\n    \"The type of the interface.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifType\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf admin-status {\n  if-feature if-mib;\n  type enumeration {\n    enum up {\n      value 1;\n      description\n        \"Ready to pass packets.\";\n    }\n    enum down {\n      value 2;\n      description\n        \"Not ready to pass packets and not in some test mode.\";\n    }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "  enum testing {\n    value 3;\n    description\n      \"In some test mode.\";\n  }\n}\nmandatory true;\ndescription\n  \"The desired state of the interface.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "     This leaf has the same read semantics as ifAdminStatus.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifAdminStatus\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf oper-status {\n  type enumeration {\n    enum up {\n      value 1;\n      description\n        \"Ready to pass packets.\";\n    }\n    enum down {\n      value 2;\n      description\n        \"The interface does not pass any packets.\";\n    }\n    enum testing {\n      value 3;\n      description\n        \"In some test mode.  No operational packets can\n         be passed.\";\n    }\n    enum unknown {\n      value 4;\n      description\n        \"Status cannot be determined for some reason.\";\n    }\n    enum dormant {\n      value 5;\n      description\n        \"Waiting for some external event.\";\n    }\n    enum not-present {\n      value 6;\n      description\n        \"Some component (typically hardware) is missing.\";\n    }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "  enum lower-layer-down {\n    value 7;\n    description\n      \"Down due to state of lower-layer interface(s).\";\n  }\n}\nmandatory true;\ndescription\n  \"The current operational state of the interface.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "     This leaf has the same semantics as ifOperStatus.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifOperStatus\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf last-change {\n  type yang:date-and-time;\n  description\n    \"The time the interface entered its current operational\n     state.  If the current state was entered prior to the\n     last re-initialization of the local network management\n     subsystem, then this node is not present.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifLastChange\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf if-index {\n  if-feature if-mib;\n  type int32 {\n    range \"1..2147483647\";\n  }\n  mandatory true;\n  description\n    \"The ifIndex value for the ifEntry represented by this\n     interface.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifIndex\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf phys-address {\n  type yang:phys-address;\n  description\n    \"The interface's address at its protocol sub-layer.  For\n     example, for an 802.x interface, this object normally\n     contains a Media Access Control (MAC) address.  The\n     interface's media-specific modules must define the bit",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "     and byte ordering and the format of the value of this\n     object.  For interfaces that do not have such an address\n     (e.g., a serial line), this node is not present.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifPhysAddress\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf-list higher-layer-if {\n  type interface-state-ref;\n  description\n    \"A list of references to interfaces layered on top of this\n     interface.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifStackTable\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf-list lower-layer-if {\n  type interface-state-ref;\n  description\n    \"A list of references to interfaces layered underneath this\n     interface.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifStackTable\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf speed {\n  type yang:gauge64;\n  units \"bits/second\";\n  description\n      \"An estimate of the interface's current bandwidth in bits\n       per second.  For interfaces that do not vary in\n       bandwidth or for those where no accurate estimation can\n       be made, this node should contain the nominal bandwidth.\n       For interfaces that have no concept of bandwidth, this\n       node is not present.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB -\n               ifSpeed, ifHighSpeed\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "container statistics {\n  description\n    \"A collection of interface-related statistics objects.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf discontinuity-time {\n  type yang:date-and-time;\n  mandatory true;\n  description\n    \"The time on the most recent occasion at which any one or\n     more of this interface's counters suffered a\n     discontinuity.  If no such discontinuities have occurred\n     since the last re-initialization of the local management\n     subsystem, then this node contains the time the local\n     management subsystem re-initialized itself.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf in-octets {\n  type yang:counter64;\n  description\n    \"The total number of octets received on the interface,\n     including framing characters.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     Discontinuities in the value of this counter can occur\n     at re-initialization of the management system, and at\n     other times as indicated by the value of\n     'discontinuity-time'.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifHCInOctets\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf in-unicast-pkts {\n  type yang:counter64;\n  description\n    \"The number of packets, delivered by this sub-layer to a\n     higher (sub-)layer, that were not addressed to a\n     multicast or broadcast address at this sub-layer.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     Discontinuities in the value of this counter can occur\n     at re-initialization of the management system, and at\n     other times as indicated by the value of\n     'discontinuity-time'.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifHCInUcastPkts\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf in-broadcast-pkts {\n  type yang:counter64;\n  description\n    \"The number of packets, delivered by this sub-layer to a\n     higher (sub-)layer, that were addressed to a broadcast\n     address at this sub-layer.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     Discontinuities in the value of this counter can occur\n     at re-initialization of the management system, and at\n     other times as indicated by the value of\n     'discontinuity-time'.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB -\n               ifHCInBroadcastPkts\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf in-multicast-pkts {\n  type yang:counter64;\n  description\n    \"The number of packets, delivered by this sub-layer to a\n     higher (sub-)layer, that were addressed to a multicast\n     address at this sub-layer.  For a MAC-layer protocol,\n     this includes both Group and Functional addresses.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     Discontinuities in the value of this counter can occur\n     at re-initialization of the management system, and at\n     other times as indicated by the value of\n     'discontinuity-time'.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB -\n               ifHCInMulticastPkts\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf in-discards {\n  type yang:counter32;\n  description\n    \"The number of inbound packets that were chosen to be\n     discarded even though no errors had been detected to\n     prevent their being deliverable to a higher-layer\n     protocol.  One possible reason for discarding such a\n     packet could be to free up buffer space.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of 'discontinuity-time'.\";",
      "zh-CHS": "该计数器值的不连续性可能在管理系统重新初始化时发生，也可能在“不连续时间”值指示的其他时间发生。”；"
    },
    {
      "indent": 11,
      "text": "  reference\n    \"RFC 2863: The Interfaces Group MIB - ifInDiscards\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf in-errors {\n  type yang:counter32;\n  description\n    \"For packet-oriented interfaces, the number of inbound\n     packets that contained errors preventing them from being\n     deliverable to a higher-layer protocol.  For character-\n     oriented or fixed-length interfaces, the number of\n     inbound transmission units that contained errors\n     preventing them from being deliverable to a higher-layer\n     protocol.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     Discontinuities in the value of this counter can occur\n     at re-initialization of the management system, and at\n     other times as indicated by the value of\n     'discontinuity-time'.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifInErrors\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf in-unknown-protos {\n  type yang:counter32;\n  description\n    \"For packet-oriented interfaces, the number of packets\n     received via the interface that were discarded because\n     of an unknown or unsupported protocol.  For\n     character-oriented or fixed-length interfaces that\n     support protocol multiplexing, the number of\n     transmission units received via the interface that were\n     discarded because of an unknown or unsupported protocol.\n     For any interface that does not support protocol\n     multiplexing, this counter is not present.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     Discontinuities in the value of this counter can occur\n     at re-initialization of the management system, and at\n     other times as indicated by the value of\n     'discontinuity-time'.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifInUnknownProtos\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf out-octets {\n  type yang:counter64;\n  description\n    \"The total number of octets transmitted out of the\n     interface, including framing characters.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     Discontinuities in the value of this counter can occur\n     at re-initialization of the management system, and at\n     other times as indicated by the value of\n     'discontinuity-time'.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifHCOutOctets\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf out-unicast-pkts {\n  type yang:counter64;\n  description\n    \"The total number of packets that higher-level protocols\n     requested be transmitted, and that were not addressed\n     to a multicast or broadcast address at this sub-layer,\n     including those that were discarded or not sent.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     Discontinuities in the value of this counter can occur\n     at re-initialization of the management system, and at\n     other times as indicated by the value of\n     'discontinuity-time'.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifHCOutUcastPkts\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf out-broadcast-pkts {\n  type yang:counter64;\n  description\n    \"The total number of packets that higher-level protocols\n     requested be transmitted, and that were addressed to a\n     broadcast address at this sub-layer, including those\n     that were discarded or not sent.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     Discontinuities in the value of this counter can occur\n     at re-initialization of the management system, and at\n     other times as indicated by the value of\n     'discontinuity-time'.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB -\n               ifHCOutBroadcastPkts\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf out-multicast-pkts {\n  type yang:counter64;\n  description\n    \"The total number of packets that higher-level protocols\n     requested be transmitted, and that were addressed to a\n     multicast address at this sub-layer, including those\n     that were discarded or not sent.  For a MAC-layer\n     protocol, this includes both Group and Functional\n     addresses.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     Discontinuities in the value of this counter can occur\n     at re-initialization of the management system, and at\n     other times as indicated by the value of\n     'discontinuity-time'.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB -\n               ifHCOutMulticastPkts\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf out-discards {\n  type yang:counter32;\n  description\n    \"The number of outbound packets that were chosen to be\n     discarded even though no errors had been detected to\n     prevent their being transmitted.  One possible reason\n     for discarding such a packet could be to free up buffer\n     space.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     Discontinuities in the value of this counter can occur\n     at re-initialization of the management system, and at\n     other times as indicated by the value of\n     'discontinuity-time'.\";\n  reference\n    \"RFC 2863: The Interfaces Group MIB - ifOutDiscards\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf out-errors {\n  type yang:counter32;\n  description\n    \"For packet-oriented interfaces, the number of outbound\n     packets that could not be transmitted because of errors.\n     For character-oriented or fixed-length interfaces, the\n     number of outbound transmission units that could not be\n     transmitted because of errors.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "             Discontinuities in the value of this counter can occur\n             at re-initialization of the management system, and at\n             other times as indicated by the value of\n             'discontinuity-time'.\";\n          reference\n            \"RFC 2863: The Interfaces Group MIB - ifOutErrors\";\n        }\n      }\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "zh-CHS": "<代码结束>"
    },
    {
      "indent": 0,
      "text": "6. IANA Considerations",
      "section_title": true,
      "zh-CHS": "6. IANA考虑"
    },
    {
      "indent": 3,
      "text": "This document registers a URI in the \"IETF XML Registry\" [RFC3688]. Following the format in RFC 3688, the following registration has been made.",
      "zh-CHS": "本文档在“IETF XML注册表”[RFC3688]中注册URI。按照RFC 3688中的格式，进行了以下注册。"
    },
    {
      "indent": 6,
      "text": "URI: urn:ietf:params:xml:ns:yang:ietf-interfaces",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "Registrant Contact: The IESG.",
      "zh-CHS": "注册人联系人：IESG。"
    },
    {
      "indent": 6,
      "text": "XML: N/A, the requested URI is an XML namespace.",
      "zh-CHS": "XML:N/A，请求的URI是一个XML名称空间。"
    },
    {
      "indent": 3,
      "text": "This document registers a YANG module in the \"YANG Module Names\" registry [RFC6020].",
      "zh-CHS": "本文件在“阳模块名称”注册表[RFC6020]中注册阳模块。"
    },
    {
      "indent": 6,
      "text": "name:         ietf-interfaces\nnamespace:    urn:ietf:params:xml:ns:yang:ietf-interfaces\nprefix:       if\nreference:    RFC 7223",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "zh-CHS": "7. 安全考虑"
    },
    {
      "indent": 3,
      "text": "The YANG module defined in this memo is designed to be accessed via the NETCONF protocol [RFC6241]. The lowest NETCONF layer is the secure transport layer and the mandatory-to-implement secure transport is SSH [RFC6242]. The NETCONF access control model [RFC6536] provides the means to restrict access for particular NETCONF users to a pre-configured subset of all available NETCONF protocol operations and content.",
      "zh-CHS": "本备忘录中定义的模块旨在通过NETCONF协议[RFC6241]访问。最低的NETCONF层是安全传输层，实现安全传输的必需层是SSH[RFC6242]。NETCONF访问控制模型[RFC6536]提供了将特定NETCONF用户的访问限制为所有可用NETCONF协议操作和内容的预配置子集的方法。"
    },
    {
      "indent": 3,
      "text": "There are a number of data nodes defined in the YANG module which are writable/creatable/deletable (i.e., config true, which is the default). These data nodes may be considered sensitive or vulnerable in some network environments. Write operations (e.g., <edit-config>)",
      "zh-CHS": "YANG模块中定义了许多数据节点，这些节点是可写/可创建/可删除的（即config true，这是默认值）。在某些网络环境中，这些数据节点可能被视为敏感或易受攻击。写入操作（例如，<edit config>）"
    },
    {
      "indent": 3,
      "text": "to these data nodes without proper protection can have a negative effect on network operations. These are the subtrees and data nodes and their sensitivity/vulnerability:",
      "zh-CHS": "对这些数据节点不进行适当的保护可能会对网络运行产生负面影响。这些是子树和数据节点及其敏感性/漏洞："
    },
    {
      "indent": 3,
      "text": "/interfaces/interface: This list specifies the configured interfaces on a device. Unauthorized access to this list could cause the device to ignore packets it should receive and process.",
      "zh-CHS": "/接口/接口：此列表指定设备上配置的接口。未经授权访问此列表可能会导致设备忽略其应接收和处理的数据包。"
    },
    {
      "indent": 3,
      "text": "/interfaces/interface/enabled: This leaf controls whether an interface is enabled or not. Unauthorized access to this leaf could cause the device to ignore packets it should receive and process.",
      "zh-CHS": "/接口/接口/已启用：此叶控制接口是否已启用。未经授权访问此叶可能会导致设备忽略其应接收和处理的数据包。"
    },
    {
      "indent": 0,
      "text": "8. Acknowledgments",
      "section_title": true,
      "zh-CHS": "8. 致谢"
    },
    {
      "indent": 3,
      "text": "The author wishes to thank Alexander Clemm, Per Hedeland, Ladislav Lhotka, and Juergen Schoenwaelder for their helpful comments.",
      "zh-CHS": "作者希望感谢亚历山大·克莱姆、佩尔·海德兰、拉迪斯拉夫·洛特卡和尤尔根·舍恩瓦埃尔德的有益评论。"
    },
    {
      "indent": 0,
      "text": "9. References",
      "section_title": true,
      "zh-CHS": "9. 工具书类"
    },
    {
      "indent": 0,
      "text": "9.1. Normative References",
      "section_title": true,
      "zh-CHS": "9.1. 规范性引用文件"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997.",
      "zh-CHS": "[RFC2119]Bradner，S.，“RFC中用于表示需求水平的关键词”，BCP 14，RFC 2119，1997年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC2863] McCloghrie, K. and F. Kastenholz, \"The Interfaces Group MIB\", RFC 2863, June 2000.",
      "zh-CHS": "[RFC2863]McCloghrie，K.和F.Kastenholz，“接口组MIB”，RFC 28632000年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC3688] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, January 2004.",
      "zh-CHS": "[RFC3688]Mealling，M.“IETF XML注册表”，BCP 81，RFC 3688，2004年1月。"
    },
    {
      "indent": 3,
      "text": "[RFC6020] Bjorklund, M., \"YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)\", RFC 6020, October 2010.",
      "zh-CHS": "[RFC6020]Bjorklund，M.“YANG-网络配置协议（NETCONF）的数据建模语言”，RFC6020，2010年10月。"
    },
    {
      "indent": 3,
      "text": "[RFC6991] Schoenwaelder, J., \"Common YANG Data Types\", RFC 6991, July 2013.",
      "zh-CHS": "[RFC6991]Schoenwaeld，J.，“常见的杨氏数据类型”，RFC 69912013年7月。"
    },
    {
      "indent": 0,
      "text": "9.2. Informative References",
      "section_title": true,
      "zh-CHS": "9.2. 资料性引用"
    },
    {
      "indent": 3,
      "text": "[RFC6241] Enns, R., Bjorklund, M., Schoenwaelder, J., and A. Bierman, \"Network Configuration Protocol (NETCONF)\", RFC 6241, June 2011.",
      "zh-CHS": "[RFC6241]Enns，R.，Bjorklund，M.，Schoenwaeld，J.，和A.Bierman，“网络配置协议（NETCONF）”，RFC 62412011年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC6242] Wasserman, M., \"Using the NETCONF Protocol over Secure Shell (SSH)\", RFC 6242, June 2011.",
      "zh-CHS": "[RFC6242]Wasserman，M.“在安全Shell（SSH）上使用NETCONF协议”，RFC6242，2011年6月。"
    },
    {
      "indent": 3,
      "text": "[RFC6536] Bierman, A. and M. Bjorklund, \"Network Configuration Protocol (NETCONF) Access Control Model\", RFC 6536, March 2012.",
      "zh-CHS": "[RFC6536]Bierman，A.和M.Bjorklund，“网络配置协议（NETCONF）访问控制模型”，RFC 65362012年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC7224] Bjorklund, M., \"IANA Interface Type YANG Module\", RFC 7224, May 2014.",
      "zh-CHS": "[RFC7224]Bjorklund，M.，“IANA接口类型YANG模块”，RFC 72242014年5月。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Example: Ethernet Interface Module",
      "zh-CHS": "附录A.示例：以太网接口模块"
    },
    {
      "indent": 3,
      "text": "This section gives a simple example of how an Ethernet interface module could be defined. It demonstrates how media-specific configuration parameters can be conditionally augmented to the generic interface list. It also shows how operational state parameters can be conditionally augmented to the operational interface list. The example is not intended as a complete module for Ethernet configuration.",
      "zh-CHS": "本节给出了如何定义以太网接口模块的简单示例。它演示了如何将特定于媒体的配置参数有条件地扩展到通用接口列表。它还显示了如何有条件地将操作状态参数扩充到操作接口列表中。本示例不打算作为以太网配置的完整模块。"
    },
    {
      "indent": 3,
      "text": "module ex-ethernet {\n  namespace \"http://example.com/ethernet\";\n  prefix \"eth\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "import ietf-interfaces {\n  prefix if;\n}\nimport iana-if-type {\n  prefix ianaift;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "// configuration parameters for Ethernet interfaces\naugment \"/if:interfaces/if:interface\" {\n  when \"if:type = 'ianaift:ethernetCsmacd'\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "container ethernet {\n  choice transmission-params {\n    case auto {\n      leaf auto-negotiate {\n        type empty;\n      }\n    }\n    case manual {\n      leaf duplex {\n        type enumeration {\n          enum \"half\";\n          enum \"full\";\n        }\n      }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "        leaf speed {\n          type enumeration {\n            enum \"10Mb\";\n            enum \"100Mb\";\n            enum \"1Gb\";\n            enum \"10Gb\";\n          }\n        }\n      }\n    }\n    // other Ethernet-specific params...\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "// operational state parameters for Ethernet interfaces\naugment \"/if:interfaces-state/if:interface\" {\n  when \"if:type = 'ianaift:ethernetCsmacd'\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "    container ethernet {\n      leaf duplex {\n        type enumeration {\n          enum \"half\";\n          enum \"full\";\n        }\n      }\n      // other Ethernet-specific params...\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Appendix B. Example: Ethernet Bonding Interface Module",
      "zh-CHS": "附录B.示例：以太网连接接口模块"
    },
    {
      "indent": 3,
      "text": "This section gives an example of how interface layering can be defined. An Ethernet bonding interface that bonds several Ethernet interfaces into one logical interface is defined.",
      "zh-CHS": "本节给出了如何定义接口分层的示例。定义了将多个以太网接口连接到一个逻辑接口的以太网连接接口。"
    },
    {
      "indent": 3,
      "text": "module ex-ethernet-bonding {\n  namespace \"http://example.com/ethernet-bonding\";\n  prefix \"bond\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "import ietf-interfaces {\n  prefix if;\n}\nimport iana-if-type {\n  prefix ianaift;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "augment \"/if:interfaces/if:interface\" {\n  when \"if:type = 'ianaift:ieee8023adLag'\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "    leaf-list slave-if {\n      type if:interface-ref;\n      must \"/if:interfaces/if:interface[if:name = current()]\"\n         + \"/if:type = 'ianaift:ethernetCsmacd'\" {\n        description\n          \"The type of a slave interface must be 'ethernetCsmacd'.\";\n      }\n    }\n    leaf bonding-mode {\n      type enumeration {\n        enum round-robin;\n        enum active-backup;\n        enum broadcast;\n      }\n    }\n    // other bonding config params, failover times, etc.\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Appendix C. Example: VLAN Interface Module",
      "zh-CHS": "附录C.示例：VLAN接口模块"
    },
    {
      "indent": 3,
      "text": "This section gives an example of how a VLAN interface module can be defined.",
      "zh-CHS": "本节给出了如何定义VLAN接口模块的示例。"
    },
    {
      "indent": 3,
      "text": "module ex-vlan {\n  namespace \"http://example.com/vlan\";\n  prefix \"vlan\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "import ietf-interfaces {\n  prefix if;\n}\nimport iana-if-type {\n  prefix ianaift;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "augment \"/if:interfaces/if:interface\" {\n  when \"if:type = 'ianaift:ethernetCsmacd' or\n        if:type = 'ianaift:ieee8023adLag'\";\n  leaf vlan-tagging {\n    type boolean;\n    default false;\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "augment \"/if:interfaces/if:interface\" {\n  when \"if:type = 'ianaift:l2vlan'\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "    leaf base-interface {\n      type if:interface-ref;\n      must \"/if:interfaces/if:interface[if:name = current()]\"\n         + \"/vlan:vlan-tagging = 'true'\" {\n        description\n          \"The base interface must have VLAN tagging enabled.\";\n      }\n    }\n    leaf vlan-id {\n      type uint16 {\n        range \"1..4094\";\n      }\n      must \"../base-interface\" {\n        description\n          \"If a vlan-id is defined, a base-interface must\n           be specified.\";\n      }\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Appendix D.  Example: NETCONF <get> Reply",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "This section gives an example of a reply to the NETCONF <get> request for a device that implements the example data models above.",
      "zh-CHS": "本节给出了对实现上述示例数据模型的设备的NETCONF<get>请求的回复示例。"
    },
    {
      "indent": 3,
      "text": "<rpc-reply\n    xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\n    message-id=\"101\">\n  <data>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "<interfaces\n    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\n    xmlns:ianaift=\"urn:ietf:params:xml:ns:yang:iana-if-type\"\n    xmlns:vlan=\"http://example.com/vlan\">",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "<interface>\n  <name>eth0</name>\n  <type>ianaift:ethernetCsmacd</type>\n  <enabled>false</enabled>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "<interface>\n  <name>eth1</name>\n  <type>ianaift:ethernetCsmacd</type>\n  <enabled>true</enabled>\n  <vlan:vlan-tagging>true</vlan:vlan-tagging>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "<interface>\n  <name>eth1.10</name>\n  <type>ianaift:l2vlan</type>\n  <enabled>true</enabled>\n  <vlan:base-interface>eth1</vlan:base-interface>\n  <vlan:vlan-id>10</vlan:vlan-id>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "<interface>\n  <name>lo1</name>\n  <type>ianaift:softwareLoopback</type>\n  <enabled>true</enabled>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "</interfaces>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "<interfaces-state\n    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-interfaces\"\n    xmlns:ianaift=\"urn:ietf:params:xml:ns:yang:iana-if-type\">",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "<interface>\n  <name>eth0</name>\n  <type>ianaift:ethernetCsmacd</type>\n  <admin-status>down</admin-status>\n  <oper-status>down</oper-status>\n  <if-index>2</if-index>\n  <phys-address>00:01:02:03:04:05</phys-address>\n  <statistics>\n    <discontinuity-time>\n      2013-04-01T03:00:00+00:00\n    </discontinuity-time>\n    <!-- counters now shown here -->\n  </statistics>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "<interface>\n  <name>eth1</name>\n  <type>ianaift:ethernetCsmacd</type>\n  <admin-status>up</admin-status>\n  <oper-status>up</oper-status>\n  <if-index>7</if-index>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "  <phys-address>00:01:02:03:04:06</phys-address>\n  <higher-layer-if>eth1.10</higher-layer-if>\n  <statistics>\n    <discontinuity-time>\n      2013-04-01T03:00:00+00:00\n    </discontinuity-time>\n    <!-- counters now shown here -->\n  </statistics>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "<interface>\n  <name>eth1.10</name>\n  <type>ianaift:l2vlan</type>\n  <admin-status>up</admin-status>\n  <oper-status>up</oper-status>\n  <if-index>9</if-index>\n  <lower-layer-if>eth1</lower-layer-if>\n  <statistics>\n    <discontinuity-time>\n      2013-04-01T03:00:00+00:00\n    </discontinuity-time>\n    <!-- counters now shown here -->\n  </statistics>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "<!-- This interface is not configured -->\n<interface>\n  <name>eth2</name>\n  <type>ianaift:ethernetCsmacd</type>\n  <admin-status>down</admin-status>\n  <oper-status>down</oper-status>\n  <if-index>8</if-index>\n  <phys-address>00:01:02:03:04:07</phys-address>\n  <statistics>\n    <discontinuity-time>\n      2013-04-01T03:00:00+00:00\n    </discontinuity-time>\n    <!-- counters now shown here -->\n  </statistics>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "<interface>\n  <name>lo1</name>\n  <type>ianaift:softwareLoopback</type>\n  <admin-status>up</admin-status>\n  <oper-status>up</oper-status>\n  <if-index>1</if-index>\n  <statistics>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "    <discontinuity-time>\n      2013-04-01T03:00:00+00:00\n    </discontinuity-time>\n    <!-- counters now shown here -->\n  </statistics>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "    </interfaces-state>\n  </data>\n</rpc-reply>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Appendix E. Examples: Interface Naming Schemes",
      "zh-CHS": "附录E.示例：接口命名方案"
    },
    {
      "indent": 3,
      "text": "This section gives examples of some implementation strategies.",
      "zh-CHS": "本节给出了一些实施策略的示例。"
    },
    {
      "indent": 3,
      "text": "The examples make use of the example data model \"ex-vlan\" (see Appendix C) to show how user-controlled interfaces can be configured.",
      "zh-CHS": "这些示例使用示例数据模型“ex vlan”（见附录C）来说明如何配置用户控制的接口。"
    },
    {
      "indent": 0,
      "text": "E.1. Router with Restricted Interface Names",
      "section_title": true,
      "zh-CHS": "E.1. 具有受限接口名称的路由器"
    },
    {
      "indent": 3,
      "text": "In this example, a router has support for 4 line cards, each with 8 ports. The slots for the cards are physically numbered from 0 to 3, and the ports on each card from 0 to 7. Each card has Fast Ethernet or Gigabit Ethernet ports.",
      "zh-CHS": "在本例中，路由器支持4个线路卡，每个线路卡有8个端口。这些卡的插槽从0到3进行物理编号，每个卡上的端口从0到7进行物理编号。每个卡都有快速以太网或千兆以太网端口。"
    },
    {
      "indent": 3,
      "text": "The device-specific names for these physical interfaces are \"fastethernet-N/M\" or \"gigabitethernet-N/M\".",
      "zh-CHS": "这些物理接口的设备特定名称为“fastethernet-N/M”或“gigabitethernet-N/M”。"
    },
    {
      "indent": 3,
      "text": "The name of a VLAN interface is restricted to the form \"<physical-interface-name>.<subinterface-number>\".",
      "zh-CHS": "VLAN接口的名称限制为“<物理接口名称><子接口编号>”形式。"
    },
    {
      "indent": 3,
      "text": "It is assumed that the operator is aware of this naming scheme. The implementation auto-initializes the value for \"type\" based on the interface name.",
      "zh-CHS": "假定操作员知道此命名方案。实现根据接口名称自动初始化“type”的值。"
    },
    {
      "indent": 3,
      "text": "The NETCONF server does not advertise the \"arbitrary-names\" feature in the <hello> message.",
      "zh-CHS": "NETCONF服务器不会在<hello>消息中公布“任意名称”功能。"
    },
    {
      "indent": 3,
      "text": "An operator can configure a physical interface by sending an <edit-config> containing:",
      "zh-CHS": "操作员可以通过发送包含以下内容的<edit config>，来配置物理界面："
    },
    {
      "indent": 5,
      "text": "<interface nc:operation=\"create\">\n  <name>fastethernet-1/0</name>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "When the server processes this request, it will set the leaf \"type\" to \"ianaift:ethernetCsmacd\". Thus, if the client performs a <get-config> right after the <edit-config> above, it will get:",
      "zh-CHS": "当服务器处理此请求时，它会将叶“type”设置为“ianaift:ethernetCsmacd”。因此，如果客户机在上面的<edit config>之后执行<get config>，它将获得："
    },
    {
      "indent": 5,
      "text": "<interface>\n  <name>fastethernet-1/0</name>\n  <type>ianaift:ethernetCsmacd</type>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "The client can configure a VLAN interface by sending an <edit-config> containing:",
      "zh-CHS": "客户端可以通过发送包含以下内容的<edit config>，来配置VLAN接口："
    },
    {
      "indent": 5,
      "text": "<interface nc:operation=\"create\">\n  <name>fastethernet-1/0.10005</name>\n  <type>ianaift:l2vlan</type>\n  <vlan:base-interface>fastethernet-1/0</vlan:base-interface>\n  <vlan:vlan-id>5</vlan:vlan-id>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "If the client tries to change the type of the physical interface with an <edit-config> containing:",
      "zh-CHS": "如果客户端试图使用包含以下内容的<edit config>更改物理接口的类型："
    },
    {
      "indent": 5,
      "text": "<interface nc:operation=\"merge\">\n  <name>fastethernet-1/0</name>\n  <type>ianaift:tunnel</type>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "then the server will reply with an \"invalid-value\" error, since the new type does not match the name.",
      "zh-CHS": "由于新类型与名称不匹配，因此服务器将以“无效值”错误进行回复。"
    },
    {
      "indent": 0,
      "text": "E.2. Router with Arbitrary Interface Names",
      "section_title": true,
      "zh-CHS": "E.2. 具有任意接口名的路由器"
    },
    {
      "indent": 3,
      "text": "In this example, a router has support for 4 line cards, each with 8 ports. The slots for the cards are physically numbered from 0 to 3, and the ports on each card from 0 to 7. Each card has Fast Ethernet or Gigabit Ethernet ports.",
      "zh-CHS": "在本例中，路由器支持4个线路卡，每个线路卡有8个端口。这些卡的插槽从0到3进行物理编号，每个卡上的端口从0到7进行物理编号。每个卡都有快速以太网或千兆以太网端口。"
    },
    {
      "indent": 3,
      "text": "The device-specific names for these physical interfaces are \"fastethernet-N/M\" or \"gigabitethernet-N/M\".",
      "zh-CHS": "这些物理接口的设备特定名称为“fastethernet-N/M”或“gigabitethernet-N/M”。"
    },
    {
      "indent": 3,
      "text": "The implementation does not restrict the user-controlled interface names. This allows an operator to more easily apply the interface configuration to a different interface. However, the additional level of indirection also makes it a bit more complex to map interface names found in other protocols to configuration entries.",
      "zh-CHS": "该实现不限制用户控制的接口名称。这使操作员能够更轻松地将接口配置应用于不同的接口。然而，额外的间接级别也使得将其他协议中的接口名称映射到配置条目变得更加复杂。"
    },
    {
      "indent": 3,
      "text": "The NETCONF server advertises the \"arbitrary-names\" feature in the <hello> message.",
      "zh-CHS": "NETCONF服务器在<hello>消息中播发“任意名称”功能。"
    },
    {
      "indent": 3,
      "text": "Physical interfaces are configured as in Appendix E.1.",
      "zh-CHS": "物理接口的配置如附录E.1所示。"
    },
    {
      "indent": 3,
      "text": "An operator can configure a VLAN interface by sending an <edit-config> containing:",
      "zh-CHS": "操作员可以通过发送包含以下内容的<edit config>，来配置VLAN接口："
    },
    {
      "indent": 5,
      "text": "<interface nc:operation=\"create\">\n  <name>acme-interface</name>\n  <type>ianaift:l2vlan</type>\n  <vlan:base-interface>fastethernet-1/0</vlan:base-interface>\n  <vlan:vlan-id>5</vlan:vlan-id>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "If necessary, the operator can move the configuration named \"acme-interface\" over to a different physical interface with an <edit-config> containing:",
      "zh-CHS": "如有必要，操作员可以将名为“acme interface”的配置移到另一个物理接口上，该物理接口的<edit config>包含："
    },
    {
      "indent": 5,
      "text": "<interface nc:operation=\"merge\">\n  <name>acme-interface</name>\n  <vlan:base-interface>fastethernet-1/1</vlan:base-interface>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "E.3. Ethernet Switch with Restricted Interface Names",
      "section_title": true,
      "zh-CHS": "E.3. 具有受限接口名称的以太网交换机"
    },
    {
      "indent": 3,
      "text": "In this example, an Ethernet switch has a number of ports, each identified by a simple port number.",
      "zh-CHS": "在此示例中，以太网交换机具有多个端口，每个端口由一个简单的端口号标识。"
    },
    {
      "indent": 3,
      "text": "The device-specific names for the physical interfaces are numbers that match the physical port number.",
      "zh-CHS": "物理接口的设备特定名称是与物理端口号匹配的数字。"
    },
    {
      "indent": 3,
      "text": "An operator can configure a physical interface by sending an <edit-config> containing:",
      "zh-CHS": "操作员可以通过发送包含以下内容的<edit config>，来配置物理界面："
    },
    {
      "indent": 5,
      "text": "<interface nc:operation=\"create\">\n  <name>6</name>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "When the server processes this request, it will set the leaf \"type\" to \"ianaift:ethernetCsmacd\". Thus, if the client performs a <get-config> right after the <edit-config> above, it will get:",
      "zh-CHS": "当服务器处理此请求时，它会将叶“type”设置为“ianaift:ethernetCsmacd”。因此，如果客户机在上面的<edit config>之后执行<get config>，它将获得："
    },
    {
      "indent": 5,
      "text": "<interface>\n  <name>6</name>\n  <type>ianaift:ethernetCsmacd</type>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "E.4. Generic Host with Restricted Interface Names",
      "section_title": true,
      "zh-CHS": "E.4. 具有受限接口名称的通用主机"
    },
    {
      "indent": 3,
      "text": "In this example, a generic host has interfaces named by the kernel. The system identifies the physical interface by the name assigned by the operating system to the interface.",
      "zh-CHS": "在本例中，通用主机具有由内核命名的接口。系统通过操作系统分配给接口的名称来标识物理接口。"
    },
    {
      "indent": 3,
      "text": "The name of a VLAN interface is restricted to the form \"<physical-interface-name>:<vlan-number>\".",
      "zh-CHS": "VLAN接口的名称限制为“<physical interface name>：<VLAN number>”形式。"
    },
    {
      "indent": 3,
      "text": "The NETCONF server does not advertise the \"arbitrary-names\" feature in the <hello> message.",
      "zh-CHS": "NETCONF服务器不会在<hello>消息中公布“任意名称”功能。"
    },
    {
      "indent": 3,
      "text": "An operator can configure an interface by sending an <edit-config> containing:",
      "zh-CHS": "操作员可以通过发送包含以下内容的<edit config>，来配置界面："
    },
    {
      "indent": 5,
      "text": "<interface nc:operation=\"create\">\n  <name>eth8</name>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "When the server processes this request, it will set the leaf \"type\" to \"ianaift:ethernetCsmacd\". Thus, if the client performs a <get-config> right after the <edit-config> above, it will get:",
      "zh-CHS": "当服务器处理此请求时，它会将叶“type”设置为“ianaift:ethernetCsmacd”。因此，如果客户机在上面的<edit config>之后执行<get config>，它将获得："
    },
    {
      "indent": 5,
      "text": "<interface>\n  <name>eth8</name>\n  <type>ianaift:ethernetCsmacd</type>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "The client can configure a VLAN interface by sending an <edit-config> containing:",
      "zh-CHS": "客户端可以通过发送包含以下内容的<edit config>，来配置VLAN接口："
    },
    {
      "indent": 5,
      "text": "<interface nc:operation=\"create\">\n  <name>eth8:5</name>\n  <type>ianaift:l2vlan</type>\n  <vlan:base-interface>eth8</vlan:base-interface>\n  <vlan:vlan-id>5</vlan:vlan-id>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "E.5. Generic Host with Arbitrary Interface Names",
      "section_title": true,
      "zh-CHS": "E.5. 具有任意接口名的通用主机"
    },
    {
      "indent": 3,
      "text": "In this example, a generic host has interfaces named by the kernel. The system identifies the physical interface by the name assigned by the operating system to the interface.",
      "zh-CHS": "在本例中，通用主机具有由内核命名的接口。系统通过操作系统分配给接口的名称来标识物理接口。"
    },
    {
      "indent": 3,
      "text": "The implementation does not restrict the user-controlled interface names. This allows an operator to more easily apply the interface configuration to a different interface. However, the additional level of indirection also makes it a bit more complex to map interface names found in other protocols to configuration entries.",
      "zh-CHS": "该实现不限制用户控制的接口名称。这使操作员能够更轻松地将接口配置应用于不同的接口。然而，额外的间接级别也使得将其他协议中的接口名称映射到配置条目变得更加复杂。"
    },
    {
      "indent": 3,
      "text": "The NETCONF server advertises the \"arbitrary-names\" feature in the <hello> message.",
      "zh-CHS": "NETCONF服务器在<hello>消息中播发“任意名称”功能。"
    },
    {
      "indent": 3,
      "text": "Physical interfaces are configured as in Appendix E.4.",
      "zh-CHS": "物理接口的配置如附录E.4所示。"
    },
    {
      "indent": 3,
      "text": "An operator can configure a VLAN interface by sending an <edit-config> containing:",
      "zh-CHS": "操作员可以通过发送包含以下内容的<edit config>，来配置VLAN接口："
    },
    {
      "indent": 5,
      "text": "<interface nc:operation=\"create\">\n  <name>acme-interface</name>\n  <type>ianaift:l2vlan</type>\n  <vlan:base-interface>eth8</vlan:base-interface>\n  <vlan:vlan-id>5</vlan:vlan-id>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "If necessary, the operator can move the configuration named \"acme-interface\" over to a different physical interface with an <edit-config> containing:",
      "zh-CHS": "如有必要，操作员可以将名为“acme interface”的配置移到另一个物理接口上，该物理接口的<edit config>包含："
    },
    {
      "indent": 5,
      "text": "<interface nc:operation=\"merge\">\n  <name>acme-interface</name>\n  <vlan:base-interface>eth3</vlan:base-interface>\n</interface>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "zh-CHS": "作者地址"
    },
    {
      "indent": 3,
      "text": "Martin Bjorklund Tail-f Systems",
      "zh-CHS": "Martin Bjorklund Tail-f系统"
    },
    {
      "indent": 3,
      "text": "EMail: mbj@tail-f.com",
      "raw": true,
      "zh-CHS": " "
    }
  ]
}