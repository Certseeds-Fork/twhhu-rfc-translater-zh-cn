{
  "title": {
    "text": "RFC 7520: Examples of Protecting Content Using JSON Object Signing and Encryption (JOSE)",
    "zh-CHS": "RFC 7520"
  },
  "number": 7520,
  "created_at": "2021-10-30 22:58:47.379185+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                         M. Miller\nRequest for Comments: 7520                           Cisco Systems, Inc.\nCategory: Informational                                         May 2015\nISSN: 2070-1721",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": " Examples of Protecting Content Using JSON Object Signing and Encryption (JOSE)",
      "zh-CHS": "使用JSON对象签名和加密（JOSE）保护内容的示例"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "This document contains a set of examples using JSON Object Signing and Encryption (JOSE) technology to protect data. These examples present a representative sampling of JSON Web Key (JWK) objects as well as various JSON Web Signature (JWS) and JSON Web Encryption (JWE) results given similar inputs.",
      "zh-CHS": "本文档包含一组使用JSON对象签名和加密（JOE）技术保护数据的示例。这些示例展示了JSON Web密钥（JWK）对象的代表性采样，以及给定类似输入的各种JSON Web签名（JWS）和JSON Web加密（JWE）结果。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "zh-CHS": "关于下段备忘"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "zh-CHS": "本文件不是互联网标准跟踪规范；它是为了提供信息而发布的。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Not all documents approved by the IESG are a candidate for any level of Internet Standard; see Section 2 of RFC 5741.",
      "zh-CHS": "本文件是互联网工程任务组（IETF）的产品。它代表了IETF社区的共识。它已经接受了公众审查，并已被互联网工程指导小组（IESG）批准出版。并非IESG批准的所有文件都适用于任何级别的互联网标准；见RFC 5741第2节。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7520.",
      "zh-CHS": "有关本文件当前状态、任何勘误表以及如何提供反馈的信息，请访问http://www.rfc-editor.org/info/rfc7520."
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2015 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "zh-CHS": "版权所有（c）2015 IETF信托基金和确定为文件作者的人员。版权所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "zh-CHS": "本文件受BCP 78和IETF信托有关IETF文件的法律规定的约束(http://trustee.ietf.org/license-info)自本文件出版之日起生效。请仔细阅读这些文件，因为它们描述了您对本文件的权利和限制。从本文件中提取的代码组件必须包括信托法律条款第4.e节中所述的简化BSD许可证文本，并提供简化BSD许可证中所述的无担保。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................5\n   1.1. Conventions Used in This Document ..........................5\n2. Terminology .....................................................6\n3. JSON Web Key Examples ...........................................6\n   3.1. EC Public Key ..............................................6\n   3.2. EC Private Key .............................................7\n   3.3. RSA Public Key .............................................8\n   3.4. RSA Private Key ............................................8\n   3.5. Symmetric Key (MAC Computation) ...........................10\n   3.6. Symmetric Key (Encryption) ................................11\n4. JSON Web Signature Examples ....................................11\n   4.1. RSA v1.5 Signature ........................................12\n        4.1.1. Input Factors ......................................12\n        4.1.2. Signing Operation ..................................12\n        4.1.3. Output Results .....................................13\n   4.2. RSA-PSS Signature .........................................15\n        4.2.1. Input Factors ......................................15\n        4.2.2. Signing Operation ..................................16\n        4.2.3. Output Results .....................................17\n   4.3. ECDSA Signature ...........................................19\n        4.3.1. Input Factors ......................................19\n        4.3.2. Signing Operation ..................................19\n        4.3.3. Output Results .....................................20\n   4.4. HMAC-SHA2 Integrity Protection ............................21\n        4.4.1. Input Factors ......................................22\n        4.4.2. Signing Operation ..................................22\n        4.4.3. Output Results .....................................23\n   4.5. Signature with Detached Content ...........................24\n        4.5.1. Input Factors ......................................25\n        4.5.2. Signing Operation ..................................25\n        4.5.3. Output Results .....................................26\n   4.6. Protecting Specific Header Fields .........................27\n        4.6.1. Input Factors ......................................27\n        4.6.2. Signing Operation ..................................27\n        4.6.3. Output Results .....................................28\n   4.7. Protecting Content Only ...................................29\n        4.7.1. Input Factors ......................................30\n        4.7.2. Signing Operation ..................................30\n        4.7.3. Output Results .....................................31\n   4.8. Multiple Signatures .......................................32\n        4.8.1. Input Factors ......................................32\n        4.8.2. First Signing Operation ............................33\n        4.8.3. Second Signing Operation ...........................34\n        4.8.4. Third Signing Operation ............................36\n        4.8.5. Output Results .....................................37\n5. JSON Web Encryption Examples ...................................39",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "5.1. Key Encryption Using RSA v1.5 and AES-HMAC-SHA2 ...........39\n     5.1.1. Input Factors ......................................39\n     5.1.2. Generated Factors ..................................41\n     5.1.3. Encrypting the Key .................................41\n     5.1.4. Encrypting the Content .............................42\n     5.1.5. Output Results .....................................43\n5.2. Key Encryption Using RSA-OAEP with AES-GCM ................45\n     5.2.1. Input Factors ......................................46\n     5.2.2. Generated Factors ..................................47\n     5.2.3. Encrypting the Key .................................48\n     5.2.4. Encrypting the Content .............................48\n     5.2.5. Output Results .....................................49\n5.3. Key Wrap Using PBES2-AES-KeyWrap with AES-CBC-HMAC-SHA2 ...52\n     5.3.1. Input Factors ......................................53\n     5.3.2. Generated Factors ..................................54\n     5.3.3. Encrypting the Key .................................54\n     5.3.4. Encrypting the Content .............................55\n     5.3.5. Output Results .....................................56\n5.4. Key Agreement with Key Wrapping Using ECDH-ES and\n     AES-KeyWrap with AES-GCM ..................................59\n     5.4.1. Input Factors ......................................59\n     5.4.2. Generated Factors ..................................60\n     5.4.3. Encrypting the Key .................................60\n     5.4.4. Encrypting the Content .............................61\n     5.4.5. Output Results .....................................63\n5.5. Key Agreement Using ECDH-ES with AES-CBC-HMAC-SHA2 ........65\n     5.5.1. Input Factors ......................................66\n     5.5.2. Generated Factors ..................................66\n     5.5.3. Key Agreement ......................................67\n     5.5.4. Encrypting the Content .............................67\n     5.5.5. Output Results .....................................68\n5.6. Direct Encryption Using AES-GCM ...........................70\n     5.6.1. Input Factors ......................................70\n     5.6.2. Generated Factors ..................................70\n     5.6.3. Encrypting the Content .............................71\n     5.6.4. Output Results .....................................72\n5.7. Key Wrap Using AES-GCM KeyWrap with AES-CBC-HMAC-SHA2 .....73\n     5.7.1. Input Factors ......................................73\n     5.7.2. Generated Factors ..................................74\n     5.7.3. Encrypting the Key .................................74\n     5.7.4. Encrypting the Content .............................75\n     5.7.5. Output Results .....................................77\n5.8. Key Wrap Using AES-KeyWrap with AES-GCM ...................79\n     5.8.1. Input Factors ......................................79\n     5.8.2. Generated Factors ..................................80\n     5.8.3. Encrypting the Key .................................80\n     5.8.4. Encrypting the Content .............................80\n     5.8.5. Output Results .....................................82",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "   5.9. Compressed Content ........................................84\n        5.9.1. Input Factors ......................................84\n        5.9.2. Generated Factors ..................................84\n        5.9.3. Encrypting the Key .................................85\n        5.9.4. Encrypting the Content .............................85\n        5.9.5. Output Results .....................................86\n   5.10. Including Additional Authenticated Data ..................88\n        5.10.1. Input Factors .....................................88\n        5.10.2. Generated Factors .................................89\n        5.10.3. Encrypting the Key ................................90\n        5.10.4. Encrypting the Content ............................90\n        5.10.5. Output Results ....................................91\n   5.11. Protecting Specific Header Fields ........................93\n        5.11.1. Input Factors .....................................93\n        5.11.2. Generated Factors .................................94\n        5.11.3. Encrypting the Key ................................94\n        5.11.4. Encrypting the Content ............................94\n        5.11.5. Output Results ....................................95\n   5.12. Protecting Content Only ..................................97\n        5.12.1. Input Factors .....................................97\n        5.12.2. Generated Factors .................................98\n        5.12.3. Encrypting the Key ................................98\n        5.12.4. Encrypting the Content ............................98\n        5.12.5. Output Results ....................................99\n   5.13. Encrypting to Multiple Recipients .......................101\n        5.13.1. Input Factors ....................................101\n        5.13.2. Generated Factors ................................101\n        5.13.3. Encrypting the Key to the First Recipient ........102\n        5.13.4. Encrypting the Key to the Second Recipient .......103\n        5.13.5. Encrypting the Key to the Third Recipient ........105\n        5.13.6. Encrypting the Content ...........................106\n        5.13.7. Output Results ...................................108\n6. Nesting Signatures and Encryption .............................110\n   6.1. Signing Input Factors ....................................110\n   6.2. Signing Operation ........................................112\n   6.3. Signing Output ...........................................112\n   6.4. Encryption Input Factors .................................113\n   6.5. Encryption Generated Factors .............................113\n   6.6. Encrypting the Key .......................................114\n   6.7. Encrypting the Content ...................................114\n   6.8. Encryption Output ........................................115\n7. Security Considerations .......................................119\n8. References ....................................................119\n   8.1. Normative References .....................................119\n   8.2. Informative References ...................................120\nAcknowledgements .................................................120\nAuthor's Address .................................................120",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "The JSON Object Signing and Encryption (JOSE) technologies -- JSON Web Signature [JWS], JSON Web Encryption [JWE], JSON Web Key [JWK], and JSON Web Algorithms [JWA] -- can be used collectively to encrypt and/or sign content using a variety of algorithms. While the full set of permutations is extremely large, and might be daunting to some, it is expected that most applications will only use a small set of algorithms to meet their needs.",
      "zh-CHS": "JSON对象签名和加密（JOSE）技术——JSON Web签名[JWS]、JSON Web加密[JWE]、JSON Web密钥[JWK]和JSON Web算法[JWA]——可共同用于使用各种算法对内容进行加密和/或签名。虽然全套排列非常庞大，可能会让一些人望而生畏，但预计大多数应用程序只会使用一小部分算法来满足其需求。"
    },
    {
      "indent": 3,
      "text": "This document provides a number of examples of signing or encrypting content using JOSE. While not exhaustive, it does compile a representative sampling of JOSE features. As much as possible, the same signature payload or encryption plaintext content is used to illustrate differences in various signing and encryption results.",
      "zh-CHS": "本文档提供了许多使用JOSE对内容进行签名或加密的示例。虽然并非详尽无遗，但它确实汇编了具有代表性的特征样本。尽可能使用相同的签名有效负载或加密明文内容来说明各种签名和加密结果的差异。"
    },
    {
      "indent": 3,
      "text": "This document also provides a number of example JWK objects. These examples illustrate the distinguishing properties of various key types and emphasize important characteristics. Most of the JWK examples are then used in the signature or encryption examples that follow.",
      "zh-CHS": "本文档还提供了许多示例JWK对象。这些示例说明了各种键类型的区别特性，并强调了重要特征。然后，大多数JWK示例将在下面的签名或加密示例中使用。"
    },
    {
      "indent": 3,
      "text": "All of the examples contained herein are available in a machine-readable format at <https://github.com/ietf-jose/cookbook>.",
      "zh-CHS": "本文中包含的所有示例均以机器可读格式提供<https://github.com/ietf-jose/cookbook>."
    },
    {
      "indent": 0,
      "text": "1.1. Conventions Used in This Document",
      "section_title": true,
      "zh-CHS": "1.1. 本文件中使用的公约"
    },
    {
      "indent": 3,
      "text": "This document separates data that are expected to be input to an implementation of JOSE from data that are expected to be generated by an implementation of JOSE. Each example, wherever possible, provides enough information both to replicate the results of this document and to validate the results by running its inverse operation (e.g., signature results can be validated by performing the JWS verify). However, some algorithms inherently use random data; therefore, computations employing them cannot be exactly replicated. Such cases are explicitly stated in the relevant sections.",
      "zh-CHS": "本文档将预期输入到JOSE实现的数据与预期由JOSE实现生成的数据分开。每个示例（只要可能）都提供了足够的信息来复制本文档的结果，并通过运行其反向操作来验证结果（例如，可以通过执行JWS验证来验证签名结果）。然而，一些算法固有地使用随机数据；因此，使用它们的计算无法精确复制。相关章节中明确说明了此类情况。"
    },
    {
      "indent": 3,
      "text": "All instances of binary octet strings are represented using base64url [RFC4648] encoding.",
      "zh-CHS": "二进制八位字符串的所有实例都使用base64url[RFC4648]编码表示。"
    },
    {
      "indent": 3,
      "text": "Wherever possible and unless otherwise noted, the examples include the JWS or JWE Compact Serialization, general JWS or JWE JSON Serialization, and flattened JWS or JWE JSON Serialization.",
      "zh-CHS": "如果可能，除非另有说明，示例包括JWS或JWE压缩序列化、通用JWS或JWE JSON序列化以及扁平化JWS或JWE JSON序列化。"
    },
    {
      "indent": 3,
      "text": "All of the examples in this document have whitespace added to improve formatting and readability. Except for JWE Plaintext or JWS Payload content, whitespace is not part of the cryptographic operations nor the exchange results.",
      "zh-CHS": "本文档中的所有示例都添加了空格，以改进格式和可读性。除了JWE明文或JWS有效负载内容外，空白不是加密操作的一部分，也不是交换结果。"
    },
    {
      "indent": 3,
      "text": "Unless otherwise noted, the JWE Plaintext or JWS Payload content does include \" \" (U+0020 SPACE) characters. Line breaks (U+000A LINE FEED) replace some \" \" (U+0020 SPACE) characters to improve readability but are not present in the JWE Plaintext or JWS Payload.",
      "zh-CHS": "除非另有说明，否则JWE明文或JWS有效负载内容不包括“”（U+0020空格）字符。换行符（U+000A换行符）替换某些“”（U+0020空格）字符以提高可读性，但JWE明文或JWS负载中不存在这些字符。"
    },
    {
      "indent": 0,
      "text": "2. Terminology",
      "section_title": true,
      "zh-CHS": "2. 术语"
    },
    {
      "indent": 3,
      "text": "This document inherits terminology regarding JSON Web Signature (JWS) technology from [JWS], terminology regarding JSON Web Encryption (JWE) technology from [JWE], terminology regarding JSON Web Key (JWK) technology from [JWK], and terminology regarding algorithms from [JWA].",
      "zh-CHS": "本文档继承了[JWS]关于JSON Web签名（JWS）技术的术语、[JWE]关于JSON Web加密（JWE）技术的术语、[JWK]关于JSON Web密钥（JWK）技术的术语以及[JWA]关于算法的术语。"
    },
    {
      "indent": 0,
      "text": "3. JSON Web Key Examples",
      "section_title": true,
      "zh-CHS": "3. JSON Web密钥示例"
    },
    {
      "indent": 3,
      "text": "The following sections demonstrate how to represent various JWK and JWK Set objects.",
      "zh-CHS": "以下部分演示如何表示各种JWK和JWK集对象。"
    },
    {
      "indent": 0,
      "text": "3.1. EC Public Key",
      "section_title": true,
      "zh-CHS": "3.1. EC公钥"
    },
    {
      "indent": 3,
      "text": "This example illustrates an Elliptic Curve (EC) public key. This example is the public key corresponding to the private key in Figure 2.",
      "zh-CHS": "此示例演示了椭圆曲线（EC）公钥。此示例是与图2中的私钥对应的公钥。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\",\n  \"use\": \"sig\",\n  \"crv\": \"P-521\",\n  \"x\": \"AHKZLLOsCOzz5cY97ewNUajB957y-C-U88c3v13nmGZx6sYl_oJXu9\n      A5RkTKqjqvjyekWF-7ytDyRXYgCF5cj0Kt\",\n  \"y\": \"AdymlHvOiLxXkEhayXQnNCvDX4h9htZaCJN34kfmC6pV5OhQHiraVy\n      SsUdaQkAgDPrwQrJmbnX9cwlGfP-HqHZR1\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 1: Elliptic Curve P-521 Public Key",
      "zh-CHS": "图1：椭圆曲线P-521公钥"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"EC\" identifies this as an Elliptic Curve key. The field \"crv\" identifies the curve, which is curve P-521 for this example. The values of the fields \"x\" and \"y\" are the base64url-encoded X and Y coordinates (respectively).",
      "zh-CHS": "“EC”的字段“kty”值将其标识为椭圆曲线密钥。字段“crv”标识曲线，本例中为曲线P-521。字段“x”和“y”的值分别是base64url编码的x和y坐标。"
    },
    {
      "indent": 3,
      "text": "The values of the fields \"x\" and \"y\" decoded are the octets necessary to represent each full coordinate to the order of the curve. For a key over curve P-521, the values of the fields \"x\" and \"y\" are exactly 66 octets in length when decoded, padded with leading zero (0x00) octets to reach the expected length.",
      "zh-CHS": "解码的字段“x”和“y”的值是表示曲线顺序的每个完整坐标所需的八位字节。对于曲线P-521上的键，字段“x”和“y”的值在解码时的长度正好为66个八位字节，用前导零（0x00）八位字节填充以达到预期长度。"
    },
    {
      "indent": 0,
      "text": "3.2. EC Private Key",
      "section_title": true,
      "zh-CHS": "3.2. EC私钥"
    },
    {
      "indent": 3,
      "text": "This example illustrates an Elliptic Curve private key. This example is the private key corresponding to the public key in Figure 1.",
      "zh-CHS": "此示例演示了椭圆曲线私钥。此示例是与图1中的公钥对应的私钥。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\",\n  \"use\": \"sig\",\n  \"crv\": \"P-521\",\n  \"x\": \"AHKZLLOsCOzz5cY97ewNUajB957y-C-U88c3v13nmGZx6sYl_oJXu9\n      A5RkTKqjqvjyekWF-7ytDyRXYgCF5cj0Kt\",\n  \"y\": \"AdymlHvOiLxXkEhayXQnNCvDX4h9htZaCJN34kfmC6pV5OhQHiraVy\n      SsUdaQkAgDPrwQrJmbnX9cwlGfP-HqHZR1\",\n  \"d\": \"AAhRON2r9cqXX1hg-RoI6R1tX5p2rUAYdmpHZoC1XNM56KtscrX6zb\n      KipQrCW9CGZH3T4ubpnoTKLDYJ_fF3_rJt\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 2: Elliptic Curve P-521 Private Key",
      "zh-CHS": "图2：椭圆曲线P-521私钥"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"EC\" identifies this as an Elliptic Curve key. The field \"crv\" identifies the curve, which is curve P-521 (also known as SECG curve secp521r1) for this example. The values of the fields \"x\" and \"y\" are the base64url-encoded X and Y coordinates (respectively). The field \"d\" value is the base64url-encoded private key.",
      "zh-CHS": "“EC”的字段“kty”值将其标识为椭圆曲线密钥。字段“crv”标识曲线，本例中为曲线P-521（也称为SECG曲线secp521r1）。字段“x”和“y”的值分别是base64url编码的x和y坐标。字段“d”值是base64url编码的私钥。"
    },
    {
      "indent": 3,
      "text": "The values of the fields \"d\", \"x\", and \"y\" decoded are the octets necessary to represent the private key or each full coordinate (respectively) to the order of the curve. For a key over curve P-521, the values of the \"d\", \"x\", and \"y\" fields are each exactly 66 octets in length when decoded, padded with leading zero (0x00) octets to reach the expected length.",
      "zh-CHS": "解码的字段“d”、“x”和“y”的值是表示私钥或曲线顺序的每个完整坐标（分别）所需的八位字节。对于曲线P-521上的键，“d”、“x”和“y”字段的值在解码时的长度均为66个八位字节，用前导零（0x00）八位字节填充以达到预期长度。"
    },
    {
      "indent": 0,
      "text": "3.3. RSA Public Key",
      "section_title": true,
      "zh-CHS": "3.3. RSA公钥"
    },
    {
      "indent": 3,
      "text": "This example illustrates an RSA public key. This example is the public key corresponding to the private key in Figure 4.",
      "zh-CHS": "此示例演示了RSA公钥。此示例是与图4中的私钥对应的公钥。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"RSA\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\",\n  \"use\": \"sig\",\n  \"n\": \"n4EPtAOCc9AlkeQHPzHStgAbgs7bTZLwUBZdR8_KuKPEHLd4rHVTeT\n      -O-XV2jRojdNhxJWTDvNd7nqQ0VEiZQHz_AJmSCpMaJMRBSFKrKb2wqV\n      wGU_NsYOYL-QtiWN2lbzcEe6XC0dApr5ydQLrHqkHHig3RBordaZ6Aj-\n      oBHqFEHYpPe7Tpe-OfVfHd1E6cS6M1FZcD1NNLYD5lFHpPI9bTwJlsde\n      3uhGqC0ZCuEHg8lhzwOHrtIQbS0FVbb9k3-tVTU4fg_3L_vniUFAKwuC\n      LqKnS2BYwdq_mzSnbLY7h_qixoR7jig3__kRhuaxwUkRz5iaiQkqgc5g\n      HdrNP5zw\",\n  \"e\": \"AQAB\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 21,
      "text": "Figure 3: RSA 2048-Bit Public Key",
      "zh-CHS": "图3:RSA 2048位公钥"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"RSA\" identifies this as an RSA key. The fields \"n\" and \"e\" values are the modulus and (public) exponent (respectively) using the minimum octets necessary.",
      "zh-CHS": "“RSA”的字段“kty”值将其标识为RSA密钥。字段“n”和“e”值分别是使用所需最小八位字节的模数和（公共）指数。"
    },
    {
      "indent": 3,
      "text": "For a 2048-bit key, the field \"n\" value is 256 octets in length when decoded.",
      "zh-CHS": "对于2048位密钥，解码时字段“n”值的长度为256个八位字节。"
    },
    {
      "indent": 0,
      "text": "3.4. RSA Private Key",
      "section_title": true,
      "zh-CHS": "3.4. 私钥"
    },
    {
      "indent": 3,
      "text": "This example illustrates an RSA private key. This example is the private key corresponding to the public key in Figure 3.",
      "zh-CHS": "此示例演示了RSA私钥。此示例是与图3中的公钥对应的私钥。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"RSA\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\",\n  \"use\": \"sig\",\n  \"n\": \"n4EPtAOCc9AlkeQHPzHStgAbgs7bTZLwUBZdR8_KuKPEHLd4rHVTeT\n      -O-XV2jRojdNhxJWTDvNd7nqQ0VEiZQHz_AJmSCpMaJMRBSFKrKb2wqV\n      wGU_NsYOYL-QtiWN2lbzcEe6XC0dApr5ydQLrHqkHHig3RBordaZ6Aj-\n      oBHqFEHYpPe7Tpe-OfVfHd1E6cS6M1FZcD1NNLYD5lFHpPI9bTwJlsde\n      3uhGqC0ZCuEHg8lhzwOHrtIQbS0FVbb9k3-tVTU4fg_3L_vniUFAKwuC\n      LqKnS2BYwdq_mzSnbLY7h_qixoR7jig3__kRhuaxwUkRz5iaiQkqgc5g\n      HdrNP5zw\",\n  \"e\": \"AQAB\",\n  \"d\": \"bWUC9B-EFRIo8kpGfh0ZuyGPvMNKvYWNtB_ikiH9k20eT-O1q_I78e\n      iZkpXxXQ0UTEs2LsNRS-8uJbvQ-A1irkwMSMkK1J3XTGgdrhCku9gRld\n      Y7sNA_AKZGh-Q661_42rINLRCe8W-nZ34ui_qOfkLnK9QWDDqpaIsA-b\n      MwWWSDFu2MUBYwkHTMEzLYGqOe04noqeq1hExBTHBOBdkMXiuFhUq1BU\n      6l-DqEiWxqg82sXt2h-LMnT3046AOYJoRioz75tSUQfGCshWTBnP5uDj\n      d18kKhyv07lhfSJdrPdM5Plyl21hsFf4L_mHCuoFau7gdsPfHPxxjVOc\n      OpBrQzwQ\",\n  \"p\": \"3Slxg_DwTXJcb6095RoXygQCAZ5RnAvZlno1yhHtnUex_fp7AZ_9nR\n      aO7HX_-SFfGQeutao2TDjDAWU4Vupk8rw9JR0AzZ0N2fvuIAmr_WCsmG\n      peNqQnev1T7IyEsnh8UMt-n5CafhkikzhEsrmndH6LxOrvRJlsPp6Zv8\n      bUq0k\",\n  \"q\": \"uKE2dh-cTf6ERF4k4e_jy78GfPYUIaUyoSSJuBzp3Cubk3OCqs6grT\n      8bR_cu0Dm1MZwWmtdqDyI95HrUeq3MP15vMMON8lHTeZu2lmKvwqW7an\n      V5UzhM1iZ7z4yMkuUwFWoBvyY898EXvRD-hdqRxHlSqAZ192zB3pVFJ0\n      s7pFc\",\n  \"dp\": \"B8PVvXkvJrj2L-GYQ7v3y9r6Kw5g9SahXBwsWUzp19TVlgI-YV85q\n      1NIb1rxQtD-IsXXR3-TanevuRPRt5OBOdiMGQp8pbt26gljYfKU_E9xn\n      -RULHz0-ed9E9gXLKD4VGngpz-PfQ_q29pk5xWHoJp009Qf1HvChixRX\n      59ehik\",\n  \"dq\": \"CLDmDGduhylc9o7r84rEUVn7pzQ6PF83Y-iBZx5NT-TpnOZKF1pEr\n      AMVeKzFEl41DlHHqqBLSM0W1sOFbwTxYWZDm6sI6og5iTbwQGIC3gnJK\n      bi_7k_vJgGHwHxgPaX2PnvP-zyEkDERuf-ry4c_Z11Cq9AqC2yeL6kdK\n      T1cYF8\",\n  \"qi\": \"3PiqvXQN0zwMeE-sBvZgi289XP9XCQF3VWqPzMKnIgQp7_Tugo6-N\n      ZBKCQsMf3HaEGBjTVJs_jcK8-TRXvaKe-7ZMaQj8VfBdYkssbu0NKDDh\n      jJ-GtiseaDVWt7dcH0cfwxgFUHpQh7FoCrjFJ6h6ZEpMF6xmujs4qMpP\n      z8aaI4\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 20,
      "text": "Figure 4: RSA 2048-Bit Private Key",
      "zh-CHS": "图4:RSA 2048位私钥"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"RSA\" identifies this as an RSA key. The fields \"n\" and \"e\" values are the base64url-encoded modulus and (public) exponent (respectively) using the minimum number of octets necessary. The field \"d\" value is the base64url-encoded private exponent using the minimum number of octets necessary. The fields \"p\", \"q\", \"dp\", \"dq\", and \"qi\" are the base64url-encoded additional private information using the minimum number of octets necessary.",
      "zh-CHS": "“RSA”的字段“kty”值将其标识为RSA密钥。字段“n”和“e”值分别是使用所需的最小八位字节数的base64url编码模数和（公共）指数。字段“d”值是base64url编码的专用指数，使用所需的最小八位字节数。字段“p”、“q”、“dp”、“dq”和“qi”是base64url编码的附加私有信息，使用所需的最小八位字节数。"
    },
    {
      "indent": 3,
      "text": "For a 2048-bit key, the field \"n\" is 256 octets in length when decoded, and the field \"d\" is not longer than 256 octets in length when decoded.",
      "zh-CHS": "对于2048位密钥，解码时字段“n”的长度为256个八位字节，解码时字段“d”的长度不超过256个八位字节。"
    },
    {
      "indent": 0,
      "text": "3.5. Symmetric Key (MAC Computation)",
      "section_title": true,
      "zh-CHS": "3.5. 对称密钥（MAC计算）"
    },
    {
      "indent": 3,
      "text": "This example illustrates a symmetric key used for computing Message Authentication Codes (MACs).",
      "zh-CHS": "此示例演示了用于计算消息身份验证码（MAC）的对称密钥。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"oct\",\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\",\n  \"use\": \"sig\",\n  \"alg\": \"HS256\",\n  \"k\": \"hJtXIZ2uSN5kbQfbtTNWbpdmhkV8FJG-Onbc6mxCcYg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 5: HMAC SHA-256 Symmetric Key",
      "zh-CHS": "图5:HMAC SHA-256对称密钥"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"oct\" identifies this as a symmetric key. The field \"k\" value is the symmetric key.",
      "zh-CHS": "“oct”的字段“kty”值将其标识为对称密钥。字段“k”值是对称密钥。"
    },
    {
      "indent": 3,
      "text": "When used for the signing algorithm \"HS256\" (HMAC-SHA256), the field \"k\" value is 32 octets (or more) in length when decoded, padded with leading zero (0x00) octets to reach the minimum expected length.",
      "zh-CHS": "当用于签名算法“HS256”（HMAC-SHA256）时，字段“k”值在解码时的长度为32个八位字节（或更多），用前导零（0x00）八位字节填充以达到最小预期长度。"
    },
    {
      "indent": 0,
      "text": "3.6. Symmetric Key (Encryption)",
      "section_title": true,
      "zh-CHS": "3.6. 对称密钥（加密）"
    },
    {
      "indent": 3,
      "text": "This example illustrates a symmetric key used for encryption.",
      "zh-CHS": "此示例演示了用于加密的对称密钥。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"oct\",\n  \"kid\": \"1e571774-2e08-40da-8308-e8d68773842d\",\n  \"use\": \"enc\",\n  \"alg\": \"A256GCM\",\n  \"k\": \"AAPapAv4LbFbiVawEjagUBluYqN5rhna-8nuldDvOx8\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "Figure 6: AES 256-Bit Symmetric Encryption Key",
      "zh-CHS": "图6:AES 256位对称加密密钥"
    },
    {
      "indent": 3,
      "text": "The field \"kty\" value of \"oct\" identifies this as a symmetric key. The field \"k\" value is the symmetric key.",
      "zh-CHS": "“oct”的字段“kty”值将其标识为对称密钥。字段“k”值是对称密钥。"
    },
    {
      "indent": 3,
      "text": "For the content encryption algorithm \"A256GCM\", the field \"k\" value is exactly 32 octets in length when decoded, padded with leading zero (0x00) octets to reach the expected length.",
      "zh-CHS": "对于内容加密算法“A256GCM”，解码时字段“k”值的长度正好为32个八位字节，并用前导零（0x00）八位字节填充以达到预期长度。"
    },
    {
      "indent": 0,
      "text": "4. JSON Web Signature Examples",
      "section_title": true,
      "zh-CHS": "4. JSON Web签名示例"
    },
    {
      "indent": 3,
      "text": "The following sections demonstrate how to generate various JWS objects.",
      "zh-CHS": "以下部分演示如何生成各种JWS对象。"
    },
    {
      "indent": 3,
      "text": "All of the signature examples use the following payload content (an abridged quote from \"The Fellowship of the Ring\" [LOTR-FELLOWSHIP]), serialized as UTF-8. The payload is presented here as a series of quoted strings that are concatenated to produce the JWS Payload. The sequence \"\\xe2\\x80\\x99\" is substituted for (U+2019 RIGHT SINGLE QUOTATION MARK), and quotation marks (U+0022 QUOTATION MARK) are added for readability but are not present in the JWS Payload.",
      "zh-CHS": "所有签名示例都使用以下有效负载内容（摘自“环之团契”[LOTR-FESSURY]），序列化为UTF-8。有效负载在这里表示为一系列带引号的字符串，这些字符串被连接起来以生成JWS有效负载。序列“\\xe2\\x80\\x99”被替换为（U+2019右单引号），并添加引号（U+0022引号）以提高可读性，但JWS有效负载中不存在。"
    },
    {
      "indent": 3,
      "text": "\"It\\xe2\\x80\\x99s a dangerous business, Frodo, going out your \" \"door. You step onto the road, and if you don't keep your feet, \" \"there\\xe2\\x80\\x99s no knowing where you might be swept off \" \"to.\"",
      "zh-CHS": "“佛罗多，出门是件危险的事。你踏上道路，如果你不站稳脚跟，”“你不知道你会被带到哪里去。”"
    },
    {
      "indent": 20,
      "text": "Figure 7: Payload Content Plaintext",
      "zh-CHS": "图7：负载内容明文"
    },
    {
      "indent": 3,
      "text": "The payload -- with the sequence \"\\xe2\\x80\\x99\" replaced with (U+2019 RIGHT SINGLE QUOTATION MARK) and quotations marks (U+0022 QUOTATION MARK) are removed -- is encoded as UTF-8 and then as base64url [RFC4648]:",
      "zh-CHS": "有效负载——序列“\\xe2\\x80\\x99”替换为（U+2019右单引号）并删除引号（U+0022引号）——编码为UTF-8，然后编码为base64url[RFC4648]："
    },
    {
      "indent": 3,
      "text": "SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Figure 8: Payload Content, base64url-encoded",
      "zh-CHS": "图8：负载内容，base64url编码"
    },
    {
      "indent": 0,
      "text": "4.1. RSA v1.5 Signature",
      "section_title": true,
      "zh-CHS": "4.1. RSA v1.5签名"
    },
    {
      "indent": 3,
      "text": "This example illustrates signing content using the \"RS256\" (RSASSA-PKCS1-v1_5 with SHA-256) algorithm.",
      "zh-CHS": "此示例演示了使用“RS256”（RSASSA-PKCS1-v1_5 with SHA-256）算法对内容进行签名。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "4.1.1. Input Factors",
      "section_title": true,
      "zh-CHS": "4.1.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "zh-CHS": "在开始签名操作之前，将提供以下内容："
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "zh-CHS": "o 有效载荷内容；本例使用图7中的内容，使用base64url[RFC4648]编码来生成图8。"
    },
    {
      "indent": 3,
      "text": "o RSA private key; this example uses the key from Figure 4.",
      "zh-CHS": "o RSA私钥；此示例使用图4中的键。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"RS256\".",
      "zh-CHS": "o “RS256”的“alg”参数。"
    },
    {
      "indent": 0,
      "text": "4.1.2. Signing Operation",
      "section_title": true,
      "zh-CHS": "4.1.2. 签名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated to complete the signing operation:",
      "zh-CHS": "生成以下内容以完成签名操作："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 9, encoded using base64url [RFC4648] to produce Figure 10.",
      "zh-CHS": "o JWS保护头；本例使用图9中的标题，使用base64url[RFC4648]编码以生成图10。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RS256\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 20,
      "text": "Figure 9: JWS Protected Header JSON",
      "zh-CHS": "图9:JWS保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9",
      "zh-CHS": "EYJHBGCOIJSUZI1NIISIMTPZCI6IMJPBGJVLMJHZ2DPNNAAG9IYML0B24UZX HHBXBSSJ9"
    },
    {
      "indent": 12,
      "text": "Figure 10: JWS Protected Header, base64url-encoded",
      "zh-CHS": "图10:JWS保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 10) and JWS Payload (Figure 8) are combined as described in Section 5.1 of [JWS] to produce the JWS Signing Input (Figure 11).",
      "zh-CHS": "JWS受保护的报头（图10）和JWS有效负载（图8）按照[JWS]第5.1节中的描述进行组合，以生成JWS签名输入（图11）。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX\nhhbXBsZSJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 11: JWS Signing Input",
      "zh-CHS": "图11:JWS签名输入"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 11) produces the JWS Signature (Figure 12).",
      "zh-CHS": "在JWS签名输入上执行签名操作（图11）将生成JWS签名（图12）。"
    },
    {
      "indent": 3,
      "text": "MRjdkly7_-oTPTS3AXP41iQIGKa80A0ZmTuV5MEaHoxnW2e5CZ5NlKtainoFmK\nZopdHM1O2U4mwzJdQx996ivp83xuglII7PNDi84wnB-BDkoBwA78185hX-Es4J\nIwmDLJK3lfWRa-XtL0RnltuYv746iYTh_qHRD68BNt1uSNCrUCTJDt5aAE6x8w\nW1Kt9eRo4QPocSadnHXFxnt8Is9UzpERV0ePPQdLuW3IS_de3xyIrDaLGdjluP\nxUAhb6L2aXic1U12podGU0KLUQSE_oI-ZnmKJ3F4uOZDnd6QZWJushZ41Axf_f\ncIe8u9ipH84ogoree7vjbU5y18kDquDg",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 12: JWS Signature, base64url-encoded",
      "zh-CHS": "图12:JWS签名，base64url编码"
    },
    {
      "indent": 0,
      "text": "4.1.3. Output Results",
      "section_title": true,
      "zh-CHS": "4.1.3. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "zh-CHS": "以下内容构成生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 9)",
      "zh-CHS": "o JWS受保护的头文件（图9）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "zh-CHS": "o 有效负载内容（图8）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 12)",
      "zh-CHS": "o 签名（图12）"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the JWS Compact Serialization:",
      "zh-CHS": "使用JWS精简序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX\nhhbXBsZSJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4\n.\nMRjdkly7_-oTPTS3AXP41iQIGKa80A0ZmTuV5MEaHoxnW2e5CZ5NlKtainoFmK\nZopdHM1O2U4mwzJdQx996ivp83xuglII7PNDi84wnB-BDkoBwA78185hX-Es4J\nIwmDLJK3lfWRa-XtL0RnltuYv746iYTh_qHRD68BNt1uSNCrUCTJDt5aAE6x8w\nW1Kt9eRo4QPocSadnHXFxnt8Is9UzpERV0ePPQdLuW3IS_de3xyIrDaLGdjluP\nxUAhb6L2aXic1U12podGU0KLUQSE_oI-ZnmKJ3F4uOZDnd6QZWJushZ41Axf_f\ncIe8u9ipH84ogoree7vjbU5y18kDquDg",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 13: JWS Compact Serialization",
      "zh-CHS": "图13:JWS紧凑序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "zh-CHS": "使用常规JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImJpbGJvLmJhZ2\n          dpbnNAaG9iYml0b24uZXhhbXBsZSJ9\",\n      \"signature\": \"MRjdkly7_-oTPTS3AXP41iQIGKa80A0ZmTuV5MEaHo\n          xnW2e5CZ5NlKtainoFmKZopdHM1O2U4mwzJdQx996ivp83xuglII\n          7PNDi84wnB-BDkoBwA78185hX-Es4JIwmDLJK3lfWRa-XtL0Rnlt\n          uYv746iYTh_qHRD68BNt1uSNCrUCTJDt5aAE6x8wW1Kt9eRo4QPo\n          cSadnHXFxnt8Is9UzpERV0ePPQdLuW3IS_de3xyIrDaLGdjluPxU\n          Ahb6L2aXic1U12podGU0KLUQSE_oI-ZnmKJ3F4uOZDnd6QZWJush\n          Z41Axf_fcIe8u9ipH84ogoree7vjbU5y18kDquDg\"\n    }\n  ]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 14: General JWS JSON Serialization",
      "zh-CHS": "图14：通用JWS JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "zh-CHS": "使用平展JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"protected\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImJpbGJvLmJhZ2dpbn\n      NAaG9iYml0b24uZXhhbXBsZSJ9\",\n  \"signature\": \"MRjdkly7_-oTPTS3AXP41iQIGKa80A0ZmTuV5MEaHoxnW2\n      e5CZ5NlKtainoFmKZopdHM1O2U4mwzJdQx996ivp83xuglII7PNDi84w\n      nB-BDkoBwA78185hX-Es4JIwmDLJK3lfWRa-XtL0RnltuYv746iYTh_q\n      HRD68BNt1uSNCrUCTJDt5aAE6x8wW1Kt9eRo4QPocSadnHXFxnt8Is9U\n      zpERV0ePPQdLuW3IS_de3xyIrDaLGdjluPxUAhb6L2aXic1U12podGU0\n      KLUQSE_oI-ZnmKJ3F4uOZDnd6QZWJushZ41Axf_fcIe8u9ipH84ogore\n      e7vjbU5y18kDquDg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 15: Flattened JWS JSON Serialization",
      "zh-CHS": "图15：扁平化JWS JSON序列化"
    },
    {
      "indent": 0,
      "text": "4.2. RSA-PSS Signature",
      "section_title": true,
      "zh-CHS": "4.2. RSA-PSS签名"
    },
    {
      "indent": 3,
      "text": "This example illustrates signing content using the \"PS384\" (RSASSA-PSS with SHA-384) algorithm.",
      "zh-CHS": "此示例演示了使用“PS384”（RSASSA-PSS和SHA-384）算法对内容进行签名。"
    },
    {
      "indent": 3,
      "text": "Note that RSASSA-PSS uses random data to generate the signature; it might not be possible to exactly replicate the results in this section.",
      "zh-CHS": "请注意，RSASSA-PSS使用随机数据生成签名；可能无法准确复制本节中的结果。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "4.2.1. Input Factors",
      "section_title": true,
      "zh-CHS": "4.2.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "zh-CHS": "在开始签名操作之前，将提供以下内容："
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "zh-CHS": "o 有效载荷内容；本例使用图7中的内容，使用base64url[RFC4648]编码来生成图8。"
    },
    {
      "indent": 3,
      "text": "o RSA private key; this example uses the key from Figure 4.",
      "zh-CHS": "o RSA私钥；此示例使用图4中的键。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"PS384\".",
      "zh-CHS": "o “PS384”的“alg”参数。"
    },
    {
      "indent": 0,
      "text": "4.2.2. Signing Operation",
      "section_title": true,
      "zh-CHS": "4.2.2. 签名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated to complete the signing operation:",
      "zh-CHS": "生成以下内容以完成签名操作："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 16, encoded using base64url [RFC4648] to produce Figure 17.",
      "zh-CHS": "o JWS保护头；本例使用图16中的标题，使用base64url[RFC4648]编码以生成图17。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"PS384\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 16: JWS Protected Header JSON",
      "zh-CHS": "图16:JWS保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9",
      "zh-CHS": "EYJHBGCOIJQUZM4NCISIMTPZCI6IMJPBGJVLMJHZ2DPNNAAG9IYML0B24UZX HHBXBSSJ9"
    },
    {
      "indent": 12,
      "text": "Figure 17: JWS Protected Header, base64url-encoded",
      "zh-CHS": "图17:JWS保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 17) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 18).",
      "zh-CHS": "JWS受保护的头（图17）和JWS有效负载（图8）按照[JWS]中的描述进行组合，以生成JWS签名输入（图18）。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX\nhhbXBsZSJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 18: JWS Signing Input",
      "zh-CHS": "图18:JWS签名输入"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 18) produces the JWS Signature (Figure 19).",
      "zh-CHS": "在JWS签名输入上执行签名操作（图18）将生成JWS签名（图19）。"
    },
    {
      "indent": 3,
      "text": "cu22eBqkYDKgIlTpzDXGvaFfz6WGoz7fUDcfT0kkOy42miAh2qyBzk1xEsnk2I pN6-tPid6VrklHkqsGqDqHCdP6O8TTB5dDDItllVo6_1OLPpcbUrhiUSMxbbXU vdvWXzg-UD8biiReQFlfz28zGWVsdiNAUf8ZnyPEgVFn442ZdNqiVJRmBqrYRX e8P_ijQ7p8Vdz0TTrxUeT3lm8d9shnr2lfJT8ImUjvAA2Xez2Mlp8cBE5awDzT 0qI0n6uiP1aCN_2_jLAeQTlqRHtfa64QQSUmFAAjVKPbByi7xho0uTOcbH510a 6GYmJUAfmWjwZ6oD4ifKo8DYM-X72Eaw",
      "zh-CHS": "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 WJWZ6OD4IFKO8DYM-X72Eaw"
    },
    {
      "indent": 16,
      "text": "Figure 19: JWS Signature, base64url-encoded",
      "zh-CHS": "图19:JWS签名，base64url编码"
    },
    {
      "indent": 0,
      "text": "4.2.3. Output Results",
      "section_title": true,
      "zh-CHS": "4.2.3. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "zh-CHS": "以下内容构成生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 17)",
      "zh-CHS": "o JWS保护头（图17）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "zh-CHS": "o 有效负载内容（图8）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 19)",
      "zh-CHS": "o 签名（图19）"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the JWS Compact Serialization:",
      "zh-CHS": "使用JWS精简序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9 . SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH lvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk b24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm UgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4 . cu22eBqkYDKgIlTpzDXGvaFfz6WGoz7fUDcfT0kkOy42miAh2qyBzk1xEsnk2I pN6-tPid6VrklHkqsGqDqHCdP6O8TTB5dDDItllVo6_1OLPpcbUrhiUSMxbbXU vdvWXzg-UD8biiReQFlfz28zGWVsdiNAUf8ZnyPEgVFn442ZdNqiVJRmBqrYRX e8P_ijQ7p8Vdz0TTrxUeT3lm8d9shnr2lfJT8ImUjvAA2Xez2Mlp8cBE5awDzT 0qI0n6uiP1aCN_2_jLAeQTlqRHtfa64QQSUmFAAjVKPbByi7xho0uTOcbH510a 6GYmJUAfmWjwZ6oD4ifKo8DYM-X72Eaw",
      "zh-CHS": "EYJHBGCOIJQUZM4NCISIMTPZCI6IMJPBGJVLMJHZ2DPNNAAG9IYML0B24UZX hhbXBsZSJ9。SXTIGJLZEGZGFZ2VYB3VZIGJ1C2LUZXNZLCBGCM9KBYWGZ29PBMCGB3V0IH LVDXIGZG9VCI4GWW91IHN0ZXAGB250BYB0AGUGCM9HZCWGYW5IGL5IGL5MIGLMIHLDVDSBK B24NdCBRZWWIHLDXIGZVLDCWGDGHLCXIGJLZIG5VIGTUB3DPBMCGD2CMCGD2HLCM UGEW91IG1PZ2H0IGJ0IGJ9MZIB04。2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 WJWZ6OD4IFKO8DYM-X72Eaw"
    },
    {
      "indent": 19,
      "text": "Figure 20: JWS Compact Serialization",
      "zh-CHS": "图20:JWS紧凑序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "zh-CHS": "使用常规JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2\n          dpbnNAaG9iYml0b24uZXhhbXBsZSJ9\",\n      \"signature\": \"cu22eBqkYDKgIlTpzDXGvaFfz6WGoz7fUDcfT0kkOy\n          42miAh2qyBzk1xEsnk2IpN6-tPid6VrklHkqsGqDqHCdP6O8TTB5\n          dDDItllVo6_1OLPpcbUrhiUSMxbbXUvdvWXzg-UD8biiReQFlfz2\n          8zGWVsdiNAUf8ZnyPEgVFn442ZdNqiVJRmBqrYRXe8P_ijQ7p8Vd\n          z0TTrxUeT3lm8d9shnr2lfJT8ImUjvAA2Xez2Mlp8cBE5awDzT0q\n          I0n6uiP1aCN_2_jLAeQTlqRHtfa64QQSUmFAAjVKPbByi7xho0uT\n          OcbH510a6GYmJUAfmWjwZ6oD4ifKo8DYM-X72Eaw\"\n    }\n  ]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 21: General JWS JSON Serialization",
      "zh-CHS": "图21：通用JWS JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "zh-CHS": "使用平展JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"protected\": \"eyJhbGciOiJQUzM4NCIsImtpZCI6ImJpbGJvLmJhZ2dpbn\n      NAaG9iYml0b24uZXhhbXBsZSJ9\",\n  \"signature\": \"cu22eBqkYDKgIlTpzDXGvaFfz6WGoz7fUDcfT0kkOy42mi\n      Ah2qyBzk1xEsnk2IpN6-tPid6VrklHkqsGqDqHCdP6O8TTB5dDDItllV\n      o6_1OLPpcbUrhiUSMxbbXUvdvWXzg-UD8biiReQFlfz28zGWVsdiNAUf\n      8ZnyPEgVFn442ZdNqiVJRmBqrYRXe8P_ijQ7p8Vdz0TTrxUeT3lm8d9s\n      hnr2lfJT8ImUjvAA2Xez2Mlp8cBE5awDzT0qI0n6uiP1aCN_2_jLAeQT\n      lqRHtfa64QQSUmFAAjVKPbByi7xho0uTOcbH510a6GYmJUAfmWjwZ6oD\n      4ifKo8DYM-X72Eaw\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 22: Flattened JWS JSON Serialization",
      "zh-CHS": "图22：扁平化JWS JSON序列化"
    },
    {
      "indent": 0,
      "text": "4.3. ECDSA Signature",
      "section_title": true,
      "zh-CHS": "4.3. ECDSA签名"
    },
    {
      "indent": 3,
      "text": "This example illustrates signing content using the \"ES512\" (Elliptic Curve Digital Signature Algorithm (ECDSA) with curve P-521 and SHA-512) algorithm.",
      "zh-CHS": "此示例说明了使用“ES512”（椭圆曲线数字签名算法（ECDSA）和曲线P-521和SHA-512）算法对内容进行签名。"
    },
    {
      "indent": 3,
      "text": "Note that ECDSA uses random data to generate the signature; it might not be possible to exactly replicate the results in this section.",
      "zh-CHS": "注意ECDSA使用随机数据生成签名；可能无法准确复制本节中的结果。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "4.3.1. Input Factors",
      "section_title": true,
      "zh-CHS": "4.3.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "zh-CHS": "在开始签名操作之前，将提供以下内容："
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "zh-CHS": "o 有效载荷内容；本例使用图7中的内容，使用base64url[RFC4648]编码来生成图8。"
    },
    {
      "indent": 3,
      "text": "o EC private key on the curve P-521; this example uses the key from Figure 2.",
      "zh-CHS": "o 曲线P-521上的EC私钥；此示例使用图2中的键。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"ES512\".",
      "zh-CHS": "o “ES512”的“alg”参数。"
    },
    {
      "indent": 0,
      "text": "4.3.2. Signing Operation",
      "section_title": true,
      "zh-CHS": "4.3.2. 签名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated before beginning the signature process:",
      "zh-CHS": "在开始签名过程之前，将生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 23, encoded using base64url [RFC4648] to produce Figure 24.",
      "zh-CHS": "o JWS保护头；本例使用图23中的标题，使用base64url[RFC4648]编码以生成图24。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"ES512\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 23: JWS Protected Header JSON",
      "zh-CHS": "图23:JWS保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFUzUxMiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX hhbXBsZSJ9",
      "zh-CHS": "EYJHBGCIOIJFUZUXMISIMTPZCI6IMJPBGJVLMJHZ2DPNNAAG9IYML0B24UZX HHBXBSSJ9"
    },
    {
      "indent": 12,
      "text": "Figure 24: JWS Protected Header, base64url-encoded",
      "zh-CHS": "图24:JWS保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 24) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 25).",
      "zh-CHS": "JWS受保护的头（图24）和JWS有效负载（图8）按照[JWS]中的描述进行组合，以生成JWS签名输入（图25）。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFUzUxMiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX\nhhbXBsZSJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 25: JWS Signing Input",
      "zh-CHS": "图25:JWS签名输入"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 25) produces the JWS Signature (Figure 26).",
      "zh-CHS": "在JWS签名输入上执行签名操作（图25）将生成JWS签名（图26）。"
    },
    {
      "indent": 3,
      "text": "AE_R_YZCChjn4791jSQCrdPZCNYqHXCTZH0-JZGYNlaAjP2kqaluUIIUnC9qvb\nu9Plon7KRTzoNEuT4Va2cmL1eJAQy3mtPBu_u_sDDyYjnAMDxXPn7XrT0lw-kv\nAD890jl8e2puQens_IEKBpHABlsbEPX6sFY8OcGDqoRuBomu9xQ2",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 26: JWS Signature, base64url-encoded",
      "zh-CHS": "图26:JWS签名，base64url编码"
    },
    {
      "indent": 0,
      "text": "4.3.3. Output Results",
      "section_title": true,
      "zh-CHS": "4.3.3. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "zh-CHS": "以下内容构成生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 24)",
      "zh-CHS": "o JWS受保护的标头（图24）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "zh-CHS": "o 有效负载内容（图8）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 26)",
      "zh-CHS": "o 签名（图26）"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the JWS Compact Serialization:",
      "zh-CHS": "使用JWS精简序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFUzUxMiIsImtpZCI6ImJpbGJvLmJhZ2dpbnNAaG9iYml0b24uZX\nhhbXBsZSJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4\n.\nAE_R_YZCChjn4791jSQCrdPZCNYqHXCTZH0-JZGYNlaAjP2kqaluUIIUnC9qvb\nu9Plon7KRTzoNEuT4Va2cmL1eJAQy3mtPBu_u_sDDyYjnAMDxXPn7XrT0lw-kv\nAD890jl8e2puQens_IEKBpHABlsbEPX6sFY8OcGDqoRuBomu9xQ2",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 27: JWS Compact Serialization",
      "zh-CHS": "图27:JWS紧凑序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "zh-CHS": "使用常规JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJFUzUxMiIsImtpZCI6ImJpbGJvLmJhZ2\n          dpbnNAaG9iYml0b24uZXhhbXBsZSJ9\",\n      \"signature\": \"AE_R_YZCChjn4791jSQCrdPZCNYqHXCTZH0-JZGYNl\n          aAjP2kqaluUIIUnC9qvbu9Plon7KRTzoNEuT4Va2cmL1eJAQy3mt\n          PBu_u_sDDyYjnAMDxXPn7XrT0lw-kvAD890jl8e2puQens_IEKBp\n          HABlsbEPX6sFY8OcGDqoRuBomu9xQ2\"\n    }\n  ]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 28: General JWS JSON Serialization",
      "zh-CHS": "图28：通用JWS JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "zh-CHS": "使用平展JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"protected\": \"eyJhbGciOiJFUzUxMiIsImtpZCI6ImJpbGJvLmJhZ2dpbn\n      NAaG9iYml0b24uZXhhbXBsZSJ9\",\n  \"signature\": \"AE_R_YZCChjn4791jSQCrdPZCNYqHXCTZH0-JZGYNlaAjP\n      2kqaluUIIUnC9qvbu9Plon7KRTzoNEuT4Va2cmL1eJAQy3mtPBu_u_sD\n      DyYjnAMDxXPn7XrT0lw-kvAD890jl8e2puQens_IEKBpHABlsbEPX6sF\n      Y8OcGDqoRuBomu9xQ2\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 29: Flattened JWS JSON Serialization",
      "zh-CHS": "图29：扁平化JWS JSON序列化"
    },
    {
      "indent": 0,
      "text": "4.4. HMAC-SHA2 Integrity Protection",
      "section_title": true,
      "zh-CHS": "4.4. HMAC-SHA2完整性保护"
    },
    {
      "indent": 3,
      "text": "This example illustrates integrity protecting content using the \"HS256\" (HMAC-SHA-256) algorithm.",
      "zh-CHS": "此示例演示了使用“HS256”（HMAC-SHA-256）算法保护内容完整性的过程。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "4.4.1. Input Factors",
      "section_title": true,
      "zh-CHS": "4.4.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "zh-CHS": "在开始签名操作之前，将提供以下内容："
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "zh-CHS": "o 有效载荷内容；本例使用图7中的内容，使用base64url[RFC4648]编码来生成图8。"
    },
    {
      "indent": 3,
      "text": "o HMAC symmetric key; this example uses the key from Figure 5.",
      "zh-CHS": "o HMAC对称密钥；此示例使用图5中的键。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"HS256\".",
      "zh-CHS": "o “HS256”的“alg”参数。"
    },
    {
      "indent": 0,
      "text": "4.4.2. Signing Operation",
      "section_title": true,
      "zh-CHS": "4.4.2. 签名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated before completing the signing operation:",
      "zh-CHS": "在完成签名操作之前，将生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 30, encoded using base64url [RFC4648] to produce Figure 31.",
      "zh-CHS": "o JWS保护头；本例使用图30中的标题，使用base64url[RFC4648]编码以生成图31。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"HS256\",\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 30: JWS Protected Header JSON",
      "zh-CHS": "图30:JWS保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW VlZjMxNGJjNzAzNyJ9",
      "zh-CHS": "Eyjhbgcioijiuzi1niisimtpzci6ijaxogmwywu1trkowitndcxyizmqlw vlzjmxngjnzaznyj9"
    },
    {
      "indent": 12,
      "text": "Figure 31: JWS Protected Header, base64url-encoded",
      "zh-CHS": "图31:JWS保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 31) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 32).",
      "zh-CHS": "JWS受保护的头（图31）和JWS有效负载（图8）按照[JWS]中的描述进行组合，以生成JWS签名输入（图32）。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW\nVlZjMxNGJjNzAzNyJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 32: JWS Signing Input",
      "zh-CHS": "图32:JWS签名输入"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 32) produces the JWS Signature (Figure 33).",
      "zh-CHS": "在JWS签名输入上执行签名操作（图32）将生成JWS签名（图33）。"
    },
    {
      "indent": 3,
      "text": "s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 33: JWS Signature, base64url-encoded",
      "zh-CHS": "图33:JWS签名，base64url编码"
    },
    {
      "indent": 0,
      "text": "4.4.3. Output Results",
      "section_title": true,
      "zh-CHS": "4.4.3. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "zh-CHS": "以下内容构成生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 31)",
      "zh-CHS": "o JWS受保护的头文件（图31）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "zh-CHS": "o 有效负载内容（图8）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 33)",
      "zh-CHS": "o 签名（图33）"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the JWS Compact Serialization:",
      "zh-CHS": "使用JWS精简序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW\nVlZjMxNGJjNzAzNyJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4\n.\ns0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 34: JWS Compact Serialization",
      "zh-CHS": "图34:JWS紧凑序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "zh-CHS": "使用常规JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LT\n          RkOWItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n      \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p\n          0\"\n    }\n  ]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 35: General JWS JSON Serialization",
      "zh-CHS": "图35：通用JWS JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "zh-CHS": "使用平展JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOW\n      ItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n  \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 36: Flattened JWS JSON Serialization",
      "zh-CHS": "图36：扁平化JWS JSON序列化"
    },
    {
      "indent": 0,
      "text": "4.5. Signature with Detached Content",
      "section_title": true,
      "zh-CHS": "4.5. 具有分离内容的签名"
    },
    {
      "indent": 3,
      "text": "This example illustrates a signature with detached content. This example is identical to other examples in Section 4, except the resulting JWS objects do not include the JWS Payload field. Instead, the application is expected to locate it elsewhere. For example, the signature might be in a metadata section, with the payload being the content.",
      "zh-CHS": "此示例演示了具有分离内容的签名。此示例与第4节中的其他示例相同，只是生成的JWS对象不包括JWS有效负载字段。相反，应用程序应该将其定位在其他地方。例如，签名可能位于元数据部分，有效负载就是内容。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "4.5.1. Input Factors",
      "section_title": true,
      "zh-CHS": "4.5.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "zh-CHS": "在开始签名操作之前，将提供以下内容："
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "zh-CHS": "o 有效载荷内容；本例使用图7中的内容，使用base64url[RFC4648]编码来生成图8。"
    },
    {
      "indent": 3,
      "text": "o Signing key; this example uses the AES symmetric key from Figure 5.",
      "zh-CHS": "o 签名密钥；此示例使用图5中的AES对称密钥。"
    },
    {
      "indent": 3,
      "text": "o Signing algorithm; this example uses \"HS256\".",
      "zh-CHS": "o 签名算法；本例使用“HS256”。"
    },
    {
      "indent": 0,
      "text": "4.5.2. Signing Operation",
      "section_title": true,
      "zh-CHS": "4.5.2. 签名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated before completing the signing operation:",
      "zh-CHS": "在完成签名操作之前，将生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 37, encoded using base64url [RFC4648] to produce Figure 38.",
      "zh-CHS": "o JWS保护头；本例使用图37中的标题，使用base64url[RFC4648]编码以生成图38。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"HS256\",\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 37: JWS Protected Header JSON",
      "zh-CHS": "图37:JWS保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW VlZjMxNGJjNzAzNyJ9",
      "zh-CHS": "Eyjhbgcioijiuzi1niisimtpzci6ijaxogmwywu1trkowitndcxyizmqlw vlzjmxngjnzaznyj9"
    },
    {
      "indent": 12,
      "text": "Figure 38: JWS Protected Header, base64url-encoded",
      "zh-CHS": "图38:JWS保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 38) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 39).",
      "zh-CHS": "JWS受保护的头（图38）和JWS有效负载（图8）按照[JWS]中的描述进行组合，以生成JWS签名输入（图39）。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW\nVlZjMxNGJjNzAzNyJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 39: JWS Signing Input",
      "zh-CHS": "图39:JWS签名输入"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 39) produces the JWS Signature (Figure 40).",
      "zh-CHS": "在JWS签名输入上执行签名操作（图39）将生成JWS签名（图40）。"
    },
    {
      "indent": 3,
      "text": "s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 40: JWS Signature, base64url-encoded",
      "zh-CHS": "图40:JWS签名，base64url编码"
    },
    {
      "indent": 0,
      "text": "4.5.3. Output Results",
      "section_title": true,
      "zh-CHS": "4.5.3. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "zh-CHS": "以下内容构成生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 38)",
      "zh-CHS": "o JWS保护头（图38）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 40)",
      "zh-CHS": "o 签名（图40）"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the JWS Compact Serialization:",
      "zh-CHS": "使用JWS精简序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW\nVlZjMxNGJjNzAzNyJ9\n.\n.\ns0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 41: General JWS JSON Serialization",
      "zh-CHS": "图41：通用JWS JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "zh-CHS": "使用常规JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LT\n          RkOWItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n      \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p\n          0\"\n    }\n  ]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 42: General JWS JSON Serialization",
      "zh-CHS": "图42：通用JWS JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "zh-CHS": "使用平展JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOW\n      ItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n  \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 43: Flattened JWS JSON Serialization",
      "zh-CHS": "图43：扁平化JWS JSON序列化"
    },
    {
      "indent": 0,
      "text": "4.6. Protecting Specific Header Fields",
      "section_title": true,
      "zh-CHS": "4.6. 保护特定的头字段"
    },
    {
      "indent": 3,
      "text": "This example illustrates a signature where only certain Header Parameters are protected. Since this example contains both unprotected and protected Header Parameters, only the general JWS JSON Serialization and flattened JWS JSON Serialization are possible.",
      "zh-CHS": "此示例演示了仅保护某些标头参数的签名。由于此示例同时包含未受保护和受保护的头参数，因此只能进行常规JWS JSON序列化和平坦JWS JSON序列化。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "4.6.1. Input Factors",
      "section_title": true,
      "zh-CHS": "4.6.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "zh-CHS": "在开始签名操作之前，将提供以下内容："
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "zh-CHS": "o 有效载荷内容；本例使用图7中的内容，使用base64url[RFC4648]编码来生成图8。"
    },
    {
      "indent": 3,
      "text": "o Signing key; this example uses the AES symmetric key from Figure 5.",
      "zh-CHS": "o 签名密钥；此示例使用图5中的AES对称密钥。"
    },
    {
      "indent": 3,
      "text": "o Signing algorithm; this example uses \"HS256\".",
      "zh-CHS": "o 签名算法；本例使用“HS256”。"
    },
    {
      "indent": 0,
      "text": "4.6.2. Signing Operation",
      "section_title": true,
      "zh-CHS": "4.6.2. 签名操作"
    },
    {
      "indent": 3,
      "text": "The following are generated before completing the signing operation:",
      "zh-CHS": "在完成签名操作之前，将生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 44, encoded using base64url [RFC4648] to produce Figure 45.",
      "zh-CHS": "o JWS保护头；本例使用图44中的标题，使用base64url[RFC4648]编码以生成图45。"
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header; this example uses the header from Figure 46.",
      "zh-CHS": "o JWS无保护头；此示例使用图46中的标题。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"HS256\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 44: JWS Protected Header JSON",
      "zh-CHS": "图44:JWS保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiJ9",
      "zh-CHS": "EYJHBGCOIJIUZI1NIJ9"
    },
    {
      "indent": 12,
      "text": "Figure 45: JWS Protected Header, base64url-encoded",
      "zh-CHS": "图45:JWS保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "{\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 18,
      "text": "Figure 46: JWS Unprotected Header JSON",
      "zh-CHS": "图46:JWS未受保护的头JSON"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 45) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 47).",
      "zh-CHS": "JWS受保护的头（图45）和JWS有效负载（图8）按照[JWS]中的描述进行组合，以生成JWS签名输入（图47）。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 47: JWS Signing Input",
      "zh-CHS": "图47:JWS签名输入"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 47) produces the JWS Signature (Figure 48).",
      "zh-CHS": "在JWS签名输入上执行签名操作（图47）将生成JWS签名（图48）。"
    },
    {
      "indent": 3,
      "text": "bWUSVaxorn7bEF1djytBd0kHv70Ly5pvbomzMWSOr20",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 48: JWS Signature, base64url-encoded",
      "zh-CHS": "图48:JWS签名，base64url编码"
    },
    {
      "indent": 0,
      "text": "4.6.3. Output Results",
      "section_title": true,
      "zh-CHS": "4.6.3. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "zh-CHS": "以下内容构成生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 45)",
      "zh-CHS": "o JWS保护头（图45）"
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header (Figure 46)",
      "zh-CHS": "o JWS未受保护的标头（图46）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "zh-CHS": "o 有效负载内容（图8）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 48)",
      "zh-CHS": "o 签名（图48）"
    },
    {
      "indent": 3,
      "text": "The JWS Compact Serialization is not presented because it does not support this use case.",
      "zh-CHS": "JWS紧凑序列化不提供，因为它不支持此用例。"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "zh-CHS": "使用常规JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJIUzI1NiJ9\",\n      \"header\": {\n        \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n      },\n      \"signature\": \"bWUSVaxorn7bEF1djytBd0kHv70Ly5pvbomzMWSOr2\n          0\"\n    }\n  ]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 49: General JWS JSON Serialization",
      "zh-CHS": "图49：通用JWS JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "zh-CHS": "使用平展JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"protected\": \"eyJhbGciOiJIUzI1NiJ9\",\n  \"header\": {\n    \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n  },\n  \"signature\": \"bWUSVaxorn7bEF1djytBd0kHv70Ly5pvbomzMWSOr20\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 50: Flattened JWS JSON Serialization",
      "zh-CHS": "图50：扁平化JWS JSON序列化"
    },
    {
      "indent": 0,
      "text": "4.7. Protecting Content Only",
      "section_title": true,
      "zh-CHS": "4.7. 仅保护内容"
    },
    {
      "indent": 3,
      "text": "This example illustrates a signature where none of the Header Parameters are protected. Since this example contains only unprotected Header Parameters, only the general JWS JSON Serialization and flattened JWS JSON Serialization are possible.",
      "zh-CHS": "此示例演示了一个签名，其中没有任何头参数受到保护。由于此示例仅包含未受保护的头参数，因此只能进行常规JWS JSON序列化和扁平化JWS JSON序列化。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "4.7.1. Input Factors",
      "section_title": true,
      "zh-CHS": "4.7.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "zh-CHS": "在开始签名操作之前，将提供以下内容："
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "zh-CHS": "o 有效载荷内容；本例使用图7中的内容，使用base64url[RFC4648]编码来生成图8。"
    },
    {
      "indent": 3,
      "text": "o Signing key; this example uses the AES symmetric key from Figure 5.",
      "zh-CHS": "o 签名密钥；此示例使用图5中的AES对称密钥。"
    },
    {
      "indent": 3,
      "text": "o Signing algorithm; this example uses \"HS256\".",
      "zh-CHS": "o 签名算法；本例使用“HS256”。"
    },
    {
      "indent": 0,
      "text": "4.7.2. Signing Operation",
      "section_title": true,
      "zh-CHS": "4.7.2. 签名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated before completing the signing operation:",
      "zh-CHS": "在完成签名操作之前，将生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header; this example uses the header from Figure 51.",
      "zh-CHS": "o JWS无保护头；此示例使用图51中的标题。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"HS256\",\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 18,
      "text": "Figure 51: JWS Unprotected Header JSON",
      "zh-CHS": "图51:JWS未受保护的头JSON"
    },
    {
      "indent": 3,
      "text": "The empty string (as there is no JWS Protected Header) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 52).",
      "zh-CHS": "空字符串（因为没有受JWS保护的头）和JWS负载（图8）按照[JWS]中的描述进行组合，以生成JWS签名输入（图52）。"
    },
    {
      "indent": 3,
      "text": ".\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 52: JWS Signing Input",
      "zh-CHS": "图52:JWS签名输入"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 52) produces the JWS Signature (Figure 53).",
      "zh-CHS": "在JWS签名输入上执行签名操作（图52）将生成JWS签名（图53）。"
    },
    {
      "indent": 3,
      "text": "xuLifqLGiblpv9zBpuZczWhNj1gARaLV3UxvxhJxZuk",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 53: JWS Signature, base64url-encoded",
      "zh-CHS": "图53:JWS签名，base64url编码"
    },
    {
      "indent": 0,
      "text": "4.7.3. Output Results",
      "section_title": true,
      "zh-CHS": "4.7.3. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "zh-CHS": "以下内容构成生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header (Figure 51)",
      "zh-CHS": "o JWS无保护标头（图51）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "zh-CHS": "o 有效负载内容（图8）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 53)",
      "zh-CHS": "o 签名（图53）"
    },
    {
      "indent": 3,
      "text": "The JWS Compact Serialization is not presented because it does not support this use case.",
      "zh-CHS": "JWS紧凑序列化不提供，因为它不支持此用例。"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "zh-CHS": "使用常规JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"header\": {\n        \"alg\": \"HS256\",\n        \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n      },\n      \"signature\": \"xuLifqLGiblpv9zBpuZczWhNj1gARaLV3UxvxhJxZu\n          k\"\n    }\n  ]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 54: General JWS JSON Serialization",
      "zh-CHS": "图54：通用JWS JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the flattened JWS JSON Serialization:",
      "zh-CHS": "使用平展JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"header\": {\n    \"alg\": \"HS256\",\n    \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n  },\n  \"signature\": \"xuLifqLGiblpv9zBpuZczWhNj1gARaLV3UxvxhJxZuk\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 55: Flattened JWS JSON Serialization",
      "zh-CHS": "图55：扁平化JWS JSON序列化"
    },
    {
      "indent": 0,
      "text": "4.8. Multiple Signatures",
      "section_title": true,
      "zh-CHS": "4.8. 多重签名"
    },
    {
      "indent": 3,
      "text": "This example illustrates multiple signatures applied to the same payload. Since this example contains more than one signature, only the JSON General Serialization is possible.",
      "zh-CHS": "此示例说明了应用于同一有效负载的多个签名。由于此示例包含多个签名，因此只有JSON通用序列化是可能的。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "4.8.1. Input Factors",
      "section_title": true,
      "zh-CHS": "4.8.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "zh-CHS": "在开始签名操作之前，将提供以下内容："
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the content from Figure 7, encoded using base64url [RFC4648] to produce Figure 8.",
      "zh-CHS": "o 有效载荷内容；本例使用图7中的内容，使用base64url[RFC4648]编码来生成图8。"
    },
    {
      "indent": 3,
      "text": "o Signing keys; this example uses the following:",
      "zh-CHS": "o 签名密钥；此示例使用以下内容："
    },
    {
      "indent": 6,
      "text": "* RSA private key from Figure 4 for the first signature",
      "zh-CHS": "* 图4中第一个签名的RSA私钥"
    },
    {
      "indent": 6,
      "text": "* EC private key from Figure 2 for the second signature",
      "zh-CHS": "* 图2中第二个签名的EC私钥"
    },
    {
      "indent": 6,
      "text": "* AES symmetric key from Figure 5 for the third signature",
      "zh-CHS": "* 图5中第三个签名的AES对称密钥"
    },
    {
      "indent": 3,
      "text": "o Signing algorithms; this example uses the following:",
      "zh-CHS": "o 签名算法；此示例使用以下内容："
    },
    {
      "indent": 6,
      "text": "* \"RS256\" for the first signature",
      "zh-CHS": "* 第一个签名为“RS256”"
    },
    {
      "indent": 6,
      "text": "* \"ES512\" for the second signature",
      "zh-CHS": "* 第二个签名为“ES512”"
    },
    {
      "indent": 6,
      "text": "* \"HS256\" for the third signature",
      "zh-CHS": "* 第三个签名为“HS256”"
    },
    {
      "indent": 0,
      "text": "4.8.2. First Signing Operation",
      "section_title": true,
      "zh-CHS": "4.8.2. 首次签名操作"
    },
    {
      "indent": 3,
      "text": "The following are generated before completing the first signing operation:",
      "zh-CHS": "在完成第一次签名操作之前，将生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 56, encoded using base64url [RFC4648] to produce Figure 57.",
      "zh-CHS": "o JWS保护头；此示例使用图56中的标题，使用base64url[RFC4648]编码以生成图57。"
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header; this example uses the header from Figure 58.",
      "zh-CHS": "o JWS无保护头；此示例使用图58中的标题。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RS256\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 13,
      "text": "Figure 56: Signature #1 JWS Protected Header JSON",
      "zh-CHS": "图56：签名#1 JWS保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSUzI1NiJ9",
      "zh-CHS": "EYJHBGCOIJSUZI1NIJ9"
    },
    {
      "indent": 6,
      "text": "Figure 57: Signature #1 JWS Protected Header, base64url-encoded",
      "zh-CHS": "图57：签名#1 JWS保护头，base64url编码"
    },
    {
      "indent": 3,
      "text": "{\n  \"kid\": \"bilbo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 58: Signature #1 JWS Unprotected Header JSON",
      "zh-CHS": "图58：签名#1 JWS未受保护的头JSON"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 57) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 59).",
      "zh-CHS": "JWS-Protected头（图57）和JWS-Payload（图8）按照[JWS]中的描述进行组合，以生成JWS签名输入（图59）。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSUzI1NiJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 59: JWS Signing Input",
      "zh-CHS": "图59:JWS签名输入"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 59) produces the JWS Signature (Figure 60).",
      "zh-CHS": "在JWS签名输入上执行签名操作（图59）将生成JWS签名（图60）。"
    },
    {
      "indent": 3,
      "text": "MIsjqtVlOpa71KE-Mss8_Nq2YH4FGhiocsqrgi5NvyG53uoimic1tcMdSg-qpt rzZc7CG6Svw2Y13TDIqHzTUrL_lR2ZFcryNFiHkSw129EghGpwkpxaTn_THJTC glNbADko1MZBCdwzJxwqZc-1RlpO2HibUYyXSwO97BSe0_evZKdjvvKSgsIqjy tKSeAMbhMBdMma622_BG5t4sdbuCHtFjp9iJmkio47AIwqkZV1aIZsv33uPUqB BCXbYoQJwt7mxPftHmNlGoOSMxR_3thmXTCm4US-xiNOyhbm8afKK64jU6_TPt QHiJeQJxz9G3Tx-083B745_AfYOnlC9w",
      "zh-CHS": "2.2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 9G3TX-083B745_AfYOnlC9w"
    },
    {
      "indent": 14,
      "text": "Figure 60: JWS Signature #1, base64url-encoded",
      "zh-CHS": "图60:JWS签名#1，base64url编码"
    },
    {
      "indent": 3,
      "text": "The following is the assembled first signature serialized as JSON:",
      "zh-CHS": "以下是序列化为JSON的组装的第一个签名："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJSUzI1NiJ9\",\n  \"header\": {\n    \"kid\": \"bilbo.baggins@hobbiton.example\"\n  },\n  \"signature\": \"MIsjqtVlOpa71KE-Mss8_Nq2YH4FGhiocsqrgi5NvyG53u\n      oimic1tcMdSg-qptrzZc7CG6Svw2Y13TDIqHzTUrL_lR2ZFcryNFiHkS\n      w129EghGpwkpxaTn_THJTCglNbADko1MZBCdwzJxwqZc-1RlpO2HibUY\n      yXSwO97BSe0_evZKdjvvKSgsIqjytKSeAMbhMBdMma622_BG5t4sdbuC\n      HtFjp9iJmkio47AIwqkZV1aIZsv33uPUqBBCXbYoQJwt7mxPftHmNlGo\n      OSMxR_3thmXTCm4US-xiNOyhbm8afKK64jU6_TPtQHiJeQJxz9G3Tx-0\n      83B745_AfYOnlC9w\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 61: Signature #1 JSON",
      "zh-CHS": "图61：签名#1 JSON"
    },
    {
      "indent": 0,
      "text": "4.8.3. Second Signing Operation",
      "section_title": true,
      "zh-CHS": "4.8.3. 第二次签名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated before completing the second signing operation:",
      "zh-CHS": "在完成第二次签名操作之前，将生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWS Unprotected Header; this example uses the header from Figure 62.",
      "zh-CHS": "o JWS无保护头；此示例使用图62中的标题。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"ES512\",\n  \"kid\": \"bilbo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 62: Signature #2 JWS Unprotected Header JSON",
      "zh-CHS": "图62：签名#2 JWS未受保护的头JSON"
    },
    {
      "indent": 3,
      "text": "The empty string (as there is no JWS Protected Header) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 63).",
      "zh-CHS": "空字符串（因为没有受JWS保护的头）和JWS负载（图8）按照[JWS]中的描述进行组合，以生成JWS签名输入（图63）。"
    },
    {
      "indent": 3,
      "text": ".\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 63: JWS Signing Input",
      "zh-CHS": "图63:JWS签名输入"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 63) produces the JWS Signature (Figure 64).",
      "zh-CHS": "对JWS签名输入执行签名操作（图63）将生成JWS签名（图64）。"
    },
    {
      "indent": 3,
      "text": "ARcVLnaJJaUWG8fG-8t5BREVAuTY8n8YHjwDO1muhcdCoFZFFjfISu0Cdkn9Yb\ndlmi54ho0x924DUz8sK7ZXkhc7AFM8ObLfTvNCrqcI3Jkl2U5IX3utNhODH6v7\nxgy1Qahsn0fyb4zSAkje8bAWz4vIfj5pCMYxxm4fgV3q7ZYhm5eD",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "Figure 64: JWS Signature #2, base64url-encoded",
      "zh-CHS": "图64:JWS签名#2，base64url编码"
    },
    {
      "indent": 3,
      "text": "The following is the assembled second signature serialized as JSON:",
      "zh-CHS": "以下是序列化为JSON的汇编第二个签名："
    },
    {
      "indent": 3,
      "text": "{\n  \"header\": {\n    \"alg\": \"ES512\",\n    \"kid\": \"bilbo.baggins@hobbiton.example\"\n  },\n  \"signature\": \"ARcVLnaJJaUWG8fG-8t5BREVAuTY8n8YHjwDO1muhcdCoF\n      ZFFjfISu0Cdkn9Ybdlmi54ho0x924DUz8sK7ZXkhc7AFM8ObLfTvNCrq\n      cI3Jkl2U5IX3utNhODH6v7xgy1Qahsn0fyb4zSAkje8bAWz4vIfj5pCM\n      Yxxm4fgV3q7ZYhm5eD\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 65: Signature #2 JSON",
      "zh-CHS": "图65：签名#2 JSON"
    },
    {
      "indent": 0,
      "text": "4.8.4. Third Signing Operation",
      "section_title": true,
      "zh-CHS": "4.8.4. 第三次签名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated before completing the third signing operation:",
      "zh-CHS": "在完成第三次签名操作之前，将生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 66, encoded using base64url [RFC4648] to produce Figure 67.",
      "zh-CHS": "o JWS保护头；此示例使用图66中的标题，使用base64url[RFC4648]编码以生成图67。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"HS256\",\n  \"kid\": \"018c0ae5-4d9b-471b-bfd6-eef314bc7037\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 13,
      "text": "Figure 66: Signature #3 JWS Protected Header JSON",
      "zh-CHS": "图66：签名#3 JWS保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW VlZjMxNGJjNzAzNyJ9",
      "zh-CHS": "Eyjhbgcioijiuzi1niisimtpzci6ijaxogmwywu1trkowitndcxyizmqlw vlzjmxngjnzaznyj9"
    },
    {
      "indent": 6,
      "text": "Figure 67: Signature #3 JWS Protected Header, base64url-encoded",
      "zh-CHS": "图67：签名#3 JWS保护头，base64url编码"
    },
    {
      "indent": 3,
      "text": "The JWS Protected Header (Figure 67) and JWS Payload (Figure 8) are combined as described in [JWS] to produce the JWS Signing Input (Figure 68).",
      "zh-CHS": "JWS受保护的头（图67）和JWS有效负载（图8）按照[JWS]中的描述进行组合，以生成JWS签名输入（图68）。"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LW\nVlZjMxNGJjNzAzNyJ9\n.\nSXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IH\nlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBk\nb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcm\nUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 68: JWS Signing Input",
      "zh-CHS": "图68:JWS签名输入"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the JWS Signing Input (Figure 68) produces the JWS Signature (Figure 69).",
      "zh-CHS": "在JWS签名输入上执行签名操作（图68）将生成JWS签名（图69）。"
    },
    {
      "indent": 3,
      "text": "s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "Figure 69: JWS Signature #3, base64url-encoded",
      "zh-CHS": "图69:JWS签名#3，base64url编码"
    },
    {
      "indent": 3,
      "text": "The following is the assembled third signature serialized as JSON:",
      "zh-CHS": "以下是序列化为JSON的汇编第三个签名："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOW\n      ItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n  \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 70: Signature #3 JSON",
      "zh-CHS": "图70：签名#3 JSON"
    },
    {
      "indent": 0,
      "text": "4.8.5. Output Results",
      "section_title": true,
      "zh-CHS": "4.8.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "zh-CHS": "以下内容构成生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 8)",
      "zh-CHS": "o 有效负载内容（图8）"
    },
    {
      "indent": 3,
      "text": "o Signature #1 JSON (Figure 61)",
      "zh-CHS": "o 签名#1 JSON（图61）"
    },
    {
      "indent": 3,
      "text": "o Signature #2 JSON (Figure 65)",
      "zh-CHS": "o 签名#2 JSON（图65）"
    },
    {
      "indent": 3,
      "text": "o Signature #3 JSON (Figure 70)",
      "zh-CHS": "o 签名#3 JSON（图70）"
    },
    {
      "indent": 3,
      "text": "The JWS Compact Serialization is not presented because it does not support this use case; the flattened JWS JSON Serialization is not presented because there is more than one signature.",
      "zh-CHS": "JWS紧凑序列化不提供，因为它不支持此用例；由于存在多个签名，因此未显示平坦的JWS JSON序列化。"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the general JWS JSON Serialization:",
      "zh-CHS": "使用常规JWS JSON序列化生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"payload\": \"SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywg\n      Z29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9h\n      ZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXi\n      gJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9m\n      ZiB0by4\",\n  \"signatures\": [\n    {\n      \"protected\": \"eyJhbGciOiJSUzI1NiJ9\",\n      \"header\": {\n        \"kid\": \"bilbo.baggins@hobbiton.example\"\n      },\n      \"signature\": \"MIsjqtVlOpa71KE-Mss8_Nq2YH4FGhiocsqrgi5Nvy\n          G53uoimic1tcMdSg-qptrzZc7CG6Svw2Y13TDIqHzTUrL_lR2ZFc\n          ryNFiHkSw129EghGpwkpxaTn_THJTCglNbADko1MZBCdwzJxwqZc\n          -1RlpO2HibUYyXSwO97BSe0_evZKdjvvKSgsIqjytKSeAMbhMBdM\n          ma622_BG5t4sdbuCHtFjp9iJmkio47AIwqkZV1aIZsv33uPUqBBC\n          XbYoQJwt7mxPftHmNlGoOSMxR_3thmXTCm4US-xiNOyhbm8afKK6\n          4jU6_TPtQHiJeQJxz9G3Tx-083B745_AfYOnlC9w\"\n    },\n    {\n      \"header\": {\n        \"alg\": \"ES512\",\n        \"kid\": \"bilbo.baggins@hobbiton.example\"\n      },\n      \"signature\": \"ARcVLnaJJaUWG8fG-8t5BREVAuTY8n8YHjwDO1muhc\n          dCoFZFFjfISu0Cdkn9Ybdlmi54ho0x924DUz8sK7ZXkhc7AFM8Ob\n          LfTvNCrqcI3Jkl2U5IX3utNhODH6v7xgy1Qahsn0fyb4zSAkje8b\n          AWz4vIfj5pCMYxxm4fgV3q7ZYhm5eD\"\n    },\n    {\n      \"protected\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LT\n          RkOWItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9\",\n      \"signature\": \"s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p\n          0\"\n    }\n  ]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 71: General JWS JSON Serialization",
      "zh-CHS": "图71：通用JWS JSON序列化"
    },
    {
      "indent": 0,
      "text": "5. JSON Web Encryption Examples",
      "section_title": true,
      "zh-CHS": "5. JSON Web加密示例"
    },
    {
      "indent": 3,
      "text": "The following sections demonstrate how to generate various JWE objects.",
      "zh-CHS": "以下各节演示如何生成各种JWE对象。"
    },
    {
      "indent": 3,
      "text": "All of the encryption examples (unless otherwise noted) use the following Plaintext content (an abridged quote from \"The Fellowship of the Ring\" [LOTR-FELLOWSHIP]), serialized as UTF-8. The Plaintext is presented here as a series of quoted strings that are concatenated to produce the JWE Plaintext. The sequence \"\\xe2\\x80\\x93\" is substituted for (U+2013 EN DASH), and quotation marks (U+0022 QUOTATION MARK) are added for readability but are not present in the JWE Plaintext.",
      "zh-CHS": "所有加密示例（除非另有说明）都使用以下纯文本内容（摘自“环之团契”[LOTR-FESSURY]），序列化为UTF-8。明文在这里表示为一系列带引号的字符串，这些字符串被连接起来以生成JWE明文。序列“\\xe2\\x80\\x93”替换为（U+2013 EN破折号），并添加引号（U+0022引号）以确保可读性，但在JWE明文中不存在。"
    },
    {
      "indent": 3,
      "text": "\"You can trust us to stick with you through thick and \" \"thin\\xe2\\x80\\x93to the bitter end. And you can trust us to \" \"keep any secret of yours\\xe2\\x80\\x93closer than you keep it \" \"yourself. But you cannot trust us to let you face trouble \" \"alone, and go off without a word. We are your friends, Frodo.\"",
      "zh-CHS": "“你可以相信我们会与你同甘共苦。你可以相信我们会“保守你的任何秘密”，而不是你自己。但你不能相信我们会让你独自面对麻烦，一言不发。我们是你的朋友，佛罗多。”"
    },
    {
      "indent": 23,
      "text": "Figure 72: Plaintext Content",
      "zh-CHS": "图72：纯文本内容"
    },
    {
      "indent": 0,
      "text": "5.1. Key Encryption Using RSA v1.5 and AES-HMAC-SHA2",
      "section_title": true,
      "zh-CHS": "5.1. 使用RSA v1.5和AES-HMAC-SHA2的密钥加密"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using the \"RSA1_5\" (RSAES-PKCS1-v1_5) key encryption algorithm and the \"A128CBC-HS256\" (AES-128-CBC-HMAC-SHA-256) content encryption algorithm.",
      "zh-CHS": "此示例说明如何使用“RSA1_5”（RSAES-PKCS1-v1_5）密钥加密算法和“A128CBC-HS256”（AES-128-CBC-HMAC-SHA-256）内容加密算法加密内容。"
    },
    {
      "indent": 3,
      "text": "Note that RSAES-PKCS1-v1_5 uses random data to generate the ciphertext; it might not be possible to exactly replicate the results in this section.",
      "zh-CHS": "请注意，RSAES-PKCS1-v1_5使用随机数据生成密文；可能无法准确复制本节中的结果。"
    },
    {
      "indent": 3,
      "text": "Note that only the RSA public key is necessary to perform the encryption. However, the example includes the RSA private key to allow readers to validate the output.",
      "zh-CHS": "请注意，执行加密只需要RSA公钥。但是，该示例包含RSA私钥，以允许读卡器验证输出。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.1.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.1.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的内容。"
    },
    {
      "indent": 3,
      "text": "o RSA public key; this example uses the key from Figure 73.",
      "zh-CHS": "o RSA公钥；此示例使用图73中的键。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"RSA1_5\".",
      "zh-CHS": "o “RSA1_5”的“alg”参数。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128CBC-HS256\".",
      "zh-CHS": "o “A128CBC-HS256”的“enc”参数。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"RSA\",\n  \"kid\": \"frodo.baggins@hobbiton.example\",\n  \"use\": \"enc\",\n  \"n\": \"maxhbsmBtdQ3CNrKvprUE6n9lYcregDMLYNeTAWcLj8NnPU9XIYegT\n      HVHQjxKDSHP2l-F5jS7sppG1wgdAqZyhnWvXhYNvcM7RfgKxqNx_xAHx\n      6f3yy7s-M9PSNCwPC2lh6UAkR4I00EhV9lrypM9Pi4lBUop9t5fS9W5U\n      NwaAllhrd-osQGPjIeI1deHTwx-ZTHu3C60Pu_LJIl6hKn9wbwaUmA4c\n      R5Bd2pgbaY7ASgsjCUbtYJaNIHSoHXprUdJZKUMAzV0WOKPfA6OPI4oy\n      pBadjvMZ4ZAj3BnXaSYsEZhaueTXvZB4eZOAjIyh2e_VOIKVMsnDrJYA\n      VotGlvMQ\",\n  \"e\": \"AQAB\",\n  \"d\": \"Kn9tgoHfiTVi8uPu5b9TnwyHwG5dK6RE0uFdlpCGnJN7ZEi963R7wy\n      bQ1PLAHmpIbNTztfrheoAniRV1NCIqXaW_qS461xiDTp4ntEPnqcKsyO\n      5jMAji7-CL8vhpYYowNFvIesgMoVaPRYMYT9TW63hNM0aWs7USZ_hLg6\n      Oe1mY0vHTI3FucjSM86Nff4oIENt43r2fspgEPGRrdE6fpLc9Oaq-qeP\n      1GFULimrRdndm-P8q8kvN3KHlNAtEgrQAgTTgz80S-3VD0FgWfgnb1PN\n      miuPUxO8OpI9KDIfu_acc6fg14nsNaJqXe6RESvhGPH2afjHqSy_Fd2v\n      pzj85bQQ\",\n  \"p\": \"2DwQmZ43FoTnQ8IkUj3BmKRf5Eh2mizZA5xEJ2MinUE3sdTYKSLtaE\n      oekX9vbBZuWxHdVhM6UnKCJ_2iNk8Z0ayLYHL0_G21aXf9-unynEpUsH\n      7HHTklLpYAzOOx1ZgVljoxAdWNn3hiEFrjZLZGS7lOH-a3QQlDDQoJOJ\n      2VFmU\",\n  \"q\": \"te8LY4-W7IyaqH1ExujjMqkTAlTeRbv0VLQnfLY2xINnrWdwiQ93_V\n      F099aP1ESeLja2nw-6iKIe-qT7mtCPozKfVtUYfz5HrJ_XY2kfexJINb\n      9lhZHMv5p1skZpeIS-GPHCC6gRlKo1q-idn_qxyusfWv7WAxlSVfQfk8\n      d6Et0\",\n  \"dp\": \"UfYKcL_or492vVc0PzwLSplbg4L3-Z5wL48mwiswbpzOyIgd2xHTH\n      QmjJpFAIZ8q-zf9RmgJXkDrFs9rkdxPtAsL1WYdeCT5c125Fkdg317JV\n      RDo1inX7x2Kdh8ERCreW8_4zXItuTl_KiXZNU5lvMQjWbIw2eTx1lpsf\n      lo0rYU\",\n  \"dq\": \"iEgcO-QfpepdH8FWd7mUFyrXdnOkXJBCogChY6YKuIHGc_p8Le9Mb\n      pFKESzEaLlN1Ehf3B6oGBl5Iz_ayUlZj2IoQZ82znoUrpa9fVYNot87A\n      CfzIG7q9Mv7RiPAderZi03tkVXAdaBau_9vs5rS-7HMtxkVrxSUvJY14\n      TkXlHE\",\n  \"qi\": \"kC-lzZOqoFaZCr5l0tOVtREKoVqaAYhQiqIRGL-MzS4sCmRkxm5vZ\n      lXYx6RtE1n_AagjqajlkjieGlxTTThHD8Iga6foGBMaAr5uR1hGQpSc7\n      Gl7CF1DZkBJMTQN6EshYzZfxW08mIO8M6Rzuh0beL6fG9mkDcIyPrBXx\n      2bQ_mM\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 73: RSA 2048-Bit Key, in JWK Format",
      "zh-CHS": "图73:JWK格式的RSA 2048位密钥"
    },
    {
      "indent": 3,
      "text": "(NOTE: While the key includes the private parameters, only the public parameters \"e\" and \"n\" are necessary for the encryption operation.)",
      "zh-CHS": "（注意：虽然密钥包括私有参数，但加密操作只需要公共参数“e”和“n”。）"
    },
    {
      "indent": 0,
      "text": "5.1.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.1.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 74.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥（CEK）；此示例使用图74中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 75.",
      "zh-CHS": "o 初始化向量；此示例使用图75中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "3qyTVhIWt5juqZUCpfRqpvauwB956MEJL2Rt-8qXKSo",
      "zh-CHS": "3qyTVhIWt5juqZUCpfRqpvauwB956MEJL2Rt-8qXKSo"
    },
    {
      "indent": 11,
      "text": "Figure 74: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图74：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "bbd5sTkYwhAIqfHsx8DayA",
      "zh-CHS": "bbd5sTkYwhAIqfHsx8DayA"
    },
    {
      "indent": 12,
      "text": "Figure 75: Initialization Vector, base64url-encoded",
      "zh-CHS": "图75：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.1.3. Encrypting the Key",
      "section_title": true,
      "zh-CHS": "5.1.3. 加密密钥"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 74) with the RSA key (Figure 73) results in the following Encrypted Key:",
      "zh-CHS": "使用RSA密钥（图73）在CEK上执行密钥加密操作（图74）会产生以下加密密钥："
    },
    {
      "indent": 3,
      "text": "laLxI0j-nLH-_BgLOXMozKxmy9gffy2gTdvqzfTihJBuuzxg0V7yk1WClnQePF\nvG2K-pvSlWc9BRIazDrn50RcRai__3TDON395H3c62tIouJJ4XaRvYHFjZTZ2G\nXfz8YAImcc91Tfk0WXC2F5Xbb71ClQ1DDH151tlpH77f2ff7xiSxh9oSewYrcG\nTSLUeeCt36r1Kt3OSj7EyBQXoZlN7IxbyhMAfgIe7Mv1rOTOI5I8NQqeXXW8Vl\nzNmoxaGMny3YnGir5Wf6Qt2nBq4qDaPdnaAuuGUGEecelIO1wx1BpyIfgvfjOh\nMBs9M8XL223Fg47xlGsMXdfuY-4jaqVw",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 76: Encrypted Key, base64url-encoded",
      "zh-CHS": "图76：加密密钥，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.1.4. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.1.4. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the Plaintext:",
      "zh-CHS": "在加密明文之前生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 77, encoded using base64url [RFC4648] to produce Figure 78.",
      "zh-CHS": "o JWE保护头；本例使用图77中的标题，使用base64url[RFC4648]编码以生成图78。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RSA1_5\",\n  \"kid\": \"frodo.baggins@hobbiton.example\",\n  \"enc\": \"A128CBC-HS256\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 77: JWE Protected Header JSON",
      "zh-CHS": "图77:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0ExXzUiLCJraWQiOiJmcm9kby5iYWdnaW5zQGhvYmJpdG9uLm\nV4YW1wbGUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 78: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图78:JWE保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation on the Plaintext (Figure 72) using the following:",
      "zh-CHS": "使用以下命令对明文（图72）执行内容加密操作："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 74);",
      "zh-CHS": "o CEK（图74）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 75); and",
      "zh-CHS": "o 初始化向量（图75）；和"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 77) as authenticated data",
      "zh-CHS": "o JWE将头（图77）保护为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 79.",
      "zh-CHS": "o 图79中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 80.",
      "zh-CHS": "o 图80中的身份验证标记。"
    },
    {
      "indent": 3,
      "text": "0fys_TY_na7f8dwSfXLiYdHaA2DxUjD67ieF7fcVbIR62JhJvGZ4_FNVSiGc_r aa0HnLQ6s1P2sv3Xzl1p1l_o5wR_RsSzrS8Z-wnI3Jvo0mkpEEnlDmZvDu_k8O WzJv7eZVEqiWKdyVzFhPpiyQU28GLOpRc2VbVbK4dQKPdNTjPPEmRqcaGeTWZV yeSUvf5k59yJZxRuSvWFf6KrNtmRdZ8R4mDOjHSrM_s8uwIFcqt4r5GX8TKaI0 zT5CbL5Qlw3sRc7u_hg0yKVOiRytEAEs3vZkcfLkP6nbXdC_PkMdNS-ohP78T2 O6_7uInMGhFeX4ctHG7VelHGiT93JfWDEQi5_V9UN1rhXNrYu-0fVMkZAKX3VW i7lzA6BP430m",
      "zh-CHS": "10年后，中国政府将在未来10年内发布一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，一个新的数据，新的数据，一个新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，新的数据，NS-ohP78T2O6UINMGHFEX4CTH7VELHGIT93JFWDEQI5V9UN1RHXNRYU-0fVMkZAKX3VW i7lzA6BP430m"
    },
    {
      "indent": 17,
      "text": "Figure 79: Ciphertext, base64url-encoded",
      "zh-CHS": "图79：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "kvKuFBXHe5mQr4lqgobAUg",
      "zh-CHS": "kvKuFBXHe5mQr4lqgobAUg"
    },
    {
      "indent": 13,
      "text": "Figure 80: Authentication Tag, base64url-encoded",
      "zh-CHS": "图80：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.1.5. Output Results",
      "section_title": true,
      "zh-CHS": "5.1.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 78)",
      "zh-CHS": "o JWE受保护的标头（图78）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 76)",
      "zh-CHS": "o 加密密钥（图76）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 75)",
      "zh-CHS": "o 初始化向量（图75）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 79)",
      "zh-CHS": "o 密文（图79）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 80)",
      "zh-CHS": "o 身份验证标签（图80）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "zh-CHS": "使用JWE压缩序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0ExXzUiLCJraWQiOiJmcm9kby5iYWdnaW5zQGhvYmJpdG9uLm\nV4YW1wbGUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0\n.\nlaLxI0j-nLH-_BgLOXMozKxmy9gffy2gTdvqzfTihJBuuzxg0V7yk1WClnQePF\nvG2K-pvSlWc9BRIazDrn50RcRai__3TDON395H3c62tIouJJ4XaRvYHFjZTZ2G\nXfz8YAImcc91Tfk0WXC2F5Xbb71ClQ1DDH151tlpH77f2ff7xiSxh9oSewYrcG\nTSLUeeCt36r1Kt3OSj7EyBQXoZlN7IxbyhMAfgIe7Mv1rOTOI5I8NQqeXXW8Vl\nzNmoxaGMny3YnGir5Wf6Qt2nBq4qDaPdnaAuuGUGEecelIO1wx1BpyIfgvfjOh\nMBs9M8XL223Fg47xlGsMXdfuY-4jaqVw\n.\nbbd5sTkYwhAIqfHsx8DayA\n.\n0fys_TY_na7f8dwSfXLiYdHaA2DxUjD67ieF7fcVbIR62JhJvGZ4_FNVSiGc_r\naa0HnLQ6s1P2sv3Xzl1p1l_o5wR_RsSzrS8Z-wnI3Jvo0mkpEEnlDmZvDu_k8O\nWzJv7eZVEqiWKdyVzFhPpiyQU28GLOpRc2VbVbK4dQKPdNTjPPEmRqcaGeTWZV\nyeSUvf5k59yJZxRuSvWFf6KrNtmRdZ8R4mDOjHSrM_s8uwIFcqt4r5GX8TKaI0\nzT5CbL5Qlw3sRc7u_hg0yKVOiRytEAEs3vZkcfLkP6nbXdC_PkMdNS-ohP78T2\nO6_7uInMGhFeX4ctHG7VelHGiT93JfWDEQi5_V9UN1rhXNrYu-0fVMkZAKX3VW\ni7lzA6BP430m\n.\nkvKuFBXHe5mQr4lqgobAUg",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 81: JWE Compact Serialization",
      "zh-CHS": "图81:JWE压缩序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"laLxI0j-nLH-_BgLOXMozKxmy9gffy2gTdvqzf\n          TihJBuuzxg0V7yk1WClnQePFvG2K-pvSlWc9BRIazDrn50RcRai_\n          _3TDON395H3c62tIouJJ4XaRvYHFjZTZ2GXfz8YAImcc91Tfk0WX\n          C2F5Xbb71ClQ1DDH151tlpH77f2ff7xiSxh9oSewYrcGTSLUeeCt\n          36r1Kt3OSj7EyBQXoZlN7IxbyhMAfgIe7Mv1rOTOI5I8NQqeXXW8\n          VlzNmoxaGMny3YnGir5Wf6Qt2nBq4qDaPdnaAuuGUGEecelIO1wx\n          1BpyIfgvfjOhMBs9M8XL223Fg47xlGsMXdfuY-4jaqVw\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJSU0ExXzUiLCJraWQiOiJmcm9kby5iYWdnaW\n      5zQGhvYmJpdG9uLmV4YW1wbGUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In\n      0\",\n  \"iv\": \"bbd5sTkYwhAIqfHsx8DayA\",\n  \"ciphertext\": \"0fys_TY_na7f8dwSfXLiYdHaA2DxUjD67ieF7fcVbIR62\n      JhJvGZ4_FNVSiGc_raa0HnLQ6s1P2sv3Xzl1p1l_o5wR_RsSzrS8Z-wn\n      I3Jvo0mkpEEnlDmZvDu_k8OWzJv7eZVEqiWKdyVzFhPpiyQU28GLOpRc\n      2VbVbK4dQKPdNTjPPEmRqcaGeTWZVyeSUvf5k59yJZxRuSvWFf6KrNtm\n      RdZ8R4mDOjHSrM_s8uwIFcqt4r5GX8TKaI0zT5CbL5Qlw3sRc7u_hg0y\n      KVOiRytEAEs3vZkcfLkP6nbXdC_PkMdNS-ohP78T2O6_7uInMGhFeX4c\n      tHG7VelHGiT93JfWDEQi5_V9UN1rhXNrYu-0fVMkZAKX3VWi7lzA6BP4\n      30m\",\n  \"tag\": \"kvKuFBXHe5mQr4lqgobAUg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 82: General JWE JSON Serialization",
      "zh-CHS": "图82：通用JWE JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "zh-CHS": "使用平坦JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJSU0ExXzUiLCJraWQiOiJmcm9kby5iYWdnaW\n      5zQGhvYmJpdG9uLmV4YW1wbGUiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In\n      0\",\n  \"encrypted_key\": \"laLxI0j-nLH-_BgLOXMozKxmy9gffy2gTdvqzfTihJ\n      Buuzxg0V7yk1WClnQePFvG2K-pvSlWc9BRIazDrn50RcRai__3TDON39\n      5H3c62tIouJJ4XaRvYHFjZTZ2GXfz8YAImcc91Tfk0WXC2F5Xbb71ClQ\n      1DDH151tlpH77f2ff7xiSxh9oSewYrcGTSLUeeCt36r1Kt3OSj7EyBQX\n      oZlN7IxbyhMAfgIe7Mv1rOTOI5I8NQqeXXW8VlzNmoxaGMny3YnGir5W\n      f6Qt2nBq4qDaPdnaAuuGUGEecelIO1wx1BpyIfgvfjOhMBs9M8XL223F\n      g47xlGsMXdfuY-4jaqVw\",\n  \"iv\": \"bbd5sTkYwhAIqfHsx8DayA\",\n  \"ciphertext\": \"0fys_TY_na7f8dwSfXLiYdHaA2DxUjD67ieF7fcVbIR62\n      JhJvGZ4_FNVSiGc_raa0HnLQ6s1P2sv3Xzl1p1l_o5wR_RsSzrS8Z-wn\n      I3Jvo0mkpEEnlDmZvDu_k8OWzJv7eZVEqiWKdyVzFhPpiyQU28GLOpRc\n      2VbVbK4dQKPdNTjPPEmRqcaGeTWZVyeSUvf5k59yJZxRuSvWFf6KrNtm\n      RdZ8R4mDOjHSrM_s8uwIFcqt4r5GX8TKaI0zT5CbL5Qlw3sRc7u_hg0y\n      KVOiRytEAEs3vZkcfLkP6nbXdC_PkMdNS-ohP78T2O6_7uInMGhFeX4c\n      tHG7VelHGiT93JfWDEQi5_V9UN1rhXNrYu-0fVMkZAKX3VWi7lzA6BP4\n      30m\",\n  \"tag\": \"kvKuFBXHe5mQr4lqgobAUg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 83: Flattened JWE JSON Serialization",
      "zh-CHS": "图83：扁平化JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.2. Key Encryption Using RSA-OAEP with AES-GCM",
      "section_title": true,
      "zh-CHS": "5.2. 使用RSA-OAEP和AES-GCM进行密钥加密"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using the \"RSA-OAEP\" (RSAES-OAEP) key encryption algorithm and the \"A256GCM\" (AES-GCM) content encryption algorithm.",
      "zh-CHS": "此示例演示了使用“RSA-OAEP”（RSAES-OAEP）密钥加密算法和“A256GCM”（AES-GCM）内容加密算法加密内容。"
    },
    {
      "indent": 3,
      "text": "Note that RSAES-OAEP uses random data to generate the ciphertext; it might not be possible to exactly replicate the results in this section.",
      "zh-CHS": "注意，RSAES-OAEP使用随机数据生成密文；可能无法准确复制本节中的结果。"
    },
    {
      "indent": 3,
      "text": "Note that only the RSA public key is necessary to perform the encryption. However, the example includes the RSA private key to allow readers to validate the output.",
      "zh-CHS": "请注意，执行加密只需要RSA公钥。但是，该示例包含RSA私钥，以允许读卡器验证输出。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.2.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.2.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the Plaintext from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的纯文本。"
    },
    {
      "indent": 3,
      "text": "o RSA public key; this example uses the key from Figure 84.",
      "zh-CHS": "o RSA公钥；此示例使用图84中的键。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"RSA-OAEP\".",
      "zh-CHS": "o “RSA-OAEP”的“alg”参数。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A256GCM\".",
      "zh-CHS": "o “A256GCM”的“enc”参数。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"RSA\",\n  \"kid\": \"samwise.gamgee@hobbiton.example\",\n  \"use\": \"enc\",\n  \"n\": \"wbdxI55VaanZXPY29Lg5hdmv2XhvqAhoxUkanfzf2-5zVUxa6prHRr\n      I4pP1AhoqJRlZfYtWWd5mmHRG2pAHIlh0ySJ9wi0BioZBl1XP2e-C-Fy\n      XJGcTy0HdKQWlrfhTm42EW7Vv04r4gfao6uxjLGwfpGrZLarohiWCPnk\n      Nrg71S2CuNZSQBIPGjXfkmIy2tl_VWgGnL22GplyXj5YlBLdxXp3XeSt\n      sqo571utNfoUTU8E4qdzJ3U1DItoVkPGsMwlmmnJiwA7sXRItBCivR4M\n      5qnZtdw-7v4WuR4779ubDuJ5nalMv2S66-RPcnFAzWSKxtBDnFJJDGIU\n      e7Tzizjg1nms0Xq_yPub_UOlWn0ec85FCft1hACpWG8schrOBeNqHBOD\n      FskYpUc2LC5JA2TaPF2dA67dg1TTsC_FupfQ2kNGcE1LgprxKHcVWYQb\n      86B-HozjHZcqtauBzFNV5tbTuB-TpkcvJfNcFLlH3b8mb-H_ox35FjqB\n      SAjLKyoeqfKTpVjvXhd09knwgJf6VKq6UC418_TOljMVfFTWXUxlnfhO\n      OnzW6HSSzD1c9WrCuVzsUMv54szidQ9wf1cYWf3g5qFDxDQKis99gcDa\n      iCAwM3yEBIzuNeeCa5dartHDb1xEB_HcHSeYbghbMjGfasvKn0aZRsnT\n      yC0xhWBlsolZE\",\n  \"e\": \"AQAB\",\n  \"alg\": \"RSA-OAEP\",\n  \"d\": \"n7fzJc3_WG59VEOBTkayzuSMM780OJQuZjN_KbH8lOZG25ZoA7T4Bx\n      cc0xQn5oZE5uSCIwg91oCt0JvxPcpmqzaJZg1nirjcWZ-oBtVk7gCAWq\n      -B3qhfF3izlbkosrzjHajIcY33HBhsy4_WerrXg4MDNE4HYojy68TcxT\n      2LYQRxUOCf5TtJXvM8olexlSGtVnQnDRutxEUCwiewfmmrfveEogLx9E\n      A-KMgAjTiISXxqIXQhWUQX1G7v_mV_Hr2YuImYcNcHkRvp9E7ook0876\n      DhkO8v4UOZLwA1OlUX98mkoqwc58A_Y2lBYbVx1_s5lpPsEqbbH-nqIj\n      h1fL0gdNfihLxnclWtW7pCztLnImZAyeCWAG7ZIfv-Rn9fLIv9jZ6r7r\n      -MSH9sqbuziHN2grGjD_jfRluMHa0l84fFKl6bcqN1JWxPVhzNZo01yD\n      F-1LiQnqUYSepPf6X3a2SOdkqBRiquE6EvLuSYIDpJq3jDIsgoL8Mo1L\n      oomgiJxUwL_GWEOGu28gplyzm-9Q0U0nyhEf1uhSR8aJAQWAiFImWH5W\n      _IQT9I7-yrindr_2fWQ_i1UgMsGzA7aOGzZfPljRy6z-tY_KuBG00-28\n      S_aWvjyUc-Alp8AUyKjBZ-7CWH32fGWK48j1t-zomrwjL_mnhsPbGs0c\n      9WsWgRzI-K8gE\",\n  \"p\": \"7_2v3OQZzlPFcHyYfLABQ3XP85Es4hCdwCkbDeltaUXgVy9l9etKgh\n      vM4hRkOvbb01kYVuLFmxIkCDtpi-zLCYAdXKrAK3PtSbtzld_XZ9nlsY\n      a_QZWpXB_IrtFjVfdKUdMz94pHUhFGFj7nr6NNxfpiHSHWFE1zD_AC3m\n      Y46J961Y2LRnreVwAGNw53p07Db8yD_92pDa97vqcZOdgtybH9q6uma-",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "      RFNhO1AoiJhYZj69hjmMRXx-x56HO9cnXNbmzNSCFCKnQmn4GQLmRj9s\n      fbZRqL94bbtE4_e0Zrpo8RNo8vxRLqQNwIy85fc6BRgBJomt8QdQvIgP\n      gWCv5HoQ\",\n  \"q\": \"zqOHk1P6WN_rHuM7ZF1cXH0x6RuOHq67WuHiSknqQeefGBA9PWs6Zy\n      KQCO-O6mKXtcgE8_Q_hA2kMRcKOcvHil1hqMCNSXlflM7WPRPZu2qCDc\n      qssd_uMbP-DqYthH_EzwL9KnYoH7JQFxxmcv5An8oXUtTwk4knKjkIYG\n      RuUwfQTus0w1NfjFAyxOOiAQ37ussIcE6C6ZSsM3n41UlbJ7TCqewzVJ\n      aPJN5cxjySPZPD3Vp01a9YgAD6a3IIaKJdIxJS1ImnfPevSJQBE79-EX\n      e2kSwVgOzvt-gsmM29QQ8veHy4uAqca5dZzMs7hkkHtw1z0jHV90epQJ\n      JlXXnH8Q\",\n  \"dp\": \"19oDkBh1AXelMIxQFm2zZTqUhAzCIr4xNIGEPNoDt1jK83_FJA-xn\n      x5kA7-1erdHdms_Ef67HsONNv5A60JaR7w8LHnDiBGnjdaUmmuO8XAxQ\n      J_ia5mxjxNjS6E2yD44USo2JmHvzeeNczq25elqbTPLhUpGo1IZuG72F\n      ZQ5gTjXoTXC2-xtCDEUZfaUNh4IeAipfLugbpe0JAFlFfrTDAMUFpC3i\n      XjxqzbEanflwPvj6V9iDSgjj8SozSM0dLtxvu0LIeIQAeEgT_yXcrKGm\n      pKdSO08kLBx8VUjkbv_3Pn20Gyu2YEuwpFlM_H1NikuxJNKFGmnAq9Lc\n      nwwT0jvoQ\",\n  \"dq\": \"S6p59KrlmzGzaQYQM3o0XfHCGvfqHLYjCO557HYQf72O9kLMCfd_1\n      VBEqeD-1jjwELKDjck8kOBl5UvohK1oDfSP1DleAy-cnmL29DqWmhgwM\n      1ip0CCNmkmsmDSlqkUXDi6sAaZuntyukyflI-qSQ3C_BafPyFaKrt1fg\n      dyEwYa08pESKwwWisy7KnmoUvaJ3SaHmohFS78TJ25cfc10wZ9hQNOrI\n      ChZlkiOdFCtxDqdmCqNacnhgE3bZQjGp3n83ODSz9zwJcSUvODlXBPc2\n      AycH6Ci5yjbxt4Ppox_5pjm6xnQkiPgj01GpsUssMmBN7iHVsrE7N2iz\n      nBNCeOUIQ\",\n  \"qi\": \"FZhClBMywVVjnuUud-05qd5CYU0dK79akAgy9oX6RX6I3IIIPckCc\n      iRrokxglZn-omAY5CnCe4KdrnjFOT5YUZE7G_Pg44XgCXaarLQf4hl80\n      oPEf6-jJ5Iy6wPRx7G2e8qLxnh9cOdf-kRqgOS3F48Ucvw3ma5V6KGMw\n      QqWFeV31XtZ8l5cVI-I3NzBS7qltpUVgz2Ju021eyc7IlqgzR98qKONl\n      27DuEES0aK0WE97jnsyO27Yp88Wa2RiBrEocM89QZI1seJiGDizHRUP4\n      UZxw9zsXww46wy0P6f9grnYp7t8LkyDDk8eoI4KX6SNMNVcyVS9IWjlq\n      8EzqZEKIA\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 24,
      "text": "Figure 84: RSA 4096-Bit Key",
      "zh-CHS": "图84:RSA 4096位密钥"
    },
    {
      "indent": 3,
      "text": "(NOTE: While the key includes the private parameters, only the public parameters \"e\" and \"n\" are necessary for the encryption operation.)",
      "zh-CHS": "（注意：虽然密钥包括私有参数，但加密操作只需要公共参数“e”和“n”。）"
    },
    {
      "indent": 0,
      "text": "5.2.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.2.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 85.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥（CEK）；此示例使用图85中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 86.",
      "zh-CHS": "o 初始化向量；此示例使用图86中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "mYMfsggkTAm0TbvtlFh2hyoXnbEzJQjMxmgLN3d8xXA",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "Figure 85: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图85：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "-nBoKLH0YkLZPSI9",
      "zh-CHS": "-nBoKLH0YkLZPSI9"
    },
    {
      "indent": 12,
      "text": "Figure 86: Initialization Vector, base64url-encoded",
      "zh-CHS": "图86：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.2.3. Encrypting the Key",
      "section_title": true,
      "zh-CHS": "5.2.3. 加密密钥"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 85) with the RSA key (Figure 84) produces the following Encrypted Key:",
      "zh-CHS": "使用RSA密钥（图84）在CEK上执行密钥加密操作（图85）会生成以下加密密钥："
    },
    {
      "indent": 3,
      "text": "rT99rwrBTbTI7IJM8fU3Eli7226HEB7IchCxNuh7lCiud48LxeolRdtFF4nzQi beYOl5S_PJsAXZwSXtDePz9hk-BbtsTBqC2UsPOdwjC9NhNupNNu9uHIVftDyu cvI6hvALeZ6OGnhNV4v1zx2k7O1D89mAzfw-_kT3tkuorpDU-CpBENfIHX1Q58 -Aad3FzMuo3Fn9buEP2yXakLXYa15BUXQsupM4A1GD4_H4Bd7V3u9h8Gkg8Bpx KdUV9ScfJQTcYm6eJEBz3aSwIaK4T3-dwWpuBOhROQXBosJzS1asnuHtVMt2pK IIfux5BC6huIvmY7kzV7W7aIUrpYm_3H4zYvyMeq5pGqFmW2k8zpO878TRlZx7 pZfPYDSXZyS0CfKKkMozT_qiCwZTSz4duYnt8hS4Z9sGthXn9uDqd6wycMagnQ fOTs_lycTWmY-aqWVDKhjYNRf03NiwRtb5BE-tOdFwCASQj3uuAgPGrO2AWBe3 8UjQb0lvXn1SpyvYZ3WFc7WOJYaTa7A8DRn6MC6T-xDmMuxC0G7S2rscw5lQQU 06MvZTlFOt0UvfuKBa03cxA_nIBIhLMjY2kOTxQMmpDPTr6Cbo8aKaOnx6ASE5 Jx9paBpnNmOOKH35j_QlrQhDWUN6A2Gg8iFayJ69xDEdHAVCGRzN3woEI2ozDR s",
      "zh-CHS": "rT99rwrBTbTI7IJM8fU3Eli7226HEB7IchCxNuh7lCiud48LxeolRdtFF4nzQi beYOl5S_PJsAXZwSXtDePz9hk-BbtsTBqC2UsPOdwjC9NhNupNNu9uHIVftDyu cvI6hvALeZ6OGnhNV4v1zx2k7O1D89mAzfw-_kT3tkuorpDU-CpBENfIHX1Q58 -Aad3FzMuo3Fn9buEP2yXakLXYa15BUXQsupM4A1GD4_H4Bd7V3u9h8Gkg8Bpx KdUV9ScfJQTcYm6eJEBz3aSwIaK4T3-dwWpuBOhROQXBosJzS1asnuHtVMt2pK IIfux5BC6huIvmY7kzV7W7aIUrpYm_3H4zYvyMeq5pGqFmW2k8zpO878TRlZx7 pZfPYDSXZyS0CfKKkMozT_qiCwZTSz4duYnt8hS4Z9sGthXn9uDqd6wycMagnQ fOTs_lycTWmY-aqWVDKhjYNRf03NiwRtb5BE-tOdFwCASQj3uuAgPGrO2AWBe3 8UjQb0lvXn1SpyvYZ3WFc7WOJYaTa7A8DRn6MC6T-xDmMuxC0G7S2rscw5lQQU 06MvZTlFOt0UvfuKBa03cxA_nIBIhLMjY2kOTxQMmpDPTr6Cbo8aKaOnx6ASE5 Jx9paBpnNmOOKH35j_QlrQhDWUN6A2Gg8iFayJ69xDEdHAVCGRzN3woEI2ozDR stranslate error, please retry"
    },
    {
      "indent": 16,
      "text": "Figure 87: Encrypted Key, base64url-encoded",
      "zh-CHS": "图87：加密密钥，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.2.4. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.2.4. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the Plaintext:",
      "zh-CHS": "在加密明文之前生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 88, encoded using base64url [RFC4648] to produce Figure 89.",
      "zh-CHS": "o JWE保护头；本例使用图88中的标题，使用base64url[RFC4648]编码以生成图89。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RSA-OAEP\",\n  \"kid\": \"samwise.gamgee@hobbiton.example\",\n  \"enc\": \"A256GCM\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 88: JWE Protected Header JSON",
      "zh-CHS": "图88:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0EtT0FFUCIsImtpZCI6InNhbXdpc2UuZ2FtZ2VlQGhvYmJpdG\n9uLmV4YW1wbGUiLCJlbmMiOiJBMjU2R0NNIn0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 89: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图89:JWE保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 72) with the following:",
      "zh-CHS": "使用以下命令在明文上执行内容加密操作（图72）："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 85);",
      "zh-CHS": "o CEK（图85）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 86); and",
      "zh-CHS": "o 初始化向量（图86）；和"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 89) as authenticated data",
      "zh-CHS": "o JWE将头（图89）保护为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 90.",
      "zh-CHS": "o 图90中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 91.",
      "zh-CHS": "o 图91中的身份验证标记。"
    },
    {
      "indent": 3,
      "text": "o4k2cnGN8rSSw3IDo1YuySkqeS_t2m1GXklSgqBdpACm6UJuJowOHC5ytjqYgR\nL-I-soPlwqMUf4UgRWWeaOGNw6vGW-xyM01lTYxrXfVzIIaRdhYtEMRBvBWbEw\nP7ua1DRfvaOjgZv6Ifa3brcAM64d8p5lhhNcizPersuhw5f-pGYzseva-TUaL8\niWnctc-sSwy7SQmRkfhDjwbz0fz6kFovEgj64X1I5s7E6GLp5fnbYGLa1QUiML\n7Cc2GxgvI7zqWo0YIEc7aCflLG1-8BboVWFdZKLK9vNoycrYHumwzKluLWEbSV\nmaPpOslY2n525DxDfWaVFUfKQxMF56vn4B9QMpWAbnypNimbM8zVOw",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 90: Ciphertext, base64url-encoded",
      "zh-CHS": "图90：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "UCGiqJxhBI3IFVdPalHHvA",
      "zh-CHS": "UCGiqJxhBI3IFVdPalHHvA"
    },
    {
      "indent": 13,
      "text": "Figure 91: Authentication Tag, base64url-encoded",
      "zh-CHS": "图91：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.2.5. Output Results",
      "section_title": true,
      "zh-CHS": "5.2.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 89)",
      "zh-CHS": "o JWE受保护的标头（图89）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 87)",
      "zh-CHS": "o 加密密钥（图87）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 86)",
      "zh-CHS": "o 初始化向量（图86）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 90)",
      "zh-CHS": "o 密文（图90）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 91)",
      "zh-CHS": "o 身份验证标签（图91）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "zh-CHS": "使用JWE压缩序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0EtT0FFUCIsImtpZCI6InNhbXdpc2UuZ2FtZ2VlQGhvYmJpdG 9uLmV4YW1wbGUiLCJlbmMiOiJBMjU2R0NNIn0 . rT99rwrBTbTI7IJM8fU3Eli7226HEB7IchCxNuh7lCiud48LxeolRdtFF4nzQi beYOl5S_PJsAXZwSXtDePz9hk-BbtsTBqC2UsPOdwjC9NhNupNNu9uHIVftDyu cvI6hvALeZ6OGnhNV4v1zx2k7O1D89mAzfw-_kT3tkuorpDU-CpBENfIHX1Q58 -Aad3FzMuo3Fn9buEP2yXakLXYa15BUXQsupM4A1GD4_H4Bd7V3u9h8Gkg8Bpx KdUV9ScfJQTcYm6eJEBz3aSwIaK4T3-dwWpuBOhROQXBosJzS1asnuHtVMt2pK IIfux5BC6huIvmY7kzV7W7aIUrpYm_3H4zYvyMeq5pGqFmW2k8zpO878TRlZx7 pZfPYDSXZyS0CfKKkMozT_qiCwZTSz4duYnt8hS4Z9sGthXn9uDqd6wycMagnQ fOTs_lycTWmY-aqWVDKhjYNRf03NiwRtb5BE-tOdFwCASQj3uuAgPGrO2AWBe3 8UjQb0lvXn1SpyvYZ3WFc7WOJYaTa7A8DRn6MC6T-xDmMuxC0G7S2rscw5lQQU 06MvZTlFOt0UvfuKBa03cxA_nIBIhLMjY2kOTxQMmpDPTr6Cbo8aKaOnx6ASE5 Jx9paBpnNmOOKH35j_QlrQhDWUN6A2Gg8iFayJ69xDEdHAVCGRzN3woEI2ozDR s . -nBoKLH0YkLZPSI9 . o4k2cnGN8rSSw3IDo1YuySkqeS_t2m1GXklSgqBdpACm6UJuJowOHC5ytjqYgR L-I-soPlwqMUf4UgRWWeaOGNw6vGW-xyM01lTYxrXfVzIIaRdhYtEMRBvBWbEw P7ua1DRfvaOjgZv6Ifa3brcAM64d8p5lhhNcizPersuhw5f-pGYzseva-TUaL8 iWnctc-sSwy7SQmRkfhDjwbz0fz6kFovEgj64X1I5s7E6GLp5fnbYGLa1QUiML 7Cc2GxgvI7zqWo0YIEc7aCflLG1-8BboVWFdZKLK9vNoycrYHumwzKluLWEbSV maPpOslY2n525DxDfWaVFUfKQxMF56vn4B9QMpWAbnypNimbM8zVOw . UCGiqJxhBI3IFVdPalHHvA",
      "zh-CHS": "EYJHBGCIOIJUSU0ETT0FFUCISIMTPZCI6INHbxDPC2UUZ2FTZ2VLQGHVYMJPDG 9ULMV4YW1WBGuillCJLBMMIJBMJU2R0NNIN0。RT99RWRBTBTI7IJM8FU3ELI7226HEB7ICXNUH7LCIUD48LXeolRDTFF4NZQI beYOl5S PJSAXWSXTDEPZ9HK-BBTSTBQC2USPODWJC9NHNUPNU9UHIVFTDYU CVI6HvalenV4ZX2K7O1D89MAZFWW-KTKOURPDU-CPBENF1Q58-AAD3FZMUO3FN9FN9FN9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9N9IIFUX5BC6HUIVMY7KZV7W7AIURPYU 3H4zYvyMeq5pGqFmW2k8zpO878TRlZx7 PZFPYDSZYS0CFKKMKMZZZKKMZKKMZKKKMZZKKKKMZKKMZZKKKKMZKKKMZKKKMZKKKMZKKKKKMZKKKKKKMZKKKKKKKKMZKKKKKKKMZZKKKKKKKKKMZZKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKMZZZZZZZZZZZZZKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKJX9PABPNMOOKH35Jqlrqhdwun6A2GG8IFAYJ69XDEDHAVCGRZN3WOEI2OZDRS-nBoKLH0YkLZPSI9。O4K2NGN8RSSW3IDO1YUYSKQE6UJJQYGR L-I-SOPLWQMUF4UGRWW0GNW6VGW-XYM01LTYXRXFVZIarDHYTEMRBVBWBW P7UA1RFVAOJGZV6IFA3BRCAM64D8P5LHNCIZPERSUH5F-pGYzseva-TUaL8 iWnctc-SSWY7SQMRJW0FZZKF6KF6KF6KF6KF7B7L7KF7KF7B7LKF7LK7KF7LK7KF7LKZ7KF7LK7Z7K7K7K7KF7LKF7LKF7Z7Z7K7Z7K7Z7KF7LKF7Z7Z7Z7K7K7K7K7K7K7MAPPOSLY2N525DXDFWAVFUFKQXMF56VN4B9QMPWABNEYPNIMBM8ZVOW。UCGiqJxhBI3IFVdPalHHvA"
    },
    {
      "indent": 19,
      "text": "Figure 92: JWE Compact Serialization",
      "zh-CHS": "图92:JWE压缩序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"rT99rwrBTbTI7IJM8fU3Eli7226HEB7IchCxNu\n          h7lCiud48LxeolRdtFF4nzQibeYOl5S_PJsAXZwSXtDePz9hk-Bb\n          tsTBqC2UsPOdwjC9NhNupNNu9uHIVftDyucvI6hvALeZ6OGnhNV4\n          v1zx2k7O1D89mAzfw-_kT3tkuorpDU-CpBENfIHX1Q58-Aad3FzM\n          uo3Fn9buEP2yXakLXYa15BUXQsupM4A1GD4_H4Bd7V3u9h8Gkg8B\n          pxKdUV9ScfJQTcYm6eJEBz3aSwIaK4T3-dwWpuBOhROQXBosJzS1\n          asnuHtVMt2pKIIfux5BC6huIvmY7kzV7W7aIUrpYm_3H4zYvyMeq\n          5pGqFmW2k8zpO878TRlZx7pZfPYDSXZyS0CfKKkMozT_qiCwZTSz\n          4duYnt8hS4Z9sGthXn9uDqd6wycMagnQfOTs_lycTWmY-aqWVDKh\n          jYNRf03NiwRtb5BE-tOdFwCASQj3uuAgPGrO2AWBe38UjQb0lvXn\n          1SpyvYZ3WFc7WOJYaTa7A8DRn6MC6T-xDmMuxC0G7S2rscw5lQQU\n          06MvZTlFOt0UvfuKBa03cxA_nIBIhLMjY2kOTxQMmpDPTr6Cbo8a\n          KaOnx6ASE5Jx9paBpnNmOOKH35j_QlrQhDWUN6A2Gg8iFayJ69xD\n          EdHAVCGRzN3woEI2ozDRs\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJSU0EtT0FFUCIsImtpZCI6InNhbXdpc2UuZ2\n      FtZ2VlQGhvYmJpdG9uLmV4YW1wbGUiLCJlbmMiOiJBMjU2R0NNIn0\",\n  \"iv\": \"-nBoKLH0YkLZPSI9\",\n  \"ciphertext\": \"o4k2cnGN8rSSw3IDo1YuySkqeS_t2m1GXklSgqBdpACm6\n      UJuJowOHC5ytjqYgRL-I-soPlwqMUf4UgRWWeaOGNw6vGW-xyM01lTYx\n      rXfVzIIaRdhYtEMRBvBWbEwP7ua1DRfvaOjgZv6Ifa3brcAM64d8p5lh\n      hNcizPersuhw5f-pGYzseva-TUaL8iWnctc-sSwy7SQmRkfhDjwbz0fz\n      6kFovEgj64X1I5s7E6GLp5fnbYGLa1QUiML7Cc2GxgvI7zqWo0YIEc7a\n      CflLG1-8BboVWFdZKLK9vNoycrYHumwzKluLWEbSVmaPpOslY2n525Dx\n      DfWaVFUfKQxMF56vn4B9QMpWAbnypNimbM8zVOw\",\n  \"tag\": \"UCGiqJxhBI3IFVdPalHHvA\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 93: General JWE JSON Serialization",
      "zh-CHS": "图93：通用JWEJSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "zh-CHS": "使用平坦JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJSU0EtT0FFUCIsImtpZCI6InNhbXdpc2UuZ2\n      FtZ2VlQGhvYmJpdG9uLmV4YW1wbGUiLCJlbmMiOiJBMjU2R0NNIn0\",\n  \"encrypted_key\": \"rT99rwrBTbTI7IJM8fU3Eli7226HEB7IchCxNuh7lC\n      iud48LxeolRdtFF4nzQibeYOl5S_PJsAXZwSXtDePz9hk-BbtsTBqC2U\n      sPOdwjC9NhNupNNu9uHIVftDyucvI6hvALeZ6OGnhNV4v1zx2k7O1D89\n      mAzfw-_kT3tkuorpDU-CpBENfIHX1Q58-Aad3FzMuo3Fn9buEP2yXakL\n      XYa15BUXQsupM4A1GD4_H4Bd7V3u9h8Gkg8BpxKdUV9ScfJQTcYm6eJE\n      Bz3aSwIaK4T3-dwWpuBOhROQXBosJzS1asnuHtVMt2pKIIfux5BC6huI\n      vmY7kzV7W7aIUrpYm_3H4zYvyMeq5pGqFmW2k8zpO878TRlZx7pZfPYD\n      SXZyS0CfKKkMozT_qiCwZTSz4duYnt8hS4Z9sGthXn9uDqd6wycMagnQ\n      fOTs_lycTWmY-aqWVDKhjYNRf03NiwRtb5BE-tOdFwCASQj3uuAgPGrO\n      2AWBe38UjQb0lvXn1SpyvYZ3WFc7WOJYaTa7A8DRn6MC6T-xDmMuxC0G\n      7S2rscw5lQQU06MvZTlFOt0UvfuKBa03cxA_nIBIhLMjY2kOTxQMmpDP\n      Tr6Cbo8aKaOnx6ASE5Jx9paBpnNmOOKH35j_QlrQhDWUN6A2Gg8iFayJ\n      69xDEdHAVCGRzN3woEI2ozDRs\",\n  \"iv\": \"-nBoKLH0YkLZPSI9\",\n  \"ciphertext\": \"o4k2cnGN8rSSw3IDo1YuySkqeS_t2m1GXklSgqBdpACm6\n      UJuJowOHC5ytjqYgRL-I-soPlwqMUf4UgRWWeaOGNw6vGW-xyM01lTYx\n      rXfVzIIaRdhYtEMRBvBWbEwP7ua1DRfvaOjgZv6Ifa3brcAM64d8p5lh\n      hNcizPersuhw5f-pGYzseva-TUaL8iWnctc-sSwy7SQmRkfhDjwbz0fz\n      6kFovEgj64X1I5s7E6GLp5fnbYGLa1QUiML7Cc2GxgvI7zqWo0YIEc7a\n      CflLG1-8BboVWFdZKLK9vNoycrYHumwzKluLWEbSVmaPpOslY2n525Dx\n      DfWaVFUfKQxMF56vn4B9QMpWAbnypNimbM8zVOw\",\n  \"tag\": \"UCGiqJxhBI3IFVdPalHHvA\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 94: Flattened JWE JSON Serialization",
      "zh-CHS": "图94：扁平化JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.3. Key Wrap Using PBES2-AES-KeyWrap with AES-CBC-HMAC-SHA2",
      "section_title": true,
      "zh-CHS": "5.3. 密钥封装使用PBES2 AES密钥封装和AES-CBC-HMAC-SHA2"
    },
    {
      "indent": 3,
      "text": "The example illustrates encrypting content using the \"PBES2-HS512+A256KW\" (PBES2 Password-based Encryption using HMAC-SHA-512 and AES-256-KeyWrap) key encryption algorithm with the \"A128CBC-HS256\" (AES-128-CBC-HMAC-SHA-256) content encryption algorithm.",
      "zh-CHS": "该示例说明了使用“PBES2-HS512+A256KW”（使用HMAC-SHA-512和AES-256-KeyWrap的PBES2基于密码的加密）密钥加密算法和“A128CBC-HS256”（AES-128-CBC-HMAC-SHA-256）内容加密算法对内容进行加密。"
    },
    {
      "indent": 3,
      "text": "A common use of password-based encryption is the import/export of keys. Therefore, this example uses a JWK Set for the Plaintext content instead of the Plaintext from Figure 72.",
      "zh-CHS": "基于密码的加密的一个常见用途是密钥的导入/导出。因此，本例对纯文本内容使用JWK集，而不是图72中的纯文本。"
    },
    {
      "indent": 3,
      "text": "Note that if password-based encryption is used for multiple recipients, it is expected that each recipient use different values for the PBES2 parameters \"p2s\" and \"p2c\".",
      "zh-CHS": "请注意，如果对多个收件人使用基于密码的加密，则预期每个收件人对PBES2参数“p2s”和“p2c”使用不同的值。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.3.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.3.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the Plaintext from Figure 95 (NOTE: All whitespace was added for readability).",
      "zh-CHS": "o 明文内容；此示例使用图95中的纯文本（注意：为了可读性，添加了所有空白）。"
    },
    {
      "indent": 3,
      "text": "o Password; this example uses the password from Figure 96 -- with the sequence \"\\xe2\\x80\\x93\" replaced with (U+2013 EN DASH).",
      "zh-CHS": "o 暗语本例使用图96中的密码——序列“\\xe2\\x80\\x93”替换为（U+2013 EN-DASH）。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"PBES2-HS512+A256KW\".",
      "zh-CHS": "o “PBES2-HS512+A256KW”的“alg”参数。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128CBC-HS256\".",
      "zh-CHS": "o “A128CBC-HS256”的“enc”参数。"
    },
    {
      "indent": 3,
      "text": "{\n  \"keys\": [\n    {\n      \"kty\": \"oct\",\n      \"kid\": \"77c7e2b8-6e13-45cf-8672-617b5b45243a\",\n      \"use\": \"enc\",\n      \"alg\": \"A128GCM\",\n      \"k\": \"XctOhJAkA-pD9Lh7ZgW_2A\"\n    },\n    {\n      \"kty\": \"oct\",\n      \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n      \"use\": \"enc\",\n      \"alg\": \"A128KW\",\n      \"k\": \"GZy6sIZ6wl9NJOKB-jnmVQ\"\n    },\n    {\n      \"kty\": \"oct\",\n      \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n      \"use\": \"enc\",\n      \"alg\": \"A256GCMKW\",\n      \"k\": \"qC57l_uxcm7Nm3K-ct4GFjx8tM1U8CZ0NLBvdQstiS8\"\n    }\n  ]\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 95: Plaintext Content",
      "zh-CHS": "图95：纯文本内容"
    },
    {
      "indent": 3,
      "text": "entrap_o\\xe2\\x80\\x93peter_long\\xe2\\x80\\x93credit_tun",
      "zh-CHS": "诱捕\\xe2\\x80\\x93peter\\u long\\xe2\\x80\\x93credit\\u tun"
    },
    {
      "indent": 28,
      "text": "Figure 96: Password",
      "zh-CHS": "图96：密码"
    },
    {
      "indent": 0,
      "text": "5.3.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.3.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 97.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥（CEK）；此示例使用图97中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 98.",
      "zh-CHS": "o 初始化向量；此示例使用图98中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "uwsjJXaBK407Qaf0_zpcpmr1Cs0CC50hIUEyGNEt3m0",
      "zh-CHS": "UWSJXABK407QAF0ZPCPMR1CS0CC50HIUEYGNET3M0"
    },
    {
      "indent": 11,
      "text": "Figure 97: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图97：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "VBiCzVHNoLiR3F4V82uoTQ",
      "zh-CHS": "VBiCzVHNoLiR3F4V82uoTQ"
    },
    {
      "indent": 12,
      "text": "Figure 98: Initialization Vector, base64url-encoded",
      "zh-CHS": "图98：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.3.3. Encrypting the Key",
      "section_title": true,
      "zh-CHS": "5.3.3. 加密密钥"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting the CEK:",
      "zh-CHS": "加密CEK之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o Salt input; this example uses the salt input from Figure 99.",
      "zh-CHS": "o 盐输入；此示例使用图99中的salt输入。"
    },
    {
      "indent": 3,
      "text": "o Iteration count; this example uses the iteration count 8192.",
      "zh-CHS": "o 迭代次数；本例使用迭代计数8192。"
    },
    {
      "indent": 3,
      "text": "8Q1SzinasR3xchYz6ZZcHA",
      "zh-CHS": "8Q1SzinasR3xchYz6ZZcHA"
    },
    {
      "indent": 17,
      "text": "Figure 99: Salt Input, base64url-encoded",
      "zh-CHS": "图99:Salt输入，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 97) with the following:",
      "zh-CHS": "在CEK上执行密钥加密操作（图97），方法如下："
    },
    {
      "indent": 3,
      "text": "o Password (Figure 96);",
      "zh-CHS": "o 密码（图96）；"
    },
    {
      "indent": 3,
      "text": "o Salt input (Figure 99), encoded as an octet string; and",
      "zh-CHS": "o Salt输入（图99），编码为八位字节字符串；和"
    },
    {
      "indent": 3,
      "text": "o Iteration count (8192)",
      "zh-CHS": "o 迭代计数（8192）"
    },
    {
      "indent": 3,
      "text": "produces the following Encrypted Key:",
      "zh-CHS": "生成以下加密密钥："
    },
    {
      "indent": 3,
      "text": "d3qNhUWfqheyPp4H8sjOWsDYajoej4c5Je6rlUtFPWdgtURtmeDV1g",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Figure 100: Encrypted Key, base64url-encoded",
      "zh-CHS": "图100：加密密钥，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.3.4. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.3.4. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "zh-CHS": "加密内容之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 101, encoded using base64url [RFC4648] to produce Figure 102.",
      "zh-CHS": "o JWE保护头；本例使用图101中的标题，使用base64url[RFC4648]编码以生成图102。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"PBES2-HS512+A256KW\",\n  \"p2s\": \"8Q1SzinasR3xchYz6ZZcHA\",\n  \"p2c\": 8192,\n  \"cty\": \"jwk-set+json\",\n  \"enc\": \"A128CBC-HS256\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 101: JWE Protected Header JSON",
      "zh-CHS": "图101:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQQkVTMi1IUzUxMitBMjU2S1ciLCJwMnMiOiI4UTFTemluYXNSM3 hjaFl6NlpaY0hBIiwicDJjIjo4MTkyLCJjdHkiOiJqd2stc2V0K2pzb24iLCJl bmMiOiJBMTI4Q0JDLUhTMjU2In0",
      "zh-CHS": "EYJHBGCIOIJQQKVTMI1UZUXMITBMJU1cjWMNMiI4utftemluyxNSM3 HJALF6NLPAY0HBiIWICDJJJJJJJJJJJJJJJKIOIJQD2STC2V0K2PZB24ILCJL BMijBMTi4Q0JDLUHTMJU2in0"
    },
    {
      "indent": 12,
      "text": "Figure 102: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图102:JWE保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 95) with the following:",
      "zh-CHS": "使用以下命令在明文上执行内容加密操作（图95）："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 97);",
      "zh-CHS": "o CEK（图97）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 98); and",
      "zh-CHS": "o 初始化向量（图98）；和"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 102) as authenticated data",
      "zh-CHS": "o JWE将头（图102）保护为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 103.",
      "zh-CHS": "o 图103中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 104.",
      "zh-CHS": "o 图104中的身份验证标签。"
    },
    {
      "indent": 3,
      "text": "23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2nsnGIX86vMXqIi6IR sfywCRFzLxEcZBRnTvG3nhzPk0GDD7FMyXhUHpDjEYCNA_XOmzg8yZR9oyjo6l TF6si4q9FZ2EhzgFQCLO_6h5EVg3vR75_hkBsnuoqoM3dwejXBtIodN84PeqMb 6asmas_dpSsz7H10fC5ni9xIz424givB1YLldF6exVmL93R3fOoOJbmk2GBQZL _SEGllv2cQsBgeprARsaQ7Bq99tT80coH8ItBjgV08AtzXFFsx9qKvC982KLKd PQMTlVJKkqtV4Ru5LEVpBZXBnZrtViSOgyg6AiuwaS-rCrcD_ePOGSuxvgtrok AKYPqmXUeRdjFJwafkYEkiuDCV9vWGAi1DH2xTafhJwcmywIyzi4BqRpmdn_N-zl5tuJYyuvKhjKv6ihbsV_k1hJGPGAxJ6wUpmwC4PTQ2izEm0TuSE8oMKdTw8V 3kobXZ77ulMwDs4p",
      "zh-CHS": "23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2nsnGIX86vMXqIi6IR SFYWCRFZLXECZCZBRNTVG3NHZPK0GDD7FMYXHUHPDJEYCNA_XOmzg8yZR9oyjo6l TF6Si4Q9FZ2HZGFCLO\u00066h5EVg3vR75(HKBSNUOQOQ3; 6; ZTIODN842PEQMB 6;(齌6;齌Z7; 7; Fc5Ni9; ZZZ424; 4; 4; 4; Z4; D7; YLDF6; 6; ZL9; Z7B8K8K8K8K8K8K8Kv8K8Kv8KPQMTLvKQTV4RU5LevPBZxBnzRtVisOg6IUWAS-RCD(ePOGSuxvgtrok AkypqmXuerdJFjWafkyekiudCv9VwGai1d2tAFHjWCMyWiyzi4BqrPmdn(N-zl5tuJYyuvKhjKv6ihbsV)K1HjGPGAxJ6WupmWwWC4pTq2t0t0t0t0t0t0t0t8OmW0t8V 3OBX77ULMWDS4p"
    },
    {
      "indent": 17,
      "text": "Figure 103: Ciphertext, base64url-encoded",
      "zh-CHS": "图103：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "0HlwodAhOCILG5SQ2LQ9dg",
      "zh-CHS": "0HlwodAhOCILG5SQ2LQ9dg"
    },
    {
      "indent": 13,
      "text": "Figure 104: Authentication Tag, base64url-encoded",
      "zh-CHS": "图104：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.3.5. Output Results",
      "section_title": true,
      "zh-CHS": "5.3.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 102)",
      "zh-CHS": "o JWE保护头（图102）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 100)",
      "zh-CHS": "o 加密密钥（图100）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 98)",
      "zh-CHS": "o 初始化向量（图98）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 103)",
      "zh-CHS": "o 密文（图103）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 104)",
      "zh-CHS": "o 身份验证标签（图104）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "zh-CHS": "使用JWE压缩序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQQkVTMi1IUzUxMitBMjU2S1ciLCJwMnMiOiI4UTFTemluYXNSM3 hjaFl6NlpaY0hBIiwicDJjIjo4MTkyLCJjdHkiOiJqd2stc2V0K2pzb24iLCJl bmMiOiJBMTI4Q0JDLUhTMjU2In0 . d3qNhUWfqheyPp4H8sjOWsDYajoej4c5Je6rlUtFPWdgtURtmeDV1g . VBiCzVHNoLiR3F4V82uoTQ . 23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2nsnGIX86vMXqIi6IR sfywCRFzLxEcZBRnTvG3nhzPk0GDD7FMyXhUHpDjEYCNA_XOmzg8yZR9oyjo6l TF6si4q9FZ2EhzgFQCLO_6h5EVg3vR75_hkBsnuoqoM3dwejXBtIodN84PeqMb 6asmas_dpSsz7H10fC5ni9xIz424givB1YLldF6exVmL93R3fOoOJbmk2GBQZL _SEGllv2cQsBgeprARsaQ7Bq99tT80coH8ItBjgV08AtzXFFsx9qKvC982KLKd PQMTlVJKkqtV4Ru5LEVpBZXBnZrtViSOgyg6AiuwaS-rCrcD_ePOGSuxvgtrok AKYPqmXUeRdjFJwafkYEkiuDCV9vWGAi1DH2xTafhJwcmywIyzi4BqRpmdn_N-zl5tuJYyuvKhjKv6ihbsV_k1hJGPGAxJ6wUpmwC4PTQ2izEm0TuSE8oMKdTw8V 3kobXZ77ulMwDs4p . 0HlwodAhOCILG5SQ2LQ9dg",
      "zh-CHS": "EYJHBGCIOIJQQKVTMI1UZUXMITBMJU1cjWMNMiI4UTFTEMLUYXNSM3 HJALF6NLPAY0HBiIWICDJJJJJJJJJJJJJJJKIOIJQD2STC2V0K2PZB24ILCJL BMijBMTi4Q0JDLUHTMJU2IN0。d3qNhUWfqheyPp4H8sjOWsDYajoej4c5Je6rlUtFPWdgtURtmeDV1g。VBiCzVHNoLiR3F4V82uoTQ。23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2nsnGIX86vMXqIi6IR SFYWCRFZLXECZCZBRNTVG3NHZPK0GDD7FMYXHUHPDJEYCNA_XOmzg8yZR9oyjo6l TF6Si4Q9FZ2HZGFCLO\u00066h5EVg3vR75(HKBSNUOQOQ3; 6; ZTIODN842PEQMB 6;(齌6;齌Z7; 7; Fc5Ni9; ZZZ424; 4; 4; 4; Z4; D7; YLDF6; 6; ZL9; Z7B8K8K8K8K8K8K8Kv8K8Kv8KPQMTLvKQTV4RU5LevPBZxBNZrTvisogyG6IUWAS-RCDāePOGSuxvgtrok AkypqmXuerdJFjWafkyekiudCv9VwGai1d2tAFHjWCMyWiyzi4BqrPmdnāN-ZL5TujyUvKhJKv6IHBSVākHjGPGaxJ6WupmWwWwWwC4pTq2t0t8V使用量为3OBxZ77ULMWDS4P。0HlwodAhOCILG5SQ2LQ9dg"
    },
    {
      "indent": 19,
      "text": "Figure 105: JWE Compact Serialization",
      "zh-CHS": "图105:JWE压缩序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"d3qNhUWfqheyPp4H8sjOWsDYajoej4c5Je6rlU\n          tFPWdgtURtmeDV1g\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJQQkVTMi1IUzUxMitBMjU2S1ciLCJwMnMiOi\n      I4UTFTemluYXNSM3hjaFl6NlpaY0hBIiwicDJjIjo4MTkyLCJjdHkiOi\n      Jqd2stc2V0K2pzb24iLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0\",\n  \"iv\": \"VBiCzVHNoLiR3F4V82uoTQ\",\n  \"ciphertext\": \"23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2\n      nsnGIX86vMXqIi6IRsfywCRFzLxEcZBRnTvG3nhzPk0GDD7FMyXhUHpD\n      jEYCNA_XOmzg8yZR9oyjo6lTF6si4q9FZ2EhzgFQCLO_6h5EVg3vR75_\n      hkBsnuoqoM3dwejXBtIodN84PeqMb6asmas_dpSsz7H10fC5ni9xIz42\n      4givB1YLldF6exVmL93R3fOoOJbmk2GBQZL_SEGllv2cQsBgeprARsaQ\n      7Bq99tT80coH8ItBjgV08AtzXFFsx9qKvC982KLKdPQMTlVJKkqtV4Ru\n      5LEVpBZXBnZrtViSOgyg6AiuwaS-rCrcD_ePOGSuxvgtrokAKYPqmXUe\n      RdjFJwafkYEkiuDCV9vWGAi1DH2xTafhJwcmywIyzi4BqRpmdn_N-zl5\n      tuJYyuvKhjKv6ihbsV_k1hJGPGAxJ6wUpmwC4PTQ2izEm0TuSE8oMKdT\n      w8V3kobXZ77ulMwDs4p\",\n  \"tag\": \"0HlwodAhOCILG5SQ2LQ9dg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 106: General JWE JSON Serialization",
      "zh-CHS": "图106：通用JWE JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "zh-CHS": "使用平坦JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJQQkVTMi1IUzUxMitBMjU2S1ciLCJwMnMiOi\n      I4UTFTemluYXNSM3hjaFl6NlpaY0hBIiwicDJjIjo4MTkyLCJjdHkiOi\n      Jqd2stc2V0K2pzb24iLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0\",\n  \"encrypted_key\": \"d3qNhUWfqheyPp4H8sjOWsDYajoej4c5Je6rlUtFPW\n      dgtURtmeDV1g\",\n  \"iv\": \"VBiCzVHNoLiR3F4V82uoTQ\",\n  \"ciphertext\": \"23i-Tb1AV4n0WKVSSgcQrdg6GRqsUKxjruHXYsTHAJLZ2\n      nsnGIX86vMXqIi6IRsfywCRFzLxEcZBRnTvG3nhzPk0GDD7FMyXhUHpD\n      jEYCNA_XOmzg8yZR9oyjo6lTF6si4q9FZ2EhzgFQCLO_6h5EVg3vR75_\n      hkBsnuoqoM3dwejXBtIodN84PeqMb6asmas_dpSsz7H10fC5ni9xIz42\n      4givB1YLldF6exVmL93R3fOoOJbmk2GBQZL_SEGllv2cQsBgeprARsaQ\n      7Bq99tT80coH8ItBjgV08AtzXFFsx9qKvC982KLKdPQMTlVJKkqtV4Ru\n      5LEVpBZXBnZrtViSOgyg6AiuwaS-rCrcD_ePOGSuxvgtrokAKYPqmXUe\n      RdjFJwafkYEkiuDCV9vWGAi1DH2xTafhJwcmywIyzi4BqRpmdn_N-zl5\n      tuJYyuvKhjKv6ihbsV_k1hJGPGAxJ6wUpmwC4PTQ2izEm0TuSE8oMKdT\n      w8V3kobXZ77ulMwDs4p\",\n  \"tag\": \"0HlwodAhOCILG5SQ2LQ9dg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Figure 107: Flattened JWE JSON Serialization",
      "zh-CHS": "图107：扁平化JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.4. Key Agreement with Key Wrapping Using ECDH-ES and AES-KeyWrap with AES-GCM",
      "zh-CHS": "5.4. 使用ECDH-ES进行密钥封装的密钥协议和使用AES-GCM进行AES密钥封装的密钥协议"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using the \"ECDH-ES+A128KW\" (Elliptic Curve Diffie-Hellman Ephemeral-Static with AES-128-KeyWrap) key encryption algorithm and the \"A128GCM\" (AES-GCM) content encryption algorithm.",
      "zh-CHS": "此示例说明了使用“ECDH-ES+A128KW”（椭圆曲线Diffie-Hellman瞬时静态与AES-128-KeyWrap）密钥加密算法和“A128GCM”（AES-GCM）内容加密算法加密内容。"
    },
    {
      "indent": 3,
      "text": "Note that only the EC public key is necessary to perform the key agreement. However, the example includes the EC private key to allow readers to validate the output.",
      "zh-CHS": "请注意，执行密钥协议只需要EC公钥。但是，该示例包括EC私钥，以允许读卡器验证输出。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.4.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.4.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的内容。"
    },
    {
      "indent": 3,
      "text": "o EC public key; this example uses the public key from Figure 108.",
      "zh-CHS": "o EC公钥；此示例使用图108中的公钥。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"ECDH-ES+A128KW\".",
      "zh-CHS": "o “ECDH-ES+A128KW”的“alg”参数。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128GCM\".",
      "zh-CHS": "o “A128GCM”的“enc”参数。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"kid\": \"peregrin.took@tuckborough.example\",\n  \"use\": \"enc\",\n  \"crv\": \"P-384\",\n  \"x\": \"YU4rRUzdmVqmRtWOs2OpDE_T5fsNIodcG8G5FWPrTPMyxpzsSOGaQL\n      pe2FpxBmu2\",\n  \"y\": \"A8-yxCHxkfBz3hKZfI1jUYMjUhsEveZ9THuwFjH2sCNdtksRJU7D5-\n      SkgaFL1ETP\",\n  \"d\": \"iTx2pk7wW-GqJkHcEkFQb2EFyYcO7RugmaW3mRrQVAOUiPommT0Idn\n      YK2xDlZh-j\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 108: Elliptic Curve P-384 Key, in JWK Format",
      "zh-CHS": "图108：椭圆曲线P-384密钥，JWK格式"
    },
    {
      "indent": 3,
      "text": "(NOTE: While the key includes the private parameters, only the public parameters \"crv\", \"x\", and \"y\" are necessary for the encryption operation.)",
      "zh-CHS": "（注意：虽然密钥包括私有参数，但加密操作只需要公共参数“crv”、“x”和“y”。）"
    },
    {
      "indent": 0,
      "text": "5.4.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.4.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 109.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥（CEK）；此示例使用图109中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 110.",
      "zh-CHS": "o 初始化向量；此示例使用图110中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "Nou2ueKlP70ZXDbq9UrRwg",
      "zh-CHS": "Nou2ueKlP70ZXDbq9UrRwg"
    },
    {
      "indent": 11,
      "text": "Figure 109: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图109：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "mH-G2zVqgztUtnW_",
      "zh-CHS": "mH-G2zVqgztUtnW_"
    },
    {
      "indent": 11,
      "text": "Figure 110: Initialization Vector, base64url-encoded",
      "zh-CHS": "图110：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.4.3. Encrypting the Key",
      "section_title": true,
      "zh-CHS": "5.4.3. 加密密钥"
    },
    {
      "indent": 3,
      "text": "To encrypt the Content Encryption Key, the following is generated:",
      "zh-CHS": "要加密内容加密密钥，将生成以下内容："
    },
    {
      "indent": 3,
      "text": "o Ephemeral EC private key on the same curve as the EC public key; this example uses the private key from Figure 111.",
      "zh-CHS": "o 与EC公钥在同一曲线上的短暂EC私钥；此示例使用图111中的私钥。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"crv\": \"P-384\",\n  \"x\": \"uBo4kHPw6kbjx5l0xowrd_oYzBmaz-GKFZu4xAFFkbYiWgutEK6iuE\n      DsQ6wNdNg3\",\n  \"y\": \"sp3p5SGhZVC2faXumI-e9JU2Mo8KpoYrFDr5yPNVtW4PgEwZOyQTA-\n      JdaY8tb7E0\",\n  \"d\": \"D5H4Y_5PSKZvhfVFbcCYJOtcGZygRgfZkpsBr59Icmmhe9sW6nkZ8W\n      fwhinUfWJg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "Figure 111: Ephemeral Elliptic Curve P-384 Key, in JWK Format",
      "zh-CHS": "图111:JWK格式的短暂椭圆曲线P-384密钥"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 109) with the following:",
      "zh-CHS": "在CEK上执行密钥加密操作（图109），方法如下："
    },
    {
      "indent": 3,
      "text": "o The static Elliptic Curve public key (Figure 108); and",
      "zh-CHS": "o 静态椭圆曲线公钥（图108）；和"
    },
    {
      "indent": 3,
      "text": "o The ephemeral Elliptic Curve private key (Figure 111)",
      "zh-CHS": "o 短暂椭圆曲线私钥（图111）"
    },
    {
      "indent": 3,
      "text": "produces the following JWE Encrypted Key:",
      "zh-CHS": "生成以下JWE加密密钥："
    },
    {
      "indent": 3,
      "text": "0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2",
      "zh-CHS": "0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2"
    },
    {
      "indent": 15,
      "text": "Figure 112: Encrypted Key, base64url-encoded",
      "zh-CHS": "图112：加密密钥，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.4.4. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.4.4. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "zh-CHS": "加密内容之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 113, encoded to base64url [RFC4648] as Figure 114.",
      "zh-CHS": "o JWE保护头；该示例使用图113中的标题，编码为base64url[RFC4648]，如图114所示。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"ECDH-ES+A128KW\",\n  \"kid\": \"peregrin.took@tuckborough.example\",\n  \"epk\": {\n    \"kty\": \"EC\",\n    \"crv\": \"P-384\",\n    \"x\": \"uBo4kHPw6kbjx5l0xowrd_oYzBmaz-GKFZu4xAFFkbYiWgutEK6i\n        uEDsQ6wNdNg3\",\n    \"y\": \"sp3p5SGhZVC2faXumI-e9JU2Mo8KpoYrFDr5yPNVtW4PgEwZOyQT\n        A-JdaY8tb7E0\"\n  },\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 113: JWE Protected Header JSON",
      "zh-CHS": "图113:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFQ0RILUVTK0ExMjhLVyIsImtpZCI6InBlcmVncmluLnRvb2tAdH\nVja2Jvcm91Z2guZXhhbXBsZSIsImVwayI6eyJrdHkiOiJFQyIsImNydiI6IlAt\nMzg0IiwieCI6InVCbzRrSFB3Nmtiang1bDB4b3dyZF9vWXpCbWF6LUdLRlp1NH\nhBRkZrYllpV2d1dEVLNml1RURzUTZ3TmROZzMiLCJ5Ijoic3AzcDVTR2haVkMy\nZmFYdW1JLWU5SlUyTW84S3BvWXJGRHI1eVBOVnRXNFBnRXdaT3lRVEEtSmRhWT\nh0YjdFMCJ9LCJlbmMiOiJBMTI4R0NNIn0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 114: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图114:JWE保护头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation on the Plaintext (Figure 72) using the following:",
      "zh-CHS": "使用以下命令对明文（图72）执行内容加密操作："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 109);",
      "zh-CHS": "o CEK（图109）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 110); and",
      "zh-CHS": "o 初始化向量（图110）；和"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 114) as authenticated data",
      "zh-CHS": "o JWE将头（图114）保护为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 115.",
      "zh-CHS": "o 图115中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 116.",
      "zh-CHS": "o 图116中的身份验证标签。"
    },
    {
      "indent": 3,
      "text": "tkZuOO9h95OgHJmkkrfLBisku8rGf6nzVxhRM3sVOhXgz5NJ76oID7lpnAi_cP\nWJRCjSpAaUZ5dOR3Spy7QuEkmKx8-3RCMhSYMzsXaEwDdXta9Mn5B7cCBoJKB0\nIgEnj_qfo1hIi-uEkUpOZ8aLTZGHfpl05jMwbKkTe2yK3mjF6SBAsgicQDVCkc\nY9BLluzx1RmC3ORXaM0JaHPB93YcdSDGgpgBWMVrNU1ErkjcMqMoT_wtCex3w0\n3XdLkjXIuEr2hWgeP-nkUZTPU9EoGSPj6fAS-bSz87RCPrxZdj_iVyC6QWcqAu\n07WNhjzJEPc4jVntRJ6K53NgPQ5p99l3Z408OUqj4ioYezbS6vTPlQ",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 115: Ciphertext, base64url-encoded",
      "zh-CHS": "图115：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "WuGzxmcreYjpHGJoa17EBg",
      "zh-CHS": "WuGzxmcreYjpHGJoa17EBg"
    },
    {
      "indent": 13,
      "text": "Figure 116: Authentication Tag, base64url-encoded",
      "zh-CHS": "图116：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.4.5. Output Results",
      "section_title": true,
      "zh-CHS": "5.4.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 114)",
      "zh-CHS": "o JWE保护头（图114）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 112)",
      "zh-CHS": "o 加密密钥（图112）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 110)",
      "zh-CHS": "o 初始化向量（图110）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 115)",
      "zh-CHS": "o 密文（图115）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 116)",
      "zh-CHS": "o 身份验证标签（图116）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "zh-CHS": "使用JWE压缩序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFQ0RILUVTK0ExMjhLVyIsImtpZCI6InBlcmVncmluLnRvb2tAdH Vja2Jvcm91Z2guZXhhbXBsZSIsImVwayI6eyJrdHkiOiJFQyIsImNydiI6IlAt Mzg0IiwieCI6InVCbzRrSFB3Nmtiang1bDB4b3dyZF9vWXpCbWF6LUdLRlp1NH hBRkZrYllpV2d1dEVLNml1RURzUTZ3TmROZzMiLCJ5Ijoic3AzcDVTR2haVkMy ZmFYdW1JLWU5SlUyTW84S3BvWXJGRHI1eVBOVnRXNFBnRXdaT3lRVEEtSmRhWT h0YjdFMCJ9LCJlbmMiOiJBMTI4R0NNIn0 . 0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2 . mH-G2zVqgztUtnW_ . tkZuOO9h95OgHJmkkrfLBisku8rGf6nzVxhRM3sVOhXgz5NJ76oID7lpnAi_cP WJRCjSpAaUZ5dOR3Spy7QuEkmKx8-3RCMhSYMzsXaEwDdXta9Mn5B7cCBoJKB0 IgEnj_qfo1hIi-uEkUpOZ8aLTZGHfpl05jMwbKkTe2yK3mjF6SBAsgicQDVCkc Y9BLluzx1RmC3ORXaM0JaHPB93YcdSDGgpgBWMVrNU1ErkjcMqMoT_wtCex3w0 3XdLkjXIuEr2hWgeP-nkUZTPU9EoGSPj6fAS-bSz87RCPrxZdj_iVyC6QWcqAu 07WNhjzJEPc4jVntRJ6K53NgPQ5p99l3Z408OUqj4ioYezbS6vTPlQ . WuGzxmcreYjpHGJoa17EBg",
      "zh-CHS": "Eyjhbgcioijfqijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijijjijijijijijijjjjijijijjijjijijijijijijijijjijijijijijijjjjjijjjjjjijijijjijijijijjjjijijijijjjjjijjjjjjjjijjjjjijijijjjijijijijijijijijijijjijj. 0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2。mH-G2zVqgztUtnW_。tkZuOO9h95OgHJmkkrfLBisku8rGf6nzVxhRM3sVOhXgz5NJ76oID7lpnAi徖cP WJRCJSPAUZ5DOR3PY7KMKKMKKKKX8-3RCMHSYMBZXAXAEWDXTA9Mn5B7CCBOJKB0 IGENJQO1HII-UEKUPZGHFPL05JMWKKTEKKTE2YK3MJF6SBASGICQDvCKC Y9BLLUZX1RMC3ORXAM0JAHPB93DZDSDGGPGPWWWWWnUKWWWWWWJJJJJJJJ0K9W9WKKKKKKKKKKKKKKKKKKKKKKKKKKMKKKKKKKKKKJJJJJJ0YY07WNhjzJEPc4jVntRJ6K53NgPQ5p99l3Z408OUqj4ioYezbS6vTPlQ。WuGzxmcreYjpHGJoa17EBg"
    },
    {
      "indent": 19,
      "text": "Figure 117: JWE Compact Serialization",
      "zh-CHS": "图117:JWE压缩序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJFQ0RILUVTK0ExMjhLVyIsImtpZCI6InBlcm\n      VncmluLnRvb2tAdHVja2Jvcm91Z2guZXhhbXBsZSIsImVwayI6eyJrdH\n      kiOiJFQyIsImNydiI6IlAtMzg0IiwieCI6InVCbzRrSFB3Nmtiang1bD\n      B4b3dyZF9vWXpCbWF6LUdLRlp1NHhBRkZrYllpV2d1dEVLNml1RURzUT\n      Z3TmROZzMiLCJ5Ijoic3AzcDVTR2haVkMyZmFYdW1JLWU5SlUyTW84S3\n      BvWXJGRHI1eVBOVnRXNFBnRXdaT3lRVEEtSmRhWTh0YjdFMCJ9LCJlbm\n      MiOiJBMTI4R0NNIn0\",\n  \"iv\": \"mH-G2zVqgztUtnW_\",\n  \"ciphertext\": \"tkZuOO9h95OgHJmkkrfLBisku8rGf6nzVxhRM3sVOhXgz\n      5NJ76oID7lpnAi_cPWJRCjSpAaUZ5dOR3Spy7QuEkmKx8-3RCMhSYMzs\n      XaEwDdXta9Mn5B7cCBoJKB0IgEnj_qfo1hIi-uEkUpOZ8aLTZGHfpl05\n      jMwbKkTe2yK3mjF6SBAsgicQDVCkcY9BLluzx1RmC3ORXaM0JaHPB93Y\n      cdSDGgpgBWMVrNU1ErkjcMqMoT_wtCex3w03XdLkjXIuEr2hWgeP-nkU\n      ZTPU9EoGSPj6fAS-bSz87RCPrxZdj_iVyC6QWcqAu07WNhjzJEPc4jVn\n      tRJ6K53NgPQ5p99l3Z408OUqj4ioYezbS6vTPlQ\",\n  \"tag\": \"WuGzxmcreYjpHGJoa17EBg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 118: General JWE JSON Serialization",
      "zh-CHS": "图118：通用JWE JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "zh-CHS": "使用平坦JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJFQ0RILUVTK0ExMjhLVyIsImtpZCI6InBlcm\n      VncmluLnRvb2tAdHVja2Jvcm91Z2guZXhhbXBsZSIsImVwayI6eyJrdH\n      kiOiJFQyIsImNydiI6IlAtMzg0IiwieCI6InVCbzRrSFB3Nmtiang1bD\n      B4b3dyZF9vWXpCbWF6LUdLRlp1NHhBRkZrYllpV2d1dEVLNml1RURzUT\n      Z3TmROZzMiLCJ5Ijoic3AzcDVTR2haVkMyZmFYdW1JLWU5SlUyTW84S3\n      BvWXJGRHI1eVBOVnRXNFBnRXdaT3lRVEEtSmRhWTh0YjdFMCJ9LCJlbm\n      MiOiJBMTI4R0NNIn0\",\n  \"encrypted_key\": \"0DJjBXri_kBcC46IkU5_Jk9BqaQeHdv2\",\n  \"iv\": \"mH-G2zVqgztUtnW_\",\n  \"ciphertext\": \"tkZuOO9h95OgHJmkkrfLBisku8rGf6nzVxhRM3sVOhXgz\n      5NJ76oID7lpnAi_cPWJRCjSpAaUZ5dOR3Spy7QuEkmKx8-3RCMhSYMzs\n      XaEwDdXta9Mn5B7cCBoJKB0IgEnj_qfo1hIi-uEkUpOZ8aLTZGHfpl05\n      jMwbKkTe2yK3mjF6SBAsgicQDVCkcY9BLluzx1RmC3ORXaM0JaHPB93Y\n      cdSDGgpgBWMVrNU1ErkjcMqMoT_wtCex3w03XdLkjXIuEr2hWgeP-nkU\n      ZTPU9EoGSPj6fAS-bSz87RCPrxZdj_iVyC6QWcqAu07WNhjzJEPc4jVn\n      tRJ6K53NgPQ5p99l3Z408OUqj4ioYezbS6vTPlQ\",\n  \"tag\": \"WuGzxmcreYjpHGJoa17EBg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Figure 119: Flattened JWE JSON Serialization",
      "zh-CHS": "图119：扁平化JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.5. Key Agreement Using ECDH-ES with AES-CBC-HMAC-SHA2",
      "section_title": true,
      "zh-CHS": "5.5. 使用ECDH-ES与AES-CBC-HMAC-SHA2的密钥协议"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using the \"ECDH-ES\" (Elliptic Curve Diffie-Hellman Ephemeral-Static) key agreement algorithm and the \"A128CBC-HS256\" (AES-128-CBC-HMAC-SHA-256) content encryption algorithm.",
      "zh-CHS": "此示例说明了使用“ECDH-ES”（椭圆曲线Diffie-Hellman瞬时静态）密钥协商算法和“A128CBC-HS256”（AES-128-CBC-HMAC-SHA-256）内容加密算法加密内容。"
    },
    {
      "indent": 3,
      "text": "Note that only the EC public key is necessary to perform the key agreement. However, the example includes the EC private key to allow readers to validate the output.",
      "zh-CHS": "请注意，执行密钥协议只需要EC公钥。但是，该示例包括EC私钥，以允许读卡器验证输出。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.5.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.5.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的内容。"
    },
    {
      "indent": 3,
      "text": "o EC public key; this example uses the public key from Figure 120.",
      "zh-CHS": "o EC公钥；此示例使用图120中的公钥。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"ECDH-ES\".",
      "zh-CHS": "o “ECDH-ES”的“alg”参数。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128CBC-HS256\".",
      "zh-CHS": "o “A128CBC-HS256”的“enc”参数。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"kid\": \"meriadoc.brandybuck@buckland.example\",\n  \"use\": \"enc\",\n  \"crv\": \"P-256\",\n  \"x\": \"Ze2loSV3wrroKUN_4zhwGhCqo3Xhu1td4QjeQ5wIVR0\",\n  \"y\": \"HlLtdXARY_f55A3fnzQbPcm6hgr34Mp8p-nuzQCE0Zw\",\n  \"d\": \"r_kHyZ-a06rmxM3yESK84r1otSg-aQcVStkRhA-iCM8\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 120: Elliptic Curve P-256 Key",
      "zh-CHS": "图120：椭圆曲线P-256密钥"
    },
    {
      "indent": 3,
      "text": "(NOTE: While the key includes the private parameters, only the public parameters \"crv\", \"x\", and \"y\" are necessary for the encryption operation.)",
      "zh-CHS": "（注意：虽然密钥包括私有参数，但加密操作只需要公共参数“crv”、“x”和“y”。）"
    },
    {
      "indent": 0,
      "text": "5.5.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.5.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 121.",
      "zh-CHS": "o 初始化向量；此示例使用图121中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "yc9N8v5sYyv3iGQT926IUg",
      "zh-CHS": "yc9N8v5sYyv3iGQT926IUg"
    },
    {
      "indent": 11,
      "text": "Figure 121: Initialization Vector, base64url-encoded",
      "zh-CHS": "图121：初始化向量，base64url编码"
    },
    {
      "indent": 3,
      "text": "NOTE: The Content Encryption Key (CEK) is not randomly generated; instead, it is determined using ECDH-ES key agreement.",
      "zh-CHS": "注意：内容加密密钥（CEK）不是随机生成的；而是使用ECDH-ES密钥协议确定。"
    },
    {
      "indent": 0,
      "text": "5.5.3. Key Agreement",
      "section_title": true,
      "zh-CHS": "5.5.3. 关键协议"
    },
    {
      "indent": 3,
      "text": "The following is generated to agree on a CEK:",
      "zh-CHS": "生成以下内容以就CEK达成一致："
    },
    {
      "indent": 3,
      "text": "o Ephemeral private key; this example uses the private key from Figure 122.",
      "zh-CHS": "o 短暂私钥；此示例使用图122中的私钥。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"crv\": \"P-256\",\n  \"x\": \"mPUKT_bAWGHIhg0TpjjqVsP1rXWQu_vwVOHHtNkdYoA\",\n  \"y\": \"8BQAsImGeAS46fyWw5MhYfGTT0IjBpFw2SS34Dv4Irs\",\n  \"d\": \"AtH35vJsQ9SGjYfOsjUxYXQKrPH3FjZHmEtSKoSN8cM\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 13,
      "text": "Figure 122: Ephemeral Private Key, in JWK Format",
      "zh-CHS": "图122:JWK格式的临时私钥"
    },
    {
      "indent": 3,
      "text": "Performing the ECDH operation using the static EC public key (Figure 120) over the ephemeral private key (Figure 122) produces the following CEK:",
      "zh-CHS": "在临时私钥（图122）上使用静态EC公钥（图120）执行ECDH操作会产生以下CEK："
    },
    {
      "indent": 3,
      "text": "hzHdlfQIAEehb8Hrd_mFRhKsKLEzPfshfXs9l6areCc",
      "zh-CHS": "hzHdlfQIAEehb8Hrd_mFRhKsKLEzPfshfXs9l6areCc"
    },
    {
      "indent": 6,
      "text": "Figure 123: Agreed-to Content Encryption Key, base64url-encoded",
      "zh-CHS": "图123：同意内容加密密钥，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.5.4. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.5.4. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "zh-CHS": "加密内容之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 124, encoded to base64url [RFC4648] as Figure 125.",
      "zh-CHS": "o JWE保护头；本例使用图124中的标题，编码为base64url[RFC4648]，如图125所示。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"ECDH-ES\",\n  \"kid\": \"meriadoc.brandybuck@buckland.example\",\n  \"epk\": {\n    \"kty\": \"EC\",\n    \"crv\": \"P-256\",\n    \"x\": \"mPUKT_bAWGHIhg0TpjjqVsP1rXWQu_vwVOHHtNkdYoA\",\n    \"y\": \"8BQAsImGeAS46fyWw5MhYfGTT0IjBpFw2SS34Dv4Irs\"\n  },\n  \"enc\": \"A128CBC-HS256\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 124: JWE Protected Header JSON",
      "zh-CHS": "图124:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFQ0RILUVTIiwia2lkIjoibWVyaWFkb2MuYnJhbmR5YnVja0BidW\nNrbGFuZC5leGFtcGxlIiwiZXBrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYi\nLCJ4IjoibVBVS1RfYkFXR0hJaGcwVHBqanFWc1AxclhXUXVfdndWT0hIdE5rZF\nlvQSIsInkiOiI4QlFBc0ltR2VBUzQ2ZnlXdzVNaFlmR1RUMElqQnBGdzJTUzM0\nRHY0SXJzIn0sImVuYyI6IkExMjhDQkMtSFMyNTYifQ",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 125: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图125:JWE保护标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation on the Plaintext (Figure 72) using the following:",
      "zh-CHS": "使用以下命令对明文（图72）执行内容加密操作："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 123);",
      "zh-CHS": "o CEK（图123）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 121); and",
      "zh-CHS": "o 初始化向量（图121）；和"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 125) as authenticated data",
      "zh-CHS": "o JWE将头（图125）保护为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 126.",
      "zh-CHS": "o 图126中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 127.",
      "zh-CHS": "o 图127中的身份验证标记。"
    },
    {
      "indent": 3,
      "text": "BoDlwPnTypYq-ivjmQvAYJLb5Q6l-F3LIgQomlz87yW4OPKbWE1zSTEFjDfhU9 IPIOSA9Bml4m7iDFwA-1ZXvHteLDtw4R1XRGMEsDIqAYtskTTmzmzNa-_q4F_e vAPUmwlO-ZG45Mnq4uhM1fm_D9rBtWolqZSF3xGNNkpOMQKF1Cl8i8wjzRli7- IXgyirlKQsbhhqRzkv8IcY6aHl24j03C-AR2le1r7URUhArM79BY8soZU0lzwI -sD5PZ3l4NDCCei9XkoIAfsXJWmySPoeRb2Ni5UZL4mYpvKDiwmyzGd65KqVw7 MsFfI_K767G9C9Azp73gKZD0DyUn1mn0WW5LmyX_yJ-3AROq8p1WZBfG-ZyJ61 95_JGG2m9Csg",
      "zh-CHS": "BodlwpntypQ-ivjmQvAYJLb5Q6l-F3LIGQOMLZ87YW4OPKBWE1ZSTEFJFHU9 IPIOSA9Bml4m7iDFwA-1ZxVHTELDTW4R1RGMESDIQATSKTTMZMZNA-q4F-e vAPUmwlO-ZG45Mnq4uhM1fm和两个LQZSF3XGNNKFQF1CL8I8WJZRLI7-IXGYIRQSLKBHHQRZK8V8IK8IKZK8I8IK4J03C-2R7K4J03C-2R7K7K4K4K4K4K4K4K4K4K4K4K4K7K4K4K4K4K4K4K4K4K4K4K4K4K4K4K4K4K4K4K7K7KMsFfI_K767G9C9AZP73GKZD0DYYX_yJ-3AROq8p1WZBfG-ZyJ61 95_JGG2m9Csg"
    },
    {
      "indent": 17,
      "text": "Figure 126: Ciphertext, base64url-encoded",
      "zh-CHS": "图126：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "WCCkNa-x4BeB9hIDIfFuhg",
      "zh-CHS": "WCCkNa-x4BeB9hIDIfFuhg"
    },
    {
      "indent": 13,
      "text": "Figure 127: Authentication Tag, base64url-encoded",
      "zh-CHS": "图127：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.5.5. Output Results",
      "section_title": true,
      "zh-CHS": "5.5.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 114)",
      "zh-CHS": "o JWE保护头（图114）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 110)",
      "zh-CHS": "o 初始化向量（图110）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 115)",
      "zh-CHS": "o 密文（图115）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 116)",
      "zh-CHS": "o 身份验证标签（图116）"
    },
    {
      "indent": 3,
      "text": "Only the general JWE JSON Serialization is presented because the flattened JWE JSON Serialization is identical.",
      "zh-CHS": "只显示一般的JWE JSON序列化，因为扁平化的JWE JSON序列化是相同的。"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "zh-CHS": "使用JWE压缩序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJFQ0RILUVTIiwia2lkIjoibWVyaWFkb2MuYnJhbmR5YnVja0BidW NrbGFuZC5leGFtcGxlIiwiZXBrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYi LCJ4IjoibVBVS1RfYkFXR0hJaGcwVHBqanFWc1AxclhXUXVfdndWT0hIdE5rZF lvQSIsInkiOiI4QlFBc0ltR2VBUzQ2ZnlXdzVNaFlmR1RUMElqQnBGdzJTUzM0 RHY0SXJzIn0sImVuYyI6IkExMjhDQkMtSFMyNTYifQ . . yc9N8v5sYyv3iGQT926IUg . BoDlwPnTypYq-ivjmQvAYJLb5Q6l-F3LIgQomlz87yW4OPKbWE1zSTEFjDfhU9 IPIOSA9Bml4m7iDFwA-1ZXvHteLDtw4R1XRGMEsDIqAYtskTTmzmzNa-_q4F_e vAPUmwlO-ZG45Mnq4uhM1fm_D9rBtWolqZSF3xGNNkpOMQKF1Cl8i8wjzRli7- IXgyirlKQsbhhqRzkv8IcY6aHl24j03C-AR2le1r7URUhArM79BY8soZU0lzwI -sD5PZ3l4NDCCei9XkoIAfsXJWmySPoeRb2Ni5UZL4mYpvKDiwmyzGd65KqVw7 MsFfI_K767G9C9Azp73gKZD0DyUn1mn0WW5LmyX_yJ-3AROq8p1WZBfG-ZyJ61 95_JGG2m9Csg . WCCkNa-x4BeB9hIDIfFuhg",
      "zh-CHS": "EYJHBGCIJJJJJJJJJ0IJJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0IJ0AGCWVHBQANFWC1XALHXXVFDNDWT01HIDE5RZF LVQSISINKIOII4QLFC00LTR2VBQ2ZNZNZLZNZNZVNAFM1RUMELQQQQLQQNZYNZYNZYNZJ0IKM0RJ0R0RJ0RJ0RJ0RYYKZYNZYNZZYNZZYNZZYNZYNZYNZYNZYNZ。yc9N8v5sYyv3iGQT926IUg。BodlwpntypQ-ivjmQvAYJLb5Q6l-F3LIGQOMLZ87YW4OPKBWE1ZSTEFJFHU9 IPIOSA9Bml4m7iDFwA-1ZxVHTELDTW4R1RGMESDIQATSKTTMZMZNA-q4F-e vAPUmwlO-ZG45Mnq4uhM1fm和两个LQZSF3XGNNKFQF1CL8I8WJZRLI7-IXGYIRQSLKBHHQRZK8V8IK8IKZK8I8IK4J03C-2R7K4J03C-2R7K7K4K4K4K4K4K4K4K4K4K4K4K7K4K4K4K4K4K4K4K4K4K4K4K4K4K4K4K4K4K4K7K7KMsFfI_K767G9C9AZP73GKZD0DYYX_yJ-3AROq8p1WZBfG-ZyJ61 95_JGG2m9Csg。WCCkNa-x4BeB9hIDIfFuhg"
    },
    {
      "indent": 19,
      "text": "Figure 128: JWE Compact Serialization",
      "zh-CHS": "图128:JWE压缩序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJFQ0RILUVTIiwia2lkIjoibWVyaWFkb2MuYn\n      JhbmR5YnVja0BidWNrbGFuZC5leGFtcGxlIiwiZXBrIjp7Imt0eSI6Ik\n      VDIiwiY3J2IjoiUC0yNTYiLCJ4IjoibVBVS1RfYkFXR0hJaGcwVHBqan\n      FWc1AxclhXUXVfdndWT0hIdE5rZFlvQSIsInkiOiI4QlFBc0ltR2VBUz\n      Q2ZnlXdzVNaFlmR1RUMElqQnBGdzJTUzM0RHY0SXJzIn0sImVuYyI6Ik\n      ExMjhDQkMtSFMyNTYifQ\",\n  \"iv\": \"yc9N8v5sYyv3iGQT926IUg\",\n  \"ciphertext\": \"BoDlwPnTypYq-ivjmQvAYJLb5Q6l-F3LIgQomlz87yW4O\n      PKbWE1zSTEFjDfhU9IPIOSA9Bml4m7iDFwA-1ZXvHteLDtw4R1XRGMEs\n      DIqAYtskTTmzmzNa-_q4F_evAPUmwlO-ZG45Mnq4uhM1fm_D9rBtWolq\n      ZSF3xGNNkpOMQKF1Cl8i8wjzRli7-IXgyirlKQsbhhqRzkv8IcY6aHl2\n      4j03C-AR2le1r7URUhArM79BY8soZU0lzwI-sD5PZ3l4NDCCei9XkoIA\n      fsXJWmySPoeRb2Ni5UZL4mYpvKDiwmyzGd65KqVw7MsFfI_K767G9C9A\n      zp73gKZD0DyUn1mn0WW5LmyX_yJ-3AROq8p1WZBfG-ZyJ6195_JGG2m9\n      Csg\",\n  \"tag\": \"WCCkNa-x4BeB9hIDIfFuhg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 129: General JWE JSON Serialization",
      "zh-CHS": "图129：通用JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.6. Direct Encryption Using AES-GCM",
      "section_title": true,
      "zh-CHS": "5.6. 使用AES-GCM的直接加密"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using a previously exchanged key directly and the \"A128GCM\" (AES-GCM) content encryption algorithm.",
      "zh-CHS": "此示例演示了使用先前交换的密钥直接加密内容和“A128GCM”（AES-GCM）内容加密算法。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.6.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.6.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的内容。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 130.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥（CEK）；此示例使用图130中的键。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"dir\".",
      "zh-CHS": "o “dir”的“alg”参数。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128GCM\".",
      "zh-CHS": "o “A128GCM”的“enc”参数。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"oct\",\n  \"kid\": \"77c7e2b8-6e13-45cf-8672-617b5b45243a\",\n  \"use\": \"enc\",\n  \"alg\": \"A128GCM\",\n  \"k\": \"XctOhJAkA-pD9Lh7ZgW_2A\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 130: AES 128-Bit Key, in JWK Format",
      "zh-CHS": "图130:AES 128位密钥，JWK格式"
    },
    {
      "indent": 0,
      "text": "5.6.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.6.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 131.",
      "zh-CHS": "o 初始化向量；此示例使用图131中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "refa467QzzKx6QAB",
      "zh-CHS": "REFA467QZKX6QAB"
    },
    {
      "indent": 11,
      "text": "Figure 131: Initialization Vector, base64url-encoded",
      "zh-CHS": "图131：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.6.3. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.6.3. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "zh-CHS": "加密内容之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 132, encoded as base64url [RFC4648] to produce Figure 133.",
      "zh-CHS": "o JWE保护头；本例使用图132中的标题（编码为base64url[RFC4648]）生成图133。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"dir\",\n  \"kid\": \"77c7e2b8-6e13-45cf-8672-617b5b45243a\",\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 132: JWE Protected Header JSON",
      "zh-CHS": "图132:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJkaXIiLCJraWQiOiI3N2M3ZTJiOC02ZTEzLTQ1Y2YtODY3Mi02MT\ndiNWI0NTI0M2EiLCJlbmMiOiJBMTI4R0NNIn0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 133: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图133:JWE保护标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the encryption operation on the Plaintext (Figure 72) using the following:",
      "zh-CHS": "使用以下命令对明文（图72）执行加密操作："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 130);",
      "zh-CHS": "o CEK（图130）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 131); and",
      "zh-CHS": "o 初始化向量（图131）；和"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 133) as authenticated data",
      "zh-CHS": "o JWE将头（图133）保护为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 134.",
      "zh-CHS": "o 图134中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 135.",
      "zh-CHS": "o 图135中的身份验证标签。"
    },
    {
      "indent": 3,
      "text": "JW_i_f52hww_ELQPGaYyeAB6HYGcR559l9TYnSovc23XJoBcW29rHP8yZOZG7Y hLpT1bjFuvZPjQS-m0IFtVcXkZXdH_lr_FrdYt9HRUYkshtrMmIUAyGmUnd9zM DB2n0cRDIHAzFVeJUDxkUwVAE7_YGRPdcqMyiBoCO-FBdE-Nceb4h3-FtBP-c_ BIwCPTjb9o0SbdcdREEMJMyZBH8ySWMVi1gPD9yxi-aQpGbSv_F9N4IZAxscj5 g-NJsUPbjk29-s7LJAGb15wEBtXphVCgyy53CoIKLHHeJHXex45Uz9aKZSRSIn ZI-wjsY0yu3cT4_aQ3i1o-tiE-F8Ios61EKgyIQ4CWao8PFMj8TTnp",
      "zh-CHS": "2.在中国的一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，5UZ9AKZSRSINZI-wjsY0yu3cT4_aQ3i1o-tiE-F8Ios61EKgyIQ4CWao8PFMj8TTnp"
    },
    {
      "indent": 17,
      "text": "Figure 134: Ciphertext, base64url-encoded",
      "zh-CHS": "图134：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "vbb32Xvllea2OtmHAdccRQ",
      "zh-CHS": "VBB32xVLLEA2OTMADCCRQ"
    },
    {
      "indent": 13,
      "text": "Figure 135: Authentication Tag, base64url-encoded",
      "zh-CHS": "图135：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.6.4. Output Results",
      "section_title": true,
      "zh-CHS": "5.6.4. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 133)",
      "zh-CHS": "o JWE保护头（图133）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 131)",
      "zh-CHS": "o 初始化向量（图131）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 134)",
      "zh-CHS": "o 密文（图134）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 135)",
      "zh-CHS": "o 身份验证标签（图135）"
    },
    {
      "indent": 3,
      "text": "Only the general JWE JSON Serialization is presented because the flattened JWE JSON Serialization is identical.",
      "zh-CHS": "只显示一般的JWE JSON序列化，因为扁平化的JWE JSON序列化是相同的。"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "zh-CHS": "使用JWE压缩序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJkaXIiLCJraWQiOiI3N2M3ZTJiOC02ZTEzLTQ1Y2YtODY3Mi02MT diNWI0NTI0M2EiLCJlbmMiOiJBMTI4R0NNIn0 . . refa467QzzKx6QAB . JW_i_f52hww_ELQPGaYyeAB6HYGcR559l9TYnSovc23XJoBcW29rHP8yZOZG7Y hLpT1bjFuvZPjQS-m0IFtVcXkZXdH_lr_FrdYt9HRUYkshtrMmIUAyGmUnd9zM DB2n0cRDIHAzFVeJUDxkUwVAE7_YGRPdcqMyiBoCO-FBdE-Nceb4h3-FtBP-c_ BIwCPTjb9o0SbdcdREEMJMyZBH8ySWMVi1gPD9yxi-aQpGbSv_F9N4IZAxscj5 g-NJsUPbjk29-s7LJAGb15wEBtXphVCgyy53CoIKLHHeJHXex45Uz9aKZSRSIn ZI-wjsY0yu3cT4_aQ3i1o-tiE-F8Ios61EKgyIQ4CWao8PFMj8TTnp . vbb32Xvllea2OtmHAdccRQ",
      "zh-CHS": "EYJHBGCIOIJKAXIILCJRAWQII3N3ZTJIOC02ZTEZLTQ12YTODY3Mt DINWI2 ILCJLBMMIOIJBMTI4R0NNIN0。REFA467QZKX6QAB。2.在中国的一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，一个城市，5UZ9AKZSRSINZI-wjsY0yu3cT4_aQ3i1o-tiE-F8Ios61EKgyIQ4CWao8PFMj8TTnp。VBB32xVLLEA2OTMADCCRQ"
    },
    {
      "indent": 19,
      "text": "Figure 136: JWE Compact Serialization",
      "zh-CHS": "图136:JWE压缩序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJkaXIiLCJraWQiOiI3N2M3ZTJiOC02ZTEzLT\n      Q1Y2YtODY3Mi02MTdiNWI0NTI0M2EiLCJlbmMiOiJBMTI4R0NNIn0\",\n  \"iv\": \"refa467QzzKx6QAB\",\n  \"ciphertext\": \"JW_i_f52hww_ELQPGaYyeAB6HYGcR559l9TYnSovc23XJ\n      oBcW29rHP8yZOZG7YhLpT1bjFuvZPjQS-m0IFtVcXkZXdH_lr_FrdYt9\n      HRUYkshtrMmIUAyGmUnd9zMDB2n0cRDIHAzFVeJUDxkUwVAE7_YGRPdc\n      qMyiBoCO-FBdE-Nceb4h3-FtBP-c_BIwCPTjb9o0SbdcdREEMJMyZBH8\n      ySWMVi1gPD9yxi-aQpGbSv_F9N4IZAxscj5g-NJsUPbjk29-s7LJAGb1\n      5wEBtXphVCgyy53CoIKLHHeJHXex45Uz9aKZSRSInZI-wjsY0yu3cT4_\n      aQ3i1o-tiE-F8Ios61EKgyIQ4CWao8PFMj8TTnp\",\n  \"tag\": \"vbb32Xvllea2OtmHAdccRQ\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 137: General JWE JSON Serialization",
      "zh-CHS": "图137：通用JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.7. Key Wrap Using AES-GCM KeyWrap with AES-CBC-HMAC-SHA2",
      "section_title": true,
      "zh-CHS": "5.7. 密钥封装使用AES-GCM密钥封装和AES-CBC-HMAC-SHA2"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content using the \"A256GCMKW\" (AES-256-GCM-KeyWrap) key encryption algorithm with the \"A128CBC-HS256\" (AES-128-CBC-HMAC-SHA-256) content encryption algorithm.",
      "zh-CHS": "此示例演示了使用“A256GCMKW”（AES-256-GCM-KeyWrap）密钥加密算法和“A128CBC-HS256”（AES-128-CBC-HMAC-SHA-256）内容加密算法对内容进行加密。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.7.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.7.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的内容。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key; this example uses the key from Figure 138.",
      "zh-CHS": "o AES对称密钥；此示例使用图138中的键。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"A256GCMKW\".",
      "zh-CHS": "o “A256GCMKW”的“alg”参数。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128CBC-HS256\".",
      "zh-CHS": "o “A128CBC-HS256”的“enc”参数。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"oct\",\n  \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n  \"use\": \"enc\",\n  \"alg\": \"A256GCMKW\",\n  \"k\": \"qC57l_uxcm7Nm3K-ct4GFjx8tM1U8CZ0NLBvdQstiS8\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 24,
      "text": "Figure 138: AES 256-Bit Key",
      "zh-CHS": "图138:AES 256位密钥"
    },
    {
      "indent": 0,
      "text": "5.7.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.7.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 139.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥（CEK）；此示例使用图139中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector for content encryption; this example uses the Initialization Vector from Figure 140.",
      "zh-CHS": "o 用于内容加密的初始化向量；此示例使用图140中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "UWxARpat23nL9ReIj4WG3D1ee9I4r-Mv5QLuFXdy_rE",
      "zh-CHS": "UWXARPAT23NL9REIJ4WG31EE9I4R-Mv5QLuFXdy\\U rE"
    },
    {
      "indent": 11,
      "text": "Figure 139: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图139：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "gz6NjyEFNm_vm8Gj6FwoFQ",
      "zh-CHS": "gz6NjyEFNm_vm8Gj6FwoFQ"
    },
    {
      "indent": 11,
      "text": "Figure 140: Initialization Vector, base64url-encoded",
      "zh-CHS": "图140：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.7.3. Encrypting the Key",
      "section_title": true,
      "zh-CHS": "5.7.3. 加密密钥"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the CEK:",
      "zh-CHS": "加密CEK之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o Initialization Vector for key wrapping; this example uses the Initialization Vector from Figure 141.",
      "zh-CHS": "o 密钥包装的初始化向量；此示例使用图141中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "KkYT0GX_2jHlfqN_",
      "zh-CHS": "KkYT0GX_2jHlfqN_"
    },
    {
      "indent": 3,
      "text": "Figure 141: Initialization Vector for Key Wrapping, base64url-encoded",
      "zh-CHS": "图141：密钥包装的初始化向量，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 139) with the following:",
      "zh-CHS": "在CEK上执行密钥加密操作（图139），方法如下："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key (Figure 138);",
      "zh-CHS": "o AES对称密钥（图138）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 141); and",
      "zh-CHS": "o 初始化向量（图141）；和"
    },
    {
      "indent": 3,
      "text": "o The empty string as authenticated data",
      "zh-CHS": "o 作为已验证数据的空字符串"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Encrypted Key from Figure 142.",
      "zh-CHS": "o 图142中的加密密钥。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 143.",
      "zh-CHS": "o 图143中的身份验证标签。"
    },
    {
      "indent": 3,
      "text": "lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElLvYNok",
      "zh-CHS": "lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElLvYNok"
    },
    {
      "indent": 15,
      "text": "Figure 142: Encrypted Key, base64url-encoded",
      "zh-CHS": "图142：加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "kfPduVQ3T3H6vnewt--ksw",
      "zh-CHS": "kfPduVQ3T3H6vnewt--ksw"
    },
    {
      "indent": 4,
      "text": "Figure 143: Authentication Tag from Key Wrapping, base64url-encoded",
      "zh-CHS": "图143：密钥包装的身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.7.4. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.7.4. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "zh-CHS": "加密内容之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 144, encoded to base64url [RFC4648] as Figure 145.",
      "zh-CHS": "o JWE保护头；该示例使用图144中的头，编码为base64url[RFC4648]，如图145所示。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A256GCMKW\",\n  \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n  \"tag\": \"kfPduVQ3T3H6vnewt--ksw\",\n  \"iv\": \"KkYT0GX_2jHlfqN_\",\n  \"enc\": \"A128CBC-HS256\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 144: JWE Protected Header JSON",
      "zh-CHS": "图144:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMjU2R0NNS1ciLCJraWQiOiIxOGVjMDhlMS1iZmE5LTRkOTUtYj IwNS0yYjRkZDFkNDMyMWQiLCJ0YWciOiJrZlBkdVZRM1QzSDZ2bmV3dC0ta3N3 IiwiaXYiOiJLa1lUMEdYXzJqSGxmcU5fIiwiZW5jIjoiQTEyOENCQy1IUzI1Ni J9",
      "zh-CHS": "EYJHBgCioijBMJU2R0n1cJJJRKZDFKNDMYJLJ0yJRKZDKZLKDvZrM1QZSDZ2BMV3dC03n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n"
    },
    {
      "indent": 12,
      "text": "Figure 145: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图145:JWE保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 72) with the following:",
      "zh-CHS": "使用以下命令在明文上执行内容加密操作（图72）："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 139);",
      "zh-CHS": "o CEK（图139）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 140); and",
      "zh-CHS": "o 初始化向量（图140）；和"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 145) as authenticated data",
      "zh-CHS": "o JWE将受保护的头（图145）作为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 146.",
      "zh-CHS": "o 图146中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 147.",
      "zh-CHS": "o 图147中的身份验证标签。"
    },
    {
      "indent": 3,
      "text": "Jf5p9-ZhJlJy_IQ_byKFmI0Ro7w7G1QiaZpI8OaiVgD8EqoDZHyFKFBupS8iaE eVIgMqWmsuJKuoVgzR3YfzoMd3GxEm3VxNhzWyWtZKX0gxKdy6HgLvqoGNbZCz LjqcpDiF8q2_62EVAbr2uSc2oaxFmFuIQHLcqAHxy51449xkjZ7ewzZaGV3eFq hpco8o4DijXaG5_7kp3h2cajRfDgymuxUbWgLqaeNQaJtvJmSMFuEOSAzw9Hde b6yhdTynCRmu-kqtO5Dec4lT2OMZKpnxc_F1_4yDJFcqb5CiDSmA-psB2k0Jtj xAj4UPI61oONK7zzFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR 1B-gxpNk3xWU",
      "zh-CHS": "4.一个中国大学的一个中国大学的一个中国大学的一个智商测试（智商测试）的一个中国大学的一个中国大学的一个中国大学的一个中国大学的一个中国大学的一个中国大学的一个中国大学的一个智商测试（智商测试）的一个中国大学的一个中国大学的一个智商测试（一个中国大学的一个中国大学的一个智商测试。一个中国大学的一个智商测试（一个智商测试）在一个中国的一个中国大学的一个中国大学的一个中国大学的一个中国的一个智商测试测试测试。一个智商测试的研究。在一个中国的一个中国的智商测试。在一个中国的一个中国的一个大学的一个大学的一个大学的研究。在一个大学的一个大学的一个大学的一个大学的研究。在一个大学的一个大学的研究。在一个大学的研究。在一个研究。K0JTJxAj4UPI61oONK7zzFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR 1B-gxpNk3xWU"
    },
    {
      "indent": 17,
      "text": "Figure 146: Ciphertext, base64url-encoded",
      "zh-CHS": "图146：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "DKW7jrb4WaRSNfbXVPlT5g",
      "zh-CHS": "DKW7jrb4WaRSNfbXVPlT5g"
    },
    {
      "indent": 13,
      "text": "Figure 147: Authentication Tag, base64url-encoded",
      "zh-CHS": "图147：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.7.5. Output Results",
      "section_title": true,
      "zh-CHS": "5.7.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 145)",
      "zh-CHS": "o JWE保护头（图145）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 142)",
      "zh-CHS": "o 加密密钥（图142）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 140)",
      "zh-CHS": "o 初始化向量（图140）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 146)",
      "zh-CHS": "o 密文（图146）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 147)",
      "zh-CHS": "o 身份验证标签（图147）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "zh-CHS": "使用JWE压缩序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMjU2R0NNS1ciLCJraWQiOiIxOGVjMDhlMS1iZmE5LTRkOTUtYj IwNS0yYjRkZDFkNDMyMWQiLCJ0YWciOiJrZlBkdVZRM1QzSDZ2bmV3dC0ta3N3 IiwiaXYiOiJLa1lUMEdYXzJqSGxmcU5fIiwiZW5jIjoiQTEyOENCQy1IUzI1Ni J9 . lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElLvYNok . gz6NjyEFNm_vm8Gj6FwoFQ . Jf5p9-ZhJlJy_IQ_byKFmI0Ro7w7G1QiaZpI8OaiVgD8EqoDZHyFKFBupS8iaE eVIgMqWmsuJKuoVgzR3YfzoMd3GxEm3VxNhzWyWtZKX0gxKdy6HgLvqoGNbZCz LjqcpDiF8q2_62EVAbr2uSc2oaxFmFuIQHLcqAHxy51449xkjZ7ewzZaGV3eFq hpco8o4DijXaG5_7kp3h2cajRfDgymuxUbWgLqaeNQaJtvJmSMFuEOSAzw9Hde b6yhdTynCRmu-kqtO5Dec4lT2OMZKpnxc_F1_4yDJFcqb5CiDSmA-psB2k0Jtj xAj4UPI61oONK7zzFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR 1B-gxpNk3xWU . DKW7jrb4WaRSNfbXVPlT5g",
      "zh-CHS": "EYJHBgCioijBMJU2R0n1cJJJRKZDFKNDMYJLJ0yJRKZDBKDvZrM1QZSDZ2BMV3dC03n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n3n。lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElLvYNok。gz6NjyEFNm_vm8Gj6FwoFQ。4.一个中国大学的一个中国大学的一个中国大学的一个智商测试（智商测试）的一个中国大学的一个中国大学的一个中国大学的一个中国大学的一个中国大学的一个中国大学的一个中国大学的一个智商测试（智商测试）的一个中国大学的一个中国大学的一个智商测试（一个中国大学的一个中国大学的一个智商测试。一个中国大学的一个智商测试（一个智商测试）在一个中国的一个中国大学的一个中国大学的一个中国大学的一个中国的一个智商测试测试测试。一个智商测试的研究。在一个中国的一个中国的智商测试。在一个中国的一个中国的一个大学的一个大学的一个大学的研究。在一个大学的一个大学的一个大学的一个大学的研究。在一个大学的一个大学的研究。在一个大学的研究。在一个研究。K0JTJxAj4UPI61oONK7zzFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR 1B-gxpNk3xWU。DKW7jrb4WaRSNfbXVPlT5g"
    },
    {
      "indent": 19,
      "text": "Figure 148: JWE Compact Serialization",
      "zh-CHS": "图148:JWE压缩序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElL\n          vYNok\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJBMjU2R0NNS1ciLCJraWQiOiIxOGVjMDhlMS\n      1iZmE5LTRkOTUtYjIwNS0yYjRkZDFkNDMyMWQiLCJ0YWciOiJrZlBkdV\n      ZRM1QzSDZ2bmV3dC0ta3N3IiwiaXYiOiJLa1lUMEdYXzJqSGxmcU5fIi\n      wiZW5jIjoiQTEyOENCQy1IUzI1NiJ9\",\n  \"iv\": \"gz6NjyEFNm_vm8Gj6FwoFQ\",\n  \"ciphertext\": \"Jf5p9-ZhJlJy_IQ_byKFmI0Ro7w7G1QiaZpI8OaiVgD8E\n      qoDZHyFKFBupS8iaEeVIgMqWmsuJKuoVgzR3YfzoMd3GxEm3VxNhzWyW\n      tZKX0gxKdy6HgLvqoGNbZCzLjqcpDiF8q2_62EVAbr2uSc2oaxFmFuIQ\n      HLcqAHxy51449xkjZ7ewzZaGV3eFqhpco8o4DijXaG5_7kp3h2cajRfD\n      gymuxUbWgLqaeNQaJtvJmSMFuEOSAzw9Hdeb6yhdTynCRmu-kqtO5Dec\n      4lT2OMZKpnxc_F1_4yDJFcqb5CiDSmA-psB2k0JtjxAj4UPI61oONK7z\n      zFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR1B-gxpNk3\n      xWU\",\n  \"tag\": \"DKW7jrb4WaRSNfbXVPlT5g\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 149: General JWE JSON Serialization",
      "zh-CHS": "图149：通用JWE JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "zh-CHS": "使用平坦JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJBMjU2R0NNS1ciLCJpdiI6IktrWVQwR1hfMm\n      pIbGZxTl8iLCJraWQiOiIxOGVjMDhlMS1iZmE5LTRkOTUtYjIwNS0yYj\n      RkZDFkNDMyMWQiLCJ0YWciOiJrZlBkdVZRM1QzSDZ2bmV3dC0ta3N3Ii\n      wiZW5jIjoiQTEyOENCQy1IUzI1NiJ9\",\n  \"encrypted_key\": \"lJf3HbOApxMEBkCMOoTnnABxs_CvTWUmZQ2ElLvYNo\n      k\",\n  \"iv\": \"gz6NjyEFNm_vm8Gj6FwoFQ\",\n  \"ciphertext\": \"Jf5p9-ZhJlJy_IQ_byKFmI0Ro7w7G1QiaZpI8OaiVgD8E\n      qoDZHyFKFBupS8iaEeVIgMqWmsuJKuoVgzR3YfzoMd3GxEm3VxNhzWyW\n      tZKX0gxKdy6HgLvqoGNbZCzLjqcpDiF8q2_62EVAbr2uSc2oaxFmFuIQ\n      HLcqAHxy51449xkjZ7ewzZaGV3eFqhpco8o4DijXaG5_7kp3h2cajRfD\n      gymuxUbWgLqaeNQaJtvJmSMFuEOSAzw9Hdeb6yhdTynCRmu-kqtO5Dec\n      4lT2OMZKpnxc_F1_4yDJFcqb5CiDSmA-psB2k0JtjxAj4UPI61oONK7z\n      zFIu4gBfjJCndsZfdvG7h8wGjV98QhrKEnR7xKZ3KCr0_qR1B-gxpNk3\n      xWU\",\n  \"tag\": \"NvBveHr_vonkvflfnUrmBQ\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Figure 150: Flattened JWE JSON Serialization",
      "zh-CHS": "图150：扁平化JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.8. Key Wrap Using AES-KeyWrap with AES-GCM",
      "section_title": true,
      "zh-CHS": "5.8. 使用AES密钥封装和AES-GCM进行密钥封装"
    },
    {
      "indent": 3,
      "text": "The following example illustrates content encryption using the \"A128KW\" (AES-128-KeyWrap) key encryption algorithm and the \"A128GCM\" (AES-128-GCM) content encryption algorithm.",
      "zh-CHS": "以下示例说明了使用“A128KW”（AES-128-KeyWrap）密钥加密算法和“A128GCM”（AES-128-GCM）内容加密算法的内容加密。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.8.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.8.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的内容。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key; this example uses the key from Figure 151.",
      "zh-CHS": "o AES对称密钥；此示例使用图151中的键。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"A128KW\".",
      "zh-CHS": "o “alg”参数为“A128KW”。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128GCM\".",
      "zh-CHS": "o “A128GCM”的“enc”参数。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"oct\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n  \"use\": \"enc\",\n  \"alg\": \"A128KW\",\n  \"k\": \"GZy6sIZ6wl9NJOKB-jnmVQ\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 24,
      "text": "Figure 151: AES 128-Bit Key",
      "zh-CHS": "图151:AES 128位密钥"
    },
    {
      "indent": 0,
      "text": "5.8.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.8.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key; this example uses the key from Figure 152.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥；此示例使用图152中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 153.",
      "zh-CHS": "o 初始化向量；此示例使用图153中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "aY5_Ghmk9KxWPBLu_glx1w",
      "zh-CHS": "aY5_Ghmk9KxWPBLu_glx1w"
    },
    {
      "indent": 11,
      "text": "Figure 152: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图152：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "Qx0pmsDa8KnJc9Jo",
      "zh-CHS": "Qx0pmsDa8KnJc9Jo"
    },
    {
      "indent": 11,
      "text": "Figure 153: Initialization Vector, base64url-encoded",
      "zh-CHS": "图153：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.8.3. Encrypting the Key",
      "section_title": true,
      "zh-CHS": "5.8.3. 加密密钥"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 152) with the AES symmetric key (Figure 151) produces the following Encrypted Key:",
      "zh-CHS": "使用AES对称密钥（图151）在CEK上执行密钥加密操作（图152）会生成以下加密密钥："
    },
    {
      "indent": 3,
      "text": "CBI6oDw8MydIx1IBntf_lQcw2MmJKIQx",
      "zh-CHS": "CBI6ODW8YDIX1IBNTF_lQcw2MmJKIQx"
    },
    {
      "indent": 15,
      "text": "Figure 154: Encrypted Key, base64url-encoded",
      "zh-CHS": "图154：加密密钥，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.8.4. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.8.4. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "zh-CHS": "加密内容之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 155, encoded to base64url [RFC4648] as Figure 156.",
      "zh-CHS": "o JWE保护头；此示例使用图155中的标题，编码为base64url[RFC4648]，如图156所示。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A128KW\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 155: JWE Protected Header JSON",
      "zh-CHS": "图155:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC\n04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 156: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图156:JWE保护标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption over the Plaintext (Figure 72) with the following:",
      "zh-CHS": "在纯文本上执行内容加密（图72），方法如下："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 152);",
      "zh-CHS": "o CEK（图152）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 153); and",
      "zh-CHS": "o 初始化向量（图153）；和"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 156) as authenticated data",
      "zh-CHS": "o JWE将头（图156）保护为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 157.",
      "zh-CHS": "o 图157中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 158.",
      "zh-CHS": "o 图158中的身份验证标签。"
    },
    {
      "indent": 3,
      "text": "AwliP-KmWgsZ37BvzCefNen6VTbRK3QMA4TkvRkH0tP1bTdhtFJgJxeVmJkLD6 1A1hnWGetdg11c9ADsnWgL56NyxwSYjU1ZEHcGkd3EkU0vjHi9gTlb90qSYFfe F0LwkcTtjbYKCsiNJQkcIp1yeM03OmuiYSoYJVSpf7ej6zaYcMv3WwdxDFl8RE wOhNImk2Xld2JXq6BR53TSFkyT7PwVLuq-1GwtGHlQeg7gDT6xW0JqHDPn_H-p uQsmthc9Zg0ojmJfqqFvETUxLAF-KjcBTS5dNy6egwkYtOt8EIHK-oEsKYtZRa a8Z7MOZ7UGxGIMvEmxrGCPeJa14slv2-gaqK0kEThkaSqdYw0FkQZF",
      "zh-CHS": "AwliP-KMWGS37BVZCEFNEN6VTBRK3QMA4TvKH0TP1BTDHTFJGJXEVMJKLD6 HNWGETDG11C9ADSNWGL56NYXWWWWZYGK3EKU0VJHI9GTLB90QSYFFE F0LWKCTTJBYKCSINQKCIP1YM03OMUIYSOYJVSFP7EJYCMV3WWDXDFL8RE WOHNIMK2XLD2JXQ6R5FKKKKKYKJJQ5FKKJJJJJQL3SFKKKKKKK7FK7FYKKK7FYKKKK7FYYKKJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJKKA8Z7MOZ7UGXGIMVEXRGCPEJA14SLV2-gaqK0kEThkaSqdYw0FkQZF"
    },
    {
      "indent": 17,
      "text": "Figure 157: Ciphertext, base64url-encoded",
      "zh-CHS": "图157：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "ER7MWJZ1FBI_NKvn7Zb1Lw",
      "zh-CHS": "ER7MWJZ1FBI_NKvn7Zb1Lw"
    },
    {
      "indent": 13,
      "text": "Figure 158: Authentication Tag, base64url-encoded",
      "zh-CHS": "图158：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.8.5. Output Results",
      "section_title": true,
      "zh-CHS": "5.8.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 156)",
      "zh-CHS": "o JWE保护头（图156）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 154)",
      "zh-CHS": "o 加密密钥（图154）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 153)",
      "zh-CHS": "o 初始化向量（图153）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 157)",
      "zh-CHS": "o 密文（图157）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 158)",
      "zh-CHS": "o 身份验证标签（图158）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "zh-CHS": "使用JWE压缩序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC 04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn0 . CBI6oDw8MydIx1IBntf_lQcw2MmJKIQx . Qx0pmsDa8KnJc9Jo . AwliP-KmWgsZ37BvzCefNen6VTbRK3QMA4TkvRkH0tP1bTdhtFJgJxeVmJkLD6 1A1hnWGetdg11c9ADsnWgL56NyxwSYjU1ZEHcGkd3EkU0vjHi9gTlb90qSYFfe F0LwkcTtjbYKCsiNJQkcIp1yeM03OmuiYSoYJVSpf7ej6zaYcMv3WwdxDFl8RE wOhNImk2Xld2JXq6BR53TSFkyT7PwVLuq-1GwtGHlQeg7gDT6xW0JqHDPn_H-p uQsmthc9Zg0ojmJfqqFvETUxLAF-KjcBTS5dNy6egwkYtOt8EIHK-oEsKYtZRa a8Z7MOZ7UGxGIMvEmxrGCPeJa14slv2-gaqK0kEThkaSqdYw0FkQZF . ER7MWJZ1FBI_NKvn7Zb1Lw",
      "zh-CHS": "EYJHBGCIOIJBMTI4CILCJRAWQII4WIYMDK2NS04MYLTQZZZDKTYTQ2OC 04MJE2 MGFKOTFHYZGILCJLBMMOIJBMTI4R0NNIN0。CBI6ODW8YDIX1IBNTFlQCW2MMJKIQX。Qx0pmsDa8KnJc9Jo。AwliP-KMWGS37BVZCEFNEN6VTBRK3QMA4TvKH0TP1BTDHTFJGJXEVMJKLD6 HNWGETDG11C9ADSNWGL56NYXWWWWZYGK3EKU0VJHI9GTLB90QSYFFE F0LWKCTTJBYKCSINQKCIP1YM03OMUIYSOYJVSFP7EJYCMV3WWDXDFL8RE WOHNIMK2XLD2JXQ6R5FKKKKKYKJJQ5FKKJJJJJQL3SFKKKKKKK7FK7FYKKK7FYKKKK7FYYKKJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJKKA8Z7MOZ7UGXGIMVEXRGCPEJA14SLV2-gaqK0kEThkaSqdYw0FkQZF。ER7MWJZ1FBI_NKvn7Zb1Lw"
    },
    {
      "indent": 19,
      "text": "Figure 159: JWE Compact Serialization",
      "zh-CHS": "图159:JWE压缩序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"CBI6oDw8MydIx1IBntf_lQcw2MmJKIQx\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn\n      0\",\n  \"iv\": \"Qx0pmsDa8KnJc9Jo\",\n  \"ciphertext\": \"AwliP-KmWgsZ37BvzCefNen6VTbRK3QMA4TkvRkH0tP1b\n      TdhtFJgJxeVmJkLD61A1hnWGetdg11c9ADsnWgL56NyxwSYjU1ZEHcGk\n      d3EkU0vjHi9gTlb90qSYFfeF0LwkcTtjbYKCsiNJQkcIp1yeM03OmuiY\n      SoYJVSpf7ej6zaYcMv3WwdxDFl8REwOhNImk2Xld2JXq6BR53TSFkyT7\n      PwVLuq-1GwtGHlQeg7gDT6xW0JqHDPn_H-puQsmthc9Zg0ojmJfqqFvE\n      TUxLAF-KjcBTS5dNy6egwkYtOt8EIHK-oEsKYtZRaa8Z7MOZ7UGxGIMv\n      EmxrGCPeJa14slv2-gaqK0kEThkaSqdYw0FkQZF\",\n  \"tag\": \"ER7MWJZ1FBI_NKvn7Zb1Lw\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 160: General JWE JSON Serialization",
      "zh-CHS": "图160：通用JWE JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "zh-CHS": "使用平坦JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn\n      0\",\n  \"encrypted_key\": \"CBI6oDw8MydIx1IBntf_lQcw2MmJKIQx\",\n  \"iv\": \"Qx0pmsDa8KnJc9Jo\",\n  \"ciphertext\": \"AwliP-KmWgsZ37BvzCefNen6VTbRK3QMA4TkvRkH0tP1b\n      TdhtFJgJxeVmJkLD61A1hnWGetdg11c9ADsnWgL56NyxwSYjU1ZEHcGk\n      d3EkU0vjHi9gTlb90qSYFfeF0LwkcTtjbYKCsiNJQkcIp1yeM03OmuiY\n      SoYJVSpf7ej6zaYcMv3WwdxDFl8REwOhNImk2Xld2JXq6BR53TSFkyT7\n      PwVLuq-1GwtGHlQeg7gDT6xW0JqHDPn_H-puQsmthc9Zg0ojmJfqqFvE\n      TUxLAF-KjcBTS5dNy6egwkYtOt8EIHK-oEsKYtZRaa8Z7MOZ7UGxGIMv\n      EmxrGCPeJa14slv2-gaqK0kEThkaSqdYw0FkQZF\",\n  \"tag\": \"ER7MWJZ1FBI_NKvn7Zb1Lw\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Figure 161: Flattened JWE JSON Serialization",
      "zh-CHS": "图161：扁平化JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.9. Compressed Content",
      "section_title": true,
      "zh-CHS": "5.9. 压缩内容"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content that is first compressed. It reuses the AES symmetric key, key encryption algorithm, and content encryption algorithm from Section 5.8.",
      "zh-CHS": "此示例演示如何加密首先压缩的内容。它重用第5.8节中的AES对称密钥、密钥加密算法和内容加密算法。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.9.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.9.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的内容。"
    },
    {
      "indent": 3,
      "text": "o Recipient encryption key; this example uses the key from Figure 151.",
      "zh-CHS": "o 接收方加密密钥；此示例使用图151中的键。"
    },
    {
      "indent": 3,
      "text": "o Key encryption algorithm; this example uses \"A128KW\".",
      "zh-CHS": "o 密钥加密算法；本例使用“A128KW”。"
    },
    {
      "indent": 3,
      "text": "o Content encryption algorithm; this example uses \"A128GCM\".",
      "zh-CHS": "o 内容加密算法；本例使用“A128GCM”。"
    },
    {
      "indent": 3,
      "text": "o \"zip\" parameter of \"DEF\".",
      "zh-CHS": "o “DEF”的“zip”参数。"
    },
    {
      "indent": 0,
      "text": "5.9.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.9.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o Compressed Plaintext from the original Plaintext content; compressing Figure 72 using the DEFLATE [RFC1951] algorithm produces the compressed Plaintext from Figure 162.",
      "zh-CHS": "o 从原始纯文本内容压缩纯文本；使用DEFLATE[RFC1951]算法压缩图72，生成图162中的压缩明文。"
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 163.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥（CEK）；此示例使用图163中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 164.",
      "zh-CHS": "o 初始化向量；此示例使用图164中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "bY_BDcIwDEVX-QNU3QEOrIA4pqlDokYxchxVvbEDGzIJbioOSJwc-f___HPjBu\n8KVFpVtAplVE1-wZo0YjNZo3C7R5v72pV5f5X382VWjYQpqZKAyjziZOr2B7kQ\nPSy6oZIXUnDYbVKN4jNXi2u0yB7t1qSHTjmMODf9QgvrDzfTIQXnyQRuUya4zI\nWG3vTOdir0v7BRHFYWq3k1k1A_gSDJqtcBF-GZxw8",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 162: Compressed Plaintext, base64url-encoded",
      "zh-CHS": "图162：压缩明文，base64url编码"
    },
    {
      "indent": 3,
      "text": "hC-MpLZSuwWv8sexS6ydfw",
      "zh-CHS": "hC-MpLZSuwWv8sexS6ydfw"
    },
    {
      "indent": 11,
      "text": "Figure 163: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图163：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "p9pUq6XHY0jfEZIl",
      "zh-CHS": "p9pUq6XHY0jfEZIl"
    },
    {
      "indent": 11,
      "text": "Figure 164: Initialization Vector, base64url-encoded",
      "zh-CHS": "图164：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.9.3. Encrypting the Key",
      "section_title": true,
      "zh-CHS": "5.9.3. 加密密钥"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 163) with the AES symmetric key (Figure 151) produces the following Encrypted Key:",
      "zh-CHS": "使用AES对称密钥（图151）在CEK上执行密钥加密操作（图163）会生成以下加密密钥："
    },
    {
      "indent": 3,
      "text": "5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi",
      "zh-CHS": "5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi"
    },
    {
      "indent": 15,
      "text": "Figure 165: Encrypted Key, base64url-encoded",
      "zh-CHS": "图165：加密密钥，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.9.4. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.9.4. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "zh-CHS": "加密内容之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 166, encoded to base64url [RFC4648] as Figure 167.",
      "zh-CHS": "o JWE保护头；本例使用图166中的标题，编码为base64url[RFC4648]，如图167所示。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A128KW\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n  \"enc\": \"A128GCM\",\n  \"zip\": \"DEF\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 166: JWE Protected Header JSON",
      "zh-CHS": "图166:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC\n04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIiwiemlwIjoiREVGIn0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 167: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图167:JWE保护标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the compressed Plaintext (Figure 162, encoded as an octet string) with the following:",
      "zh-CHS": "在压缩的明文（图162，编码为八位字节字符串）上执行内容加密操作，如下所示："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 163);",
      "zh-CHS": "o CEK（图163）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 164); and",
      "zh-CHS": "o 初始化向量（图164）；和"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 167) as authenticated data",
      "zh-CHS": "o JWE将头（图167）保护为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 168.",
      "zh-CHS": "o 图168中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 169.",
      "zh-CHS": "o 图169中的身份验证标记。"
    },
    {
      "indent": 3,
      "text": "HbDtOsdai1oYziSx25KEeTxmwnh8L8jKMFNc1k3zmMI6VB8hry57tDZ61jXyez\nSPt0fdLVfe6Jf5y5-JaCap_JQBcb5opbmT60uWGml8blyiMQmOn9J--XhhlYg0\nm-BHaqfDO5iTOWxPxFMUedx7WCy8mxgDHj0aBMG6152PsM-w5E_o2B3jDbrYBK\nhpYA7qi3AyijnCJ7BP9rr3U8kxExCpG3mK420TjOw",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 168: Ciphertext, base64url-encoded",
      "zh-CHS": "图168：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "VILuUwuIxaLVmh5X-T7kmA",
      "zh-CHS": "VILuUwuIxaLVmh5X-T7kmA"
    },
    {
      "indent": 13,
      "text": "Figure 169: Authentication Tag, base64url-encoded",
      "zh-CHS": "图169：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.9.5. Output Results",
      "section_title": true,
      "zh-CHS": "5.9.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 167)",
      "zh-CHS": "o JWE受保护的标头（图167）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 165)",
      "zh-CHS": "o 加密密钥（图165）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 164)",
      "zh-CHS": "o 初始化向量（图164）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 168)",
      "zh-CHS": "o 密文（图168）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 169)",
      "zh-CHS": "o 身份验证标签（图169）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "zh-CHS": "使用JWE压缩序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC 04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIiwiemlwIjoiREVGIn0 . 5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi . p9pUq6XHY0jfEZIl . HbDtOsdai1oYziSx25KEeTxmwnh8L8jKMFNc1k3zmMI6VB8hry57tDZ61jXyez SPt0fdLVfe6Jf5y5-JaCap_JQBcb5opbmT60uWGml8blyiMQmOn9J--XhhlYg0 m-BHaqfDO5iTOWxPxFMUedx7WCy8mxgDHj0aBMG6152PsM-w5E_o2B3jDbrYBK hpYA7qi3AyijnCJ7BP9rr3U8kxExCpG3mK420TjOw . VILuUwuIxaLVmh5X-T7kmA",
      "zh-CHS": "EYJHBGCIOIJBMTI4CILJJWIMDK2NS04MYLTQZZDKTYTQ2OC 04MJE2 MGFKOTFHYZGILJBMTI4R0NniIWIMLWIJOIN0。5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi。p9pUq6XHY0jfEZIl。HBDTOSDAI1OYZX25KEETXMWH8JKMFNC1K3ZMMI6VB8RY57TDZ61JXYEZ SPt0fdLVfe6Jf5y5-JaCap_JQBcb5opbmT60uWGml8blyiMQmOn9J——XHlyG0 m-Bhaqfdo5ITOWxFxMuedX7WCY8MxGDHJ0ABMG6152SM-W5E2B3;J2B3JDBRYBK HPYA7AYIJJJYJJ7B7B7P9RRU8XEXPG3MK420TJOW。VILuUwuIxaLVmh5X-T7kmA"
    },
    {
      "indent": 19,
      "text": "Figure 170: JWE Compact Serialization",
      "zh-CHS": "图170:JWE压缩序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIi\n      wiemlwIjoiREVGIn0\",\n  \"iv\": \"p9pUq6XHY0jfEZIl\",\n  \"ciphertext\": \"HbDtOsdai1oYziSx25KEeTxmwnh8L8jKMFNc1k3zmMI6V\n      B8hry57tDZ61jXyezSPt0fdLVfe6Jf5y5-JaCap_JQBcb5opbmT60uWG\n      ml8blyiMQmOn9J--XhhlYg0m-BHaqfDO5iTOWxPxFMUedx7WCy8mxgDH\n      j0aBMG6152PsM-w5E_o2B3jDbrYBKhpYA7qi3AyijnCJ7BP9rr3U8kxE\n      xCpG3mK420TjOw\",\n  \"tag\": \"VILuUwuIxaLVmh5X-T7kmA\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 171: General JWE JSON Serialization",
      "zh-CHS": "图171：通用JWE JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "zh-CHS": "使用平坦JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIi\n      wiemlwIjoiREVGIn0\",\n  \"encrypted_key\": \"5vUT2WOtQxKWcekM_IzVQwkGgzlFDwPi\",\n  \"iv\": \"p9pUq6XHY0jfEZIl\",\n  \"ciphertext\": \"HbDtOsdai1oYziSx25KEeTxmwnh8L8jKMFNc1k3zmMI6V\n      B8hry57tDZ61jXyezSPt0fdLVfe6Jf5y5-JaCap_JQBcb5opbmT60uWG\n      ml8blyiMQmOn9J--XhhlYg0m-BHaqfDO5iTOWxPxFMUedx7WCy8mxgDH\n      j0aBMG6152PsM-w5E_o2B3jDbrYBKhpYA7qi3AyijnCJ7BP9rr3U8kxE\n      xCpG3mK420TjOw\",\n  \"tag\": \"VILuUwuIxaLVmh5X-T7kmA\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Figure 172: Flattened JWE JSON Serialization",
      "zh-CHS": "图172：扁平化JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.10. Including Additional Authenticated Data",
      "section_title": true,
      "zh-CHS": "5.10. 包括其他经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content that includes additional authenticated data. As this example includes an additional top-level property not present in the JWE Compact Serialization, only the flattened JWE JSON Serialization and general JWE JSON Serialization are possible.",
      "zh-CHS": "此示例演示了加密包含其他已验证数据的内容。由于此示例包含JWE压缩序列化中不存在的其他顶级属性，因此只有平坦的JWE JSON序列化和一般的JWE JSON序列化是可能的。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.10.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.10.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的内容。"
    },
    {
      "indent": 3,
      "text": "o Recipient encryption key; this example uses the key from Figure 151.",
      "zh-CHS": "o 接收方加密密钥；此示例使用图151中的键。"
    },
    {
      "indent": 3,
      "text": "o Key encryption algorithm; this example uses \"A128KW\".",
      "zh-CHS": "o 密钥加密算法；本例使用“A128KW”。"
    },
    {
      "indent": 3,
      "text": "o Content encryption algorithm; this example uses \"A128GCM\".",
      "zh-CHS": "o 内容加密算法；本例使用“A128GCM”。"
    },
    {
      "indent": 3,
      "text": "o Additional Authenticated Data; this example uses a vCard [RFC7095] from Figure 173, serialized to UTF-8.",
      "zh-CHS": "o 附加认证数据；此示例使用图173中的vCard[RFC7095]，序列化为UTF-8。"
    },
    {
      "indent": 3,
      "text": "[\n  \"vcard\",\n  [\n    [ \"version\", {}, \"text\", \"4.0\" ],\n    [ \"fn\", {}, \"text\", \"Meriadoc Brandybuck\" ],\n    [ \"n\", {},\n      \"text\", [\n        \"Brandybuck\", \"Meriadoc\", \"Mr.\", \"\"\n      ]\n    ],\n    [ \"bday\", {}, \"text\", \"TA 2982\" ],\n    [ \"gender\", {}, \"text\", \"M\" ]\n  ]\n]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "Figure 173: Additional Authenticated Data, in JSON Format",
      "zh-CHS": "图173：JSON格式的附加认证数据"
    },
    {
      "indent": 3,
      "text": "NOTE: Whitespace between JSON values was added for readability.",
      "zh-CHS": "注意：为了可读性，JSON值之间添加了空格。"
    },
    {
      "indent": 0,
      "text": "5.10.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.10.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 174.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥（CEK）；此示例使用图174中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 175.",
      "zh-CHS": "o 初始化向量；此示例使用图175中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "o Encoded Additional Authenticated Data (AAD); this example uses the Additional Authenticated Data from Figure 173, encoded to base64url [RFC4648] as Figure 176.",
      "zh-CHS": "o 编码附加认证数据（AAD）；该示例使用图173中的附加认证数据，编码为base64url[RFC4648]，如图176所示。"
    },
    {
      "indent": 3,
      "text": "75m1ALsYv10pZTKPWrsqdg",
      "zh-CHS": "75m1ALsYv10pZTKPWrsqdg"
    },
    {
      "indent": 11,
      "text": "Figure 174: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图174：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "veCx9ece2orS7c_N",
      "zh-CHS": "veCx9ece2orS7c\\u N"
    },
    {
      "indent": 11,
      "text": "Figure 175: Initialization Vector, base64url-encoded",
      "zh-CHS": "图175：初始化向量，base64url编码"
    },
    {
      "indent": 3,
      "text": "WyJ2Y2FyZCIsW1sidmVyc2lvbiIse30sInRleHQiLCI0LjAiXSxbImZuIix7fS\nwidGV4dCIsIk1lcmlhZG9jIEJyYW5keWJ1Y2siXSxbIm4iLHt9LCJ0ZXh0Iixb\nIkJyYW5keWJ1Y2siLCJNZXJpYWRvYyIsIk1yLiIsIiJdXSxbImJkYXkiLHt9LC\nJ0ZXh0IiwiVEEgMjk4MiJdLFsiZ2VuZGVyIix7fSwidGV4dCIsIk0iXV1d",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "Figure 176: Additional Authenticated Data, base64url-encoded",
      "zh-CHS": "图176：附加认证数据，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.10.3. Encrypting the Key",
      "section_title": true,
      "zh-CHS": "5.10.3. 加密密钥"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 174) with the AES symmetric key (Figure 151) produces the following Encrypted Key:",
      "zh-CHS": "使用AES对称密钥（图151）在CEK上执行密钥加密操作（图174）会生成以下加密密钥："
    },
    {
      "indent": 3,
      "text": "4YiiQ_ZzH76TaIkJmYfRFgOV9MIpnx4X",
      "zh-CHS": "4Yiiqzzh76taikjmyfrfgov9mipnx4x"
    },
    {
      "indent": 15,
      "text": "Figure 177: Encrypted Key, base64url-encoded",
      "zh-CHS": "图177：加密密钥，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.10.4. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.10.4. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "zh-CHS": "加密内容之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 178, encoded to base64url [RFC4648] as Figure 179.",
      "zh-CHS": "o JWE保护头；该示例使用图178中的标题，编码为base64url[RFC4648]，如图179所示。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A128KW\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 178: JWE Protected Header JSON",
      "zh-CHS": "图178:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04MzMyLTQzZDktYTQ2OC\n04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 179: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图179:JWE保护标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext with the following:",
      "zh-CHS": "使用以下命令在明文上执行内容加密操作："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 174);",
      "zh-CHS": "o CEK（图174）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 175); and",
      "zh-CHS": "o 初始化向量（图175）；和"
    },
    {
      "indent": 3,
      "text": "o Concatenation of the JWE Protected Header (Figure 179), \".\", and the base64url [RFC4648] encoding of Figure 173 as authenticated data",
      "zh-CHS": "o 将JWE保护的报头（图179）、“”和图173的base64url[RFC4648]编码串联为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 180.",
      "zh-CHS": "o 图180中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 181.",
      "zh-CHS": "o 图181中的身份验证标签。"
    },
    {
      "indent": 3,
      "text": "Z_3cbr0k3bVM6N3oSNmHz7Lyf3iPppGf3Pj17wNZqteJ0Ui8p74SchQP8xygM1 oFRWCNzeIa6s6BcEtp8qEFiqTUEyiNkOWDNoF14T_4NFqF-p2Mx8zkbKxI7oPK 8KNarFbyxIDvICNqBLba-v3uzXBdB89fzOI-Lv4PjOFAQGHrgv1rjXAmKbgkft 9cB4WeyZw8MldbBhc-V_KWZslrsLNygon_JJWd_ek6LQn5NRehvApqf9ZrxB4a q3FXBxOxCys35PhCdaggy2kfUfl2OkwKnWUbgXVD1C6HxLIlqHhCwXDG59weHr RDQeHyMRoBljoV3X_bUTJDnKBFOod7nLz-cj48JMx3SnCZTpbQAkFV",
      "zh-CHS": "NfQf-p2Mx8zkbKxI7oPK-KNARFBYVICNQBLBA-v3uzXBdB89fzOI-LV4JOFAQGHRGV1RJXAMKBGKFT-9CB4WEYZW8LDBBHC-V KWZLRSLNYGON-JJJJWD-FxBY2KW9KW9KW9KW9KW9KW9KW9KW9KW9KW9KW9KW9KW9KW9KKW9KW9KW9KW9KW9KW9KKKW9KW9KW9KW9KW9KKKKW9KW9KW9KKKKKW9KW9KW9KKKW9H9H9H9H9H9H9KKKKKKKW9H9H9H9KKKKKKKKRDQeHyMRoBljoV3X_butjdnkbood7NLZ-cj48JMx3SnCZTpbQAkFV"
    },
    {
      "indent": 17,
      "text": "Figure 180: Ciphertext, base64url-encoded",
      "zh-CHS": "图180：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "vOaH_Rajnpy_3hOtqvZHRA",
      "zh-CHS": "瞧，拉金比·霍奇夫兹拉"
    },
    {
      "indent": 13,
      "text": "Figure 181: Authentication Tag, base64url-encoded",
      "zh-CHS": "图181：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.10.5. Output Results",
      "section_title": true,
      "zh-CHS": "5.10.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 179)",
      "zh-CHS": "o JWE保护头（图179）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 177)",
      "zh-CHS": "o 加密密钥（图177）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 175)",
      "zh-CHS": "o 初始化向量（图175）"
    },
    {
      "indent": 3,
      "text": "o Additional Authenticated Data (Figure 176)",
      "zh-CHS": "o 附加认证数据（图176）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 180)",
      "zh-CHS": "o 密文（图180）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 181)",
      "zh-CHS": "o 身份验证标签（图181）"
    },
    {
      "indent": 3,
      "text": "The JWE Compact Serialization is not presented because it does not support this use case.",
      "zh-CHS": "没有提供JWE Compact序列化，因为它不支持此用例。"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"4YiiQ_ZzH76TaIkJmYfRFgOV9MIpnx4X\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn\n      0\",\n  \"iv\": \"veCx9ece2orS7c_N\",\n  \"aad\": \"WyJ2Y2FyZCIsW1sidmVyc2lvbiIse30sInRleHQiLCI0LjAiXSxb\n      ImZuIix7fSwidGV4dCIsIk1lcmlhZG9jIEJyYW5keWJ1Y2siXSxbIm4i\n      LHt9LCJ0ZXh0IixbIkJyYW5keWJ1Y2siLCJNZXJpYWRvYyIsIk1yLiIs\n      IiJdXSxbImJkYXkiLHt9LCJ0ZXh0IiwiVEEgMjk4MiJdLFsiZ2VuZGVy\n      Iix7fSwidGV4dCIsIk0iXV1d\",\n  \"ciphertext\": \"Z_3cbr0k3bVM6N3oSNmHz7Lyf3iPppGf3Pj17wNZqteJ0\n      Ui8p74SchQP8xygM1oFRWCNzeIa6s6BcEtp8qEFiqTUEyiNkOWDNoF14\n      T_4NFqF-p2Mx8zkbKxI7oPK8KNarFbyxIDvICNqBLba-v3uzXBdB89fz\n      OI-Lv4PjOFAQGHrgv1rjXAmKbgkft9cB4WeyZw8MldbBhc-V_KWZslrs\n      LNygon_JJWd_ek6LQn5NRehvApqf9ZrxB4aq3FXBxOxCys35PhCdaggy\n      2kfUfl2OkwKnWUbgXVD1C6HxLIlqHhCwXDG59weHrRDQeHyMRoBljoV3\n      X_bUTJDnKBFOod7nLz-cj48JMx3SnCZTpbQAkFV\",\n  \"tag\": \"vOaH_Rajnpy_3hOtqvZHRA\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 182: General JWE JSON Serialization",
      "zh-CHS": "图182：通用JWE JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "zh-CHS": "使用平坦JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJhbGciOiJBMTI4S1ciLCJraWQiOiI4MWIyMDk2NS04Mz\n      MyLTQzZDktYTQ2OC04MjE2MGFkOTFhYzgiLCJlbmMiOiJBMTI4R0NNIn\n      0\",\n  \"encrypted_key\": \"4YiiQ_ZzH76TaIkJmYfRFgOV9MIpnx4X\",\n  \"aad\": \"WyJ2Y2FyZCIsW1sidmVyc2lvbiIse30sInRleHQiLCI0LjAiXSxb\n      ImZuIix7fSwidGV4dCIsIk1lcmlhZG9jIEJyYW5keWJ1Y2siXSxbIm4i\n      LHt9LCJ0ZXh0IixbIkJyYW5keWJ1Y2siLCJNZXJpYWRvYyIsIk1yLiIs\n      IiJdXSxbImJkYXkiLHt9LCJ0ZXh0IiwiVEEgMjk4MiJdLFsiZ2VuZGVy\n      Iix7fSwidGV4dCIsIk0iXV1d\",\n  \"iv\": \"veCx9ece2orS7c_N\",\n  \"ciphertext\": \"Z_3cbr0k3bVM6N3oSNmHz7Lyf3iPppGf3Pj17wNZqteJ0\n      Ui8p74SchQP8xygM1oFRWCNzeIa6s6BcEtp8qEFiqTUEyiNkOWDNoF14\n      T_4NFqF-p2Mx8zkbKxI7oPK8KNarFbyxIDvICNqBLba-v3uzXBdB89fz\n      OI-Lv4PjOFAQGHrgv1rjXAmKbgkft9cB4WeyZw8MldbBhc-V_KWZslrs\n      LNygon_JJWd_ek6LQn5NRehvApqf9ZrxB4aq3FXBxOxCys35PhCdaggy\n      2kfUfl2OkwKnWUbgXVD1C6HxLIlqHhCwXDG59weHrRDQeHyMRoBljoV3\n      X_bUTJDnKBFOod7nLz-cj48JMx3SnCZTpbQAkFV\",\n  \"tag\": \"vOaH_Rajnpy_3hOtqvZHRA\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Figure 183: Flattened JWE JSON Serialization",
      "zh-CHS": "图183：扁平化JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.11. Protecting Specific Header Fields",
      "section_title": true,
      "zh-CHS": "5.11. 保护特定的头字段"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content where only certain JOSE Header Parameters are protected. As this example includes parameters in the JWE Shared Unprotected Header, only the general JWE JSON Serialization and flattened JWE JSON Serialization are possible.",
      "zh-CHS": "此示例演示了仅保护某些JOSE标头参数的加密内容。由于此示例在JWE共享的无保护标头中包含参数，因此只有常规JWE JSON序列化和扁平化JWE JSON序列化是可能的。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.11.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.11.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的内容。"
    },
    {
      "indent": 3,
      "text": "o Recipient encryption key; this example uses the key from Figure 151.",
      "zh-CHS": "o 接收方加密密钥；此示例使用图151中的键。"
    },
    {
      "indent": 3,
      "text": "o Key encryption algorithm; this example uses \"A128KW\".",
      "zh-CHS": "o 密钥加密算法；本例使用“A128KW”。"
    },
    {
      "indent": 3,
      "text": "o Content encryption algorithm; this example uses \"A128GCM\".",
      "zh-CHS": "o 内容加密算法；本例使用“A128GCM”。"
    },
    {
      "indent": 0,
      "text": "5.11.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.11.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 184.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥（CEK）；此示例使用图184中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 185.",
      "zh-CHS": "o 初始化向量；此示例使用图185中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "WDgEptBmQs9ouUvArz6x6g",
      "zh-CHS": "WDgEptBmQs9ouUvArz6x6g"
    },
    {
      "indent": 11,
      "text": "Figure 184: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图184：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "WgEJsDS9bkoXQ3nR",
      "zh-CHS": "WgEJsDS9bkoXQ3nR"
    },
    {
      "indent": 11,
      "text": "Figure 185: Initialization Vector, base64url-encoded",
      "zh-CHS": "图185：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.11.3. Encrypting the Key",
      "section_title": true,
      "zh-CHS": "5.11.3. 加密密钥"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 184) with the AES symmetric key (Figure 151) produces the following Encrypted Key:",
      "zh-CHS": "使用AES对称密钥（图151）在CEK上执行密钥加密操作（图184）会生成以下加密密钥："
    },
    {
      "indent": 3,
      "text": "jJIcM9J-hbx3wnqhf5FlkEYos0sHsF0H",
      "zh-CHS": "jJIcM9J-hbx3wnqhf5FlkEYos0sHsF0H"
    },
    {
      "indent": 15,
      "text": "Figure 186: Encrypted Key, base64url-encoded",
      "zh-CHS": "图186：加密密钥，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.11.4. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.11.4. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "zh-CHS": "加密内容之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 187, encoded to base64url [RFC4648] as Figure 188.",
      "zh-CHS": "o JWE保护头；该示例使用图187中的头，编码为base64url[RFC4648]，如图188所示。"
    },
    {
      "indent": 3,
      "text": "{\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 187: JWE Protected Header JSON",
      "zh-CHS": "图187:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJlbmMiOiJBMTI4R0NNIn0",
      "zh-CHS": "eyJlbmMiOiJBMTI4R0NNIn0"
    },
    {
      "indent": 12,
      "text": "Figure 188: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图188:JWE保护标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext with the following:",
      "zh-CHS": "使用以下命令在明文上执行内容加密操作："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 184);",
      "zh-CHS": "o CEK（图184）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 185); and",
      "zh-CHS": "o 初始化向量（图185）；和"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 188) as authenticated data",
      "zh-CHS": "o JWE将头（图188）保护为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 189.",
      "zh-CHS": "o 图189中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 190.",
      "zh-CHS": "o 图190中的身份验证标签。"
    },
    {
      "indent": 3,
      "text": "lIbCyRmRJxnB2yLQOTqjCDKV3H30ossOw3uD9DPsqLL2DM3swKkjOwQyZtWsFL YMj5YeLht_StAn21tHmQJuuNt64T8D4t6C7kC9OCCJ1IHAolUv4MyOt80MoPb8 fZYbNKqplzYJgIL58g8N2v46OgyG637d6uuKPwhAnTGm_zWhqc_srOvgiLkzyF XPq1hBAURbc3-8BqeRb48iR1-_5g5UjWVD3lgiLCN_P7AW8mIiFvUNXBPJK3nO WL4teUPS8yHLbWeL83olU4UAgL48x-8dDkH23JykibVSQju-f7e-1xreHWXzWL Hs1NqBbre0dEwK3HX_xM0LjUz77Krppgegoutpf5qaKg3l-_xMINmf",
      "zh-CHS": "LibcyrmRjxNb2YLQoTqjCdkV3H30OSOW3UD9DPSql2DM3SWKKKJOWQYZTWSFL YMJ5YLJJJU64T8D4T6C7KCJ9OCCJ1HAOLUV4MYOKBKQLZYGIL58G8N2V46OGYG637D6UUUKWHKKKZYF XPQ1HBARBC3-8B8IrB8IrB8IrB8IrB8IrB8IrB8IrB8IrB8U5U5UJ8U5UJ8UK8UJ8UJ8UJ8UK8UJ8UJ8UK8UK8UK8UK8UK8UK8UJ8UJ8UK8UJ8UK8UJ8UK8UK8UJ8UJHs1NqBbre0dEwK3HX_xm0LJUZ77KRPGEGOUTPF5QAKG3L-_xMINmf"
    },
    {
      "indent": 17,
      "text": "Figure 189: Ciphertext, base64url-encoded",
      "zh-CHS": "图189：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "fNYLqpUe84KD45lvDiaBAQ",
      "zh-CHS": "fNYLqpUe84KD45lvDiaBAQ"
    },
    {
      "indent": 13,
      "text": "Figure 190: Authentication Tag, base64url-encoded",
      "zh-CHS": "图190：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.11.5. Output Results",
      "section_title": true,
      "zh-CHS": "5.11.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Shared Unprotected Header (Figure 191)",
      "zh-CHS": "o JWE共享未受保护的标头（图191）"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 188)",
      "zh-CHS": "o JWE保护头（图188）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 186)",
      "zh-CHS": "o 加密密钥（图186）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 185)",
      "zh-CHS": "o 初始化向量（图185）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 189)",
      "zh-CHS": "o 密文（图189）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 190)",
      "zh-CHS": "o 身份验证标签（图190）"
    },
    {
      "indent": 3,
      "text": "The JWE Compact Serialization is not presented because it does not support this use case.",
      "zh-CHS": "没有提供JWE Compact序列化，因为它不支持此用例。"
    },
    {
      "indent": 3,
      "text": "The following JWE Shared Unprotected Header is generated before assembling the output results:",
      "zh-CHS": "在组装输出结果之前，将生成以下JWE Shared Unprotected标头："
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A128KW\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "Figure 191: JWE Shared Unprotected Header JSON",
      "zh-CHS": "图191:JWE共享未受保护的头JSON"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"jJIcM9J-hbx3wnqhf5FlkEYos0sHsF0H\"\n    }\n  ],\n  \"unprotected\": {\n    \"alg\": \"A128KW\",\n    \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\"\n  },\n  \"protected\": \"eyJlbmMiOiJBMTI4R0NNIn0\",\n  \"iv\": \"WgEJsDS9bkoXQ3nR\",\n  \"ciphertext\": \"lIbCyRmRJxnB2yLQOTqjCDKV3H30ossOw3uD9DPsqLL2D\n      M3swKkjOwQyZtWsFLYMj5YeLht_StAn21tHmQJuuNt64T8D4t6C7kC9O\n      CCJ1IHAolUv4MyOt80MoPb8fZYbNKqplzYJgIL58g8N2v46OgyG637d6\n      uuKPwhAnTGm_zWhqc_srOvgiLkzyFXPq1hBAURbc3-8BqeRb48iR1-_5\n      g5UjWVD3lgiLCN_P7AW8mIiFvUNXBPJK3nOWL4teUPS8yHLbWeL83olU\n      4UAgL48x-8dDkH23JykibVSQju-f7e-1xreHWXzWLHs1NqBbre0dEwK3\n      HX_xM0LjUz77Krppgegoutpf5qaKg3l-_xMINmf\",\n  \"tag\": \"fNYLqpUe84KD45lvDiaBAQ\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 192: General JWE JSON Serialization",
      "zh-CHS": "图192：通用JWE JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "zh-CHS": "使用平坦JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"protected\": \"eyJlbmMiOiJBMTI4R0NNIn0\",\n  \"unprotected\": {\n    \"alg\": \"A128KW\",\n    \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\"\n  },\n  \"encrypted_key\": \"jJIcM9J-hbx3wnqhf5FlkEYos0sHsF0H\",\n  \"iv\": \"WgEJsDS9bkoXQ3nR\",\n  \"ciphertext\": \"lIbCyRmRJxnB2yLQOTqjCDKV3H30ossOw3uD9DPsqLL2D\n      M3swKkjOwQyZtWsFLYMj5YeLht_StAn21tHmQJuuNt64T8D4t6C7kC9O\n      CCJ1IHAolUv4MyOt80MoPb8fZYbNKqplzYJgIL58g8N2v46OgyG637d6\n      uuKPwhAnTGm_zWhqc_srOvgiLkzyFXPq1hBAURbc3-8BqeRb48iR1-_5\n      g5UjWVD3lgiLCN_P7AW8mIiFvUNXBPJK3nOWL4teUPS8yHLbWeL83olU\n      4UAgL48x-8dDkH23JykibVSQju-f7e-1xreHWXzWLHs1NqBbre0dEwK3\n      HX_xM0LjUz77Krppgegoutpf5qaKg3l-_xMINmf\",\n  \"tag\": \"fNYLqpUe84KD45lvDiaBAQ\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Figure 193: Flattened JWE JSON Serialization",
      "zh-CHS": "图193：扁平化JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.12. Protecting Content Only",
      "section_title": true,
      "zh-CHS": "5.12. 仅保护内容"
    },
    {
      "indent": 3,
      "text": "This example illustrates encrypting content where none of the JOSE header parameters are protected. As this example includes parameters only in the JWE Shared Unprotected Header, only the flattened JWE JSON Serialization and general JWE JSON Serialization are possible.",
      "zh-CHS": "此示例演示了在没有任何JOSE标头参数受保护的情况下加密内容。由于此示例仅在JWE共享的无保护头中包含参数，因此只有平坦的JWE JSON序列化和一般的JWE JSON序列化是可能的。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.12.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.12.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的内容。"
    },
    {
      "indent": 3,
      "text": "o Recipient encryption key; this example uses the key from Figure 151.",
      "zh-CHS": "o 接收方加密密钥；此示例使用图151中的键。"
    },
    {
      "indent": 3,
      "text": "o Key encryption algorithm; this example uses \"A128KW\".",
      "zh-CHS": "o 密钥加密算法；本例使用“A128KW”。"
    },
    {
      "indent": 3,
      "text": "o Content encryption algorithm; this example uses \"A128GCM\".",
      "zh-CHS": "o 内容加密算法；本例使用“A128GCM”。"
    },
    {
      "indent": 0,
      "text": "5.12.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.12.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key; this example the key from Figure 194.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥；此示例使用图194中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 195.",
      "zh-CHS": "o 初始化向量；此示例使用图195中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "KBooAFl30QPV3vkcZlXnzQ",
      "zh-CHS": "KBooAFl30QPV3vkcZlXnzQ"
    },
    {
      "indent": 11,
      "text": "Figure 194: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图194：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "YihBoVOGsR1l7jCD",
      "zh-CHS": "YihBoVOGsR1l7jCD"
    },
    {
      "indent": 11,
      "text": "Figure 195: Initialization Vector, base64url-encoded",
      "zh-CHS": "图195：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.12.3. Encrypting the Key",
      "section_title": true,
      "zh-CHS": "5.12.3. 加密密钥"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 194) with the AES symmetric key (Figure 151) produces the following Encrypted Key:",
      "zh-CHS": "使用AES对称密钥（图151）在CEK上执行密钥加密操作（图194）会生成以下加密密钥："
    },
    {
      "indent": 3,
      "text": "244YHfO_W7RMpQW81UjQrZcq5LSyqiPv",
      "zh-CHS": "244YHfO_W7RMpQW81UjQrZcq5LSyqiPv"
    },
    {
      "indent": 15,
      "text": "Figure 196: Encrypted Key, base64url-encoded",
      "zh-CHS": "图196：加密密钥，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.12.4. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.12.4. 加密内容"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 72) using the following:",
      "zh-CHS": "使用以下命令在纯文本上执行内容加密操作（图72）："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 194);",
      "zh-CHS": "o CEK（图194）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 195); and",
      "zh-CHS": "o 初始化向量（图195）；和"
    },
    {
      "indent": 3,
      "text": "o Empty string as authenticated data",
      "zh-CHS": "o 作为已验证数据的空字符串"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 197.",
      "zh-CHS": "o 图197中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 198.",
      "zh-CHS": "o 图198中的身份验证标签。"
    },
    {
      "indent": 3,
      "text": "qtPIMMaOBRgASL10dNQhOa7Gqrk7Eal1vwht7R4TT1uq-arsVCPaIeFwQfzrSS 6oEUWbBtxEasE0vC6r7sphyVziMCVJEuRJyoAHFSP3eqQPb4Ic1SDSqyXjw_L3 svybhHYUGyQuTmUQEDjgjJfBOifwHIsDsRPeBz1NomqeifVPq5GTCWFo5k_MNI QURR2Wj0AHC2k7JZfu2iWjUHLF8ExFZLZ4nlmsvJu_mvifMYiikfNfsZAudISO a6O73yPZtL04k_1FI7WDfrb2w7OqKLWDXzlpcxohPVOLQwpA3mFNRKdY-bQz4Z 4KX9lfz1cne31N4-8BKmojpw-OdQjKdLOGkC445Fb_K1tlDQXw2sBF",
      "zh-CHS": "qtPIMMaOBRgASL10dNQhOa7Gqrk7Eal1vwht7R4TT1uq ARSVCPAIEFQFZRSS 6OEUWBBTXEASE0VC6R7SPHYVZIMCVJEURJJJYOFSP3EQB4IC1DSQYXJJJJJJJJFBOIFWIDSRPEBZ1NOMIFFQQ5TCWFO5K5KWWWW2W0AHC2K7JZFZU2IWZJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ0FZYFZYF7ZL7FZL7W7WZZL7W7ZZL7WZZZL7WZL7WZZZL7WZZL7FZL7FZL7W7ZZ4KX9lfz1cne31N4-8BKmojpw-OdQjKdLOGkC445Fb_K1tlDQXw2sBF"
    },
    {
      "indent": 17,
      "text": "Figure 197: Ciphertext, base64url-encoded",
      "zh-CHS": "图197：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "e2m0Vm7JvjK2VpCKXS-kyg",
      "zh-CHS": "e2m0Vm7JvjK2VpCKXS kyg"
    },
    {
      "indent": 13,
      "text": "Figure 198: Authentication Tag, base64url-encoded",
      "zh-CHS": "图198：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.12.5. Output Results",
      "section_title": true,
      "zh-CHS": "5.12.5. 输出结果"
    },
    {
      "indent": 3,
      "text": "The JWE Compact Serialization is not presented because it does not support this use case.",
      "zh-CHS": "没有提供JWE Compact序列化，因为它不支持此用例。"
    },
    {
      "indent": 3,
      "text": "The following JWE Shared Unprotected Header is generated before assembling the output results:",
      "zh-CHS": "在组装输出结果之前，将生成以下JWE Shared Unprotected标头："
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A128KW\",\n  \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "Figure 199: JWE Shared Unprotected Header JSON",
      "zh-CHS": "图199:JWE共享未受保护的头JSON"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Shared Unprotected Header (Figure 199)",
      "zh-CHS": "o JWE共享未受保护的标头（图199）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 196)",
      "zh-CHS": "o 加密密钥（图196）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 195)",
      "zh-CHS": "o 初始化向量（图195）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 197)",
      "zh-CHS": "o 密文（图197）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 198)",
      "zh-CHS": "o 身份验证标签（图198）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"244YHfO_W7RMpQW81UjQrZcq5LSyqiPv\"\n    }\n  ],\n  \"unprotected\": {\n    \"alg\": \"A128KW\",\n    \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n    \"enc\": \"A128GCM\"\n  },\n  \"iv\": \"YihBoVOGsR1l7jCD\",\n  \"ciphertext\": \"qtPIMMaOBRgASL10dNQhOa7Gqrk7Eal1vwht7R4TT1uq-\n      arsVCPaIeFwQfzrSS6oEUWbBtxEasE0vC6r7sphyVziMCVJEuRJyoAHF\n      SP3eqQPb4Ic1SDSqyXjw_L3svybhHYUGyQuTmUQEDjgjJfBOifwHIsDs\n      RPeBz1NomqeifVPq5GTCWFo5k_MNIQURR2Wj0AHC2k7JZfu2iWjUHLF8\n      ExFZLZ4nlmsvJu_mvifMYiikfNfsZAudISOa6O73yPZtL04k_1FI7WDf\n      rb2w7OqKLWDXzlpcxohPVOLQwpA3mFNRKdY-bQz4Z4KX9lfz1cne31N4\n      -8BKmojpw-OdQjKdLOGkC445Fb_K1tlDQXw2sBF\",\n  \"tag\": \"e2m0Vm7JvjK2VpCKXS-kyg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 200: General JWE JSON Serialization",
      "zh-CHS": "图200：通用JWEJSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "zh-CHS": "使用平坦JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"unprotected\": {\n    \"alg\": \"A128KW\",\n    \"kid\": \"81b20965-8332-43d9-a468-82160ad91ac8\",\n    \"enc\": \"A128GCM\"\n  },\n  \"encrypted_key\": \"244YHfO_W7RMpQW81UjQrZcq5LSyqiPv\",\n  \"iv\": \"YihBoVOGsR1l7jCD\",\n  \"ciphertext\": \"qtPIMMaOBRgASL10dNQhOa7Gqrk7Eal1vwht7R4TT1uq-\n      arsVCPaIeFwQfzrSS6oEUWbBtxEasE0vC6r7sphyVziMCVJEuRJyoAHF\n      SP3eqQPb4Ic1SDSqyXjw_L3svybhHYUGyQuTmUQEDjgjJfBOifwHIsDs\n      RPeBz1NomqeifVPq5GTCWFo5k_MNIQURR2Wj0AHC2k7JZfu2iWjUHLF8\n      ExFZLZ4nlmsvJu_mvifMYiikfNfsZAudISOa6O73yPZtL04k_1FI7WDf\n      rb2w7OqKLWDXzlpcxohPVOLQwpA3mFNRKdY-bQz4Z4KX9lfz1cne31N4\n      -8BKmojpw-OdQjKdLOGkC445Fb_K1tlDQXw2sBF\",\n  \"tag\": \"e2m0Vm7JvjK2VpCKXS-kyg\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Figure 201: Flattened JWE JSON Serialization",
      "zh-CHS": "图201：扁平化JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "5.13. Encrypting to Multiple Recipients",
      "section_title": true,
      "zh-CHS": "5.13. 向多个收件人加密"
    },
    {
      "indent": 3,
      "text": "This example illustrates encryption content for multiple recipients. As this example has multiple recipients, only the general JWE JSON Serialization is possible.",
      "zh-CHS": "此示例演示了多个收件人的加密内容。由于此示例有多个收件人，因此只能进行一般的JWE JSON序列化。"
    },
    {
      "indent": 3,
      "text": "Note that RSAES-PKCS1-v1_5 uses random data to generate the ciphertext; it might not be possible to exactly replicate the results in this section.",
      "zh-CHS": "请注意，RSAES-PKCS1-v1_5使用随机数据生成密文；可能无法准确复制本节中的结果。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "5.13.1. Input Factors",
      "section_title": true,
      "zh-CHS": "5.13.1. 输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the Plaintext from Figure 72.",
      "zh-CHS": "o 明文内容；此示例使用图72中的纯文本。"
    },
    {
      "indent": 3,
      "text": "o Recipient keys; this example uses the following:",
      "zh-CHS": "o 收件人密钥；此示例使用以下内容："
    },
    {
      "indent": 6,
      "text": "* The RSA public key from Figure 73 for the first recipient.",
      "zh-CHS": "* 图73中第一个收件人的RSA公钥。"
    },
    {
      "indent": 6,
      "text": "* The EC public key from Figure 108 for the second recipient.",
      "zh-CHS": "* 图108中第二个接收者的EC公钥。"
    },
    {
      "indent": 6,
      "text": "* The AES symmetric key from Figure 138 for the third recipient.",
      "zh-CHS": "* 第三个接收者的AES对称密钥如图138所示。"
    },
    {
      "indent": 3,
      "text": "o Key encryption algorithms; this example uses the following:",
      "zh-CHS": "o 密钥加密算法；此示例使用以下内容："
    },
    {
      "indent": 6,
      "text": "* \"RSA1_5\" for the first recipient.",
      "zh-CHS": "* “RSA1_5”表示第一个收件人。"
    },
    {
      "indent": 6,
      "text": "* \"ECDH-ES+A256KW\" for the second recipient.",
      "zh-CHS": "* “ECDH-ES+256千瓦”用于第二个接收者。"
    },
    {
      "indent": 6,
      "text": "* \"A256GCMKW\" for the third recipient.",
      "zh-CHS": "* “A256GCMKW”用于第三个收件人。"
    },
    {
      "indent": 3,
      "text": "o Content encryption algorithm; this example uses \"A128CBC-HS256\".",
      "zh-CHS": "o 内容加密算法；本例使用“A128CBC-HS256”。"
    },
    {
      "indent": 0,
      "text": "5.13.2. Generated Factors",
      "section_title": true,
      "zh-CHS": "5.13.2. 生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 202.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥（CEK）；此示例使用图202中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 203.",
      "zh-CHS": "o 初始化向量；此示例使用图203中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "zXayeJ4gvm8NJr3IUInyokTUO-LbQNKEhe_zWlYbdpQ",
      "zh-CHS": "ZXAYEJ4GVM8NJR3IUINYOKTOO-LBQNKHE_zWlYbdpQ"
    },
    {
      "indent": 11,
      "text": "Figure 202: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图202：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "VgEIHY20EnzUtZFl2RpB1g",
      "zh-CHS": "VgEIHY20EnzUtZFl2RpB1g"
    },
    {
      "indent": 11,
      "text": "Figure 203: Initialization Vector, base64url-encoded",
      "zh-CHS": "图203：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "5.13.3. Encrypting the Key to the First Recipient",
      "section_title": true,
      "zh-CHS": "5.13.3. 加密第一个收件人的密钥"
    },
    {
      "indent": 3,
      "text": "Performing the \"RSA1_5\" key encryption operation over the CEK (Figure 202) with the first recipient's RSA key (Figure 73) produces the following Encrypted Key:",
      "zh-CHS": "使用第一个收件人的RSA密钥（图73）在CEK上执行“RSA1_5”密钥加密操作（图202）会生成以下加密密钥："
    },
    {
      "indent": 3,
      "text": "dYOD28kab0Vvf4ODgxVAJXgHcSZICSOp8M51zjwj4w6Y5G4XJQsNNIBiqyvUUA OcpL7S7-cFe7Pio7gV_Q06WmCSa-vhW6me4bWrBf7cHwEQJdXihidAYWVajJIa KMXMvFRMV6iDlRr076DFthg2_AV0_tSiV6xSEIFqt1xnYPpmP91tc5WJDOGb-w qjw0-b-S1laS11QVbuP78dQ7Fa0zAVzzjHX-xvyM2wxj_otxr9clN1LnZMbeYS rRicJK5xodvWgkpIdkMHo4LvdhRRvzoKzlic89jFWPlnBq_V4n5trGuExtp_-d bHcGlihqc_wGgho9fLMK8JOArYLcMDNQ",
      "zh-CHS": "2.一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府在一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的一个中国政府的GUEXTP_uudBHCGLIHQC_wGgho9fLMK8JOArYLcMDNQ"
    },
    {
      "indent": 9,
      "text": "Figure 204: Recipient #1 Encrypted Key, base64url-encoded",
      "zh-CHS": "图204：收件人#1加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "The following is generated after encrypting the CEK for the first recipient:",
      "zh-CHS": "为第一个收件人加密CEK后生成以下内容："
    },
    {
      "indent": 3,
      "text": "o Recipient JWE Unprotected Header from Figure 205.",
      "zh-CHS": "o 图205中的收件人JWE未受保护的标头。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RSA1_5\",\n  \"kid\": \"frodo.baggins@hobbiton.example\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "Figure 205: Recipient #1 JWE Per-Recipient Unprotected Header JSON",
      "zh-CHS": "图205：收件人#每个未受保护的收件人1个JWE头JSON"
    },
    {
      "indent": 3,
      "text": "The following is the assembled first recipient JSON:",
      "zh-CHS": "以下是组装的第一个收件人JSON："
    },
    {
      "indent": 3,
      "text": "{\n  \"encrypted_key\": \"dYOD28kab0Vvf4ODgxVAJXgHcSZICSOp8M51zjwj4w\n      6Y5G4XJQsNNIBiqyvUUAOcpL7S7-cFe7Pio7gV_Q06WmCSa-vhW6me4b\n      WrBf7cHwEQJdXihidAYWVajJIaKMXMvFRMV6iDlRr076DFthg2_AV0_t\n      SiV6xSEIFqt1xnYPpmP91tc5WJDOGb-wqjw0-b-S1laS11QVbuP78dQ7\n      Fa0zAVzzjHX-xvyM2wxj_otxr9clN1LnZMbeYSrRicJK5xodvWgkpIdk\n      MHo4LvdhRRvzoKzlic89jFWPlnBq_V4n5trGuExtp_-dbHcGlihqc_wG\n      gho9fLMK8JOArYLcMDNQ\",\n  \"header\": {\n    \"alg\": \"RSA1_5\",\n    \"kid\": \"frodo.baggins@hobbiton.example\"\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 206: Recipient #1 JSON",
      "zh-CHS": "图206：收件人#1 JSON"
    },
    {
      "indent": 0,
      "text": "5.13.4. Encrypting the Key to the Second Recipient",
      "section_title": true,
      "zh-CHS": "5.13.4. 将密钥加密到第二个收件人"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the CEK for the second recipient:",
      "zh-CHS": "在为第二个收件人加密CEK之前生成以下内容："
    },
    {
      "indent": 3,
      "text": "o Ephemeral EC private key on the same curve as the EC public key; this example uses the private key from Figure 207.",
      "zh-CHS": "o 与EC公钥在同一曲线上的短暂EC私钥；此示例使用图207中的私钥。"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"EC\",\n  \"crv\": \"P-384\",\n  \"x\": \"Uzdvk3pi5wKCRc1izp5_r0OjeqT-I68i8g2b8mva8diRhsE2xAn2Dt\n      MRb25Ma2CX\",\n  \"y\": \"VDrRyFJh-Kwd1EjAgmj5Eo-CTHAZ53MC7PjjpLioy3ylEjI1pOMbw9\n      1fzZ84pbfm\",\n  \"d\": \"1DKHfTv-PiifVw2VBHM_ZiVcwOMxkOyANS_lQHJcrDxVY3jhVCvZPw\n      MxJKIE793C\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "Figure 207: Ephemeral Private Key for Recipient #2, in JWK Format",
      "zh-CHS": "图207:JWK格式的收件人#2的临时私钥"
    },
    {
      "indent": 3,
      "text": "Performing the \"ECDH-ES+A256KW\" key encryption operation over the CEK (Figure 202) with the following:",
      "zh-CHS": "在CEK上执行“ECDH-ES+A256KW”密钥加密操作（图202），操作如下："
    },
    {
      "indent": 3,
      "text": "o Static Elliptic Curve public key (Figure 108).",
      "zh-CHS": "o 静态椭圆曲线公钥（图108）。"
    },
    {
      "indent": 3,
      "text": "o Ephemeral Elliptic Curve private key (Figure 207).",
      "zh-CHS": "o 临时椭圆曲线私钥（图207）。"
    },
    {
      "indent": 3,
      "text": "produces the following Encrypted Key:",
      "zh-CHS": "生成以下加密密钥："
    },
    {
      "indent": 3,
      "text": "ExInT0io9BqBMYF6-maw5tZlgoZXThD1zWKsHixJuw_elY4gSSId_w",
      "zh-CHS": "现有0IO9BQBMYF6-maw5tZlgoZXThD1zWKsHixJuw"
    },
    {
      "indent": 9,
      "text": "Figure 208: Recipient #2 Encrypted Key, base64url-encoded",
      "zh-CHS": "图208：收件人#2加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "The following is generated after encrypting the CEK for the second recipient:",
      "zh-CHS": "为第二个收件人加密CEK后生成以下内容："
    },
    {
      "indent": 3,
      "text": "o Recipient JWE Unprotected Header from Figure 209.",
      "zh-CHS": "o 图209中的收件人JWE未受保护的标头。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"ECDH-ES+A256KW\",\n  \"kid\": \"peregrin.took@tuckborough.example\",\n  \"epk\": {\n    \"kty\": \"EC\",\n    \"crv\": \"P-384\",\n    \"x\": \"Uzdvk3pi5wKCRc1izp5_r0OjeqT-I68i8g2b8mva8diRhsE2xAn2\n        DtMRb25Ma2CX\",\n    \"y\": \"VDrRyFJh-Kwd1EjAgmj5Eo-CTHAZ53MC7PjjpLioy3ylEjI1pOMb\n        w91fzZ84pbfm\"\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "Figure 209: Recipient #2 JWE Per-Recipient Unprotected Header JSON",
      "zh-CHS": "图209：收件人#每个收件人2个JWE未受保护的头JSON"
    },
    {
      "indent": 3,
      "text": "The following is the assembled second recipient JSON:",
      "zh-CHS": "以下是组装的第二个收件人JSON："
    },
    {
      "indent": 3,
      "text": "{\n  \"encrypted_key\": \"ExInT0io9BqBMYF6-maw5tZlgoZXThD1zWKsHixJuw\n      _elY4gSSId_w\",\n  \"header\": {\n    \"alg\": \"ECDH-ES+A256KW\",\n    \"kid\": \"peregrin.took@tuckborough.example\",\n    \"epk\": {\n      \"kty\": \"EC\",\n      \"crv\": \"P-384\",\n      \"x\": \"Uzdvk3pi5wKCRc1izp5_r0OjeqT-I68i8g2b8mva8diRhsE2xA\n          n2DtMRb25Ma2CX\",\n      \"y\": \"VDrRyFJh-Kwd1EjAgmj5Eo-CTHAZ53MC7PjjpLioy3ylEjI1pO\n          Mbw91fzZ84pbfm\"\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 210: Recipient #2 JSON",
      "zh-CHS": "图210：收件人#2"
    },
    {
      "indent": 0,
      "text": "5.13.5. Encrypting the Key to the Third Recipient",
      "section_title": true,
      "zh-CHS": "5.13.5. 向第三个收件人加密密钥"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the CEK for the third recipient:",
      "zh-CHS": "在为第三个收件人加密CEK之前生成以下内容："
    },
    {
      "indent": 3,
      "text": "o Initialization Vector for key wrapping; this example uses the Initialization Vector from Figure 211.",
      "zh-CHS": "o 密钥包装的初始化向量；此示例使用图211中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "AvpeoPZ9Ncn9mkBn",
      "zh-CHS": "AvpeoPZ9Ncn9mkBn"
    },
    {
      "indent": 5,
      "text": "Figure 211: Recipient #2 Initialization Vector for Key Wrapping, base64url-encoded",
      "zh-CHS": "图211：密钥包装的收件人#2初始化向量，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the \"A256GCMKW\" key encryption operation over the CEK (Figure 202) with the following:",
      "zh-CHS": "在CEK上执行“A256GCMKW”密钥加密操作（图202），操作如下："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key (Figure 138); and",
      "zh-CHS": "o AES对称密钥（图138）；和"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 211)",
      "zh-CHS": "o 初始化向量（图211）"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Encrypted Key from Figure 212.",
      "zh-CHS": "o 图212中的加密密钥。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 213.",
      "zh-CHS": "o 图213中的身份验证标签。"
    },
    {
      "indent": 3,
      "text": "a7CclAejo_7JSuPB8zeagxXRam8dwCfmkt9-WyTpS1E",
      "zh-CHS": "a7CclAejo_7JSuPB8zeagxXRam8dwCfmkt9-WyTpS1E"
    },
    {
      "indent": 9,
      "text": "Figure 212: Recipient #3 Encrypted Key, base64url-encoded",
      "zh-CHS": "图212：收件人#3加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "59Nqh1LlYtVIhfD3pgRGvw",
      "zh-CHS": "59Nqh1LlYtVIhfD3pgRGvw"
    },
    {
      "indent": 6,
      "text": "Figure 213: Recipient #3 Authentication Tag from Key Wrapping, base64url-encoded",
      "zh-CHS": "图213：密钥包装的收件人#3身份验证标记，base64url编码"
    },
    {
      "indent": 3,
      "text": "The following is generated after encrypting the CEK for the third recipient:",
      "zh-CHS": "为第三个收件人加密CEK后生成以下内容："
    },
    {
      "indent": 3,
      "text": "o Recipient JWE Unprotected Header; this example uses the header from Figure 214.",
      "zh-CHS": "o 收件人JWE未受保护的标头；此示例使用图214中的标题。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"A256GCMKW\",\n  \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n  \"tag\": \"59Nqh1LlYtVIhfD3pgRGvw\",\n  \"iv\": \"AvpeoPZ9Ncn9mkBn\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "Figure 214: Recipient #3 JWE Per-Recipient Unprotected Header JSON",
      "zh-CHS": "图214：收件人#3 JWE每个未受保护的收件人头JSON"
    },
    {
      "indent": 3,
      "text": "The following is the assembled third recipient JSON:",
      "zh-CHS": "以下是组装的第三个收件人JSON："
    },
    {
      "indent": 3,
      "text": "{\n  \"encrypted_key\": \"a7CclAejo_7JSuPB8zeagxXRam8dwCfmkt9-WyTpS1\n      E\",\n  \"header\": {\n    \"alg\": \"A256GCMKW\",\n    \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n    \"tag\": \"59Nqh1LlYtVIhfD3pgRGvw\",\n    \"iv\": \"AvpeoPZ9Ncn9mkBn\"\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 23,
      "text": "Figure 215: Recipient #3 JSON",
      "zh-CHS": "图215：收件人#3"
    },
    {
      "indent": 0,
      "text": "5.13.6. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "5.13.6. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the content:",
      "zh-CHS": "加密内容之前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 216, encoded to base64url [RFC4648] as Figure 217.",
      "zh-CHS": "o JWE保护头；该示例使用图216中的头，编码为base64url[RFC4648]，如图217所示。"
    },
    {
      "indent": 3,
      "text": "{\n  \"enc\": \"A128CBC-HS256\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 216: JWE Protected Header JSON",
      "zh-CHS": "图216:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJlbmMiOiJBMTI4Q0JDLUhTMjU2In0",
      "zh-CHS": "eyJlbmMiOiJBMTI4Q0JDLUhTMjU2In0"
    },
    {
      "indent": 12,
      "text": "Figure 217: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图217:JWE保护标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 72) with the following:",
      "zh-CHS": "使用以下命令在明文上执行内容加密操作（图72）："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 202),",
      "zh-CHS": "o CEK（图202），"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 203), and",
      "zh-CHS": "o 初始化向量（图203），以及"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 217) as the authenticated data",
      "zh-CHS": "o JWE保护头（图217）作为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 218.",
      "zh-CHS": "o 图218中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 219.",
      "zh-CHS": "o 图219中的身份验证标记。"
    },
    {
      "indent": 3,
      "text": "ajm2Q-OpPXCr7-MHXicknb1lsxLdXxK_yLds0KuhJzfWK04SjdxQeSw2L9mu3a\n_k1C55kCQ_3xlkcVKC5yr__Is48VOoK0k63_QRM9tBURMFqLByJ8vOYQX0oJW4\nVUHJLmGhF-tVQWB7Kz8mr8zeE7txF0MSaP6ga7-siYxStR7_G07Thd1jh-zGT0\nwxM5g-VRORtq0K6AXpLlwEqRp7pkt2zRM0ZAXqSpe1O6FJ7FHLDyEFnD-zDIZu\nkLpCbzhzMDLLw2-8I14FQrgi-iEuzHgIJFIJn2wh9Tj0cg_kOZy9BqMRZbmYXM\nY9YQjorZ_P_JYG3ARAIF3OjDNqpdYe-K_5Q5crGJSDNyij_ygEiItR5jssQVH2\nofDQdLChtazE",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 218: Ciphertext, base64url-encoded",
      "zh-CHS": "图218：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "BESYyFN7T09KY7i8zKs5_g",
      "zh-CHS": "BESYyFN7T09KY7i8zKs5_g"
    },
    {
      "indent": 13,
      "text": "Figure 219: Authentication Tag, base64url-encoded",
      "zh-CHS": "图219：身份验证标签，base64url编码"
    },
    {
      "indent": 3,
      "text": "The following is generated after encrypting the Plaintext:",
      "zh-CHS": "加密明文后生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Shared Unprotected Header parameters; this example uses the header from Figure 220.",
      "zh-CHS": "o JWE共享未受保护的头参数；此示例使用图220中的标题。"
    },
    {
      "indent": 3,
      "text": "{\n  \"cty\": \"text/plain\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "Figure 220: JWE Shared Unprotected Header JSON",
      "zh-CHS": "图220:JWE共享未受保护的头JSON"
    },
    {
      "indent": 0,
      "text": "5.13.7. Output Results",
      "section_title": true,
      "zh-CHS": "5.13.7. 输出结果"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o Recipient #1 JSON (Figure 206)",
      "zh-CHS": "o 收件人#1 JSON（图206）"
    },
    {
      "indent": 3,
      "text": "o Recipient #2 JSON (Figure 210)",
      "zh-CHS": "o 收件人#2 JSON（图210）"
    },
    {
      "indent": 3,
      "text": "o Recipient #3 JSON (Figure 215)",
      "zh-CHS": "o 收件人#3 JSON（图215）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 203)",
      "zh-CHS": "o 初始化向量（图203）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 218)",
      "zh-CHS": "o 密文（图218）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 219)",
      "zh-CHS": "o 身份验证标签（图219）"
    },
    {
      "indent": 3,
      "text": "The JWE Compact Serialization is not presented because it does not support this use case; the flattened JWE JSON Serialization is not presented because there is more than one recipient.",
      "zh-CHS": "没有提供JWE紧凑序列化，因为它不支持此用例；由于存在多个收件人，因此未显示平坦的JWE JSON序列化。"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"dYOD28kab0Vvf4ODgxVAJXgHcSZICSOp8M51zj\n          wj4w6Y5G4XJQsNNIBiqyvUUAOcpL7S7-cFe7Pio7gV_Q06WmCSa-\n          vhW6me4bWrBf7cHwEQJdXihidAYWVajJIaKMXMvFRMV6iDlRr076\n          DFthg2_AV0_tSiV6xSEIFqt1xnYPpmP91tc5WJDOGb-wqjw0-b-S\n          1laS11QVbuP78dQ7Fa0zAVzzjHX-xvyM2wxj_otxr9clN1LnZMbe\n          YSrRicJK5xodvWgkpIdkMHo4LvdhRRvzoKzlic89jFWPlnBq_V4n\n          5trGuExtp_-dbHcGlihqc_wGgho9fLMK8JOArYLcMDNQ\",\n      \"header\": {\n        \"alg\": \"RSA1_5\",\n        \"kid\": \"frodo.baggins@hobbiton.example\"\n      }\n    },\n    {\n      \"encrypted_key\": \"ExInT0io9BqBMYF6-maw5tZlgoZXThD1zWKsHi\n          xJuw_elY4gSSId_w\",\n      \"header\": {\n        \"alg\": \"ECDH-ES+A256KW\",\n        \"kid\": \"peregrin.took@tuckborough.example\",\n        \"epk\": {\n          \"kty\": \"EC\",\n          \"crv\": \"P-384\",\n          \"x\": \"Uzdvk3pi5wKCRc1izp5_r0OjeqT-I68i8g2b8mva8diRhs\n              E2xAn2DtMRb25Ma2CX\",\n          \"y\": \"VDrRyFJh-Kwd1EjAgmj5Eo-CTHAZ53MC7PjjpLioy3ylEj\n              I1pOMbw91fzZ84pbfm\"\n        }\n      }\n    },\n    {\n      \"encrypted_key\": \"a7CclAejo_7JSuPB8zeagxXRam8dwCfmkt9-Wy\n          TpS1E\",\n      \"header\": {\n        \"alg\": \"A256GCMKW\",\n        \"kid\": \"18ec08e1-bfa9-4d95-b205-2b4dd1d4321d\",\n        \"tag\": \"59Nqh1LlYtVIhfD3pgRGvw\",\n        \"iv\": \"AvpeoPZ9Ncn9mkBn\"\n      }\n    }\n  ],\n  \"unprotected\": {\n    \"cty\": \"text/plain\"\n  },\n  \"protected\": \"eyJlbmMiOiJBMTI4Q0JDLUhTMjU2In0\",",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "  \"iv\": \"VgEIHY20EnzUtZFl2RpB1g\",\n  \"ciphertext\": \"ajm2Q-OpPXCr7-MHXicknb1lsxLdXxK_yLds0KuhJzfWK\n      04SjdxQeSw2L9mu3a_k1C55kCQ_3xlkcVKC5yr__Is48VOoK0k63_QRM\n      9tBURMFqLByJ8vOYQX0oJW4VUHJLmGhF-tVQWB7Kz8mr8zeE7txF0MSa\n      P6ga7-siYxStR7_G07Thd1jh-zGT0wxM5g-VRORtq0K6AXpLlwEqRp7p\n      kt2zRM0ZAXqSpe1O6FJ7FHLDyEFnD-zDIZukLpCbzhzMDLLw2-8I14FQ\n      rgi-iEuzHgIJFIJn2wh9Tj0cg_kOZy9BqMRZbmYXMY9YQjorZ_P_JYG3\n      ARAIF3OjDNqpdYe-K_5Q5crGJSDNyij_ygEiItR5jssQVH2ofDQdLCht\n      azE\",\n  \"tag\": \"BESYyFN7T09KY7i8zKs5_g\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 221: General JWE JSON Serialization",
      "zh-CHS": "图221：通用JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "6. Nesting Signatures and Encryption",
      "section_title": true,
      "zh-CHS": "6. 嵌套签名和加密"
    },
    {
      "indent": 3,
      "text": "This example illustrates nesting a JSON Web Signature (JWS) structure within a JSON Web Encryption (JWE) structure. The signature uses the \"PS256\" (RSASSA-PSS) algorithm; the encryption uses the \"RSA-OAEP\" (RSAES-OAEP) key encryption algorithm and the \"A128GCM\" (AES-GCM) content encryption algorithm.",
      "zh-CHS": "此示例演示了在JSON Web加密（JWE）结构中嵌套JSON Web签名（JWS）结构。签名使用“PS256”（RSASSA-PSS）算法；加密使用“RSA-OAEP”（RSAES-OAEP）密钥加密算法和“A128GCM”（AES-GCM）内容加密算法。"
    },
    {
      "indent": 3,
      "text": "Note that RSASSA-PSS uses random data to generate the signature, and RSAES-OAEP uses random data to generate the ciphertext; it might not be possible to exactly replicate the results in this section.",
      "zh-CHS": "注意，RSASSA-PSS使用随机数据生成签名，RSAES-OAEP使用随机数据生成密文；可能无法准确复制本节中的结果。"
    },
    {
      "indent": 3,
      "text": "Note that whitespace is added for readability as described in Section 1.1.",
      "zh-CHS": "请注意，如第1.1节所述，添加空格是为了可读性。"
    },
    {
      "indent": 0,
      "text": "6.1. Signing Input Factors",
      "section_title": true,
      "zh-CHS": "6.1. 符号输入因素"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the signing operation:",
      "zh-CHS": "在开始签名操作之前，将提供以下内容："
    },
    {
      "indent": 3,
      "text": "o Payload content; this example uses the JSON Web Token [JWT] content from Figure 222, encoded as base64url [RFC4648] to produce Figure 223.",
      "zh-CHS": "o 有效载荷内容；本例使用图222中的JSON Web令牌[JWT]内容（编码为base64url[RFC4648]）生成图223。"
    },
    {
      "indent": 3,
      "text": "o RSA private key; this example uses the key from Figure 224.",
      "zh-CHS": "o RSA私钥；此示例使用图224中的键。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"PS256\".",
      "zh-CHS": "o “PS256”的“alg”参数。"
    },
    {
      "indent": 3,
      "text": "{\n  \"iss\": \"hobbiton.example\",\n  \"exp\": 1300819380,\n  \"http://example.com/is_root\": true\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 222: Payload Content, in JSON Format",
      "zh-CHS": "图222：JSON格式的有效负载内容"
    },
    {
      "indent": 3,
      "text": "eyJpc3MiOiJob2JiaXRvbi5leGFtcGxlIiwiZXhwIjoxMzAwODE5MzgwLCJodH\nRwOi8vZXhhbXBsZS5jb20vaXNfcm9vdCI6dHJ1ZX0",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "Figure 223: Payload Content, base64url-encoded",
      "zh-CHS": "图223：负载内容，base64url编码"
    },
    {
      "indent": 3,
      "text": "{\n  \"kty\": \"RSA\",\n  \"kid\": \"hobbiton.example\",\n  \"use\": \"sig\",\n  \"n\": \"kNrPIBDXMU6fcyv5i-QHQAQ-K8gsC3HJb7FYhYaw8hXbNJa-t8q0lD\n      KwLZgQXYV-ffWxXJv5GGrlZE4GU52lfMEegTDzYTrRQ3tepgKFjMGg6I\n      y6fkl1ZNsx2gEonsnlShfzA9GJwRTmtKPbk1s-hwx1IU5AT-AIelNqBg\n      cF2vE5W25_SGGBoaROVdUYxqETDggM1z5cKV4ZjDZ8-lh4oVB07bkac6\n      LQdHpJUUySH_Er20DXx30Kyi97PciXKTS-QKXnmm8ivyRCmux22ZoPUi\n      nd2BKC5OiG4MwALhaL2Z2k8CsRdfy-7dg7z41Rp6D0ZeEvtaUp4bX4aK\n      raL4rTfw\",\n  \"e\": \"AQAB\",\n  \"d\": \"ZLe_TIxpE9-W_n2VBa-HWvuYPtjvxwVXClJFOpJsdea8g9RMx34qEO\n      EtnoYc2un3CZ3LtJi-mju5RAT8YSc76YJds3ZVw0UiO8mMBeG6-iOnvg\n      obobNx7K57-xjTJZU72EjOr9kB7z6ZKwDDq7HFyCDhUEcYcHFVc7iL_6\n      TibVhAhOFONWlqlJgEgwVYd0rybNGKifdnpEbwyHoMwY6HM1qvnEFgP7\n      iZ0YzHUT535x6jj4VKcdA7ZduFkhUauysySEW7mxZM6fj1vdjJIy9LD1\n      fIz30Xv4ckoqhKF5GONU6tNmMmNgAD6gIViyEle1PrIxl1tBhCI14bRW\n      -zrpHgAQ\",\n  \"p\": \"yKWYoNIAqwMRQlgIBOdT1NIcbDNUUs2Rh-pBaxD_mIkweMt4Mg-0-B\n      2iSYvMrs8horhonV7vxCQagcBAATGW-hAafUehWjxWSH-3KccRM8toL4\n      e0q7M-idRDOBXSoe7Z2-CV2x_ZCY3RP8qp642R13WgXqGDIM4MbUkZSj\n      cY9-c\",\n  \"q\": \"uND4o15V30KDzf8vFJw589p1vlQVQ3NEilrinRUPHkkxaAzDzccGgr\n      WMWpGxGFFnNL3w5CqPLeU76-5IVYQq0HwYVl0hVXQHr7sgaGu-483Ad3\n      ENcL23FrOnF45m7_2ooAstJDe49MeLTTQKrSIBl_SKvqpYvfSPTczPcZ\n      kh9Kk\",\n  \"dp\": \"jmTnEoq2qqa8ouaymjhJSCnsveUXnMQC2gAneQJRQkFqQu-zV2PKP\n      KNbPvKVyiF5b2-L3tM3OW2d2iNDyRUWXlT7V5l0KwPTABSTOnTqAmYCh\n      Gi8kXXdlhcrtSvXldBakC6saxwI_TzGGY2MVXzc2ZnCvCXHV4qjSxOrf\n      P3pHFU\",\n  \"dq\": \"R9FUvU88OVzEkTkXl3-5-WusE4DjHmndeZIlu3rifBdfLpq_P-iWP\n      BbGaq9wzQ1c-J7SzCdJqkEJDv5yd2C7rnZ6kpzwBh_nmL8zscAk1qsun\n      nt9CJGAYz7-sGWy1JGShFazfP52ThB4rlCJ0YuEaQMrIzpY77_oLAhpm\n      DA0hLk\",\n  \"qi\": \"S8tC7ZknW6hPITkjcwttQOPLVmRfwirRlFAViuDb8NW9CrV_7F2Oq\n      UZCqmzHTYAumwGFHI1WVRep7anleWaJjxC_1b3fq_al4qH3Pe-EKiHg6\n      IMazuRtZLUROcThrExDbF5dYbsciDnfRUWLErZ4N1Be0bnxYuPqxwKd9\n      QZwMo0\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 224: RSA 2048-Bit Private Key, in JWK Format",
      "zh-CHS": "图224:JWK格式的RSA 2048位私钥"
    },
    {
      "indent": 0,
      "text": "6.2. Signing Operation",
      "section_title": true,
      "zh-CHS": "6.2. 签名操作"
    },
    {
      "indent": 3,
      "text": "The following is generated to complete the signing operation:",
      "zh-CHS": "生成以下内容以完成签名操作："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header; this example uses the header from Figure 225, encoded using base64url [RFC4648] to produce Figure 226.",
      "zh-CHS": "o JWS保护头；此示例使用图225中的标题，使用base64url[RFC4648]编码以生成图226。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"PS256\",\n  \"typ\": \"JWT\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 225: JWS Protected Header JSON",
      "zh-CHS": "图225:JWS保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 226: JWS Protected Header, base64url-encoded",
      "zh-CHS": "图226:JWS保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the signature operation over the combined JWS Protected Header (Figure 226) and payload content (Figure 222) produces the following signature:",
      "zh-CHS": "在组合的JWS保护头（图226）和有效负载内容（图222）上执行签名操作会产生以下签名："
    },
    {
      "indent": 3,
      "text": "dPpMqwRZxFYi1UfcDAaf8M99o7kwUWtiXZ-ByvVuJih4MhJ_aZqciprz0OWaIA kIvn1qskChirjKvY9ESZNUCP4JjvfyPS-nqjJxYoA5ztWOyFk2cZNIPXjcJXSQ wXPO9tEe-v4VSqgD0aKHqPxYog4N6Cz1lKph1U1sYDSI67_bLL7elg_vkjfMp5 _W5l5LuUYGMeh6hxQIaIUXf9EwV2JmvTMuZ-vBOWy0Sniy1EFo72CRTvmtrIf5 AROo5MNliY3KtUxeP-SOmD-LEYwW9SlkohYzMVAZDDOrVbv7KVRHpeYNaK75KE QqdCEEkS_rskZS-Qtt_nlegTWh1mEYaA",
      "zh-CHS": "2.在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，一个研究领域，在一个研究一个研究领域，一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，一个研究领域，在一个研究领域，一个研究领域，在一个研究领域，一个研究一个研究一个研究领域，一个研究领域，一个研究一个研究一个关于关于关于一个关于一个关于一个关于关于一个关于关于关于关于可用于rskZS-Qtt-nlegTWh1mEYaA"
    },
    {
      "indent": 15,
      "text": "Figure 227: JWS Signature, base64url-encoded",
      "zh-CHS": "图227:JWS签名，base64url编码"
    },
    {
      "indent": 0,
      "text": "6.3. Signing Output",
      "section_title": true,
      "zh-CHS": "6.3. 签名输出"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWS object:",
      "zh-CHS": "以下内容构成生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "o JWS Protected Header (Figure 226)",
      "zh-CHS": "o JWS保护头（图226）"
    },
    {
      "indent": 3,
      "text": "o Payload content (Figure 223)",
      "zh-CHS": "o 有效载荷内容（图223）"
    },
    {
      "indent": 3,
      "text": "o Signature (Figure 227)",
      "zh-CHS": "o 签名（图227）"
    },
    {
      "indent": 3,
      "text": "The resulting JWS object using the JWS Compact Serialization (which is the plaintext input to the following encryption operation):",
      "zh-CHS": "使用JWS压缩序列化（以下加密操作的明文输入）生成的JWS对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9 . eyJpc3MiOiJob2JiaXRvbi5leGFtcGxlIiwiZXhwIjoxMzAwODE5MzgwLCJodH RwOi8vZXhhbXBsZS5jb20vaXNfcm9vdCI6dHJ1ZX0 . dPpMqwRZxFYi1UfcDAaf8M99o7kwUWtiXZ-ByvVuJih4MhJ_aZqciprz0OWaIA kIvn1qskChirjKvY9ESZNUCP4JjvfyPS-nqjJxYoA5ztWOyFk2cZNIPXjcJXSQ wXPO9tEe-v4VSqgD0aKHqPxYog4N6Cz1lKph1U1sYDSI67_bLL7elg_vkjfMp5 _W5l5LuUYGMeh6hxQIaIUXf9EwV2JmvTMuZ-vBOWy0Sniy1EFo72CRTvmtrIf5 AROo5MNliY3KtUxeP-SOmD-LEYwW9SlkohYzMVAZDDOrVbv7KVRHpeYNaK75KE QqdCEEkS_rskZS-Qtt_nlegTWh1mEYaA",
      "zh-CHS": "eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9。EYJPC3MIOIJOB2JIAXRVBI5LEGFTCGCXLIIWIZXHWIJOXMZAWODE5MZGLCJODH RWOI8VZXHHBXBSS5JB20VAXNFCM9VDCI6DHJ1ZX0。2.在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，一个研究领域，在一个研究一个研究领域，一个研究领域，在一个研究领域，在一个研究领域，在一个研究领域，一个研究领域，在一个研究领域，一个研究领域，在一个研究领域，一个研究一个研究一个研究领域，一个研究领域，一个研究一个研究一个关于关于关于一个关于一个关于一个关于关于一个关于关于关于关于可用于rskZS-Qtt-nlegTWh1mEYaA"
    },
    {
      "indent": 19,
      "text": "Figure 228: JWS Compact Serialization",
      "zh-CHS": "图228:JWS紧凑序列化"
    },
    {
      "indent": 0,
      "text": "6.4. Encryption Input Factors",
      "section_title": true,
      "zh-CHS": "6.4. 加密输入因子"
    },
    {
      "indent": 3,
      "text": "The following are supplied before beginning the encryption process:",
      "zh-CHS": "在开始加密过程之前，将提供以下信息："
    },
    {
      "indent": 3,
      "text": "o Plaintext content; this example uses the content from Figure 228.",
      "zh-CHS": "o 明文内容；此示例使用图228中的内容。"
    },
    {
      "indent": 3,
      "text": "o RSA public key; this example uses the key from Figure 84.",
      "zh-CHS": "o RSA公钥；此示例使用图84中的键。"
    },
    {
      "indent": 3,
      "text": "o \"alg\" parameter of \"RSA-OAEP\".",
      "zh-CHS": "o “RSA-OAEP”的“alg”参数。"
    },
    {
      "indent": 3,
      "text": "o \"enc\" parameter of \"A128GCM\".",
      "zh-CHS": "o “A128GCM”的“enc”参数。"
    },
    {
      "indent": 0,
      "text": "6.5. Encryption Generated Factors",
      "section_title": true,
      "zh-CHS": "6.5. 加密生成因素"
    },
    {
      "indent": 3,
      "text": "The following are generated before encrypting:",
      "zh-CHS": "加密前会生成以下内容："
    },
    {
      "indent": 3,
      "text": "o AES symmetric key as the Content Encryption Key (CEK); this example uses the key from Figure 229.",
      "zh-CHS": "o AES对称密钥作为内容加密密钥（CEK）；此示例使用图229中的键。"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector; this example uses the Initialization Vector from Figure 230.",
      "zh-CHS": "o 初始化向量；此示例使用图230中的初始化向量。"
    },
    {
      "indent": 3,
      "text": "0RHSNYwN-6-2QBGsYTZLSQ",
      "zh-CHS": "0RHSNYwN-6-2QBGsYTZLSQ"
    },
    {
      "indent": 11,
      "text": "Figure 229: Content Encryption Key, base64url-encoded",
      "zh-CHS": "图229：内容加密密钥，base64url编码"
    },
    {
      "indent": 3,
      "text": "GbX1i9kXz0sxXPmA",
      "zh-CHS": "GbX1i9kXz0sxXPmA"
    },
    {
      "indent": 11,
      "text": "Figure 230: Initialization Vector, base64url-encoded",
      "zh-CHS": "图230：初始化向量，base64url编码"
    },
    {
      "indent": 0,
      "text": "6.6. Encrypting the Key",
      "section_title": true,
      "zh-CHS": "6.6. 加密密钥"
    },
    {
      "indent": 3,
      "text": "Performing the key encryption operation over the CEK (Figure 229) with the RSA key (Figure 84) produces the following Encrypted Key:",
      "zh-CHS": "使用RSA密钥（图84）在CEK上执行密钥加密操作（图229）会生成以下加密密钥："
    },
    {
      "indent": 3,
      "text": "a0JHRoITfpX4qRewImjlStn8m3CPxBV1ueYlVhjurCyrBg3I7YhCRYjphDOOS4 E7rXbr2Fn6NyQq-A-gqT0FXqNjVOGrG-bi13mwy7RoYhjTkBEC6P7sMYMXXx4g zMedpiJHQVeyI-zkZV7A9matpgevAJWrXzOUysYGTtwoSN6gtUVtlLaivjvb21 O0ul4YxSHV-ByK1kyeetRp_fuYJxHoKLQL9P424sKx2WGYb4zsBIPF4ssl_e5I R7nany-25_UmC2urosNkoFz9cQ82MypZP8gqbQJyPN-Fpp4Z-5o6yV64x6yzDU F_5JCIdl-Qv6H5dMVIY7q1eKpXcV1lWO_2FefEBqXxXvIjLeZivjNkzogCq3-I apSjVFnMjBxjpYLT8muaawo1yy1XXMuinIpNcOY3n4KKrXLrCcteX85m4IIHMZ a38s1Hpr56fPPseMA-Jltmt-a9iEDtOzhtxz8AXy9tsCAZV2XBWNG8c3kJusAa mBKOYwfk7JhLRDgOnJjlJLhn7TI4UxDp9dCmUXEN6z0v23W15qJIEXNJtqnblp ymooeWAHCT4e_Owbim1g0AEpTHUdA2iiLNs9WTX_H_TXuPC8yDDhi1smxS_X_x pkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX2Fo_GnVrNwlK7Lgxw6FSQvDO 0",
      "zh-CHS": "A0JHROITFPX4QREWIMJLSTN8M3CPXBV1EYLvHJYRBG3I7YHCryJPHDOOS4 E7RXBR2FNYQQ-A-GQT0FXQNJVORG-BI13MWY7ROYJTKBEC6P7SMYMXXX4G ZMEDPIJQVEYI-ZKZV7A9MATPGEVAJWRZUYZZYGTTW2SN6GTL6GTL6GTV2O0YXSHVHV-BYKYEETRP-BYKYPTR4KYBYBZF4F4BYBZZL5F4F4F4BYBZL-E5F4F4F4F4F4F4F4F4F4F4F4F4F4YYYZYZYYYZYZYYYZ25-BYZYZYZYZ2.2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2_XpkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX2Fo_GnVrNwlK7Lgxw6FSQvDO 0"
    },
    {
      "indent": 15,
      "text": "Figure 231: Encrypted Key, base64url-encoded",
      "zh-CHS": "图231：加密密钥，base64url编码"
    },
    {
      "indent": 0,
      "text": "6.7. Encrypting the Content",
      "section_title": true,
      "zh-CHS": "6.7. 加密内容"
    },
    {
      "indent": 3,
      "text": "The following is generated before encrypting the Plaintext:",
      "zh-CHS": "在加密明文之前生成以下内容："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header; this example uses the header from Figure 232, encoded using base64url [RFC4648] to produce Figure 233.",
      "zh-CHS": "o JWE保护头；此示例使用图232中的标题，使用base64url[RFC4648]编码以生成图233。"
    },
    {
      "indent": 3,
      "text": "{\n  \"alg\": \"RSA-OAEP\",\n  \"cty\": \"JWT\",\n  \"enc\": \"A128GCM\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "Figure 232: JWE Protected Header JSON",
      "zh-CHS": "图232:JWE保护的头JSON"
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0EtT0FFUCIsImN0eSI6IkpXVCIsImVuYyI6IkExMjhHQ00ifQ",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "Figure 233: JWE Protected Header, base64url-encoded",
      "zh-CHS": "图233:JWE受保护的标头，base64url编码"
    },
    {
      "indent": 3,
      "text": "Performing the content encryption operation over the Plaintext (Figure 228) with the following:",
      "zh-CHS": "在纯文本上执行内容加密操作（图228），方法如下："
    },
    {
      "indent": 3,
      "text": "o CEK (Figure 229);",
      "zh-CHS": "o CEK（图229）；"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 230); and",
      "zh-CHS": "o 初始化向量（图230）；和"
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 233) as authenticated data",
      "zh-CHS": "o JWE将头（图233）保护为经过身份验证的数据"
    },
    {
      "indent": 3,
      "text": "produces the following:",
      "zh-CHS": "产生以下结果："
    },
    {
      "indent": 3,
      "text": "o Ciphertext from Figure 234.",
      "zh-CHS": "o 图234中的密文。"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag from Figure 235.",
      "zh-CHS": "o 图235中的身份验证标记。"
    },
    {
      "indent": 3,
      "text": "SZI4IvKHmwpazl_pJQXX3mHv1ANnOU4Wf9-utWYUcKrBNgCe2OFMf66cSJ8k2Q kxaQD3_R60MGE9ofomwtky3GFxMeGRjtpMt9OAvVLsAXB0_UTCBGyBg3C2bWLX qZlfJAAoJRUPRk-BimYZY81zVBuIhc7HsQePCpu33SzMsFHjn4lP_idrJz_glZ TNgKDt8zdnUPauKTKDNOH1DD4fuzvDYfDIAfqGPyL5sVRwbiXpXdGokEszM-9C hMPqW1QNhzuX_Zul3bvrJwr7nuGZs4cUScY3n8yE3AHCLurgls-A9mz1X38xEa ulV18l4Fg9tLejdkAuQZjPbqeHQBJe4IwGD5Ee0dQ-Mtz4NnhkIWx-YKBb_Xo2 zI3Q_1sYjKUuis7yWW-HTr_vqvFt0bj7WJf2vzB0TZ3dvsoGaTvPH2dyWwumUr lx4gmPUzBdwTO6ubfYSDUEEz5py0d_OtWeUSYcCYBKD-aM7tXg26qJo21gYjLf hn9zy-W19sOCZGuzgFjPhawXHpvnj_t-0_ES96kogjJLxS1IMU9Y5XmnwZMyNc 9EIwnogsCg-hVuvzyP0sIruktmI94_SL1xgMl7o03phcTMxtlMizR88NKU1WkB siXMCjy1Noue7MD-ShDp5dmM",
      "zh-CHS": "SZI4IvKHmwpazl Pjqxx3mhv1anou4wf9-utWYUcKrBNgCe2OFMf66cSJ8k2Q kxaQD3(r60mge9OfMwKy3GfxEGRTPm9Oavvlsaxb0)UTCBGyBg3C2bWLX Qzlfjaaojrupruk-Bimyz81zzzzVmSzFhJn4Lp IdJn7HdJz(glZ TnGdGd8zNupauKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdNdNdNdNdNdNdNdNdNdNdNdNdNdNdNdNdNdNdN4.一个8岁的学生在一个8岁的一个8岁的学生在一个8岁的一个8岁的一个8岁的一个8岁的一个8岁的学生在一个8岁的一个8岁的学校在一个8岁的一个8岁的学校在一个8岁的一个8岁的学生在一个8岁的一个8岁的学校在一个8岁的一个8岁的学校在一个8岁的一个8岁的学生在一个8岁的一个8岁的一个8岁的学校在一个8岁的一个8岁的学校在一个8岁的一个8岁的一个8岁的一个8岁的学校在一个8岁的一个8岁的一个8岁的一个8岁的一个8岁的一个8岁的一个8岁的学生在一个8岁的一个8岁的学校在一个8岁的一个8岁的一个8岁的一个8岁的学校88NKU1WKB六芯JY1NOUE7MD-ShDp5dmM"
    },
    {
      "indent": 17,
      "text": "Figure 234: Ciphertext, base64url-encoded",
      "zh-CHS": "图234：密文，base64url编码"
    },
    {
      "indent": 3,
      "text": "KnIKEhN8U-3C9s4gtSpjSw",
      "zh-CHS": "KnIKEhN8U-3C9s4gtSpjSw"
    },
    {
      "indent": 13,
      "text": "Figure 235: Authentication Tag, base64url-encoded",
      "zh-CHS": "图235：身份验证标签，base64url编码"
    },
    {
      "indent": 0,
      "text": "6.8. Encryption Output",
      "section_title": true,
      "zh-CHS": "6.8. 加密输出"
    },
    {
      "indent": 3,
      "text": "The following compose the resulting JWE object:",
      "zh-CHS": "以下内容构成了生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "o JWE Protected Header (Figure 233)",
      "zh-CHS": "o JWE受保护的标头（图233）"
    },
    {
      "indent": 3,
      "text": "o Encrypted Key (Figure 231)",
      "zh-CHS": "o 加密密钥（图231）"
    },
    {
      "indent": 3,
      "text": "o Initialization Vector (Figure 230)",
      "zh-CHS": "o 初始化向量（图230）"
    },
    {
      "indent": 3,
      "text": "o Ciphertext (Figure 234)",
      "zh-CHS": "o 密文（图234）"
    },
    {
      "indent": 3,
      "text": "o Authentication Tag (Figure 235)",
      "zh-CHS": "o 身份验证标签（图235）"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the JWE Compact Serialization:",
      "zh-CHS": "使用JWE压缩序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "eyJhbGciOiJSU0EtT0FFUCIsImN0eSI6IkpXVCIsImVuYyI6IkExMjhHQ00ifQ . a0JHRoITfpX4qRewImjlStn8m3CPxBV1ueYlVhjurCyrBg3I7YhCRYjphDOOS4 E7rXbr2Fn6NyQq-A-gqT0FXqNjVOGrG-bi13mwy7RoYhjTkBEC6P7sMYMXXx4g zMedpiJHQVeyI-zkZV7A9matpgevAJWrXzOUysYGTtwoSN6gtUVtlLaivjvb21 O0ul4YxSHV-ByK1kyeetRp_fuYJxHoKLQL9P424sKx2WGYb4zsBIPF4ssl_e5I R7nany-25_UmC2urosNkoFz9cQ82MypZP8gqbQJyPN-Fpp4Z-5o6yV64x6yzDU F_5JCIdl-Qv6H5dMVIY7q1eKpXcV1lWO_2FefEBqXxXvIjLeZivjNkzogCq3-I apSjVFnMjBxjpYLT8muaawo1yy1XXMuinIpNcOY3n4KKrXLrCcteX85m4IIHMZ a38s1Hpr56fPPseMA-Jltmt-a9iEDtOzhtxz8AXy9tsCAZV2XBWNG8c3kJusAa mBKOYwfk7JhLRDgOnJjlJLhn7TI4UxDp9dCmUXEN6z0v23W15qJIEXNJtqnblp ymooeWAHCT4e_Owbim1g0AEpTHUdA2iiLNs9WTX_H_TXuPC8yDDhi1smxS_X_x pkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX2Fo_GnVrNwlK7Lgxw6FSQvDO 0 . GbX1i9kXz0sxXPmA . SZI4IvKHmwpazl_pJQXX3mHv1ANnOU4Wf9-utWYUcKrBNgCe2OFMf66cSJ8k2Q kxaQD3_R60MGE9ofomwtky3GFxMeGRjtpMt9OAvVLsAXB0_UTCBGyBg3C2bWLX qZlfJAAoJRUPRk-BimYZY81zVBuIhc7HsQePCpu33SzMsFHjn4lP_idrJz_glZ TNgKDt8zdnUPauKTKDNOH1DD4fuzvDYfDIAfqGPyL5sVRwbiXpXdGokEszM-9C hMPqW1QNhzuX_Zul3bvrJwr7nuGZs4cUScY3n8yE3AHCLurgls-A9mz1X38xEa ulV18l4Fg9tLejdkAuQZjPbqeHQBJe4IwGD5Ee0dQ-Mtz4NnhkIWx-YKBb_Xo2 zI3Q_1sYjKUuis7yWW-HTr_vqvFt0bj7WJf2vzB0TZ3dvsoGaTvPH2dyWwumUr lx4gmPUzBdwTO6ubfYSDUEEz5py0d_OtWeUSYcCYBKD-aM7tXg26qJo21gYjLf hn9zy-W19sOCZGuzgFjPhawXHpvnj_t-0_ES96kogjJLxS1IMU9Y5XmnwZMyNc 9EIwnogsCg-hVuvzyP0sIruktmI94_SL1xgMl7o03phcTMxtlMizR88NKU1WkB siXMCjy1Noue7MD-ShDp5dmM . KnIKEhN8U-3C9s4gtSpjSw",
      "zh-CHS": "EYJHBGCIOIJSU0ETT0FFUCISIMN0ESIKPXVCISIMVUYIKEXMJHQ00IFQ。A0JHROITFPX4QREWIMJLSTN8M3CPXBV1EYLvHJYRBG3I7YHCryJPHDOOS4 E7RXBR2FNYQQ-A-GQT0FXQNJVORG-BI13MWY7ROYJTKBEC6P7SMYMXXX4G ZMEDPIJQVEYI-ZKZV7A9MATPGEVAJWRZUYZZYGTTW2SN6GTL6GTL6GTV2O0YXSHVHV-BYKYEETRP-BYKYPTR4KYBYBZF4F4BYBZZL5F4F4F4BYBZL-E5F4F4F4F4F4F4F4F4F4F4F4F4F4YYYZYZYYYZYZYYYZ25-BYZYZYZYZ2.2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2_XpkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX2Fo_GnVrNwlK7Lgxw6FSQvDO 0。GbX1i9kXz0sxXPmA。SZI4IvKHmwpazl Pjqxx3mhv1anou4wf9-utWYUcKrBNgCe2OFMf66cSJ8k2Q kxaQD3(r60mge9OfMwKy3GfxEGRTPm9Oavvlsaxb0)UTCBGyBg3C2bWLX Qzlfjaaojrupruk-Bimyz81zzzzVmSzFhJn4Lp IdJn7HdJz(glZ TnGdGd8zNupauKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdKdNdNdNdNdNdNdNdNdNdNdNdNdNdNdNdNdNdNdN4.一个8岁的学生在一个8岁的一个8岁的学生在一个8岁的一个8岁的一个8岁的一个8岁的一个8岁的学生在一个8岁的一个8岁的学校在一个8岁的一个8岁的学校在一个8岁的一个8岁的学生在一个8岁的一个8岁的学校在一个8岁的一个8岁的学校在一个8岁的一个8岁的学生在一个8岁的一个8岁的一个8岁的学校在一个8岁的一个8岁的学校在一个8岁的一个8岁的一个8岁的一个8岁的学校在一个8岁的一个8岁的一个8岁的一个8岁的一个8岁的一个8岁的一个8岁的学生在一个8岁的一个8岁的学校在一个8岁的一个8岁的一个8岁的一个8岁的学校88NKU1WKB六MCJY1NOUE7MD-ShDp5dmM。KnIKEhN8U-3C9s4gtSpjSw"
    },
    {
      "indent": 19,
      "text": "Figure 236: JWE Compact Serialization",
      "zh-CHS": "图236:JWE压缩序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the general JWE JSON Serialization:",
      "zh-CHS": "使用通用JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"recipients\": [\n    {\n      \"encrypted_key\": \"a0JHRoITfpX4qRewImjlStn8m3CPxBV1ueYlVh\n          jurCyrBg3I7YhCRYjphDOOS4E7rXbr2Fn6NyQq-A-gqT0FXqNjVO\n          GrG-bi13mwy7RoYhjTkBEC6P7sMYMXXx4gzMedpiJHQVeyI-zkZV\n          7A9matpgevAJWrXzOUysYGTtwoSN6gtUVtlLaivjvb21O0ul4YxS\n          HV-ByK1kyeetRp_fuYJxHoKLQL9P424sKx2WGYb4zsBIPF4ssl_e\n          5IR7nany-25_UmC2urosNkoFz9cQ82MypZP8gqbQJyPN-Fpp4Z-5\n          o6yV64x6yzDUF_5JCIdl-Qv6H5dMVIY7q1eKpXcV1lWO_2FefEBq\n          XxXvIjLeZivjNkzogCq3-IapSjVFnMjBxjpYLT8muaawo1yy1XXM\n          uinIpNcOY3n4KKrXLrCcteX85m4IIHMZa38s1Hpr56fPPseMA-Jl\n          tmt-a9iEDtOzhtxz8AXy9tsCAZV2XBWNG8c3kJusAamBKOYwfk7J\n          hLRDgOnJjlJLhn7TI4UxDp9dCmUXEN6z0v23W15qJIEXNJtqnblp\n          ymooeWAHCT4e_Owbim1g0AEpTHUdA2iiLNs9WTX_H_TXuPC8yDDh\n          i1smxS_X_xpkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX2Fo_\n          GnVrNwlK7Lgxw6FSQvDO0\"\n    }\n  ],\n  \"protected\": \"eyJhbGciOiJSU0EtT0FFUCIsImN0eSI6IkpXVCIsImVuYy\n      I6IkExMjhHQ00ifQ\",\n  \"iv\": \"GbX1i9kXz0sxXPmA\",\n  \"ciphertext\": \"SZI4IvKHmwpazl_pJQXX3mHv1ANnOU4Wf9-utWYUcKrBN\n      gCe2OFMf66cSJ8k2QkxaQD3_R60MGE9ofomwtky3GFxMeGRjtpMt9OAv\n      VLsAXB0_UTCBGyBg3C2bWLXqZlfJAAoJRUPRk-BimYZY81zVBuIhc7Hs\n      QePCpu33SzMsFHjn4lP_idrJz_glZTNgKDt8zdnUPauKTKDNOH1DD4fu\n      zvDYfDIAfqGPyL5sVRwbiXpXdGokEszM-9ChMPqW1QNhzuX_Zul3bvrJ\n      wr7nuGZs4cUScY3n8yE3AHCLurgls-A9mz1X38xEaulV18l4Fg9tLejd\n      kAuQZjPbqeHQBJe4IwGD5Ee0dQ-Mtz4NnhkIWx-YKBb_Xo2zI3Q_1sYj\n      KUuis7yWW-HTr_vqvFt0bj7WJf2vzB0TZ3dvsoGaTvPH2dyWwumUrlx4\n      gmPUzBdwTO6ubfYSDUEEz5py0d_OtWeUSYcCYBKD-aM7tXg26qJo21gY\n      jLfhn9zy-W19sOCZGuzgFjPhawXHpvnj_t-0_ES96kogjJLxS1IMU9Y5\n      XmnwZMyNc9EIwnogsCg-hVuvzyP0sIruktmI94_SL1xgMl7o03phcTMx\n      tlMizR88NKU1WkBsiXMCjy1Noue7MD-ShDp5dmM\",\n  \"tag\": \"KnIKEhN8U-3C9s4gtSpjSw\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 237: General JWE JSON Serialization",
      "zh-CHS": "图237：通用JWE JSON序列化"
    },
    {
      "indent": 3,
      "text": "The resulting JWE object using the flattened JWE JSON Serialization:",
      "zh-CHS": "使用平坦JWE JSON序列化生成的JWE对象："
    },
    {
      "indent": 3,
      "text": "{\n  \"encrypted_key\": \"a0JHRoITfpX4qRewImjlStn8m3CPxBV1ueYlVhjurC\n      yrBg3I7YhCRYjphDOOS4E7rXbr2Fn6NyQq-A-gqT0FXqNjVOGrG-bi13\n      mwy7RoYhjTkBEC6P7sMYMXXx4gzMedpiJHQVeyI-zkZV7A9matpgevAJ\n      WrXzOUysYGTtwoSN6gtUVtlLaivjvb21O0ul4YxSHV-ByK1kyeetRp_f\n      uYJxHoKLQL9P424sKx2WGYb4zsBIPF4ssl_e5IR7nany-25_UmC2uros\n      NkoFz9cQ82MypZP8gqbQJyPN-Fpp4Z-5o6yV64x6yzDUF_5JCIdl-Qv6\n      H5dMVIY7q1eKpXcV1lWO_2FefEBqXxXvIjLeZivjNkzogCq3-IapSjVF\n      nMjBxjpYLT8muaawo1yy1XXMuinIpNcOY3n4KKrXLrCcteX85m4IIHMZ\n      a38s1Hpr56fPPseMA-Jltmt-a9iEDtOzhtxz8AXy9tsCAZV2XBWNG8c3\n      kJusAamBKOYwfk7JhLRDgOnJjlJLhn7TI4UxDp9dCmUXEN6z0v23W15q\n      JIEXNJtqnblpymooeWAHCT4e_Owbim1g0AEpTHUdA2iiLNs9WTX_H_TX\n      uPC8yDDhi1smxS_X_xpkIHkiIHWDOLx03BpqDTivpKkBYwqP2UZkcxqX\n      2Fo_GnVrNwlK7Lgxw6FSQvDO0\",\n  \"protected\": \"eyJhbGciOiJSU0EtT0FFUCIsImN0eSI6IkpXVCIsImVuYy\n      I6IkExMjhHQ00ifQ\",\n  \"iv\": \"GbX1i9kXz0sxXPmA\",\n  \"ciphertext\": \"SZI4IvKHmwpazl_pJQXX3mHv1ANnOU4Wf9-utWYUcKrBN\n      gCe2OFMf66cSJ8k2QkxaQD3_R60MGE9ofomwtky3GFxMeGRjtpMt9OAv\n      VLsAXB0_UTCBGyBg3C2bWLXqZlfJAAoJRUPRk-BimYZY81zVBuIhc7Hs\n      QePCpu33SzMsFHjn4lP_idrJz_glZTNgKDt8zdnUPauKTKDNOH1DD4fu\n      zvDYfDIAfqGPyL5sVRwbiXpXdGokEszM-9ChMPqW1QNhzuX_Zul3bvrJ\n      wr7nuGZs4cUScY3n8yE3AHCLurgls-A9mz1X38xEaulV18l4Fg9tLejd\n      kAuQZjPbqeHQBJe4IwGD5Ee0dQ-Mtz4NnhkIWx-YKBb_Xo2zI3Q_1sYj\n      KUuis7yWW-HTr_vqvFt0bj7WJf2vzB0TZ3dvsoGaTvPH2dyWwumUrlx4\n      gmPUzBdwTO6ubfYSDUEEz5py0d_OtWeUSYcCYBKD-aM7tXg26qJo21gY\n      jLfhn9zy-W19sOCZGuzgFjPhawXHpvnj_t-0_ES96kogjJLxS1IMU9Y5\n      XmnwZMyNc9EIwnogsCg-hVuvzyP0sIruktmI94_SL1xgMl7o03phcTMx\n      tlMizR88NKU1WkBsiXMCjy1Noue7MD-ShDp5dmM\",\n  \"tag\": \"KnIKEhN8U-3C9s4gtSpjSw\"\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Figure 238: Flattened JWE JSON Serialization",
      "zh-CHS": "图238：扁平化JWE JSON序列化"
    },
    {
      "indent": 0,
      "text": "7. Security Considerations",
      "section_title": true,
      "zh-CHS": "7. 安全考虑"
    },
    {
      "indent": 3,
      "text": "This document is designed to provide examples for developers to use in checking their implementations. As such, it does not follow some of the security considerations and recommendations in the core documents (i.e., [JWS], [JWE], [JWK], and [JWA]). For instance:",
      "zh-CHS": "本文档旨在为开发人员提供用于检查其实现的示例。因此，它没有遵循核心文档（即[JWS]、[JWE]、[JWK]和[JWA]）中的一些安全注意事项和建议。例如："
    },
    {
      "indent": 3,
      "text": "o it does not always generate a new CEK value for every encrypted example;",
      "zh-CHS": "o 它并不总是为每个加密的示例生成新的CEK值；"
    },
    {
      "indent": 3,
      "text": "o it does not always generate a new Initialization Vector (IV) value for every encrypted example; and",
      "zh-CHS": "o 它并不总是为每个加密示例生成新的初始化向量（IV）值；和"
    },
    {
      "indent": 3,
      "text": "o it does not always generate a new ephemeral key for every ephemeral key example.",
      "zh-CHS": "o 它并不总是为每个临时密钥示例生成新的临时密钥。"
    },
    {
      "indent": 3,
      "text": "For each example, data that is expected to be generated for each signing or encryption operation is isolated to sections titled \"Generated Factors\".",
      "zh-CHS": "对于每个示例，预期为每个签名或加密操作生成的数据被隔离到标题为“生成的因素”的部分。"
    },
    {
      "indent": 0,
      "text": "8. References",
      "section_title": true,
      "zh-CHS": "8. 工具书类"
    },
    {
      "indent": 0,
      "text": "8.1. Normative References",
      "section_title": true,
      "zh-CHS": "8.1. 规范性引用文件"
    },
    {
      "indent": 3,
      "text": "[JWA] Jones, M., \"JSON Web Algorithms (JWA)\", RFC 7518, DOI 10.17487/RFC7518, May 2015, <http://www.rfc-editor.org/info/rfc7518>.",
      "zh-CHS": "[JWA]Jones，M.，“JSON网络算法（JWA）”，RFC 7518，DOI 10.17487/RFC7518，2015年5月<http://www.rfc-editor.org/info/rfc7518>."
    },
    {
      "indent": 3,
      "text": "[JWE] Jones, M. and J. Hildebrand, \"JSON Web Encryption (JWE)\", RFC 7516, DOI 10.17487/RFC7516, May 2015, <http://www.rfc-editor.org/info/rfc7516>.",
      "zh-CHS": "[JWE]Jones，M.和J.Hildebrand，“JSON Web加密（JWE）”，RFC 7516，DOI 10.17487/RFC7516，2015年5月<http://www.rfc-editor.org/info/rfc7516>."
    },
    {
      "indent": 3,
      "text": "[JWK] Jones, M., \"JSON Web Key (JWK)\", RFC 7517, DOI 10.17487/RFC7517, May 2015, <http://www.rfc-editor.org/info/rfc7517>.",
      "zh-CHS": "[JWK]Jones，M.，“JSON Web密钥（JWK）”，RFC 7517，DOI 10.17487/RFC75172015年5月<http://www.rfc-editor.org/info/rfc7517>."
    },
    {
      "indent": 3,
      "text": "[JWS] Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Signature (JWS)\", RFC 7515, DOI 10.17487/RFC7515, May 2015, <http://www.rfc-editor.org/info/rfc7515>.",
      "zh-CHS": "[JWS]Jones，M.，Bradley，J.，和N.Sakimura，“JSON网络签名（JWS）”，RFC 7515，DOI 10.17487/RFC7515，2015年5月<http://www.rfc-editor.org/info/rfc7515>."
    },
    {
      "indent": 3,
      "text": "[RFC4648] Josefsson, S., \"The Base16, Base32, and Base64 Data Encodings\", RFC 4648, DOI 10.17487/RFC4648, October 2006, <http://www.rfc-editor.org/info/rfc4648>.",
      "zh-CHS": "[RFC4648]Josefsson，S.，“Base16、Base32和Base64数据编码”，RFC 4648，DOI 10.17487/RFC4648，2006年10月<http://www.rfc-editor.org/info/rfc4648>."
    },
    {
      "indent": 0,
      "text": "8.2. Informative References",
      "section_title": true,
      "zh-CHS": "8.2. 资料性引用"
    },
    {
      "indent": 3,
      "text": "[JWT] Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Token (JWT)\", RFC 7519, DOI 10.17487/RFC7519, May 2015, <http://www.rfc-editor.org/info/rfc7519>.",
      "zh-CHS": "[JWT]Jones，M.，Bradley，J.，和N.Sakimura，“JSON网络令牌（JWT）”，RFC 7519，DOI 10.17487/RFC7519，2015年5月<http://www.rfc-editor.org/info/rfc7519>."
    },
    {
      "indent": 3,
      "text": "[LOTR-FELLOWSHIP] Tolkien, J., \"The Fellowship of the Ring\", HarperCollins Publishers, ePub Edition, ISBN 9780061952838, March 2009.",
      "zh-CHS": "[LOTR-FESSURY]托尔金，J.，“魔戒的团契”，哈珀柯林斯出版社，电子出版版，ISBN 97800619528382009年3月。"
    },
    {
      "indent": 3,
      "text": "[RFC1951] Deutsch, P., \"DEFLATE Compressed Data Format Specification version 1.3\", RFC 1951, DOI 10.17487/RFC1951, May 1996, <http://www.rfc-editor.org/info/rfc1951>.",
      "zh-CHS": "[RFC1951]Deutsch，P.，“DEFLATE压缩数据格式规范1.3版”，RFC 1951，DOI 10.17487/RFC1951，1996年5月<http://www.rfc-editor.org/info/rfc1951>."
    },
    {
      "indent": 3,
      "text": "[RFC7095] Kewisch, P., \"jCard: The JSON Format for vCard\", RFC 7095, DOI 10.17487/RFC7095, January 2014, <http://www.rfc-editor.org/info/rfc7095>.",
      "zh-CHS": "[RFC7095]Kewisch，P.，“jCard:vCard的JSON格式”，RFC 7095，DOI 10.17487/RFC7095，2014年1月<http://www.rfc-editor.org/info/rfc7095>."
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "zh-CHS": "致谢"
    },
    {
      "indent": 3,
      "text": "Most of the examples herein use quotes and character names found in the novel \"The Fellowship of the Ring\" [LOTR-FELLOWSHIP], written by J. R. R. Tolkien.",
      "zh-CHS": "这里的大多数例子都使用了J.R.R.Tolkien写的小说《魔戒团契》[LOTR-FESSURY]中的引号和人物名字。"
    },
    {
      "indent": 3,
      "text": "Thanks to Richard Barnes, Brian Campbell, Mike Jones, and Jim Schaad for their input and review of the text. Thanks to Brian Campbell for verifying the Compact Serialization examples.",
      "zh-CHS": "感谢Richard Barnes、Brian Campbell、Mike Jones和Jim Schaad对本文的输入和评论。感谢Brian Campbell验证紧凑序列化示例。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "zh-CHS": "作者地址"
    },
    {
      "indent": 3,
      "text": "Matthew Miller Cisco Systems, Inc.",
      "zh-CHS": "马修·米勒思科系统公司。"
    },
    {
      "indent": 3,
      "text": "EMail: mamille2@cisco.com",
      "raw": true,
      "zh-CHS": " "
    }
  ]
}