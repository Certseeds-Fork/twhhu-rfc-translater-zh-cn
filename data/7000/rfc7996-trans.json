{
  "title": {
    "text": "RFC 7996: SVG Drawings for RFCs: SVG 1.2 RFC",
    "zh-CHS": "RFC 7996"
  },
  "number": 7996,
  "created_at": "2021-11-01 13:49:27.128474+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Architecture Board (IAB)                            N. Brownlee\nRequest for Comments: 7996                    The University of Auckland\nCategory: Informational                                    December 2016\nISSN: 2070-1721",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 19,
      "text": "SVG Drawings for RFCs: SVG 1.2 RFC",
      "zh-CHS": "RFC的SVG图形：SVG 1.2 RFC"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "This document specifies SVG 1.2 RFC -- an SVG profile for use in diagrams that may appear in RFCs -- and considers some of the issues concerning the creation and use of such diagrams.",
      "zh-CHS": "本文档指定了SVG1.2 RFC（一种用于RFC中可能出现的图表的SVG配置文件），并考虑了与创建和使用此类图表有关的一些问题。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "zh-CHS": "关于下段备忘"
    },
    {
      "indent": 3,
      "text": "This document is not an Internet Standards Track specification; it is published for informational purposes.",
      "zh-CHS": "本文件不是互联网标准跟踪规范；它是为了提供信息而发布的。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Architecture Board (IAB) and represents information that the IAB has deemed valuable to provide for permanent record. It represents the consensus of the Internet Architecture Board (IAB). Documents approved for publication by the IAB are not a candidate for any level of Internet Standard; see Section 2 of RFC 7841.",
      "zh-CHS": "本文件是互联网体系结构委员会（IAB）的产品，代表IAB认为有价值提供永久记录的信息。它代表了互联网体系结构委员会（IAB）的共识。IAB批准发布的文件不适用于任何级别的互联网标准；见RFC 7841第2节。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc7996.",
      "zh-CHS": "有关本文件当前状态、任何勘误表以及如何提供反馈的信息，请访问http://www.rfc-editor.org/info/rfc7996."
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2016 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "zh-CHS": "版权所有（c）2016 IETF信托基金和确定为文件作者的人员。版权所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document.",
      "zh-CHS": "本文件受BCP 78和IETF信托有关IETF文件的法律规定的约束(http://trustee.ietf.org/license-info)自本文件出版之日起生效。请仔细阅读这些文件，因为它们描述了您对本文件的权利和限制。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................2\n2. SVG 1.2 RFC: An SVG Profile for RFCs ............................3\n   2.1. Elements, Properties, and Attributes Allowed in\n        SVG 1.2 RFC ................................................4\n3. How to Create SVG Drawings ......................................7\n4. Accessibility Considerations ....................................7\n5. Examples of Diagrams Common in RFCs .............................8\n   5.1. Packet Layout Diagrams .....................................8\n   5.2. Sequence Diagrams (1) ......................................8\n   5.3. Sequence Diagrams (2) ......................................8\n6. Security Considerations .........................................8\n7. References ......................................................9\n   7.1. Normative References .......................................9\n   7.2. Informative References .....................................9\nAppendix A. RELAX NG Compact (RNC) Schema for SVG 1.2 RFC .........11\nIAB Members at the Time of Approval ...............................53\nAcknowledgements ..................................................53\nAuthor's Address ..................................................53",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "Over the last few years, the RFC Editor has worked with the Internet community to develop specifications for changes in the format of RFCs. An outline of the resulting specifications was published as [RFC6949] in May 2013. Since then, a Design Team has been working with the RFC Editor to flesh out those specifications. One aspect of the changes is to allow line drawings in RFCs; [RFC6949] says",
      "zh-CHS": "在过去几年中，RFC编辑器与互联网社区合作，为RFC格式的更改制定规范。产生的规范大纲于2013年5月发布为[RFC6949]。从那时起，一个设计团队一直在与RFC编辑器合作，以充实这些规范。变更的一个方面是允许在RFC中绘制线条图；[RFC6949]说"
    },
    {
      "indent": 6,
      "text": "Graphics may include ASCII art and a more complex form to be defined, such as SVG line art [SVG]. Color and grayscale will not be accepted. RFCs must correctly display in monochromatic black-and-white to allow for monochrome displays, black-and-white printing, and support for visual disabilities.",
      "zh-CHS": "图形可能包括ASCII艺术和要定义的更复杂的形式，如SVG线条艺术[SVG]。不接受颜色和灰度。RFC必须以黑白单色正确显示，以允许单色显示、黑白打印和支持视觉残疾。"
    },
    {
      "indent": 3,
      "text": "SVG (Scalable Vector Graphics) has been developed by W3C, the World Wide Web Consortium; its current standard is SVG 1.1 Full [W3C.REC-SVG11-20110816]. This document defines SVG 1.2 RFC, an SVG profile (i.e., a subset of SVG) that is suitable for RFC line drawings.",
      "zh-CHS": "SVG（可缩放矢量图形）由W3C（万维网联盟）开发；其当前标准是SVG 1.1 Full[W3C.REC-SVG11-20110816]。本文档定义了SVG 1.2 RFC，这是一种适用于RFC线条图的SVG配置文件（即SVG的子集）。"
    },
    {
      "indent": 3,
      "text": "Note that in RFCs, the text provides normative descriptions of protocols, systems, etc. Diagrams may be used to help explain concepts more clearly, but they provide supporting details and should not be considered to be complete specifications in themselves.",
      "zh-CHS": "请注意，在RFC中，文本提供了协议、系统等的规范性描述。可以使用图表帮助更清楚地解释概念，但它们提供了支持性细节，不应将其本身视为完整的规范。"
    },
    {
      "indent": 3,
      "text": "The details (particularly any vocabularies) described in this document are expected to change based on experience gained in implementing the new publication toolsets. Revised documents will be published capturing those changes as the toolsets are completed. Other implementers must not expect those changes to remain backwards-compatible with the details described in this document.",
      "zh-CHS": "本文档中描述的详细信息（尤其是词汇表）预计将根据在实施新发布工具集过程中获得的经验进行更改。修订后的文档将在工具集完成后发布，以捕获这些更改。其他实施者不得期望这些更改与本文档中描述的细节保持向后兼容。"
    },
    {
      "indent": 0,
      "text": "2. SVG 1.2 RFC: An SVG Profile for RFCs",
      "section_title": true,
      "zh-CHS": "2. SVG 1.2 RFC：RFC的SVG配置文件"
    },
    {
      "indent": 3,
      "text": "As a starting point for SVG 1.2 RFC, the Design Team decided to use SVG Tiny 1.2 (also referred to as \"SVG 1.2 Tiny\") [W3C.REC-SVGTiny12-20081222]. SVG 1.2 Tiny is an SVG subset intended to be implemented on small, mobile devices such as cell phones and smartphones. That should allow RFCs to be rendered well on such devices, especially those that have small screens. However, RFCs are self-contained documents that do not change once they are published. The use of SVG drawings in RFCs is intended to allow authors to create drawings that are simple to produce and are easier to understand than our traditional \"ASCII art\" ones. In short, we are also trying to improve access to the content in RFCs, so SVG drawings need to be kept as simple as possible.",
      "zh-CHS": "作为SVG 1.2 RFC的起点，设计团队决定使用SVG Tiny 1.2（也称为“SVG 1.2 Tiny”）[W3C.REC-SVGTiny12-20081222]。SVG1.2Tiny是一个SVG子集，旨在在小型移动设备（如手机和智能手机）上实现。这将允许RFC在此类设备上得到很好的渲染，尤其是那些具有小屏幕的设备。但是，RFC是自包含的文档，发布后不会更改。在RFCs中使用SVG图形旨在允许作者创建比传统的“ASCII艺术”图形更易于制作和理解的图形。简而言之，我们还试图改进对RFC中内容的访问，因此SVG图形需要尽可能保持简单。"
    },
    {
      "indent": 3,
      "text": "Appendix A (below) provides a complete RELAX NG Compact (RNC) schema [RNG-HOME] for SVG 1.2 RFC. It is derived from the SVG 1.2 schema, and is the formal definition of SVG 1.2 RFC. The remainder of this section gives a simplified -- i.e., easier to read and understand -- overview of SVG 1.2 RFC.",
      "zh-CHS": "附录A（如下）提供了SVG 1.2 RFC的完整RELAXNG Compact（RNC）模式[RNG-HOME]。它源自SVG1.2模式，是SVG1.2 RFC的正式定义。本节的其余部分给出了SVG1.2 RFC的简化概述，即更易于阅读和理解。"
    },
    {
      "indent": 3,
      "text": "SVG can provide a complete User Interface, but within RFCs, all we need are simple diagrams that do not change once the RFC is published. Therefore, SVG 1.2 RFC does not allow anything from the following sections in SVG Tiny 1.2 [W3C.REC-SVGTiny12-20081222]:",
      "zh-CHS": "SVG可以提供一个完整的用户界面，但在RFC中，我们所需要的只是简单的图表，RFC发布后不会改变。因此，SVG 1.2 RFC不允许SVG Tiny 1.2[W3C.REC-SVGTiny12-20081222]中以下部分的任何内容："
    },
    {
      "indent": 3,
      "text": "12 Multimedia 13 Interactivity 15 Scripting 16 Animation 18 Metadata 19 Extensibility",
      "zh-CHS": "12多媒体13互动15脚本16动画18元数据19可扩展性"
    },
    {
      "indent": 3,
      "text": "Note that SVG Tiny 1.2 elements may have many properties or attributes that are needed to support aspects of the above sections. Those are not allowed in SVG 1.2 RFC.",
      "zh-CHS": "请注意，SVG Tiny 1.2元素可能具有许多支持上述各部分的特性或属性。SVG1.2 RFC中不允许使用这些。"
    },
    {
      "indent": 3,
      "text": "We now consider these other sections in SVG Tiny 1.2 [W3C.REC-SVGTiny12-20081222]:",
      "zh-CHS": "现在我们考虑SVG微小1.2中的其他部分[W3C.RC-SVGTYNY-12881222]："
    },
    {
      "indent": 4,
      "text": "9 Basic Shapes",
      "zh-CHS": "9基本形状"
    },
    {
      "indent": 3,
      "text": "10 Text Everything in this section is allowed in SVG 1.2 RFC.",
      "zh-CHS": "10文本SVG 1.2 RFC中允许本节中的所有内容。"
    },
    {
      "indent": 3,
      "text": "11 Painting: Filling, Stroking, Colors and Paint Servers Anything relating to 'color' is not allowed in SVG 1.2 RFC; everything else is allowed. This is a requirement documented in [RFC6949].",
      "zh-CHS": "11绘制：SVG 1.2 RFC中不允许填充、笔划、颜色和绘制与“颜色”相关的任何内容；其他一切都是允许的。这是[RFC6949]中记录的要求。"
    },
    {
      "indent": 3,
      "text": "14 Linking SVG Tiny 1.2 allows Internationalized Resource Identifiers (IRIs) in references. In SVG 1.2 RFC, such links must be ASCII only. That should not cause problems, since one can just use the URI form of any IRI. Authors should try to use links only to URIs that are long-term stable.",
      "zh-CHS": "14.1.2允许在引用中使用国际化资源标识符（IRI）。在SVG 1.2 RFC中，此类链接必须仅为ASCII。这应该不会引起问题，因为可以只使用任何IRI的URI形式。作者应该尝试只使用指向长期稳定的URI的链接。"
    },
    {
      "indent": 3,
      "text": "17 Fonts SVG 1.2 RFC only allows 'serif', 'sans-serif', and 'monospace' generic font families from the WebFonts facility, described in Section 15 (\"Fonts\") of the W3C Cascading Style Sheets (CSS) 2.1 document [W3C.REC-CSS2-20110607]. In particular, the SVG 'font' element is not allowed.",
      "zh-CHS": "17字体SVG 1.2 RFC仅允许WebFonts设施中的“衬线”、“无衬线”和“单空间”通用字体系列，如W3C层叠样式表（CSS）2.1文档[W3C.REC-CSS2-20110607]第15节（“字体”）所述。特别是，不允许使用SVG“font”元素。"
    },
    {
      "indent": 0,
      "text": "2.1. Elements, Properties, and Attributes Allowed in SVG 1.2 RFC",
      "section_title": true,
      "zh-CHS": "2.1. SVG 1.2 RFC中允许的元素、属性和属性"
    },
    {
      "indent": 3,
      "text": "This section discusses elements, properties, and attributes selected for SVG 1.2 RFC from [W3C.REC-SVGTiny12-20081222].",
      "zh-CHS": "本节讨论从[W3C.REC-SVGTiny12-20081222]中为SVG1.2 RFC选择的元素、属性和属性。"
    },
    {
      "indent": 3,
      "text": "In the list below, elements and properties are listed on the left, and their allowed values are given in parentheses on the right.",
      "zh-CHS": "在下面的列表中，元素和属性列在左侧，其允许值在右侧的括号中给出。"
    },
    {
      "indent": 3,
      "text": "<color> is the list of allowed colors, a black-and-white subset of the SVG color names.",
      "zh-CHS": "<color>是允许的颜色列表，是SVG颜色名称的黑白子集。"
    },
    {
      "indent": 3,
      "text": "<style> is a set of CSS attributes that are commonly used (by SVG drawing applications). They are not part of SVG Tiny 1.2 but are included here for compatibility. Note that",
      "zh-CHS": "<style>是一组常用的CSS属性（由SVG绘图应用程序使用）。它们不是SVG Tiny 1.2的一部分，但出于兼容性的考虑，这里包含了它们。注意"
    },
    {
      "indent": 11,
      "text": "- There is no guarantee that any renderer will implement all the CSS attributes a drawing application may use.",
      "zh-CHS": "- 不能保证任何渲染器都会实现图形应用程序可能使用的所有CSS属性。"
    },
    {
      "indent": 11,
      "text": "- Authors will need to consider the compatibility of their drawings with rendering devices.",
      "zh-CHS": "- 作者将需要考虑他们的图纸与渲染设备的兼容性。"
    },
    {
      "indent": 3,
      "text": "Elements:",
      "zh-CHS": "元素："
    },
    {
      "indent": 5,
      "text": "svg (version=1.2, baseProfile=tiny, width, viewBox, preserveAspectRatio, snapshotTime, height, id, role) g (label, class, id, role, fill, <style>, transform) defs (id, role, fill) title (id, role) desc (id, role) a (id, role, fill, transform) use (x, y, href, xlink:href, id, role, fill, transform)",
      "zh-CHS": "svg（version=1.2，baseProfile=tiny，width，viewBox，preserveApectratio，snapshotTime，height，id，role）g（label，class，id，role，fill，<style>，transform）defs（id，role，fill）title（id，role）desc（id，role，fill，transform）a（id，role，fill，transform）use（x，y，href，xlink:href，id，role，role，fill，transform）"
    },
    {
      "indent": 5,
      "text": "rect (x, y, width, height, rx, ry, stroke-miterlimit, id, role, fill, <style>, transform) circle (cx, cy, r, id, role, fill, <style>, transform) ellipse (cx, cy, rx, ry, id, role, fill, <style>, transform) line (x1, y1, x2, y2, id, role, fill, transform) polyline (points, id, role, fill, transform) polygon (points, id, role, fill, <style>, transform) text (x, y, rotate, space, id, role, fill, <style>, transform) tspan (x, y, id, role, fill) textArea (x, y, width, height, auto, id, role, fill, transform) tbreak (id, role)",
      "zh-CHS": "矩形（x，y，宽度，高度，rx，ry，笔划斜接限制，id，角色，填充，<style>，变换）圆（cx，cy，r，id，角色，填充，<style>，变换）椭圆（cx，cy，rx，ry，id，角色，填充，<style>，变换）直线（x1，y1，x2，y2，id，角色，填充，变换）多段线（点，id，角色，填充，变换）多边形（点，id，角色，填充，<style>，变换）文本（x，y，旋转，空格，id，角色，填充，<style>，变换）tspan（x，y，id，角色，填充）文本区域（x，y，宽度，高度，自动，id，角色，填充，变换）tbreak（id，角色）"
    },
    {
      "indent": 5,
      "text": "solidColor (id, role, fill) linearGradient (gradientUnits, x1, y1, x2, y2, id, role, fill) radialGradient (gradientUnits, cx, cy, r, id, role, fill) stop (id, role, fill) path (d, pathLength, stroke-miterlimit, id, role, fill, <style>, transform)",
      "zh-CHS": "solidColor（id，角色，填充）linearGradient（gradientUnits，x1，y1，x2，y2，id，角色，填充）radialGradient（gradientUnits，cx，cy，r，id，角色，填充）停止（id，角色，填充）路径（d，路径长度，笔划斜接限制，id，角色，填充，<style>，变换）"
    },
    {
      "indent": 3,
      "text": "Properties: (most allow \"inherit\" as a value)",
      "zh-CHS": "属性：（大多数允许“继承”作为值）"
    },
    {
      "indent": 5,
      "text": "<style> (font-family, font-weight, font-style, font-variant, direction, unicode-bidi, text-anchor, fill, fill-rule)",
      "zh-CHS": "<style>（字体系列、字体大小、字体样式、字体变体、方向、unicode bidi、文本定位、填充、填充规则）"
    },
    {
      "indent": 5,
      "text": "<color>          (black, white, #000000, #ffffff, #FFFFFF)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "stroke (<color>, none, currentColor) stroke-width stroke-linecap (butt, round, square) stroke-linejoin (miter, round, bevel) stroke-miterlimit",
      "zh-CHS": "笔划（<color>，none，currentColor）笔划宽度笔划线条帽（对接、圆形、方形）笔划线条连接（斜接、圆形、倒角）笔划斜接限制"
    },
    {
      "indent": 5,
      "text": "stroke-dasharray stroke-dashoffset stroke-opacity vector-effect (non-scaling-stroke, none) viewport-fill (none, currentColor) viewport-fill-opacity",
      "zh-CHS": "笔划dasharray笔划dashoffset笔划不透明度矢量效果（非缩放笔划，无）视口填充（无，currentColor）视口填充不透明度"
    },
    {
      "indent": 5,
      "text": "display (inline, block, list-item, run-in, compact, marker, table, inline-table, table-row-group, table-header-group, table-footer-group, table-row, table-column-group, table-column, table-cell, table-caption, none) visibility (visible, hidden, collapse) color-rendering (auto, optimizeSpeed, optimizeQuality) shape-rendering (auto, optimizeSpeed, crispEdges, geometricPrecision) text-rendering (auto, optimizeSpeed, optimizeLegibility, geometricPrecision) buffered-rendering (auto, dynamic, static)",
      "zh-CHS": "显示（内联、块、列表项、磨合、压缩、标记、表格、内联表格、表格行组、表格页眉组、表格页脚组、表格行、表格列组、表格列、表格单元格、表格标题、无）可见性（可见、隐藏、折叠）颜色渲染（自动、optimizeSpeed、optimizeQuality）形状渲染（自动、optimizeSpeed、CrispEdge、几何精度）文本渲染（自动、optimizeSpeed、Optimize易读性、几何精度）缓冲渲染（自动、动态、静态）"
    },
    {
      "indent": 5,
      "text": "opacity solid-opacity solid-color (currentColor, <color>) color (currentColor, <color>) stop-color (currentColor, <color>) stop-opacity",
      "zh-CHS": "不透明度纯色不透明度纯色（currentColor，<color>）颜色（currentColor，<color>）停止颜色（currentColor，<color>）停止不透明度"
    },
    {
      "indent": 5,
      "text": "line-increment (auto) text-align (start, end, center) display-align (auto, before, center, after)",
      "zh-CHS": "行增量（自动）文本对齐（开始、结束、中心）显示对齐（自动、之前、中心、之后）"
    },
    {
      "indent": 5,
      "text": "font-size font-family (serif, sans-serif, monospace) font-weight (normal, bold, bolder, lighter) font-style (normal, italic, oblique) font-variant (normal, small-caps) direction (ltr, rtl) unicode-bidi (normal, embed, bidi-override) text-anchor (start, middle, end) fill (none, <color>) fill-rule (nonzero, evenodd) fill-opacity",
      "zh-CHS": "字体大小字体系列（衬线、无衬线、单空格）字体重量（普通、粗体、粗体、较轻）字体样式（普通、斜体、斜体）字体变体（普通、小写）方向（ltr、rtl）unicode bidi（普通、嵌入、bidi覆盖）文本定位（开始、中间、结束）填充（无，<color>）填充规则（非零、偶数）填充不透明度"
    },
    {
      "indent": 0,
      "text": "3. How to Create SVG Drawings",
      "section_title": true,
      "zh-CHS": "3. 如何创建SVG图形"
    },
    {
      "indent": 3,
      "text": "Many drawing packages can be used to create SVG drawings -- for example, Open Source packages Inkscape and Dia. Be aware that such packages may use SVG elements or attributes that are not allowed in SVG 1.2 RFC.",
      "zh-CHS": "许多绘图软件包可用于创建SVG绘图——例如，开放源码软件包Inkscape和Dia。请注意，这些包可能使用SVG 1.2 RFC中不允许的SVG元素或属性。"
    },
    {
      "indent": 3,
      "text": "o For example, the 'marker' attribute is often used to place symbols such as arrowheads on lines, but 'marker' is not allowed in SVG 1.2 Tiny or SVG 1.2 RFC. In such cases, one has to draw the arrowhead in another, simpler way.",
      "zh-CHS": "o 例如，“marker”属性通常用于在直线上放置箭头等符号，但SVG 1.2或SVG 1.2 RFC中不允许使用“marker”。在这种情况下，必须以另一种更简单的方式绘制箭头。"
    },
    {
      "indent": 3,
      "text": "o SVG clip paths are used to define a shape; objects outside that shape become invisible. The 'clipPath' element is not allowed in SVG 1.2 Tiny or SVG 1.2 RFC.",
      "zh-CHS": "o SVG剪辑路径用于定义形状；该形状之外的对象将不可见。SVG 1.2或SVG 1.2 RFC中不允许使用“clipPath”元素。"
    },
    {
      "indent": 3,
      "text": "Diagrams produced with these packages may contain elements, their attributes or properties, or values of attributes or properties that are not allowed in SVG 1.2 RFC. We will need to provide a tool to either (1) strip out anything that is not allowed in SVG 1.2 RFC or (2) replace disallowed values (e.g., replace 'Sans' with 'sans-serif' as an allowed value for 'font-family'). Experience with a simple test version of a tool for this has shown that such deletion and replacement can be effective for making SVG files from drawing packages conform to SVG 1.2 RFC, without visibly changing the diagrams they produce.",
      "zh-CHS": "使用这些包生成的图可能包含SVG 1.2 RFC中不允许的元素、它们的属性或属性或属性值。我们需要提供一个工具（1）去除SVG 1.2 RFC中不允许的任何内容，或（2）替换不允许的值（例如，将“Sans”替换为“Sans serif”，作为“font family”的允许值）。使用该工具的简单测试版本的经验表明，这种删除和替换可以有效地使图形包中的SVG文件符合SVG 1.2 RFC，而不会明显改变它们生成的图表。"
    },
    {
      "indent": 3,
      "text": "The tool described above can also be used by authors simply to check that their diagrams conform to SVG 1.2 RFC. To help with this, if visible changes do occur, the tool should produce a list of non-allowed keywords and the context in which they were found.",
      "zh-CHS": "作者也可以简单地使用上面描述的工具来检查他们的图表是否符合SVG1.2 RFC。为了帮助实现这一点，如果确实发生了可见的更改，该工具应该生成一个不允许的关键字列表以及找到这些关键字的上下文。"
    },
    {
      "indent": 3,
      "text": "To include a diagram in an RFC, the xml2rfc (v3) tool will need to provide a way to include SVG drawings in Internet-Drafts, as described in Section 2.5 of [RFC7991].",
      "zh-CHS": "如[RFC7991]第2.5节所述，为了在RFC中包含图表，xml2rfc（v3）工具需要提供一种在Internet草稿中包含SVG图形的方法。"
    },
    {
      "indent": 0,
      "text": "4. Accessibility Considerations",
      "section_title": true,
      "zh-CHS": "4. 可访问性注意事项"
    },
    {
      "indent": 3,
      "text": "One of the long-term goals for RFCs is to make them more accessible, e.g., to sight-impaired readers. For diagrams, it would be useful for authors to provide alternative forms of the diagram, so that voice-reading software could be used to \"talk through\" the diagram. Simply reading the SVG code for a complex diagram seems unlikely to work.",
      "zh-CHS": "RFC的一个长期目标是使其更容易访问，例如，对视力受损的读者。对于图表，作者提供图表的替代形式是很有用的，这样就可以使用语音阅读软件“通过”图表进行对话。简单地读取复杂图表的SVG代码似乎不太可能奏效。"
    },
    {
      "indent": 3,
      "text": "SVG 1.2 RFC allows SVG's 'title' and 'desc' elements. 'title' provides a brief text caption for an SVG object (much like a figure caption), and 'desc' provides a longer text description of what the object actually represents. As well, the SVG 'role' attribute can be used to indicate to a browser how an SVG object is to be interpreted. Good suggestions on how to use these elements are given in [SVG-ACCESS-TIPS].",
      "zh-CHS": "SVG1.2 RFC允许SVG的“title”和“desc”元素“title”为SVG对象提供了一个简短的文本标题（很像一个图形标题），“desc”为对象实际表示的内容提供了更长的文本描述。此外，SVG的“角色”属性还可用于向浏览器指示如何解释SVG对象。[SVG-ACCESS-TIPS]中给出了关于如何使用这些元素的好建议。"
    },
    {
      "indent": 3,
      "text": "ARIA is a W3C Recommendation for using SVG to create (as the name \"ARIA\" indicates) \"Accessible Rich Internet Applications\". A helpful introduction to ARIA is provided by [SVG-ARIA-PRIMER], while [SVG-USING-ARIA] gives examples of how to use ARIA to enhance SVG accessibility.",
      "zh-CHS": "ARIA是W3C推荐使用SVG创建（正如名称“ARIA”所示）“可访问的富Internet应用程序”。[SVG-ARIA-PRIMER]提供了对ARIA的有益介绍，[SVG-USING-ARIA]给出了如何使用ARIA增强SVG可访问性的示例。"
    },
    {
      "indent": 0,
      "text": "5. Examples of Diagrams Common in RFCs",
      "section_title": true,
      "zh-CHS": "5. RFC中常见的图表示例"
    },
    {
      "indent": 3,
      "text": "Another way to create SVG drawings is to write programs to draw them. For example, using Python and its svgwrite module is a pleasant environment (for those who like writing code); this section presents a few examples of diagrams created in this way. Note that they are merely examples of typical diagrams from RFCs.",
      "zh-CHS": "创建SVG图形的另一种方法是编写程序来绘制SVG图形。例如，使用Python及其svgwrite模块是一个令人愉快的环境（对于喜欢编写代码的人）；本节介绍了以这种方式创建的一些图表示例。请注意，它们只是RFC中典型图表的示例。"
    },
    {
      "indent": 3,
      "text": "The SVG diagrams for this section, along with an HTML version of this document that includes the SVG diagrams, can be seen at [NB-SVG-1.2-RFC].",
      "zh-CHS": "本节的SVG图以及包含SVG图的本文档HTML版本可在[NB-SVG-1.2-RFC]上查看。"
    },
    {
      "indent": 0,
      "text": "5.1. Packet Layout Diagrams",
      "section_title": true,
      "zh-CHS": "5.1. 数据包布局图"
    },
    {
      "indent": 3,
      "text": "Example: Figure 3 from [RFC793].",
      "zh-CHS": "示例：来自[RFC793]的图3。"
    },
    {
      "indent": 0,
      "text": "5.2. Sequence Diagrams (1)",
      "section_title": true,
      "zh-CHS": "5.2. 序列图（1）"
    },
    {
      "indent": 3,
      "text": "Example: Figure 6 from [ExpTrustedProxy].",
      "zh-CHS": "示例：来自[ExpTrustedProxy]的图6。"
    },
    {
      "indent": 0,
      "text": "5.3. Sequence Diagrams (2)",
      "section_title": true,
      "zh-CHS": "5.3. 序列图（2）"
    },
    {
      "indent": 3,
      "text": "Example: Figure 3 from [RFC4321].",
      "zh-CHS": "示例：来自[RFC4321]的图3。"
    },
    {
      "indent": 0,
      "text": "6. Security Considerations",
      "section_title": true,
      "zh-CHS": "6. 安全考虑"
    },
    {
      "indent": 3,
      "text": "This document does not introduce any security considerations on its own.",
      "zh-CHS": "本文档本身不介绍任何安全注意事项。"
    },
    {
      "indent": 0,
      "text": "7. References",
      "section_title": true,
      "zh-CHS": "7. 工具书类"
    },
    {
      "indent": 0,
      "text": "7.1. Normative References",
      "section_title": true,
      "zh-CHS": "7.1. 规范性引用文件"
    },
    {
      "indent": 3,
      "text": "[RFC6949] Flanagan, H. and N. Brownlee, \"RFC Series Format Requirements and Future Development\", RFC 6949, DOI 10.17487/RFC6949, May 2013, <http://www.rfc-editor.org/info/rfc6949>.",
      "zh-CHS": "[RFC6949]Flanagan，H.和N.Brownlee，“RFC系列格式要求和未来发展”，RFC 6949，DOI 10.17487/RFC6949，2013年5月<http://www.rfc-editor.org/info/rfc6949>."
    },
    {
      "indent": 3,
      "text": "[W3C.REC-SVGTiny12-20081222] Andersson, O., Berjon, R., Dahlstrom, E., Emmons, A., Ferraiolo, J., Grasso, A., Hardy, V., Hayman, S., Jackson, D., Lilley, C., McCormack, C., Neumann, A., Northway, C., Quint, A., Ramani, N., Schepers, D., and A. Shellshear, \"Scalable Vector Graphics (SVG) Tiny 1.2 Specification\", World Wide Web Consortium Recommendation REC-SVGTiny12-20081222, December 2008, <http://www.w3.org/TR/2008/REC-SVGTiny12-20081222>.",
      "zh-CHS": "[W3C.REC-SVGTiny12-20081222]安德森，O.，伯容，R.，达斯特罗姆，E.，埃蒙斯，A.，费拉里奥罗，J.，格拉索，A.，哈代，V.，海曼，S.，杰克逊，D.，莉莉，C.，麦科马克，C.，诺依曼，A.，北纬，C.，昆特，A.，拉马尼，N.，舍伯斯，D.，和A.谢尔切特，“可缩放矢量图形（SVG）微小1.2规范”，万维网联盟建议REC-SVGTiny12-20081222，2008年12月<http://www.w3.org/TR/2008/REC-SVGTiny12-20081222>."
    },
    {
      "indent": 3,
      "text": "[W3C.REC-CSS2-20110607] Bos, B., Celik, T., Hickson, I., and H. Lie, \"Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification\", World Wide Web Consortium Recommendation REC-CSS2-20110607, June 2011, <http://www.w3.org/TR/2011/REC-CSS2-20110607>.",
      "zh-CHS": "[W3C.REC-CSS2-20110607]Bos，B.，Celik，T.，Hickson，I.，和H.Lie，“级联样式表第2级修订版1（CSS 2.1）规范”，万维网联盟建议REC-CSS2-20110607，2011年6月<http://www.w3.org/TR/2011/REC-CSS2-20110607>."
    },
    {
      "indent": 0,
      "text": "7.2. Informative References",
      "section_title": true,
      "zh-CHS": "7.2. 资料性引用"
    },
    {
      "indent": 3,
      "text": "[W3C.REC-SVG11-20110816] Dahlstrom, E., Dengler, P., Grasso, A., Lilley, C., McCormack, C., Schepers, D., Watt, J., Ferraiolo, J., Fujisawa, J., and D. Jackson, \"Scalable Vector Graphics (SVG) 1.1 (Second Edition)\", World Wide Web Consortium Recommendation REC-SVG11-20110816, August 2011, <http://www.w3.org/TR/2011/REC-SVG11-20110816>.",
      "zh-CHS": "[W3C.REC-SVG11-20110816]Dahlstrom，E.，Dengler，P.，Grasso，A.，Lilley，C.，McCormack，C.，Schepers，D.，Watt，J.，Ferraiolo，J.，Fujisawa，J.，和D.Jackson，“可缩放矢量图形（SVG）1.1（第二版）”，万维网联盟建议REC-SVG11-20110816，2011年8月<http://www.w3.org/TR/2011/REC-SVG11-20110816>."
    },
    {
      "indent": 3,
      "text": "[SVG-ACCESS-TIPS] Watson, L., \"Tips for Creating Accessible SVG\", May 2014, <http://www.sitepoint.com/tips-accessible-svg>.",
      "zh-CHS": "[SVG-ACCESS-TIPS]沃森，L.“创建可访问SVG的技巧”，2014年5月<http://www.sitepoint.com/tips-accessible-svg>."
    },
    {
      "indent": 3,
      "text": "[SVG-ARIA-PRIMER] Pappas, L., Schwerdtfeger, R., and M. Cooper, \"WAI-ARIA 1.0 Primer\", World Wide Web Consortium Working Draft, September 2010, <http://www.w3.org/TR/2010/WD-wai-aria-primer-20100916>.",
      "zh-CHS": "[SVG-ARIA-PRIMER]Pappas，L.，Schwerdtfeger，R.，和M.Cooper，“WAI-ARIA 1.0 PRIMER”，万维网联盟工作草案，2010年9月<http://www.w3.org/TR/2010/WD-wai-aria-primer-20100916>."
    },
    {
      "indent": 3,
      "text": "[SVG-USING-ARIA] Watson, L., \"Using ARIA to enhance SVG accessibility\", The Paciello Group, December 2013, <https://www.paciellogroup.com/blog/2013/12/ using-aria-enhance-svg-accessibility/>.",
      "zh-CHS": "[SVG-USING-ARIA]Watson，L.，“使用ARIA增强SVG的可访问性”，Paciello Group，2013年12月<https://www.paciellogroup.com/blog/2013/12/ 使用aria增强svg可访问性/>。"
    },
    {
      "indent": 3,
      "text": "[RFC7991] Hoffman, P., \"The \"xml2rfc\" Version 3 Vocabulary\", RFC 7991, DOI 10.17487/RFC7991, December 2016, <http://www.rfc-editor.org/info/rfc7991>.",
      "zh-CHS": "[RFC7991]Hoffman，P.“xml2rfc”版本3词汇表”，RFC 7991，DOI 10.17487/RFC7991，2016年12月<http://www.rfc-editor.org/info/rfc7991>."
    },
    {
      "indent": 3,
      "text": "[NB-SVG-1.2-RFC] Brownlee, N., \"Index of /materials/format/svg\", <https://www.rfc-editor.org/materials/format/svg/>.",
      "zh-CHS": "[NB-SVG-1.2-RFC]布朗利，N.，“材料/格式/SVG索引”<https://www.rfc-editor.org/materials/format/svg/>."
    },
    {
      "indent": 3,
      "text": "[RFC793] Postel, J., \"Transmission Control Protocol\", STD 7, RFC 793, DOI 10.17487/RFC0793, September 1981, <http://www.rfc-editor.org/info/rfc793>.",
      "zh-CHS": "[RFC793]Postel，J.，“传输控制协议”，标准7，RFC 793，DOI 10.17487/RFC0793，1981年9月<http://www.rfc-editor.org/info/rfc793>."
    },
    {
      "indent": 3,
      "text": "[ExpTrustedProxy] Loreto, S., Mattsson, J., Skog, R., Spaak, H., Bourg, G., Druta, D., and M. Hafeez, \"Explicit Trusted Proxy in HTTP/2.0\", Work in Progress, draft-loreto-httpbis-trusted-proxy20-01, February 2014.",
      "zh-CHS": "[ExpTrustedProxy]Loreto，S.，Mattsson，J.，Skog，R.，Spaak，H.，Bourg，G.，Druta，D.，和M.Hafeez，“HTTP/2.0中的显式可信代理”，正在进行中的工作，草稿-Loreto-httpbis-Trusted-proxy20-01，2014年2月。"
    },
    {
      "indent": 3,
      "text": "[RFC4321] Sparks, R., \"Problems Identified Associated with the Session Initiation Protocol's (SIP) Non-INVITE Transaction\", RFC 4321, DOI 10.17487/RFC4321, January 2006, <http://www.rfc-editor.org/info/rfc4321>.",
      "zh-CHS": "[RFC4321]Sparks，R.“与会话启动协议（SIP）非邀请事务相关的问题”，RFC 4321，DOI 10.17487/RFC4321，2006年1月<http://www.rfc-editor.org/info/rfc4321>."
    },
    {
      "indent": 3,
      "text": "[RNG-HOME] Murata, M., \"RELAX NG home page\", February 2014, <http://www.relaxng.org/>.",
      "zh-CHS": "[RNG-HOME]村田，M.，“放松NG主页”，2014年2月<http://www.relaxng.org/>."
    },
    {
      "indent": 0,
      "text": "Appendix A. RELAX NG Compact (RNC) Schema for SVG 1.2 RFC",
      "zh-CHS": "附录A.SVG 1.2 RFC的RELAX NG Compact（RNC）模式"
    },
    {
      "indent": 3,
      "text": "The following RNC schema can be used to check whether an SVG file conforms to SVG 1.2 RFC. For example, if this schema were contained in a file called SVG-1.2-RFC.rnc, the following command will test whether SVG file diagram.svg is a conformant SVG 1.2 RFC drawing.",
      "zh-CHS": "以下RNC模式可用于检查SVG文件是否符合SVG1.2 RFC。例如，如果此模式包含在名为SVG-1.2-RFC.rnc的文件中，则以下命令将测试SVG file diagram.SVG是否为符合SVG 1.2 RFC的图形。"
    },
    {
      "indent": 3,
      "text": "jing -c SVG-1.2-RFC.rnc diagram.svg",
      "zh-CHS": "jing-c SVG-1.2-RFC.rnc diagram.SVG"
    },
    {
      "indent": 3,
      "text": "The RNC schema included below is available on the RFC Editor website <https://www.rfc-editor.org/materials/format/SVG-1.2-RFC.rnc>. The website is considered definitive should there be any discrepancies.",
      "zh-CHS": "下面包含的RNC模式可在RFC编辑器网站上获得<https://www.rfc-editor.org/materials/format/SVG-1.2-RFC.rnc>. 如果存在任何差异，则认为该网站是确定的。"
    },
    {
      "indent": 0,
      "text": "#---  SVG 1.2 RFC RNC schema; Nevil Brownlee, Thu 26 Jan 2016 (NZST)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "default namespace = \"http://www.w3.org/2000/svg\"\nnamespace ns1 = \"http://www.w3.org/1999/xlink\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "rfc-color = (  # SVG-1.2-RFC doesn't allow color or grayscale\n  \"black\" | \"white\" | \"#000000\" | \"#FFFFFF\" | \"#ffffff\" | \"inherit\" )\nstart = svg\nsvg =\n  element svg {\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n        attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n        attribute stroke-linecap {\n          \"butt\" | \"round\" | \"square\" | \"inherit\"\n        }?,\n        attribute stroke-linejoin {\n          \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n        }?,\n        attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n        attribute stroke-width { \"inherit\" | xsd:string }?,\n        attribute color { rfc-color }?,\n        attribute color-rendering {\n          \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n        }?)\n     & attribute vector-effect {\n         \"none\" | \"non-scaling-stroke\" | \"inherit\"\n       }?\n     & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n        attribute unicode-bidi {\n          \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "    }?)\n & (attribute solid-color { rfc-color }?,\n    attribute solid-opacity { \"inherit\" | xsd:string }?)\n & (attribute display-align {\n      \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n    }?,\n    attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n & (attribute stop-color { rfc-color }?,\n    attribute stop-opacity { \"inherit\" | xsd:string }?)\n & (attribute font-family { \"inherit\" | xsd:string }?,\n    attribute font-size { \"inherit\" | xsd:string }?,\n    attribute font-style {\n      \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n    }?,\n    attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n    attribute font-weight {\n      \"normal\"\n      | \"bold\"\n      | \"bolder\"\n      | \"lighter\"\n    }?,\n    attribute text-anchor {\n      \"start\" | \"middle\" | \"end\" | \"inherit\"\n    }?,\n    attribute text-align {\n      \"start\" | \"center\" | \"end\" | \"inherit\"\n    }?)),\n(attribute id { xsd:NCName }\n | attribute xml:id { xsd:NCName })?,\nattribute xml:base { xsd:anyURI | xsd:string }?,\nattribute xml:lang { xsd:language? }?,\nattribute class { xsd:NMTOKENS }?,\nattribute role { xsd:string }?,\nattribute rel { xsd:string }?,\nattribute rev { xsd:string }?,\nattribute typeof { xsd:string }?,\nattribute content { xsd:string }?,\nattribute datatype { xsd:string }?,\nattribute resource { xsd:string }?,\nattribute about { xsd:string }?,\nattribute property { xsd:string }?,\nattribute xml:space { \"default\" | \"preserve\" }?,\nattribute width { xsd:string }?,\nattribute height { xsd:string }?,\nattribute preserveAspectRatio {\n  xsd:string { pattern = \"\\s*(none|xMidYMid)\\s*(meet)?\\s*\" }\n}?,\nattribute viewBox { text }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "    attribute zoomAndPan { \"disable\" }?,\n    attribute version {\n      xsd:string \"1.2\"\n    }?,\n    attribute baseProfile {\n      xsd:string \"tiny\"\n    }?,\n    attribute contentScriptType { xsd:string }?,\n    attribute snapshotTime { xsd:string \"none\" | xsd:string }?,\n    attribute timelineBegin {\n      xsd:string \"onLoad\" | xsd:string \"onStart\"\n    }?,\n    attribute playbackOrder {\n      xsd:string \"all\" | xsd:string \"forwardOnly\"\n    }?,\n    (desc\n     | svgTitle\n     | path\n     | rect\n     | circle\n     | line\n     | ellipse\n     | polyline\n     | polygon\n     | solidColor\n     | textArea\n     | linearGradient\n     | radialGradient\n     | \\text\n     | g\n     | defs\n     | use\n     | a)*\n  }\ndesc =\n  element desc {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "attribute about { xsd:string }?,\nattribute property { xsd:string }?,\nattribute xml:space { \"default\" | \"preserve\" }?,\nattribute requiredFeatures { xsd:string }?,\nattribute requiredExtensions { xsd:string }?,\nattribute requiredFormats { xsd:string }?,\nattribute requiredFonts { xsd:string }?,\nattribute systemLanguage { xsd:string }?,\n((attribute display {\n    \"inline\"\n    | \"block\"\n    | \"list-item\"\n    | \"run-in\"\n    | \"compact\"\n    | \"marker\"\n    | \"table\"\n    | \"inline-table\"\n    | \"table-row-group\"\n    | \"table-header-group\"\n    | \"table-footer-group\"\n    | \"table-row\"\n    | \"table-column-group\"\n    | \"table-column\"\n    | \"table-cell\"\n    | \"table-caption\"\n    | \"none\"\n    | \"inherit\"\n  }?,\n  attribute visibility { \"visible\" | \"hidden\" | \"collapse\"\n    | \"inherit\" }?,\n  attribute image-rendering {\n    \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n  }?,\n  attribute shape-rendering {\n    \"auto\"\n    | \"optimizeSpeed\"\n    | \"crispEdges\"\n    | \"geometricPrecision\"\n    | \"inherit\"\n  }?,\n  attribute text-rendering {\n    \"auto\"\n    | \"optimizeSpeed\"\n    | \"optimizeLegibility\"\n    | \"geometricPrecision\"\n    | \"inherit\"\n  }?,\n  attribute buffered-rendering {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "        \"auto\" | \"dynamic\" | \"static\" | \"inherit\"\n      }?)\n     & (attribute viewport-fill { \"none\" | rfc-color }?,\n        attribute viewport-fill-opacity { \"inherit\" | xsd:string }?)),\n    text\n  }\nsvgTitle =\n  element title {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute requiredFeatures { xsd:string }?,\n    attribute requiredExtensions { xsd:string }?,\n    attribute requiredFormats { xsd:string }?,\n    attribute requiredFonts { xsd:string }?,\n    attribute systemLanguage { xsd:string }?,\n    ((attribute display {\n        \"inline\"\n        | \"block\"\n        | \"list-item\"\n        | \"run-in\"\n        | \"compact\"\n        | \"marker\"\n        | \"table\"\n        | \"inline-table\"\n        | \"table-row-group\"\n        | \"table-header-group\"\n        | \"table-footer-group\"\n        | \"table-row\"\n        | \"table-column-group\"\n        | \"table-column\"\n        | \"table-cell\"\n        | \"table-caption\"\n        | \"none\"\n        | \"inherit\"\n      }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "      attribute visibility { \"visible\" | \"hidden\"\n        | \"collapse\" | \"inherit\" }?,\n      attribute image-rendering {\n        \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n      }?,\n      attribute shape-rendering {\n        \"auto\"\n        | \"optimizeSpeed\"\n        | \"crispEdges\"\n        | \"geometricPrecision\"\n        | \"inherit\"\n      }?,\n      attribute text-rendering {\n        \"auto\"\n        | \"optimizeSpeed\"\n        | \"optimizeLegibility\"\n        | \"geometricPrecision\"\n        | \"inherit\"\n      }?,\n      attribute buffered-rendering {\n        \"auto\" | \"dynamic\" | \"static\" | \"inherit\"\n      }?)\n     & (attribute viewport-fill { \"none\" | rfc-color }?,\n        attribute viewport-fill-opacity { \"inherit\" | xsd:string }?)),\n    text\n  }\npath =\n  element path {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute transform { xsd:string | \"none\" }?,\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "   attribute stroke { rfc-color }?,\n   attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n   attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n   attribute stroke-linecap {\n     \"butt\" | \"round\" | \"square\" | \"inherit\"\n   }?,\n   attribute stroke-linejoin {\n     \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n   }?,\n   attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n   attribute stroke-width { \"inherit\" | xsd:string }?,\n   attribute color { rfc-color }?,\n   attribute color-rendering {\n     \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n   }?)\n& attribute vector-effect {\n    \"none\" | \"non-scaling-stroke\" | \"inherit\"\n  }?\n& (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n   attribute unicode-bidi {\n     \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n   }?)\n& (attribute solid-color { rfc-color }?,\n   attribute solid-opacity { \"inherit\" | xsd:string }?)\n& (attribute display-align {\n     \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n   }?,\n   attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n& (attribute stop-color { rfc-color }?,\n   attribute stop-opacity { \"inherit\" | xsd:string }?)\n& (attribute font-family { \"inherit\" | xsd:string }?,\n   attribute font-size { \"inherit\" | xsd:string }?,\n   attribute font-style {\n     \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n   }?,\n   attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n   attribute font-weight {\n     \"normal\"\n     | \"bold\"\n     | \"bolder\"\n     | \"lighter\"\n     | \"inherit\"\n   }?,\n   attribute text-anchor {\n     \"start\" | \"middle\" | \"end\" | \"inherit\"\n   }?,\n   attribute text-align {\n     \"start\" | \"center\" | \"end\" | \"inherit\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "        }?)),\n    attribute requiredFeatures { xsd:string }?,\n    attribute requiredExtensions { xsd:string }?,\n    attribute requiredFormats { xsd:string }?,\n    attribute requiredFonts { xsd:string }?,\n    attribute systemLanguage { xsd:string }?,\n    attribute d { xsd:string }?,\n    attribute pathLength { xsd:string }?,\n    attribute style { xsd:string }?,  # Added to SVG-1.2-RFC (Inkscape)\n    (desc\n     | svgTitle)*\n  }\nrect =\n  element rect {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute transform { xsd:string | \"none\" }?,\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n        attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n        attribute stroke-linecap {\n          \"butt\" | \"round\" | \"square\" | \"inherit\"\n        }?,\n        attribute stroke-linejoin {\n          \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n        }?,\n        attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n        attribute stroke-width { \"inherit\" | xsd:string }?,\n        attribute color { rfc-color }?,\n        attribute color-rendering {\n          \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "    }?)\n & attribute vector-effect {\n     \"none\" | \"non-scaling-stroke\" | \"inherit\"\n   }?\n & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n    attribute unicode-bidi {\n      \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n    }?)\n & (attribute solid-color { rfc-color }?,\n    attribute solid-opacity { \"inherit\" | xsd:string }?)\n & (attribute display-align {\n      \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n    }?,\n    attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n & (attribute stop-color { rfc-color }?,\n    attribute stop-opacity { \"inherit\" | xsd:string }?)\n & (attribute font-family { \"inherit\" | xsd:string }?,\n    attribute font-size { \"inherit\" | xsd:string }?,\n    attribute font-style {\n      \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n    }?,\n    attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n    attribute font-weight {\n      \"normal\"\n      | \"bold\"\n      | \"bolder\"\n      | \"lighter\"\n      | \"inherit\"\n    }?,\n    attribute text-anchor {\n      \"start\" | \"middle\" | \"end\" | \"inherit\"\n    }?,\n    attribute text-align {\n      \"start\" | \"center\" | \"end\" | \"inherit\"\n    }?)),\nattribute requiredFeatures { xsd:string }?,\nattribute requiredExtensions { xsd:string }?,\nattribute requiredFormats { xsd:string }?,\nattribute requiredFonts { xsd:string }?,\nattribute systemLanguage { xsd:string }?,\nattribute x { xsd:string }?,\nattribute y { xsd:string }?,\nattribute width { xsd:string }?,\nattribute height { xsd:string }?,\nattribute rx { xsd:string }?,\nattribute ry { xsd:string }?,\nattribute style { xsd:string }?,  # Added to SVG-1.2-RFC (Inkscape)\n(desc",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "     | svgTitle)*\n  }\ncircle =\n  element circle {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute transform { xsd:string | \"none\" }?,\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n        attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n        attribute stroke-linecap {\n          \"butt\" | \"round\" | \"square\" | \"inherit\"\n        }?,\n        attribute stroke-linejoin {\n          \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n        }?,\n        attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n        attribute stroke-width { \"inherit\" | xsd:string }?,\n        attribute color { rfc-color }?,\n        attribute color-rendering {\n          \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n        }?)\n     & attribute vector-effect {\n         \"none\" | \"non-scaling-stroke\" | \"inherit\"\n       }?\n     & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n        attribute unicode-bidi {\n          \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n        }?)\n     & (attribute solid-color { rfc-color }?,\n        attribute solid-opacity { \"inherit\" | xsd:string }?)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "     & (attribute display-align {\n          \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n        }?,\n        attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n     & (attribute stop-color { rfc-color }?,\n        attribute stop-opacity { \"inherit\" | xsd:string }?)\n     & (attribute font-family { \"inherit\" | xsd:string }?,\n        attribute font-size { \"inherit\" | xsd:string }?,\n        attribute font-style {\n          \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n        }?,\n        attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n        attribute font-weight {\n          \"normal\"\n          | \"bold\"\n          | \"bolder\"\n          | \"lighter\"\n          | \"inherit\"\n        }?,\n        attribute text-anchor {\n          \"start\" | \"middle\" | \"end\" | \"inherit\"\n        }?,\n        attribute text-align {\n          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    attribute requiredFeatures { xsd:string }?,\n    attribute requiredExtensions { xsd:string }?,\n    attribute requiredFormats { xsd:string }?,\n    attribute requiredFonts { xsd:string }?,\n    attribute systemLanguage { xsd:string }?,\n    attribute cx { xsd:string }?,\n    attribute cy { xsd:string }?,\n    attribute r { xsd:string }?,\n    attribute style { xsd:string }?,  # Added to SVG-1.2-RFC (Inkscape)\n    (desc\n     | svgTitle)*\n  }\nline =\n  element line {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "attribute content { xsd:string }?,\nattribute datatype { xsd:string }?,\nattribute resource { xsd:string }?,\nattribute about { xsd:string }?,\nattribute property { xsd:string }?,\nattribute xml:space { \"default\" | \"preserve\" }?,\nattribute transform { xsd:string | \"none\" }?,\n((attribute fill-opacity { \"inherit\" | xsd:string }?,\n  attribute stroke-opacity { \"inherit\" | xsd:string }?)\n & (attribute fill { \"none\" | rfc-color }?,\n    attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n    attribute stroke { rfc-color }?,\n    attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n    attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n    attribute stroke-linecap {\n      \"butt\" | \"round\" | \"square\" | \"inherit\"\n    }?,\n    attribute stroke-linejoin {\n      \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n    }?,\n    attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n    attribute stroke-width { \"inherit\" | xsd:string }?,\n    attribute color { rfc-color }?,\n    attribute color-rendering {\n      \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n    }?)\n & attribute vector-effect {\n     \"none\" | \"non-scaling-stroke\" | \"inherit\"\n   }?\n & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n    attribute unicode-bidi {\n      \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n    }?)\n & (attribute solid-color { rfc-color }?,\n    attribute solid-opacity { \"inherit\" | xsd:string }?)\n & (attribute display-align {\n      \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n    }?,\n    attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n & (attribute stop-color { rfc-color }?,\n    attribute stop-opacity { \"inherit\" | xsd:string }?)\n & (attribute font-family { \"inherit\" | xsd:string }?,\n    attribute font-size { \"inherit\" | xsd:string }?,\n    attribute font-style {\n      \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n    }?,\n    attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n    attribute font-weight {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "          \"normal\"\n          | \"bold\"\n          | \"bolder\"\n          | \"lighter\"\n          | \"inherit\"\n        }?,\n        attribute text-anchor {\n          \"start\" | \"middle\" | \"end\" | \"inherit\"\n        }?,\n        attribute text-align {\n          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    attribute requiredFeatures { xsd:string }?,\n    attribute requiredExtensions { xsd:string }?,\n    attribute requiredFormats { xsd:string }?,\n    attribute requiredFonts { xsd:string }?,\n    attribute systemLanguage { xsd:string }?,\n    attribute x1 { xsd:string }?,\n    attribute y1 { xsd:string }?,\n    attribute x2 { xsd:string }?,\n    attribute y2 { xsd:string }?,\n    (desc\n     | svgTitle)*\n  }\nellipse =\n  element ellipse {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute transform { xsd:string | \"none\" }?,\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "    attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n    attribute stroke-linecap {\n      \"butt\" | \"round\" | \"square\" | \"inherit\"\n    }?,\n    attribute stroke-linejoin {\n      \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n    }?,\n    attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n    attribute stroke-width { \"inherit\" | xsd:string }?,\n    attribute color { rfc-color }?,\n    attribute color-rendering {\n      \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n    }?)\n & attribute vector-effect {\n     \"none\" | \"non-scaling-stroke\" | \"inherit\"\n   }?\n & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n    attribute unicode-bidi {\n      \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n    }?)\n & (attribute solid-color { rfc-color }?,\n    attribute solid-opacity { \"inherit\" | xsd:string }?)\n & (attribute display-align {\n      \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n    }?,\n    attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n & (attribute stop-color { rfc-color }?,\n    attribute stop-opacity { \"inherit\" | xsd:string }?)\n & (attribute font-family { \"inherit\" | xsd:string }?,\n    attribute font-size { \"inherit\" | xsd:string }?,\n    attribute font-style {\n      \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n    }?,\n    attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n    attribute font-weight {\n      \"normal\"\n      | \"bold\"\n      | \"bolder\"\n      | \"lighter\"\n      | \"inherit\"\n    }?,\n    attribute text-anchor {\n      \"start\" | \"middle\" | \"end\" | \"inherit\"\n    }?,\n    attribute text-align {\n      \"start\" | \"center\" | \"end\" | \"inherit\"\n    }?)),\nattribute requiredFeatures { xsd:string }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "    attribute requiredExtensions { xsd:string }?,\n    attribute requiredFormats { xsd:string }?,\n    attribute requiredFonts { xsd:string }?,\n    attribute systemLanguage { xsd:string }?,\n    attribute rx { xsd:string }?,\n    attribute ry { xsd:string }?,\n    attribute cx { xsd:string }?,\n    attribute cy { xsd:string }?,\n    attribute style { xsd:string }?,  # Added to SVG-1.2-RFC (Inkscape)\n    (desc\n     | svgTitle)*\n  }\npolyline =\n  element polyline {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute transform { xsd:string | \"none\" }?,\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n        attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n        attribute stroke-linecap {\n          \"butt\" | \"round\" | \"square\" | \"inherit\"\n        }?,\n        attribute stroke-linejoin {\n          \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n        }?,\n        attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n        attribute stroke-width { \"inherit\" | xsd:string }?,\n        attribute color { rfc-color }?,\n        attribute color-rendering {\n          \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "        }?)\n     & attribute vector-effect {\n         \"none\" | \"non-scaling-stroke\" | \"inherit\"\n       }?\n     & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n        attribute unicode-bidi {\n          \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n        }?)\n     & (attribute solid-color { rfc-color }?,\n        attribute solid-opacity { \"inherit\" | xsd:string }?)\n     & (attribute display-align {\n          \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n        }?,\n        attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n     & (attribute stop-color { rfc-color }?,\n        attribute stop-opacity { \"inherit\" | xsd:string }?)\n     & (attribute font-family { \"inherit\" | xsd:string }?,\n        attribute font-size { \"inherit\" | xsd:string }?,\n        attribute font-style {\n          \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n        }?,\n        attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n        attribute font-weight {\n          \"normal\"\n          | \"bold\"\n          | \"bolder\"\n          | \"lighter\"\n          | \"inherit\"\n        }?,\n        attribute text-anchor {\n          \"start\" | \"middle\" | \"end\" | \"inherit\"\n        }?,\n        attribute text-align {\n          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    attribute requiredFeatures { xsd:string }?,\n    attribute requiredExtensions { xsd:string }?,\n    attribute requiredFormats { xsd:string }?,\n    attribute requiredFonts { xsd:string }?,\n    attribute systemLanguage { xsd:string }?,\n    attribute points { xsd:string }?,\n    (desc\n     | svgTitle)*\n  }\npolygon =\n  element polygon {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "attribute xml:base { xsd:anyURI | xsd:string }?,\nattribute xml:lang { xsd:language? }?,\nattribute class { xsd:NMTOKENS }?,\nattribute role { xsd:string }?,\nattribute rel { xsd:string }?,\nattribute rev { xsd:string }?,\nattribute typeof { xsd:string }?,\nattribute content { xsd:string }?,\nattribute datatype { xsd:string }?,\nattribute resource { xsd:string }?,\nattribute about { xsd:string }?,\nattribute property { xsd:string }?,\nattribute xml:space { \"default\" | \"preserve\" }?,\nattribute transform { xsd:string | \"none\" }?,\n((attribute fill-opacity { \"inherit\" | xsd:string }?,\n  attribute stroke-opacity { \"inherit\" | xsd:string }?)\n & (attribute fill { \"none\" | rfc-color }?,\n    attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n    attribute stroke { rfc-color }?,\n    attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n    attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n    attribute stroke-linecap {\n      \"butt\" | \"round\" | \"square\" | \"inherit\"\n    }?,\n    attribute stroke-linejoin {\n      \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n    }?,\n    attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n    attribute stroke-width { \"inherit\" | xsd:string }?,\n    attribute color { rfc-color }?,\n    attribute color-rendering {\n      \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n    }?)\n & attribute vector-effect {\n     \"none\" | \"non-scaling-stroke\" | \"inherit\"\n   }?\n & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n    attribute unicode-bidi {\n      \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n    }?)\n & (attribute solid-color { rfc-color }?,\n    attribute solid-opacity { \"inherit\" | xsd:string }?)\n & (attribute display-align {\n      \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n    }?,\n    attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n & (attribute stop-color { rfc-color }?,\n    attribute stop-opacity { \"inherit\" | xsd:string }?)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "     & (attribute font-family { \"inherit\" | xsd:string }?,\n        attribute font-size { \"inherit\" | xsd:string }?,\n        attribute font-style {\n          \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n        }?,\n        attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n        attribute font-weight {\n          \"normal\"\n          | \"bold\"\n          | \"bolder\"\n          | \"lighter\"\n          | \"inherit\"\n        }?,\n        attribute text-anchor {\n          \"start\" | \"middle\" | \"end\" | \"inherit\"\n        }?,\n        attribute text-align {\n          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    attribute requiredFeatures { xsd:string }?,\n    attribute requiredExtensions { xsd:string }?,\n    attribute requiredFormats { xsd:string }?,\n    attribute requiredFonts { xsd:string }?,\n    attribute systemLanguage { xsd:string }?,\n    attribute points { xsd:string }?,\n    attribute style { xsd:string }?,  # Added to SVG-1.2-RFC (Inkscape)\n    (desc\n     | svgTitle)*\n  }\nsolidColor =\n  element solidColor {\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n        attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n        attribute stroke-linecap {\n          \"butt\" | \"round\" | \"square\" | \"inherit\"\n        }?,\n        attribute stroke-linejoin {\n          \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n        }?,\n        attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n        attribute stroke-width { \"inherit\" | xsd:string }?,\n        attribute color { rfc-color }?,\n        attribute color-rendering {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "      \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n    }?)\n & attribute vector-effect {\n     \"none\" | \"non-scaling-stroke\" | \"inherit\"\n   }?\n & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n    attribute unicode-bidi {\n      \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n    }?)\n & (attribute solid-color { rfc-color }?,\n    attribute solid-opacity { \"inherit\" | xsd:string }?)\n & (attribute display-align {\n      \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n    }?,\n    attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n & (attribute stop-color { rfc-color }?,\n    attribute stop-opacity { \"inherit\" | xsd:string }?)\n & (attribute font-family { \"inherit\" | xsd:string }?,\n    attribute font-size { \"inherit\" | xsd:string }?,\n    attribute font-style {\n      \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n    }?,\n    attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n    attribute font-weight {\n      \"normal\"\n      | \"bold\"\n      | \"bolder\"\n      | \"lighter\"\n      | \"inherit\"\n    }?,\n    attribute text-anchor {\n      \"start\" | \"middle\" | \"end\" | \"inherit\"\n    }?,\n    attribute text-align {\n      \"start\" | \"center\" | \"end\" | \"inherit\"\n    }?)),\n(attribute id { xsd:NCName }\n | attribute xml:id { xsd:NCName })?,\nattribute xml:base { xsd:anyURI | xsd:string }?,\nattribute xml:lang { xsd:language? }?,\nattribute class { xsd:NMTOKENS }?,\nattribute role { xsd:string }?,\nattribute rel { xsd:string }?,\nattribute rev { xsd:string }?,\nattribute typeof { xsd:string }?,\nattribute content { xsd:string }?,\nattribute datatype { xsd:string }?,\nattribute resource { xsd:string }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    (desc\n     | svgTitle)*\n  }\ntextArea =\n  element textArea {\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n        attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n        attribute stroke-linecap {\n          \"butt\" | \"round\" | \"square\" | \"inherit\"\n        }?,\n        attribute stroke-linejoin {\n          \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n        }?,\n        attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n        attribute stroke-width { \"inherit\" | xsd:string }?,\n        attribute color { rfc-color }?,\n        attribute color-rendering {\n          \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n        }?)\n     & attribute vector-effect {\n         \"none\" | \"non-scaling-stroke\" | \"inherit\"\n       }?\n     & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n        attribute unicode-bidi {\n          \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n        }?)\n     & (attribute solid-color { rfc-color }?,\n        attribute solid-opacity { \"inherit\" | xsd:string }?)\n     & (attribute display-align {\n          \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n        }?,\n        attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n     & (attribute stop-color { rfc-color }?,\n        attribute stop-opacity { \"inherit\" | xsd:string }?)\n     & (attribute font-family { \"inherit\" | xsd:string }?,\n        attribute font-size { \"inherit\" | xsd:string }?,\n        attribute font-style {\n          \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n        }?,\n        attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "        attribute font-weight {\n          \"normal\"\n          | \"bold\"\n          | \"bolder\"\n          | \"lighter\"\n          | \"inherit\"\n        }?,\n        attribute text-anchor {\n          \"start\" | \"middle\" | \"end\" | \"inherit\"\n        }?,\n        attribute text-align {\n          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute requiredFeatures { xsd:string }?,\n    attribute requiredExtensions { xsd:string }?,\n    attribute requiredFormats { xsd:string }?,\n    attribute requiredFonts { xsd:string }?,\n    attribute systemLanguage { xsd:string }?,\n    attribute transform { xsd:string | \"none\" }?,\n    attribute x { xsd:string }?,\n    attribute y { xsd:string }?,\n    attribute width { xsd:string | \"auto\" }?,\n    attribute height { xsd:string | \"auto\" }?,\n    (tspan\n     | desc\n     | svgTitle\n     | tspan_2\n     | text\n     | a_2)+\n  }\nlinearGradient =\n  element linearGradient {\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": " attribute stroke-opacity { \"inherit\" | xsd:string }?)\n& (attribute fill { \"none\" | rfc-color }?,\n   attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n   attribute stroke { rfc-color }?,\n   attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n   attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n   attribute stroke-linecap {\n     \"butt\" | \"round\" | \"square\" | \"inherit\"\n   }?,\n   attribute stroke-linejoin {\n     \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n   }?,\n   attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n   attribute stroke-width { \"inherit\" | xsd:string }?,\n   attribute color { rfc-color }?,\n   attribute color-rendering {\n     \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n   }?)\n& attribute vector-effect {\n    \"none\" | \"non-scaling-stroke\" | \"inherit\"\n  }?\n& (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n   attribute unicode-bidi {\n     \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n   }?)\n& (attribute solid-color { rfc-color }?,\n   attribute solid-opacity { \"inherit\" | xsd:string }?)\n& (attribute display-align {\n     \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n   }?,\n   attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n& (attribute stop-color { rfc-color }?,\n   attribute stop-opacity { \"inherit\" | xsd:string }?)\n& (attribute font-family { \"inherit\" | xsd:string }?,\n   attribute font-size { \"inherit\" | xsd:string }?,\n   attribute font-style {\n     \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n   }?,\n   attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n   attribute font-weight {\n     \"normal\"\n     | \"bold\"\n     | \"bolder\"\n     | \"lighter\"\n     | \"inherit\"\n   }?,\n   attribute text-anchor {\n     \"start\" | \"middle\" | \"end\" | \"inherit\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "        }?,\n        attribute text-align {\n          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    attribute gradientUnits { \"userSpaceOnUse\" | \"objectBoundingBox\" }?,\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute x1 { xsd:string }?,\n    attribute y1 { xsd:string }?,\n    attribute x2 { xsd:string }?,\n    attribute y2 { xsd:string }?,\n    (desc\n     | svgTitle)*\n  }\nradialGradient =\n  element radialGradient {\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n        attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n        attribute stroke-linecap {\n          \"butt\" | \"round\" | \"square\" | \"inherit\"\n        }?,\n        attribute stroke-linejoin {\n          \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n        }?,\n        attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n        attribute stroke-width { \"inherit\" | xsd:string }?,\n        attribute color { rfc-color }?,\n        attribute color-rendering {\n          \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n        }?)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": " & attribute vector-effect {\n     \"none\" | \"non-scaling-stroke\" | \"inherit\"\n   }?\n & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n    attribute unicode-bidi {\n      \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n    }?)\n & (attribute solid-color { rfc-color }?,\n    attribute solid-opacity { \"inherit\" | xsd:string }?)\n & (attribute display-align {\n      \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n    }?,\n    attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n & (attribute stop-color { rfc-color }?,\n    attribute stop-opacity { \"inherit\" | xsd:string }?)\n & (attribute font-family { \"inherit\" | xsd:string }?,\n    attribute font-size { \"inherit\" | xsd:string }?,\n    attribute font-style {\n      \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n    }?,\n    attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n    attribute font-weight {\n      \"normal\"\n      | \"bold\"\n      | \"bolder\"\n      | \"lighter\"\n      | \"inherit\"\n    }?,\n    attribute text-anchor {\n      \"start\" | \"middle\" | \"end\" | \"inherit\"\n    }?,\n    attribute text-align {\n      \"start\" | \"center\" | \"end\" | \"inherit\"\n    }?)),\nattribute gradientUnits { \"userSpaceOnUse\" | \"objectBoundingBox\" }?,\n(attribute id { xsd:NCName }\n | attribute xml:id { xsd:NCName })?,\nattribute xml:base { xsd:anyURI | xsd:string }?,\nattribute xml:lang { xsd:language? }?,\nattribute class { xsd:NMTOKENS }?,\nattribute role { xsd:string }?,\nattribute rel { xsd:string }?,\nattribute rev { xsd:string }?,\nattribute typeof { xsd:string }?,\nattribute content { xsd:string }?,\nattribute datatype { xsd:string }?,\nattribute resource { xsd:string }?,\nattribute about { xsd:string }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute cx { xsd:string }?,\n    attribute cy { xsd:string }?,\n    attribute r { xsd:string }?,\n    (desc\n     | svgTitle)*\n  }\n\\text =\n  element text {\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n        attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n        attribute stroke-linecap {\n          \"butt\" | \"round\" | \"square\" | \"inherit\"\n        }?,\n        attribute stroke-linejoin {\n          \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n        }?,\n        attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n        attribute stroke-width { \"inherit\" | xsd:string }?,\n        attribute color { rfc-color }?,\n        attribute color-rendering {\n          \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n        }?)\n     & attribute vector-effect {\n         \"none\" | \"non-scaling-stroke\" | \"inherit\"\n       }?\n     & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n        attribute unicode-bidi {\n          \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n        }?)\n     & (attribute solid-color { rfc-color }?,\n        attribute solid-opacity { \"inherit\" | xsd:string }?)\n     & (attribute display-align {\n          \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n        }?,\n        attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n     & (attribute stop-color { rfc-color }?,\n        attribute stop-opacity { \"inherit\" | xsd:string }?)\n     & (attribute font-family { \"inherit\" | xsd:string }?,\n        attribute font-size { \"inherit\" | xsd:string }?,\n        attribute font-style {\n          \"normal\" | \"italic\" | \"oblique\" | \"inherit\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "        }?,\n        attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n        attribute font-weight {\n          \"normal\"\n          | \"bold\"\n          | \"bolder\"\n          | \"lighter\"\n          | \"inherit\"\n        }?,\n        attribute text-anchor {\n          \"start\" | \"middle\" | \"end\" | \"inherit\"\n        }?,\n        attribute text-align {\n          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute requiredFeatures { xsd:string }?,\n    attribute requiredExtensions { xsd:string }?,\n    attribute requiredFormats { xsd:string }?,\n    attribute requiredFonts { xsd:string }?,\n    attribute systemLanguage { xsd:string }?,\n    attribute transform { xsd:string | \"none\" }?,\n    attribute x { xsd:string }?,\n    attribute y { xsd:string }?,\n    attribute rotate { xsd:string }?,\n    attribute style { xsd:string }?,  # Added to SVG-1.2-RFC (Inkscape)\n    (desc\n     | svgTitle\n     | tspan_2\n     | text\n     | a_2)+\n  }\ng =\n  element g {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "((attribute fill-opacity { \"inherit\" | xsd:string }?,\n  attribute stroke-opacity { \"inherit\" | xsd:string }?)\n & (attribute fill { \"none\" | rfc-color }?,\n    attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n    attribute stroke { rfc-color }?,\n    attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n    attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n    attribute stroke-linecap {\n      \"butt\" | \"round\" | \"square\" | \"inherit\"\n    }?,\n    attribute stroke-linejoin {\n      \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n    }?,\n    attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n    attribute stroke-width { \"inherit\" | xsd:string }?,\n    attribute color { rfc-color }?,\n    attribute color-rendering {\n      \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n    }?)\n & attribute vector-effect {\n     \"none\" | \"non-scaling-stroke\" | \"inherit\"\n   }?\n & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n    attribute unicode-bidi {\n      \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n    }?)\n & (attribute solid-color { rfc-color }?,\n    attribute solid-opacity { \"inherit\" | xsd:string }?)\n & (attribute display-align {\n      \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n    }?,\n    attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n & (attribute stop-color { rfc-color }?,\n    attribute stop-opacity { \"inherit\" | xsd:string }?)\n & (attribute font-family { \"inherit\" | xsd:string }?,\n    attribute font-size { \"inherit\" | xsd:string }?,\n    attribute font-style {\n      \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n    }?,\n    attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n    attribute font-weight {\n      \"normal\"\n      | \"bold\"\n      | \"bolder\"\n      | \"lighter\"\n      | \"inherit\"\n    }?,\n    attribute text-anchor {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "      \"start\" | \"middle\" | \"end\" | \"inherit\"\n    }?,\n    attribute text-align {\n      \"start\" | \"center\" | \"end\" | \"inherit\"\n    }?)),\n(attribute id { xsd:NCName }\n | attribute xml:id { xsd:NCName })?,\nattribute xml:base { xsd:anyURI | xsd:string }?,\nattribute xml:lang { xsd:language? }?,\nattribute class { xsd:NMTOKENS }?,\nattribute role { xsd:string }?,\nattribute rel { xsd:string }?,\nattribute rev { xsd:string }?,\nattribute typeof { xsd:string }?,\nattribute content { xsd:string }?,\nattribute datatype { xsd:string }?,\nattribute resource { xsd:string }?,\nattribute about { xsd:string }?,\nattribute property { xsd:string }?,\nattribute xml:space { \"default\" | \"preserve\" }?,\nattribute requiredFeatures { xsd:string }?,\nattribute requiredExtensions { xsd:string }?,\nattribute requiredFormats { xsd:string }?,\nattribute requiredFonts { xsd:string }?,\nattribute systemLanguage { xsd:string }?,\nattribute transform { xsd:string | \"none\" }?,\nattribute style { xsd:string }?,\n    # Added to SVG-1.2-RFC (for Inkscape)\nattribute visibility {\n  \"visible\" | \"hidden\" | \"collapse\" | \"inherit\" }?,\n    # Added to SVG-1.2-RFC (for LibreOffice)\n(desc\n | svgTitle\n | path\n | rect\n | circle\n | line\n | ellipse\n | polyline\n | polygon\n | solidColor\n | textArea\n | linearGradient\n | radialGradient\n | \\text\n | g\n | defs\n | use",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "     | a)*\n  }\ndefs =\n  element defs {\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n        attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n        attribute stroke-linecap {\n          \"butt\" | \"round\" | \"square\" | \"inherit\"\n        }?,\n        attribute stroke-linejoin {\n          \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n        }?,\n        attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n        attribute stroke-width { \"inherit\" | xsd:string }?,\n        attribute color { rfc-color }?,\n        attribute color-rendering {\n          \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n        }?)\n     & attribute vector-effect {\n         \"none\" | \"non-scaling-stroke\" | \"inherit\"\n       }?\n     & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n        attribute unicode-bidi {\n          \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n        }?)\n     & (attribute solid-color { rfc-color }?,\n        attribute solid-opacity { \"inherit\" | xsd:string }?)\n     & (attribute display-align {\n          \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n        }?,\n        attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n     & (attribute stop-color { rfc-color }?,\n        attribute stop-opacity { \"inherit\" | xsd:string }?)\n     & (attribute font-family { \"inherit\" | xsd:string }?,\n        attribute font-size { \"inherit\" | xsd:string }?,\n        attribute font-style {\n          \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n        }?,\n        attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n        attribute font-weight {\n          \"normal\"\n          | \"bold\"\n          | \"bolder\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "          | \"lighter\"\n          | \"inherit\"\n        }?,\n        attribute text-anchor {\n          \"start\" | \"middle\" | \"end\" | \"inherit\"\n        }?,\n        attribute text-align {\n          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    (desc\n     | svgTitle\n     | path\n     | rect\n     | circle\n     | line\n     | ellipse\n     | polyline\n     | polygon\n     | solidColor\n     | textArea\n     | linearGradient\n     | radialGradient\n     | \\text\n     | g\n     | defs\n     | use\n     | a)*\n  }\nuse =\n  element use {\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "   attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n   attribute stroke { rfc-color }?,\n   attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n   attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n   attribute stroke-linecap {\n     \"butt\" | \"round\" | \"square\" | \"inherit\"\n   }?,\n   attribute stroke-linejoin {\n     \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n   }?,\n   attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n   attribute stroke-width { \"inherit\" | xsd:string }?,\n   attribute color { rfc-color }?,\n   attribute color-rendering {\n     \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n   }?)\n& attribute vector-effect {\n    \"none\" | \"non-scaling-stroke\" | \"inherit\"\n  }?\n& (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n   attribute unicode-bidi {\n     \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n   }?)\n& (attribute solid-color { rfc-color }?,\n   attribute solid-opacity { \"inherit\" | xsd:string }?)\n& (attribute display-align {\n     \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n   }?,\n   attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n& (attribute stop-color { rfc-color }?,\n   attribute stop-opacity { \"inherit\" | xsd:string }?)\n& (attribute font-family { \"inherit\" | xsd:string }?,\n   attribute font-size { \"inherit\" | xsd:string }?,\n   attribute font-style {\n     \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n   }?,\n   attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n   attribute font-weight {\n     \"normal\"\n     | \"bold\"\n     | \"bolder\"\n     | \"lighter\"\n     | \"inherit\"\n   }?,\n   attribute text-anchor {\n     \"start\" | \"middle\" | \"end\" | \"inherit\"\n   }?,\n   attribute text-align {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute requiredFeatures { xsd:string }?,\n    attribute requiredExtensions { xsd:string }?,\n    attribute requiredFormats { xsd:string }?,\n    attribute requiredFonts { xsd:string }?,\n    attribute systemLanguage { xsd:string }?,\n    attribute transform { xsd:string | \"none\" }?,\n    attribute ns1:show { \"embed\" }?,\n    attribute ns1:actuate { \"onLoad\" }?,\n    attribute ns1:type { \"simple\" }?,\n    attribute ns1:role { xsd:anyURI | xsd:string }?,\n    attribute ns1:arcrole { xsd:anyURI | xsd:string }?,\n    attribute ns1:title { text }?,\n    attribute ns1:href { xsd:anyURI | xsd:string }?,\n    attribute x { xsd:string }?,\n    attribute y { xsd:string }?,\n    (desc\n     | svgTitle)*\n  }\na =\n  element a {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "attribute resource { xsd:string }?,\nattribute about { xsd:string }?,\nattribute property { xsd:string }?,\nattribute xml:space { \"default\" | \"preserve\" }?,\nattribute requiredFeatures { xsd:string }?,\nattribute requiredExtensions { xsd:string }?,\nattribute requiredFormats { xsd:string }?,\nattribute requiredFonts { xsd:string }?,\nattribute systemLanguage { xsd:string }?,\n((attribute fill-opacity { \"inherit\" | xsd:string }?,\n  attribute stroke-opacity { \"inherit\" | xsd:string }?)\n & (attribute fill { \"none\" | rfc-color }?,\n    attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n    attribute stroke { rfc-color }?,\n    attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n    attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n    attribute stroke-linecap {\n      \"butt\" | \"round\" | \"square\" | \"inherit\"\n    }?,\n    attribute stroke-linejoin {\n      \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n    }?,\n    attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n    attribute stroke-width { \"inherit\" | xsd:string }?,\n    attribute color { rfc-color }?,\n    attribute color-rendering {\n      \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n    }?)\n & attribute vector-effect {\n     \"none\" | \"non-scaling-stroke\" | \"inherit\"\n   }?\n & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n    attribute unicode-bidi {\n      \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n    }?)\n & (attribute solid-color { rfc-color }?,\n    attribute solid-opacity { \"inherit\" | xsd:string }?)\n & (attribute display-align {\n      \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n    }?,\n    attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n & (attribute stop-color { rfc-color }?,\n    attribute stop-opacity { \"inherit\" | xsd:string }?)\n & (attribute font-family { \"inherit\" | xsd:string }?,\n    attribute font-size { \"inherit\" | xsd:string }?,\n    attribute font-style {\n      \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n    }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "        attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n        attribute font-weight {\n          \"normal\"\n          | \"bold\"\n          | \"bolder\"\n          | \"lighter\"\n          | \"inherit\"\n        }?,\n        attribute text-anchor {\n          \"start\" | \"middle\" | \"end\" | \"inherit\"\n        }?,\n        attribute text-align {\n          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    attribute transform { xsd:string | \"none\" }?,\n    attribute ns1:show { \"new\" | \"replace\" }?,\n    attribute ns1:actuate { \"onRequest\" }?,\n    attribute ns1:type { \"simple\" }?,\n    attribute ns1:role { xsd:anyURI | xsd:string }?,\n    attribute ns1:arcrole { xsd:anyURI | xsd:string }?,\n    attribute ns1:title { text }?,\n    attribute ns1:href { xsd:anyURI | xsd:string }?,\n    attribute target {\n      \"_replace\" | \"_self\" | \"_parent\" | \"_top\" | \"_blank\" | xsd:Name\n    }?,\n    (desc\n     | svgTitle\n     | path\n     | rect\n     | circle\n     | line\n     | ellipse\n     | polyline\n     | polygon\n     | solidColor\n     | textArea\n     | linearGradient\n     | radialGradient\n     | \\text\n     | g\n     | defs\n     | use)*\n  }\nstop =\n  element stop {\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"inherit\" | xsd:string }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "   attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n   attribute stroke { \"inherit\" | xsd:string }?,\n   attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n   attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n   attribute stroke-linecap {\n     \"butt\" | \"round\" | \"square\" | \"inherit\"\n   }?,\n   attribute stroke-linejoin {\n     \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n   }?,\n   attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n   attribute stroke-width { \"inherit\" | xsd:string }?,\n   attribute color { rfc-color }?,\n   attribute color-rendering {\n     \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n   }?)\n& attribute vector-effect {\n    \"none\" | \"non-scaling-stroke\" | \"inherit\"\n  }?\n& (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n   attribute unicode-bidi {\n     \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n   }?)\n& (attribute solid-color { \"inherit\" | xsd:string }?,\n   attribute solid-opacity { \"inherit\" | xsd:string }?)\n& (attribute display-align {\n     \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n   }?,\n   attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n& (attribute stop-color { \"inherit\" | xsd:string }?,\n   attribute stop-opacity { \"inherit\" | xsd:string }?)\n& (attribute font-family { \"inherit\" | xsd:string }?,\n   attribute font-size { \"inherit\" | xsd:string }?,\n   attribute font-style {\n     \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n   }?,\n   attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n   attribute font-weight {\n     \"normal\"\n     | \"bold\"\n     | \"bolder\"\n     | \"lighter\"\n     | \"inherit\"\n   }?,\n   attribute text-anchor {\n     \"start\" | \"middle\" | \"end\" | \"inherit\"\n   }?,\n   attribute text-align {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute offset { xsd:string }?,\n    (desc\n     | svgTitle)*\n  }\ntspan =\n  element tspan {\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n        attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n        attribute stroke-linecap {\n          \"butt\" | \"round\" | \"square\" | \"inherit\"\n        }?,\n        attribute stroke-linejoin {\n          \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n        }?,\n        attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n        attribute stroke-width { \"inherit\" | xsd:string }?,\n        attribute color { rfc-color }?,\n        attribute color-rendering {\n          \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n        }?)\n     & attribute vector-effect {\n         \"none\" | \"non-scaling-stroke\" | \"inherit\"\n       }?\n     & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n        attribute unicode-bidi {\n          \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "    }?)\n & (attribute solid-color { rfc-color }?,\n    attribute solid-opacity { \"inherit\" | xsd:string }?)\n & (attribute display-align {\n      \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n    }?,\n    attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n & (attribute stop-color { rfc-color }?,\n    attribute stop-opacity { \"inherit\" | xsd:string }?)\n & (attribute font-family { \"inherit\" | xsd:string }?,\n    attribute font-size { \"inherit\" | xsd:string }?,\n    attribute font-style {\n      \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n    }?,\n    attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n    attribute font-weight {\n      \"normal\"\n      | \"bold\"\n      | \"bolder\"\n      | \"lighter\"\n      | \"inherit\"\n    }?,\n    attribute text-anchor {\n      \"start\" | \"middle\" | \"end\" | \"inherit\"\n    }?,\n    attribute text-align {\n      \"start\" | \"center\" | \"end\" | \"inherit\"\n    }?)),\n(attribute id { xsd:NCName }\n | attribute xml:id { xsd:NCName })?,\nattribute xml:base { xsd:anyURI | xsd:string }?,\nattribute xml:lang { xsd:language? }?,\nattribute class { xsd:NMTOKENS }?,\nattribute role { xsd:string }?,\nattribute rel { xsd:string }?,\nattribute rev { xsd:string }?,\nattribute typeof { xsd:string }?,\nattribute content { xsd:string }?,\nattribute datatype { xsd:string }?,\nattribute resource { xsd:string }?,\nattribute about { xsd:string }?,\nattribute property { xsd:string }?,\nattribute xml:space { \"default\" | \"preserve\" }?,\nattribute requiredFeatures { xsd:string }?,\nattribute requiredExtensions { xsd:string }?,\nattribute requiredFormats { xsd:string }?,\nattribute requiredFonts { xsd:string }?,\nattribute systemLanguage { xsd:string }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "    attribute x { xsd:string }?,  # For SVG-1.2-RFC\n    attribute y { xsd:string }?,\n    (tbreak\n     | desc\n     | svgTitle\n     | tspan_2\n     | text\n     | a_2)+\n  }\ntspan_2 =\n  element tspan {\n    ((attribute fill-opacity { \"inherit\" | xsd:string }?,\n      attribute stroke-opacity { \"inherit\" | xsd:string }?)\n     & (attribute fill { \"none\" | rfc-color }?,\n        attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n        attribute stroke { rfc-color }?,\n        attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n        attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n        attribute stroke-linecap {\n          \"butt\" | \"round\" | \"square\" | \"inherit\"\n        }?,\n        attribute stroke-linejoin {\n          \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n        }?,\n        attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n        attribute stroke-width { \"inherit\" | xsd:string }?,\n        attribute color { rfc-color }?,\n        attribute color-rendering {\n          \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n        }?)\n     & attribute vector-effect {\n         \"none\" | \"non-scaling-stroke\" | \"inherit\"\n       }?\n     & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n        attribute unicode-bidi {\n          \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n        }?)\n     & (attribute solid-color { rfc-color }?,\n        attribute solid-opacity { \"inherit\" | xsd:string }?)\n     & (attribute display-align {\n          \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"\n        }?,\n        attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n     & (attribute stop-color { rfc-color }?,\n        attribute stop-opacity { \"inherit\" | xsd:string }?)\n     & (attribute font-family { \"inherit\" | xsd:string }?,\n        attribute font-size { \"inherit\" | xsd:string }?,\n        attribute font-style {",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "          \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n        }?,\n        attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n        attribute font-weight {\n          \"normal\"\n          | \"bold\"\n          | \"bolder\"\n          | \"lighter\"\n          | \"inherit\"\n        }?,\n        attribute text-anchor {\n          \"start\" | \"middle\" | \"end\" | \"inherit\"\n        }?,\n        attribute text-align {\n          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,\n    attribute rev { xsd:string }?,\n    attribute typeof { xsd:string }?,\n    attribute content { xsd:string }?,\n    attribute datatype { xsd:string }?,\n    attribute resource { xsd:string }?,\n    attribute about { xsd:string }?,\n    attribute property { xsd:string }?,\n    attribute xml:space { \"default\" | \"preserve\" }?,\n    attribute requiredFeatures { xsd:string }?,\n    attribute requiredExtensions { xsd:string }?,\n    attribute requiredFormats { xsd:string }?,\n    attribute requiredFonts { xsd:string }?,\n    attribute systemLanguage { xsd:string }?,\n    attribute x { xsd:string }?,  # For SVG-1.2-RFC\n    attribute y { xsd:string }?,\n    (desc\n     | svgTitle\n     | tspan_2\n     | text\n     | a_2)+\n  }\na_2 =\n  element a {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "attribute xml:base { xsd:anyURI | xsd:string }?,\nattribute xml:lang { xsd:language? }?,\nattribute class { xsd:NMTOKENS }?,\nattribute role { xsd:string }?,\nattribute rel { xsd:string }?,\nattribute rev { xsd:string }?,\nattribute typeof { xsd:string }?,\nattribute content { xsd:string }?,\nattribute datatype { xsd:string }?,\nattribute resource { xsd:string }?,\nattribute about { xsd:string }?,\nattribute property { xsd:string }?,\nattribute xml:space { \"default\" | \"preserve\" }?,\nattribute requiredFeatures { xsd:string }?,\nattribute requiredExtensions { xsd:string }?,\nattribute requiredFormats { xsd:string }?,\nattribute requiredFonts { xsd:string }?,\nattribute systemLanguage { xsd:string }?,\n((attribute fill-opacity { \"inherit\" | xsd:string }?,\n  attribute stroke-opacity { \"inherit\" | xsd:string }?)\n & (attribute fill { \"none\" | rfc-color }?,\n    attribute fill-rule { \"inherit\" | \"nonzero\" | \"evenodd\" }?,\n    attribute stroke { rfc-color }?,\n    attribute stroke-dasharray { \"inherit\" | \"none\" | xsd:string }?,\n    attribute stroke-dashoffset { \"inherit\" | xsd:string }?,\n    attribute stroke-linecap {\n      \"butt\" | \"round\" | \"square\" | \"inherit\"\n    }?,\n    attribute stroke-linejoin {\n      \"miter\" | \"round\" | \"bevel\" | \"inherit\"\n    }?,\n    attribute stroke-miterlimit { \"inherit\" | xsd:string }?,\n    attribute stroke-width { \"inherit\" | xsd:string }?,\n    attribute color { rfc-color }?,\n    attribute color-rendering {\n      \"auto\" | \"optimizeSpeed\" | \"optimizeQuality\" | \"inherit\"\n    }?)\n & attribute vector-effect {\n     \"none\" | \"non-scaling-stroke\" | \"inherit\"\n   }?\n & (attribute direction { \"ltr\" | \"rtl\" | \"inherit\" }?,\n    attribute unicode-bidi {\n      \"normal\" | \"embed\" | \"bidi-override\" | \"inherit\"\n    }?)\n & (attribute solid-color { rfc-color }?,\n    attribute solid-opacity { \"inherit\" | xsd:string }?)\n & (attribute display-align {\n      \"auto\" | \"before\" | \"center\" | \"after\" | \"inherit\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "        }?,\n        attribute line-increment { \"auto\" | \"inherit\" | xsd:string }?)\n     & (attribute stop-color { rfc-color }?,\n        attribute stop-opacity { \"inherit\" | xsd:string }?)\n     & (attribute font-family { \"inherit\" | xsd:string }?,\n        attribute font-size { \"inherit\" | xsd:string }?,\n        attribute font-style {\n          \"normal\" | \"italic\" | \"oblique\" | \"inherit\"\n        }?,\n        attribute font-variant { \"normal\" | \"small-caps\" | \"inherit\" }?,\n        attribute font-weight {\n          \"normal\"\n          | \"bold\"\n          | \"bolder\"\n          | \"lighter\"\n          | \"inherit\"\n        }?,\n        attribute text-anchor {\n          \"start\" | \"middle\" | \"end\" | \"inherit\"\n        }?,\n        attribute text-align {\n          \"start\" | \"center\" | \"end\" | \"inherit\"\n        }?)),\n    attribute transform { xsd:string | \"none\" }?,\n    attribute ns1:show { \"new\" | \"replace\" }?,\n    attribute ns1:actuate { \"onRequest\" }?,\n    attribute ns1:type { \"simple\" }?,\n    attribute ns1:role { xsd:anyURI | xsd:string }?,\n    attribute ns1:arcrole { xsd:anyURI | xsd:string }?,\n    attribute ns1:title { text }?,\n    attribute ns1:href { xsd:anyURI | xsd:string }?,\n    attribute target {\n      \"_replace\" | \"_self\" | \"_parent\" | \"_top\" | \"_blank\" | xsd:Name\n    }?,\n    (desc\n     | svgTitle\n     | tspan_2\n     | text)+\n  }\ntbreak =\n  element tbreak {\n    (attribute id { xsd:NCName }\n     | attribute xml:id { xsd:NCName })?,\n    attribute xml:base { xsd:anyURI | xsd:string }?,\n    attribute xml:lang { xsd:language? }?,\n    attribute class { xsd:NMTOKENS }?,\n    attribute role { xsd:string }?,\n    attribute rel { xsd:string }?,",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "  attribute rev { xsd:string }?,\n  attribute typeof { xsd:string }?,\n  attribute content { xsd:string }?,\n  attribute datatype { xsd:string }?,\n  attribute resource { xsd:string }?,\n  attribute about { xsd:string }?,\n  attribute property { xsd:string }?,\n  attribute xml:space { \"default\" | \"preserve\" }?,\n  attribute requiredFeatures { xsd:string }?,\n  attribute requiredExtensions { xsd:string }?,\n  attribute requiredFormats { xsd:string }?,\n  attribute requiredFonts { xsd:string }?,\n  attribute systemLanguage { xsd:string }?\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "#---  End of SVG 1.2 RFC RNC schema",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "IAB Members at the Time of Approval",
      "zh-CHS": "批准时的IAB成员"
    },
    {
      "indent": 3,
      "text": "The IAB members at the time this memo was approved were (in alphabetical order):",
      "zh-CHS": "本备忘录批准时，IAB成员为（按字母顺序排列）："
    },
    {
      "indent": 6,
      "text": "Jari Arkko Ralph Droms Ted Hardie Joe Hildebrand Russ Housley Lee Howard Erik Nordmark Robert Sparks Andrew Sullivan Dave Thaler Martin Thomson Brian Trammell Suzanne Woolf",
      "zh-CHS": "贾里·阿克科·拉尔夫·德罗姆斯·泰德·哈迪·乔·希尔德布兰德·罗斯·霍斯利·李·霍华德·埃里克·诺德马克·罗伯特·斯帕克斯·安德鲁·沙利文·戴夫·泰勒·马丁·汤姆森·布莱恩·特拉梅尔·苏珊娜·伍尔夫"
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "zh-CHS": "致谢"
    },
    {
      "indent": 3,
      "text": "Thanks to the RSE and the Design Team members for their helpful comments and suggestions for SVG 1.2 RFC. Thanks also to the wider IETF community for their input.",
      "zh-CHS": "感谢RSE和设计团队成员对SVG 1.2 RFC的有用意见和建议。还要感谢更广泛的IETF社区的投入。"
    },
    {
      "indent": 0,
      "text": "Author's Address",
      "zh-CHS": "作者地址"
    },
    {
      "indent": 3,
      "text": "Nevil Brownlee The University of Auckland",
      "zh-CHS": "奥克兰大学Nevil Brownlee"
    },
    {
      "indent": 3,
      "text": "Email: n.brownlee@auckland.ac.nz",
      "raw": true,
      "zh-CHS": " "
    }
  ]
}