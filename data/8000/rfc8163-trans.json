{
  "title": {
    "text": "RFC 8163: Transmission of IPv6 over Master-Slave/Token-Passing (MS/TP) Networks",
    "zh-CHS": "RFC 8163"
  },
  "number": 8163,
  "created_at": "2021-10-28 23:10:47.440511+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                      K. Lynn, Ed.\nRequest for Comments: 8163                                  Verizon Labs\nCategory: Standards Track                                    J. Martocci\nISSN: 2070-1721                                         Johnson Controls\n                                                              C. Neilson\n                                                          Delta Controls\n                                                            S. Donaldson\n                                                               Honeywell\n                                                                May 2017",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": "Transmission of IPv6 over Master-Slave/Token-Passing (MS/TP) Networks",
      "zh-CHS": "通过主从/令牌传递（MS/TP）网络传输IPv6"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "Master-Slave/Token-Passing (MS/TP) is a medium access control method for the RS-485 physical layer and is used primarily in building automation networks. This specification defines the frame format for transmission of IPv6 packets and the method of forming link-local and statelessly autoconfigured IPv6 addresses on MS/TP networks.",
      "zh-CHS": "主从/令牌传递（MS/TP）是RS-485物理层的一种介质访问控制方法，主要用于楼宇自动化网络。本规范定义了IPv6数据包传输的帧格式以及在MS/TP网络上形成链路本地和无状态自动配置IPv6地址的方法。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "zh-CHS": "关于下段备忘"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "zh-CHS": "这是一份互联网标准跟踪文件。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "zh-CHS": "本文件是互联网工程任务组（IETF）的产品。它代表了IETF社区的共识。它已经接受了公众审查，并已被互联网工程指导小组（IESG）批准出版。有关互联网标准的更多信息，请参见RFC 7841第2节。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at http://www.rfc-editor.org/info/rfc8163.",
      "zh-CHS": "有关本文件当前状态、任何勘误表以及如何提供反馈的信息，请访问http://www.rfc-editor.org/info/rfc8163."
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2017 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "zh-CHS": "版权所有（c）2017 IETF信托基金和确定为文件作者的人员。版权所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "zh-CHS": "本文件受BCP 78和IETF信托有关IETF文件的法律规定的约束(http://trustee.ietf.org/license-info)自本文件出版之日起生效。请仔细阅读这些文件，因为它们描述了您对本文件的权利和限制。从本文件中提取的代码组件必须包括信托法律条款第4.e节中所述的简化BSD许可证文本，并提供简化BSD许可证中所述的无担保。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3\n2.  Profile for IPv6 over MS/TP . . . . . . . . . . . . . . . . .   6\n3.  Addressing Modes  . . . . . . . . . . . . . . . . . . . . . .   7\n4.  Maximum Transmission Unit (MTU) . . . . . . . . . . . . . . .   8\n5.  LoBAC Adaptation Layer  . . . . . . . . . . . . . . . . . . .   8\n6.  Stateless Address Autoconfiguration . . . . . . . . . . . . .   9\n7.  IPv6 Link-Local Address . . . . . . . . . . . . . . . . . . .  10\n8.  Unicast Address Mapping . . . . . . . . . . . . . . . . . . .  10\n9.  Multicast Address Mapping . . . . . . . . . . . . . . . . . .  11\n10. Header Compression  . . . . . . . . . . . . . . . . . . . . .  11\n11. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  11\n12. Security Considerations . . . . . . . . . . . . . . . . . . .  12\n13. References  . . . . . . . . . . . . . . . . . . . . . . . . .  12\nAppendix A.  Abstract MAC Interface . . . . . . . . . . . . . . .  15\nAppendix B.  Consistent Overhead Byte Stuffing (COBS) . . . . . .  17\nAppendix C.  Encoded CRC-32K (CRC32K) . . . . . . . . . . . . . .  20\nAppendix D.  Example 6LoBAC Frame Decode  . . . . . . . . . . . .  22\nAcknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  27\nAuthors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  27",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "Master-Slave/Token-Passing (MS/TP) is a Medium Access Control (MAC) protocol for the RS-485 [TIA-485-A] physical layer and is used primarily in building automation networks. This specification defines the frame format for transmission of IPv6 [RFC2460] packets and the method of forming link-local and statelessly autoconfigured IPv6 addresses on MS/TP networks. The general approach is to adapt elements of the 6LoWPAN specifications ([RFC4944], [RFC6282], and [RFC6775]) to constrained wired networks, as noted below.",
      "zh-CHS": "主从/令牌传递（MS/TP）是RS-485[TIA-485-a]物理层的介质访问控制（MAC）协议，主要用于楼宇自动化网络。本规范定义了用于传输IPv6[RFC2460]数据包的帧格式，以及在MS/TP网络上形成链路本地和无状态自动配置IPv6地址的方法。一般方法是将6LoWPAN规范的元素（[RFC4944]、[RFC6282]和[RFC6775]）适应受约束的有线网络，如下所述。"
    },
    {
      "indent": 3,
      "text": "An MS/TP device is typically based on a low-cost microcontroller with limited processing power and memory. These constraints, together with low data rates and a small MAC address space, are similar to those faced in 6LoWPAN networks. MS/TP differs significantly from 6LoWPAN in at least three respects: a) MS/TP devices are typically mains powered, b) all MS/TP devices on a segment can communicate directly so there are no hidden node or mesh routing issues, and c) the latest MS/TP specification provides support for large payloads, eliminating the need for fragmentation and reassembly below IPv6.",
      "zh-CHS": "MS/TP设备通常基于处理能力和内存有限的低成本微控制器。这些限制，加上低数据速率和较小的MAC地址空间，与6LoWPAN网络中面临的限制类似。MS/TP与6LoWPAN至少在三个方面存在显著差异：a）MS/TP设备通常由电源供电，b）网段上的所有MS/TP设备都可以直接通信，因此不存在隐藏节点或网状路由问题，以及c）最新的MS/TP规范提供了对大型有效负载的支持，无需在IPv6下进行碎片化和重新组装。"
    },
    {
      "indent": 3,
      "text": "The following sections provide a brief overview of MS/TP and then describe how to form IPv6 addresses and encapsulate IPv6 packets in MS/TP frames. This specification (subsequently referred to as \"6LoBAC\") includes a REQUIRED header compression mechanism that is based on LOWPAN_IPHC [RFC6282] and improves MS/TP link utilization.",
      "zh-CHS": "以下各节简要概述了MS/TP，然后描述了如何在MS/TP帧中形成IPv6地址和封装IPv6数据包。本规范（随后称为“6LoBAC”）包括基于LOWPAN_IPHC[RFC6282]的所需报头压缩机制，并提高MS/TP链路利用率。"
    },
    {
      "indent": 0,
      "text": "1.1. Requirements Language",
      "section_title": true,
      "zh-CHS": "1.1. 需求语言"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in [RFC2119].",
      "zh-CHS": "本文件中的关键词“必须”、“不得”、“必需”、“应”、“不应”、“应”、“不应”、“建议”、“可”和“可选”应按照[RFC2119]中所述进行解释。"
    },
    {
      "indent": 0,
      "text": "1.2. Abbreviations Used",
      "section_title": true,
      "zh-CHS": "1.2. 使用的缩写"
    },
    {
      "indent": 3,
      "text": "ASHRAE:  American Society of Heating, Refrigerating, and Air-\n         Conditioning Engineers <http://www.ashrae.org>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "BACnet: An ISO/ANSI/ASHRAE Standard Data Communication Protocol for Building Automation and Control Networks",
      "zh-CHS": "BACnet：一种用于楼宇自动化和控制网络的ISO/ANSI/ASHRAE标准数据通信协议"
    },
    {
      "indent": 3,
      "text": "CRC: Cyclic Redundancy Code",
      "zh-CHS": "循环冗余码"
    },
    {
      "indent": 3,
      "text": "MAC: Medium Access Control",
      "zh-CHS": "媒体访问控制"
    },
    {
      "indent": 3,
      "text": "MSDU: MAC Service Data Unit (MAC client data)",
      "zh-CHS": "MSDU:MAC服务数据单元（MAC客户端数据）"
    },
    {
      "indent": 3,
      "text": "MTU: Maximum Transmission Unit; the size of the largest data unit at the network-layer protocol that can be communicated in a single network transaction",
      "zh-CHS": "MTU：最大传输单位；网络层协议中可在单个网络事务中通信的最大数据单元的大小"
    },
    {
      "indent": 3,
      "text": "UART: Universal Asynchronous Transmitter/Receiver",
      "zh-CHS": "通用异步发射机/接收机"
    },
    {
      "indent": 0,
      "text": "1.3. MS/TP Overview",
      "section_title": true,
      "zh-CHS": "1.3. MS/TP概述"
    },
    {
      "indent": 3,
      "text": "This section provides a brief overview of MS/TP, as specified in Clause 9 of the ANSI/ASHRAE Standard 135-2016 [BACnet]. The latest version of [BACnet] integrates changes to legacy MS/TP (approved as [Addendum_an]) that provide support for larger frame sizes and improved error handling. [BACnet], Clause 9 also covers physical-layer deployment options.",
      "zh-CHS": "本节简要概述了ANSI/ASHRAE标准135-2016[BACnet]第9条规定的MS/TP。[BACnet]的最新版本集成了对传统MS/TP（批准为[附录]）的更改，支持更大的帧大小和改进的错误处理。[BACnet]，第9条还包括物理层部署选项。"
    },
    {
      "indent": 3,
      "text": "MS/TP is designed to enable multidrop networks over shielded twisted pair wiring. It can support network segments up to 1000 meters in length at a data rate of 115.2 kbit/s or segments up to 1200 meters in length at lower bit rates. An MS/TP interface requires only a UART, an RS-485 [TIA-485-A] transceiver with a driver that can be disabled, and a 5 ms resolution timer. The MS/TP MAC is typically implemented in software.",
      "zh-CHS": "MS/TP设计用于通过屏蔽双绞线实现多点网络。它可以以115.2 kbit/s的数据速率支持长度不超过1000米的网段，或者以较低的比特率支持长度不超过1200米的网段。MS/TP接口只需要一个UART、一个RS-485[TIA-485-a]收发器（带可禁用的驱动器）和一个5毫秒分辨率的定时器。MS/TP MAC通常在软件中实现。"
    },
    {
      "indent": 3,
      "text": "The differential signaling used by [TIA-485-A] requires a contention-free MAC. MS/TP uses a token to control access to a multidrop bus. Only an MS/TP master node can initiate the unsolicited transfer of data, and only when it holds the token. After sending at most a configured maximum number of data frames, a master node passes the token to the next master node (as determined by the MAC address). If present on the link, legacy MS/TP implementations (including any slave nodes) ignore the frame format defined in this specification.",
      "zh-CHS": "[TIA-485-A]使用的差分信令需要无争用MAC。MS/TP使用令牌控制对多点总线的访问。只有MS/TP主节点可以发起未经请求的数据传输，并且仅当它持有令牌时。在最多发送配置的最大数据帧数后，主节点将令牌传递给下一个主节点（由MAC地址确定）。如果链路上存在，传统MS/TP实现（包括任何从属节点）将忽略本规范中定义的帧格式。"
    },
    {
      "indent": 3,
      "text": "[BACnet], Clause 9 defines a range of Frame Type values used to designate frames that contain Data and Data CRC fields encoded using Consistent Overhead Byte Stuffing [COBS] (see Appendix B). The purpose of COBS encoding is to eliminate preamble sequences from the Encoded Data and Encoded CRC-32K fields. The Encoded Data field is covered by a 32-bit CRC [CRC32K] (see Appendix C) that is also COBS encoded.",
      "zh-CHS": "[BACnet]，第9条定义了一系列帧类型值，用于指定包含使用一致开销字节填充[COBS]编码的数据和数据CRC字段的帧（见附录B）。COBS编码的目的是从编码数据和编码CRC-32K字段中消除前导序列。编码数据字段由32位CRC[CRC32K]（见附录C）覆盖，该CRC[CRC32K]也是COBS编码的。"
    },
    {
      "indent": 3,
      "text": "MS/TP COBS-encoded frames have the following format:",
      "zh-CHS": "MS/TP COBS编码帧具有以下格式："
    },
    {
      "indent": 3,
      "text": "0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      0x55     |      0xFF     |  Frame Type   |      DA       |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      SA       |    Length (MS octet first)    |   Header CRC  |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n.                                                               .\n.                Encoded Data (2 - 1506 octets)                 .\n.                                                               .\n+                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                               |  Encoded CRC-32K (5 octets)   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               +-+-+-+-+-+-+-+-+\n|                                               | optional 0xFF |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "Figure 1: MS/TP COBS-Encoded Frame Format",
      "zh-CHS": "图1:MS/TP COBS编码帧格式"
    },
    {
      "indent": 3,
      "text": "MS/TP COBS-encoded frame fields are defined as follows:",
      "zh-CHS": "MS/TP COBS编码的帧字段定义如下："
    },
    {
      "indent": 4,
      "text": "Preamble two octet preamble: 0x55, 0xFF Frame Type one octet Destination Address one octet address Source Address one octet address Length two octets, most significant octet first Header CRC one octet Encoded Data 2 - 1506 octets (see Section 4 and Appendix B) Encoded CRC-32K five octets (see Appendix C) (pad) (optional) at most one octet of trailer: 0xFF",
      "zh-CHS": "前导码两个八位字节前导码：0x55，0xFF帧类型一个八位字节目的地址一个八位字节地址源地址一个八位字节地址长度两个八位字节，最高有效八位字节第一个头CRC一个八位字节编码数据2-1506个八位字节（见第4节和附录B）编码CRC-32K五个八位字节（见附录C）（pad）（可选）拖车最多一个八位字节：0xFF"
    },
    {
      "indent": 3,
      "text": "The Frame Type is used to distinguish between different types of MAC frames. The types relevant to this specification (in decimal) are:",
      "zh-CHS": "帧类型用于区分不同类型的MAC帧。与本规范相关的类型（十进制）为："
    },
    {
      "indent": 5,
      "text": " 0 Token 1 Poll For Master 2 Reply To Poll For Master 3 Test_Request 4 Test_Response ... 34 IPv6 over MS/TP (LoBAC) Encapsulation",
      "zh-CHS": "0主机2的令牌1轮询答复主机3测试请求4测试响应的轮询。。。34 IPv6 over MS/TP（LoBAC）封装"
    },
    {
      "indent": 3,
      "text": "Frame Types 8 - 31 and 35 - 127 are reserved for assignment by ASHRAE. Frame Types 32 - 127 designate COBS-encoded frames that convey Encoded Data and Encoded CRC-32K fields. See Section 2 for additional details.",
      "zh-CHS": "帧类型8-31和35-127保留给ASHRAE分配。帧类型32-127指定COBS编码的帧，这些帧传送编码数据和编码CRC-32K字段。更多详细信息，请参见第2节。"
    },
    {
      "indent": 3,
      "text": "The Destination and Source Addresses are each one octet in length. See Section 3 for additional details.",
      "zh-CHS": "目标地址和源地址的长度均为一个八位字节。更多详细信息，请参见第3节。"
    },
    {
      "indent": 3,
      "text": "For COBS-encoded frames, the Length field indicates the size of the [COBS] Encoded Data field in octets, plus three. (This adjustment is required in order for legacy MS/TP devices to ignore COBS-encoded frames.) See Section 4 and the Appendices for additional details.",
      "zh-CHS": "对于COBS编码的帧，长度字段表示[COBS]编码数据字段的大小（以八位字节为单位），加上三位字节。（为了使传统MS/TP设备忽略COBS编码的帧，需要进行此调整。）有关更多详细信息，请参阅第4节和附录。"
    },
    {
      "indent": 3,
      "text": "The Header CRC field covers the Frame Type, Destination Address, Source Address, and Length fields. The Header CRC generation and check procedures are specified in [BACnet], Annex G.1.",
      "zh-CHS": "标头CRC字段包括帧类型、目标地址、源地址和长度字段。[BACnet]附录G.1中规定了标头CRC生成和检查程序。"
    },
    {
      "indent": 3,
      "text": "Use of the optional 0xFF trailer octet is discussed in [BACnet], Clause 9.",
      "zh-CHS": "[BACnet]第9条讨论了可选0xFF拖车八位字节的使用。"
    },
    {
      "indent": 0,
      "text": "1.4. Goals and Constraints",
      "section_title": true,
      "zh-CHS": "1.4. 目标和制约因素"
    },
    {
      "indent": 3,
      "text": "The main goals of this specification are a) to enable IPv6 directly on wired end devices in building automation and control networks by leveraging existing standards to the greatest extent possible, and b) to co-exist with legacy MS/TP implementations. Co-existence allows MS/TP networks to be incrementally upgraded to support IPv6.",
      "zh-CHS": "本规范的主要目标是a）通过最大程度地利用现有标准，在楼宇自动化和控制网络中的有线终端设备上直接启用IPv6，以及b）与传统MS/TP实现共存。共存允许MS/TP网络增量升级以支持IPv6。"
    },
    {
      "indent": 3,
      "text": "In order to co-exist with legacy devices, no changes are permitted to the MS/TP addressing modes, frame header format, control frames, or Master Node state machine as specified in [BACnet], Clause 9.",
      "zh-CHS": "为了与传统设备共存，不允许更改[BACnet]第9条中规定的MS/TP寻址模式、帧头格式、控制帧或主节点状态机。"
    },
    {
      "indent": 0,
      "text": "2. Profile for IPv6 over MS/TP",
      "section_title": true,
      "zh-CHS": "2. 基于MS/TP的IPv6配置文件"
    },
    {
      "indent": 3,
      "text": "ASHRAE has assigned an MS/TP Frame Type value of 34 to indicate IPv6 over MS/TP (LoBAC) Encapsulation. This falls within the range of values that designate COBS-encoded data frames.",
      "zh-CHS": "ASHRAE已将MS/TP帧类型值指定为34，以指示IPv6 over MS/TP（LoBAC）封装。这属于指定COBS编码数据帧的值范围。"
    },
    {
      "indent": 0,
      "text": "2.1. Mandatory Features",
      "section_title": true,
      "zh-CHS": "2.1. 强制性特征"
    },
    {
      "indent": 3,
      "text": "[BACnet], Clause 9 specifies mandatory-to-implement features of MS/TP devices. For example, it is mandatory that all MS/TP nodes respond to a Test_Request with a Test_Response frame. All MS/TP master nodes must implement the Master Node state machine and handle Token, Poll For Master, and Reply To Poll For Master control frames. 6LoBAC nodes are MS/TP master nodes that implement a Receive Frame state machine capable of handling COBS-encoded frames.",
      "zh-CHS": "[BACnet]，第9条规定了实现MS/TP设备功能的强制性要求。例如，所有MS/TP节点必须使用测试响应帧响应测试请求。所有MS/TP主节点必须实现主节点状态机并处理令牌、主节点轮询和主控制帧应答轮询。6LoBAC节点是MS/TP主节点，实现能够处理COBS编码帧的接收帧状态机。"
    },
    {
      "indent": 3,
      "text": "6LoBAC nodes must support a data rate of 115.2 kbit/s and may support lower data rates as specified in [BACnet], Clause 9. The method of selecting the data rate is outside the scope of this specification.",
      "zh-CHS": "6LoBAC节点必须支持115.2 kbit/s的数据速率，并可支持[BACnet]第9条规定的较低数据速率。选择数据速率的方法不在本规范的范围内。"
    },
    {
      "indent": 0,
      "text": "2.2. Configuration Constants",
      "section_title": true,
      "zh-CHS": "2.2. 组态常数"
    },
    {
      "indent": 3,
      "text": "The following constants are used by the Receive Frame state machine.",
      "zh-CHS": "接收帧状态机使用以下常量。"
    },
    {
      "indent": 3,
      "text": "Nmin_COBS_length The minimum valid Length value of any LoBAC-encapsulated frame: 5",
      "zh-CHS": "Nmin_COBS_length任何LoBAC封装帧的最小有效长度值：5"
    },
    {
      "indent": 3,
      "text": "Nmax_COBS_length The maximum valid Length value of any LoBAC-encapsulated frame: 1509",
      "zh-CHS": "Nmax_COBS_length任何LoBAC封装帧的最大有效长度值：1509"
    },
    {
      "indent": 0,
      "text": "2.3. Configuration Parameters",
      "section_title": true,
      "zh-CHS": "2.3. 配置参数"
    },
    {
      "indent": 3,
      "text": "The following parameters are used by the Master Node state machine.",
      "zh-CHS": "主节点状态机使用以下参数。"
    },
    {
      "indent": 3,
      "text": "Nmax_info_frames The default maximum number of information frames the node may send before it must pass the token: 1",
      "zh-CHS": "Nmax_info_frames节点在必须通过令牌之前可以发送的默认最大信息帧数：1"
    },
    {
      "indent": 3,
      "text": "Nmax_master The default highest allowable address for master nodes: 127",
      "zh-CHS": "Nmax_master主节点的默认最高允许地址：127"
    },
    {
      "indent": 3,
      "text": "The mechanisms for setting parameters or monitoring MS/TP performance are outside the scope of this specification.",
      "zh-CHS": "设置参数或监控MS/TP性能的机制不在本规范的范围内。"
    },
    {
      "indent": 0,
      "text": "3. Addressing Modes",
      "section_title": true,
      "zh-CHS": "3. 寻址方式"
    },
    {
      "indent": 3,
      "text": "MS/TP node (MAC) addresses are one octet in length and are assigned dynamically. The method of assigning MAC addresses is outside the scope of this specification. However, each MS/TP node on the link MUST have a unique address in order to ensure correct MAC operation.",
      "zh-CHS": "MS/TP节点（MAC）地址的长度为一个八位字节，并动态分配。分配MAC地址的方法不在本规范的范围内。但是，链路上的每个MS/TP节点必须具有唯一的地址，以确保正确的MAC操作。"
    },
    {
      "indent": 3,
      "text": "[BACnet], Clause 9 specifies that addresses 0 through 127 are valid for master nodes. The method specified in Section 6 for creating a MAC-address-derived Interface Identifier (IID) ensures that an IID of all zeros can never be generated.",
      "zh-CHS": "[BACnet]，第9条规定地址0到127对主节点有效。第6节中指定的用于创建MAC地址派生接口标识符（IID）的方法确保永远不会生成全零的IID。"
    },
    {
      "indent": 3,
      "text": "A Destination Address of 255 (all nodes) indicates a MAC-layer broadcast. MS/TP does not support multicast; therefore, all IPv6 multicast packets MUST be broadcast at the MAC layer and filtered at the IPv6 layer. A Source Address of 255 MUST NOT be used.",
      "zh-CHS": "255（所有节点）的目标地址表示MAC层广播。MS/TP不支持多播；因此，所有IPv6多播数据包必须在MAC层广播，并在IPv6层过滤。不得使用255的源地址。"
    },
    {
      "indent": 3,
      "text": "Hosts learn IPv6 prefixes via router advertisements according to [RFC4861].",
      "zh-CHS": "主机根据[RFC4861]通过路由器广告学习IPv6前缀。"
    },
    {
      "indent": 0,
      "text": "4. Maximum Transmission Unit (MTU)",
      "section_title": true,
      "zh-CHS": "4. 最大传输单位（MTU）"
    },
    {
      "indent": 3,
      "text": "Upon transmission, the network-layer MTU is formatted according to Section 5 and becomes the MAC service data unit (MSDU). The MSDU is then COBS encoded by MS/TP. Upon reception, the steps are reversed. [BACnet], Clause 9 supports MSDUs up to 2032 octets in length.",
      "zh-CHS": "在传输时，网络层MTU根据第5节进行格式化，并成为MAC服务数据单元（MSDU）。然后由MS/TP对MSDU进行COBS编码。接收时，步骤颠倒。[BACnet]，第9条支持长度不超过2032个八位字节的MSDU。"
    },
    {
      "indent": 3,
      "text": "IPv6 [RFC2460] requires that every link in an internet have an MTU of 1280 octets or greater. Additionally, a node must be able to accept a fragmented packet that, after reassembly, is as large as 1500 octets. This specification defines an MTU length of at least 1280 octets and at most 1500 octets. Support for an MTU length of 1500 octets is RECOMMENDED.",
      "zh-CHS": "IPv6[RFC2460]要求互联网中的每条链路都有1280个八位字节或更大的MTU。此外，节点必须能够接受碎片数据包，在重新组装后，碎片数据包的大小可达1500个八位字节。本规范规定MTU长度至少为1280个八位字节，最多为1500个八位字节。建议支持1500个八位字节的MTU长度。"
    },
    {
      "indent": 0,
      "text": "5. LoBAC Adaptation Layer",
      "section_title": true,
      "zh-CHS": "5. LoBAC适配层"
    },
    {
      "indent": 3,
      "text": "This section specifies an adaptation layer to support compressed IPv6 headers as specified in Section 10. IPv6 header compression MUST be implemented on all 6LoBAC nodes. Implementations MAY also support Generic Header Compression [RFC7400] for transport layer headers.",
      "zh-CHS": "本节指定了一个适配层，以支持第10节中指定的压缩IPv6头。IPv6报头压缩必须在所有6LoBAC节点上实现。实现还可以支持传输层头的通用头压缩[RFC7400]。"
    },
    {
      "indent": 3,
      "text": "The LoBAC encapsulation format defined in this section describes the MSDU of an IPv6 over MS/TP frame. The LoBAC payload (i.e., an IPv6 packet) follows an encapsulation header stack. LoBAC is a subset of the LoWPAN encapsulation defined in [RFC4944], as updated by [RFC6282], so the use of \"LOWPAN\" in literals below is intentional. The primary difference between LoWPAN and LoBAC encapsulation is omission of the Mesh, Broadcast, Fragmentation, and LOWPAN_HC1 headers in the latter.",
      "zh-CHS": "本节中定义的LoBAC封装格式描述了IPv6 over MS/TP帧的MSDU。LoBAC有效负载（即IPv6数据包）遵循封装头堆栈。LoBAC是[RFC4944]中定义的LoWPAN封装的子集，由[RFC6282]更新，因此在下面的文本中使用“LoWPAN”是有意的。LoWPAN和LoBAC封装之间的主要区别在于后者省略了网格、广播、碎片和LoWPAN_HC1头。"
    },
    {
      "indent": 3,
      "text": "All LoBAC-encapsulated datagrams transmitted over MS/TP are prefixed by an encapsulation header stack consisting of a Dispatch value followed by zero or more header fields. The only sequence currently defined for LoBAC is the LOWPAN_IPHC header followed by payload, as shown below:",
      "zh-CHS": "通过MS/TP传输的所有LoBAC封装数据报都以封装头堆栈作为前缀，该堆栈由一个分派值和零个或多个头字段组成。目前为LoBAC定义的唯一序列是LOWPAN_IPHC标头，后跟有效负载，如下所示："
    },
    {
      "indent": 13,
      "text": "+---------------+---------------+------...-----+\n| IPHC Dispatch |  IPHC Header  |    Payload   |\n+---------------+---------------+------...-----+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "Figure 2: A LoBAC-Encapsulated LOWPAN_IPHC Compressed IPv6 Datagram",
      "zh-CHS": "图2:LoBAC封装的LOWPAN_IPHC压缩IPv6数据报"
    },
    {
      "indent": 3,
      "text": "The Dispatch value is treated as an unstructured namespace. Only a single pattern is used to represent current LoBAC functionality.",
      "zh-CHS": "分派值被视为非结构化命名空间。只有一个模式用于表示当前的LoBAC功能。"
    },
    {
      "indent": 3,
      "text": "  Pattern      Header Type\n+------------+-----------------------------------------------------+\n| 01  1xxxxx | LOWPAN_IPHC - LOWPAN_IPHC compressed IPv6 [RFC6282] |\n+------------+-----------------------------------------------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Figure 3: LoBAC Dispatch Value Bit Pattern",
      "zh-CHS": "图3:LoBAC分派值位模式"
    },
    {
      "indent": 3,
      "text": "Other IANA-assigned 6LoWPAN Dispatch values do not apply to 6LoBAC unless otherwise specified.",
      "zh-CHS": "除非另有规定，否则IANA分配的其他6LoWPAN分派值不适用于6LoBAC。"
    },
    {
      "indent": 0,
      "text": "6. Stateless Address Autoconfiguration",
      "section_title": true,
      "zh-CHS": "6. 无状态地址自动配置"
    },
    {
      "indent": 3,
      "text": "This section defines how to obtain an IPv6 Interface Identifier. This specification distinguishes between two types of IIDs, MAC-address-derived and semantically opaque.",
      "zh-CHS": "本节定义如何获取IPv6接口标识符。本规范区分两种类型的IID，MAC地址派生和语义不透明。"
    },
    {
      "indent": 3,
      "text": "A MAC-address-derived IID is the RECOMMENDED type for use in forming a link-local address, as it affords the most efficient header compression provided by the LOWPAN_IPHC [RFC6282] format specified in Section 10. The general procedure for creating a MAC-address-derived IID is described in Appendix A of [RFC4291], \"Creating Modified EUI-64 Format Interface Identifiers\", as updated by [RFC7136].",
      "zh-CHS": "MAC地址派生的IID是用于形成链路本地地址的推荐类型，因为它提供了第10节规定的LOWPAN_IPHC[RFC6282]格式提供的最有效的报头压缩。[RFC4291]“创建修改的EUI-64格式接口标识符”的附录a中描述了创建MAC地址派生IID的一般过程，并由[RFC7136]更新。"
    },
    {
      "indent": 3,
      "text": "The Interface Identifier for link-local addresses SHOULD be formed by concatenating the node's 8-bit MS/TP MAC address to the seven octets 0x00, 0x00, 0x00, 0xFF, 0xFE, 0x00, and 0x00. For example, an MS/TP MAC address of hexadecimal value 0x4F results in the following IID:",
      "zh-CHS": "链路本地地址的接口标识符应通过将节点的8位MS/TP MAC地址连接到七个八位字节0x00、0x00、0x00、0xFF、0xFE、0x00和0x00来形成。例如，十六进制值0x4F的MS/TP MAC地址会导致以下IID："
    },
    {
      "indent": 3,
      "text": "|0              1|1              3|3              4|4              6|\n|0              5|6              1|2              7|8              3|\n+----------------+----------------+----------------+----------------+\n|0000000000000000|0000000011111111|1111111000000000|0000000001001111|\n+----------------+----------------+----------------+----------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "A semantically opaque IID having 64 bits of entropy is RECOMMENDED for each globally scoped address and MAY be locally generated according to one of the methods cited in Section 12. A node that generates a 64-bit semantically opaque IID MUST register the IID with its local router(s) by sending a Neighbor Solicitation (NS) message with the Address Registration Option (ARO) and process Neighbor Advertisements (NAs) according to [RFC6775].",
      "zh-CHS": "对于每个全局作用域地址，建议使用具有64位熵的语义不透明IID，并且可以根据第12节中引用的方法之一在本地生成IID。生成64位语义不透明IID的节点必须通过发送带有地址注册选项（ARO）的邻居请求（NS）消息，向其本地路由器注册IID，并根据[RFC6775]处理邻居播发（NAs）。"
    },
    {
      "indent": 3,
      "text": "An IPv6 address prefix used for stateless autoconfiguration [RFC4862] of an MS/TP interface MUST have a length of 64 bits.",
      "zh-CHS": "用于MS/TP接口的无状态自动配置[RFC4862]的IPv6地址前缀的长度必须为64位。"
    },
    {
      "indent": 0,
      "text": "7. IPv6 Link-Local Address",
      "section_title": true,
      "zh-CHS": "7. IPv6链路本地地址"
    },
    {
      "indent": 3,
      "text": "The IPv6 link-local address [RFC4291] for an MS/TP interface is formed by appending the Interface Identifier, as defined above, to the prefix FE80::/64.",
      "zh-CHS": "MS/TP接口的IPv6链路本地地址[RFC4291]是通过将接口标识符（如上所述）附加到前缀FE80:：/64来形成的。"
    },
    {
      "indent": 3,
      "text": "  10 bits           54 bits                   64 bits\n+----------+-----------------------+----------------------------+\n|1111111010|        (zeros)        |    Interface Identifier    |\n+----------+-----------------------+----------------------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "8. Unicast Address Mapping",
      "section_title": true,
      "zh-CHS": "8. 单播地址映射"
    },
    {
      "indent": 3,
      "text": "The address resolution procedure for mapping IPv6 non-multicast addresses into MS/TP MAC-layer addresses follows the general description in Section 7.2 of [RFC4861], unless otherwise specified.",
      "zh-CHS": "除非另有规定，否则将IPv6非多播地址映射到MS/TP MAC层地址的地址解析过程遵循[RFC4861]第7.2节中的一般说明。"
    },
    {
      "indent": 3,
      "text": "The Source/Target Link-Layer Address option has the following form when the addresses are 8-bit MS/TP MAC-layer (node) addresses.",
      "zh-CHS": "当地址为8位MS/TP MAC层（节点）地址时，源/目标链路层地址选项具有以下形式。"
    },
    {
      "indent": 3,
      "text": " 0                   1\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     Type      |    Length=1   |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     0x00      | MS/TP Address |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                               |\n+      Padding (all zeros)      +\n|                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Option fields:",
      "zh-CHS": "选项字段："
    },
    {
      "indent": 3,
      "text": "Type:",
      "zh-CHS": "类型："
    },
    {
      "indent": 6,
      "text": "1: for Source Link-Layer address.",
      "zh-CHS": "1：用于源链接层地址。"
    },
    {
      "indent": 6,
      "text": "2: for Target Link-Layer address.",
      "zh-CHS": "2：用于目标链路层地址。"
    },
    {
      "indent": 3,
      "text": "Length: This is the length of this option (including the Type and Length fields) in units of 8 octets. The value of this field is 1 for 8-bit MS/TP MAC addresses.",
      "zh-CHS": "长度：此选项的长度（包括类型和长度字段），以8个八位字节为单位。对于8位MS/TP MAC地址，此字段的值为1。"
    },
    {
      "indent": 3,
      "text": "MS/TP Address: The 8-bit address in canonical bit order [RFC2469]. This is the unicast address the interface currently responds to.",
      "zh-CHS": "MS/TP地址：标准位顺序的8位地址[RFC2469]。这是接口当前响应的单播地址。"
    },
    {
      "indent": 0,
      "text": "9. Multicast Address Mapping",
      "section_title": true,
      "zh-CHS": "9. 多播地址映射"
    },
    {
      "indent": 3,
      "text": "All IPv6 multicast packets MUST be sent to MS/TP Destination Address 255 (broadcast) and filtered at the IPv6 layer. When represented as a 16-bit address in a compressed header (see Section 10), it MUST be formed by padding on the left with a zero octet:",
      "zh-CHS": "所有IPv6多播数据包必须发送到MS/TP目标地址255（广播），并在IPv6层进行过滤。当在压缩头中表示为16位地址时（参见第10节），必须通过在左侧填充零八位字节来形成："
    },
    {
      "indent": 3,
      "text": " 0                   1\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     0x00      |     0xFF      |\n+-+-+-+-+-+-+-+-+---------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "10. Header Compression",
      "section_title": true,
      "zh-CHS": "10. 头部压缩"
    },
    {
      "indent": 3,
      "text": "6LoBAC REQUIRES LOWPAN_IPHC IPv6 compression, which is specified in [RFC6282] and included herein by reference. This section will simply identify substitutions that should be made when interpreting the text of [RFC6282].",
      "zh-CHS": "6LoBAC需要LOWPAN_IPHC IPv6压缩，该压缩在[RFC6282]中规定，并通过引用包含在本文中。本节仅确定在解释[RFC6282]文本时应进行的替换。"
    },
    {
      "indent": 3,
      "text": "In general, the following substitutions should be made:",
      "zh-CHS": "一般而言，应进行以下替换："
    },
    {
      "indent": 3,
      "text": "- Replace instances of \"6LoWPAN\" with \"MS/TP network\"",
      "zh-CHS": "- 将“6LoWPAN”的实例替换为“MS/TP网络”"
    },
    {
      "indent": 3,
      "text": "- Replace instances of \"IEEE 802.15.4 address\" with \"MS/TP address\"",
      "zh-CHS": "- 将“IEEE 802.15.4地址”的实例替换为“MS/TP地址”"
    },
    {
      "indent": 3,
      "text": "When a 16-bit address is called for (i.e., an IEEE 802.15.4 \"short address\"), it MUST be formed by padding the MS/TP address to the left with a zero octet:",
      "zh-CHS": "当调用16位地址（即IEEE 802.15.4“短地址”）时，必须通过在MS/TP地址左侧填充零八位组来形成："
    },
    {
      "indent": 3,
      "text": " 0                   1\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|     0x00      | MS/TP address |\n+-+-+-+-+-+-+-+-+---------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "If LOWPAN_IPHC compression [RFC6282] is used with context, the router(s) directly attached to the MS/TP segment MUST disseminate the 6LoWPAN Context Option (6CO) according to Section 7.2 of [RFC6775].",
      "zh-CHS": "如果LOWPAN_IPHC压缩[RFC6282]与上下文一起使用，则直接连接到MS/TP段的路由器必须根据[RFC6775]第7.2节传播6LoWPAN上下文选项（6CO）。"
    },
    {
      "indent": 0,
      "text": "11. IANA Considerations",
      "section_title": true,
      "zh-CHS": "11. IANA考虑"
    },
    {
      "indent": 3,
      "text": "This document uses values previously reserved by [RFC4944] and [RFC6282]; it does not require any IANA actions.",
      "zh-CHS": "本文件使用[RFC4944]和[RFC6282]先前保留的值；它不需要任何IANA操作。"
    },
    {
      "indent": 0,
      "text": "12. Security Considerations",
      "section_title": true,
      "zh-CHS": "12. 安全考虑"
    },
    {
      "indent": 3,
      "text": "See [RFC8065] for a general discussion of privacy threats faced by constrained nodes.",
      "zh-CHS": "有关受约束节点面临的隐私威胁的一般性讨论，请参见[RFC8065]。"
    },
    {
      "indent": 3,
      "text": "[RFC8065] makes a distinction between \"stable\" and \"temporary\" addresses. The former are long-lived and typically advertised by servers. The latter are typically used by clients and SHOULD be changed frequently to mitigate correlation of activities over time. Nodes that engage in both activities SHOULD support simultaneous use of multiple addresses per device.",
      "zh-CHS": "[RFC8065]区分了“稳定”和“临时”地址。前者寿命长，通常由服务器发布广告。后者通常由客户端使用，应经常更改，以减少活动随时间的相关性。参与这两个活动的节点应支持每个设备同时使用多个地址。"
    },
    {
      "indent": 3,
      "text": "Globally scoped addresses that contain MAC-address-derived IIDs may expose a network to address-scanning attacks. For this reason, it is RECOMMENDED that a 64-bit semantically opaque IID be generated for each globally scoped address in use according to, for example, [RFC3315], [RFC3972], [RFC4941], [RFC5535], or [RFC7217].",
      "zh-CHS": "包含MAC地址派生IID的全局作用域地址可能会使网络暴露于地址扫描攻击。因此，建议根据例如[RFC3315]、[RFC3972]、[RFC4941]、[RFC5535]或[RFC7217]为使用中的每个全局作用域地址生成64位语义不透明IID。"
    },
    {
      "indent": 0,
      "text": "13. References",
      "section_title": true,
      "zh-CHS": "13. 工具书类"
    },
    {
      "indent": 0,
      "text": "13.1. Normative References",
      "section_title": true,
      "zh-CHS": "13.1. 规范性引用文件"
    },
    {
      "indent": 3,
      "text": "[BACnet] ASHRAE, \"BACnet-A Data Communication Protocol for Building Automation and Control Networks\", ANSI/ASHRAE Standard 135-2016, January 2016, <http://www.techstreet.com/ashrae/standards/ ashrae-135-2016?product_id=1918140#jumps>.",
      "zh-CHS": "[BACnet]ASHRAE，“楼宇自动化和控制网络的BACnet-A数据通信协议”，ANSI/ASHRAE标准135-2016，2016年1月<http://www.techstreet.com/ashrae/standards/ ashrae-135-2016？产品id=1918140。"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <http://www.rfc-editor.org/info/rfc2119>.",
      "zh-CHS": "[RFC2119]Bradner，S.，“RFC中用于表示需求水平的关键词”，BCP 14，RFC 2119，DOI 10.17487/RFC2119，1997年3月<http://www.rfc-editor.org/info/rfc2119>."
    },
    {
      "indent": 3,
      "text": "[RFC2460] Deering, S. and R. Hinden, \"Internet Protocol, Version 6 (IPv6) Specification\", RFC 2460, DOI 10.17487/RFC2460, December 1998, <http://www.rfc-editor.org/info/rfc2460>.",
      "zh-CHS": "[RFC2460]Deering，S.和R.Hinden，“互联网协议，第6版（IPv6）规范”，RFC 2460，DOI 10.17487/RFC2460，1998年12月<http://www.rfc-editor.org/info/rfc2460>."
    },
    {
      "indent": 3,
      "text": "[RFC3315] Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins, C., and M. Carney, \"Dynamic Host Configuration Protocol for IPv6 (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315, July 2003, <http://www.rfc-editor.org/info/rfc3315>.",
      "zh-CHS": "[RFC3315]Droms，R.，Ed.，Bound，J.，Volz，B.，Lemon，T.，Perkins，C.，和M.Carney，“IPv6的动态主机配置协议（DHCPv6）”，RFC 3315，DOI 10.17487/RFC3315，2003年7月<http://www.rfc-editor.org/info/rfc3315>."
    },
    {
      "indent": 3,
      "text": "[RFC3972] Aura, T., \"Cryptographically Generated Addresses (CGA)\", RFC 3972, DOI 10.17487/RFC3972, March 2005, <http://www.rfc-editor.org/info/rfc3972>.",
      "zh-CHS": "[RFC3972]Aura，T.，“加密生成地址（CGA）”，RFC 3972，DOI 10.17487/RFC3972，2005年3月<http://www.rfc-editor.org/info/rfc3972>."
    },
    {
      "indent": 3,
      "text": "[RFC4291] Hinden, R. and S. Deering, \"IP Version 6 Addressing Architecture\", RFC 4291, DOI 10.17487/RFC4291, February 2006, <http://www.rfc-editor.org/info/rfc4291>.",
      "zh-CHS": "[RFC4291]Hinden，R.和S.Deering，“IP版本6寻址体系结构”，RFC 4291，DOI 10.17487/RFC42912006年2月<http://www.rfc-editor.org/info/rfc4291>."
    },
    {
      "indent": 3,
      "text": "[RFC4861] Narten, T., Nordmark, E., Simpson, W., and H. Soliman, \"Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861, DOI 10.17487/RFC4861, September 2007, <http://www.rfc-editor.org/info/rfc4861>.",
      "zh-CHS": "[RFC4861]Narten，T.，Nordmark，E.，Simpson，W.，和H.Soliman，“IP版本6（IPv6）的邻居发现”，RFC 4861，DOI 10.17487/RFC48612007年9月<http://www.rfc-editor.org/info/rfc4861>."
    },
    {
      "indent": 3,
      "text": "[RFC4862] Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless Address Autoconfiguration\", RFC 4862, DOI 10.17487/RFC4862, September 2007, <http://www.rfc-editor.org/info/rfc4862>.",
      "zh-CHS": "[RFC4862]Thomson，S.，Narten，T.和T.Jinmei，“IPv6无状态地址自动配置”，RFC 4862，DOI 10.17487/RFC4862，2007年9月<http://www.rfc-editor.org/info/rfc4862>."
    },
    {
      "indent": 3,
      "text": "[RFC4941] Narten, T., Draves, R., and S. Krishnan, \"Privacy Extensions for Stateless Address Autoconfiguration in IPv6\", RFC 4941, DOI 10.17487/RFC4941, September 2007, <http://www.rfc-editor.org/info/rfc4941>.",
      "zh-CHS": "[RFC4941]Narten，T.，Draves，R.，和S.Krishnan，“IPv6中无状态地址自动配置的隐私扩展”，RFC 4941，DOI 10.17487/RFC49411907年9月<http://www.rfc-editor.org/info/rfc4941>."
    },
    {
      "indent": 3,
      "text": "[RFC4944] Montenegro, G., Kushalnagar, N., Hui, J., and D. Culler, \"Transmission of IPv6 Packets over IEEE 802.15.4 Networks\", RFC 4944, DOI 10.17487/RFC4944, September 2007, <http://www.rfc-editor.org/info/rfc4944>.",
      "zh-CHS": "[RFC4944]黑山，G.，Kushalnagar，N.，Hui，J.，和D.Culler，“通过IEEE 802.15.4网络传输IPv6数据包”，RFC 4944，DOI 10.17487/RFC4944，2007年9月<http://www.rfc-editor.org/info/rfc4944>."
    },
    {
      "indent": 3,
      "text": "[RFC5535] Bagnulo, M., \"Hash-Based Addresses (HBA)\", RFC 5535, DOI 10.17487/RFC5535, June 2009, <http://www.rfc-editor.org/info/rfc5535>.",
      "zh-CHS": "[RFC5535]Bagnulo，M.，“基于哈希的地址（HBA）”，RFC 5535，DOI 10.17487/RFC55352009年6月<http://www.rfc-editor.org/info/rfc5535>."
    },
    {
      "indent": 3,
      "text": "[RFC6282] Hui, J., Ed. and P. Thubert, \"Compression Format for IPv6 Datagrams over IEEE 802.15.4-Based Networks\", RFC 6282, DOI 10.17487/RFC6282, September 2011, <http://www.rfc-editor.org/info/rfc6282>.",
      "zh-CHS": "[RFC6282]Hui，J.，Ed.和P.Thubert，“基于IEEE 802.15.4的网络上IPv6数据报的压缩格式”，RFC 6282，DOI 10.17487/RFC6282，2011年9月<http://www.rfc-editor.org/info/rfc6282>."
    },
    {
      "indent": 3,
      "text": "[RFC6775] Shelby, Z., Ed., Chakrabarti, S., Nordmark, E., and C. Bormann, \"Neighbor Discovery Optimization for IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs)\", RFC 6775, DOI 10.17487/RFC6775, November 2012, <http://www.rfc-editor.org/info/rfc6775>.",
      "zh-CHS": "[RFC6775]Shelby，Z.，Ed.，Chakrabarti，S.，Nordmark，E.，和C.Bormann，“低功率无线个人区域网络（6LoWPANs）上IPv6邻居发现优化”，RFC 6775，DOI 10.17487/RFC67752012年11月<http://www.rfc-editor.org/info/rfc6775>."
    },
    {
      "indent": 3,
      "text": "[RFC7136] Carpenter, B. and S. Jiang, \"Significance of IPv6 Interface Identifiers\", RFC 7136, DOI 10.17487/RFC7136, February 2014, <http://www.rfc-editor.org/info/rfc7136>.",
      "zh-CHS": "[RFC7136]Carpenter，B.和S.Jiang，“IPv6接口标识符的重要性”，RFC 7136，DOI 10.17487/RFC7136，2014年2月<http://www.rfc-editor.org/info/rfc7136>."
    },
    {
      "indent": 3,
      "text": "[RFC7217] Gont, F., \"A Method for Generating Semantically Opaque Interface Identifiers with IPv6 Stateless Address Autoconfiguration (SLAAC)\", RFC 7217, DOI 10.17487/RFC7217, April 2014, <http://www.rfc-editor.org/info/rfc7217>.",
      "zh-CHS": "[RFC7217]Gont，F.“使用IPv6无状态地址自动配置（SLAAC）生成语义不透明接口标识符的方法”，RFC 7217，DOI 10.17487/RFC72172014年4月<http://www.rfc-editor.org/info/rfc7217>."
    },
    {
      "indent": 3,
      "text": "[RFC7400] Bormann, C., \"6LoWPAN-GHC: Generic Header Compression for IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs)\", RFC 7400, DOI 10.17487/RFC7400, November 2014, <http://www.rfc-editor.org/info/rfc7400>.",
      "zh-CHS": "[RFC7400]Bormann，C.，“6LoWPAN GHC：低功率无线个人区域网络（6LoWPANs）上IPv6的通用报头压缩”，RFC 7400，DOI 10.17487/RFC7400，2014年11月<http://www.rfc-editor.org/info/rfc7400>."
    },
    {
      "indent": 0,
      "text": "13.2. Informative References",
      "section_title": true,
      "zh-CHS": "13.2. 资料性引用"
    },
    {
      "indent": 3,
      "text": "[Addendum_an] ANSI/ASHRAE, \"Addenda: BACnet -- A Data Communication Protocol for Building Automation and Control Networks\", ANSI/ASHRAE Addenda an, at, au, av, aw, ax, and az to ANSI/ASHRAE Standard 135-2012, July 2014, <https://www.ashrae.org/File%20Library/docLib/StdsAddenda/ 07-31-2014_135_2012_an_at_au_av_aw_ax_az_Final.pdf>.",
      "zh-CHS": "【附录】ANSI/ASHRAE，“附录：BACnet——楼宇自动化和控制网络的数据通信协议”，ANSI/ASHRAE附录an、at、au、av、aw、ax和az至ANSI/ASHRAE标准135-2012，2014年7月<https://www.ashrae.org/File%20Library/docLib/StdsAddenda/ 07-31-2014_135_2012_an_at_au_av_aw_ax_az_Final.pdf>。"
    },
    {
      "indent": 3,
      "text": "[COBS] Cheshire, S. and M. Baker, \"Consistent Overhead Byte Stuffing\", IEEE/ACM Transactions on Networking, Volume 7, Issue 2, DOI 10.1109/90.769765, April 1999, <http://www.stuartcheshire.org/papers/COBSforToN.pdf>.",
      "zh-CHS": "[COBS]Cheshire，S.和M.Baker，“一致开销字节填充”，IEEE/ACM网络事务，第7卷，第2期，DOI 10.1109/90.769765，1999年4月<http://www.stuartcheshire.org/papers/COBSforToN.pdf>."
    },
    {
      "indent": 3,
      "text": "[CRC32K] Koopman, P., \"32-Bit Cyclic Redundancy Codes for Internet Applications\", Proceedings of the International Conference on Dependable Systems and Networks (DSN 2002), June 2002, <https://users.ece.cmu.edu/~koopman/networks/dsn02/ dsn02_koopman.pdf>.",
      "zh-CHS": "[CRC32K]Koopman，P.，“互联网应用中的32位循环冗余码”，可靠系统和网络国际会议记录（DSN 2002），2002年6月<https://users.ece.cmu.edu/~koopman/networks/dsn02/dsn02\\u koopman.pdf>。"
    },
    {
      "indent": 3,
      "text": "[IEEE.802.3] IEEE, \"IEEE Standard for Ethernet\", IEEE 802.3-2015, DOI 10.1109/IEEESTD.2016.7428776, <http://standards.ieee.org/getieee802/ download/802.3-2015.zip>.",
      "zh-CHS": "[IEEE.802.3]IEEE，“以太网的IEEE标准”，IEEE 802.3-2015，DOI 10.1109/IEEESTD.2016.7428776<http://standards.ieee.org/getieee802/ 下载/802.3-2015.zip>。"
    },
    {
      "indent": 3,
      "text": "[RFC2469] Narten, T. and C. Burton, \"A Caution On The Canonical Ordering Of Link-Layer Addresses\", RFC 2469, DOI 10.17487/RFC2469, December 1998, <http://www.rfc-editor.org/info/rfc2469>.",
      "zh-CHS": "[RFC2469]Narten，T.和C.Burton，“链路层地址规范排序的注意事项”，RFC 2469，DOI 10.17487/RFC2469，1998年12月<http://www.rfc-editor.org/info/rfc2469>."
    },
    {
      "indent": 3,
      "text": "[RFC8065] Thaler, D., \"Privacy Considerations for IPv6 Adaptation-Layer Mechanisms\", RFC 8065, DOI 10.17487/RFC8065, February 2017, <http://www.rfc-editor.org/info/rfc8065>.",
      "zh-CHS": "[RFC8065]Thaler，D.，“IPv6适配层机制的隐私考虑”，RFC 8065，DOI 10.17487/RFC8065，2017年2月<http://www.rfc-editor.org/info/rfc8065>."
    },
    {
      "indent": 3,
      "text": "[TIA-485-A] TIA, \"Electrical Characteristics of Generators and Receivers for Use in Balanced Digital Multipoint Systems\", TIA-485-A (Revision of TIA-485), March 2003, <https://global.ihs.com/ doc_detail.cfm?item_s_key=00032964>.",
      "zh-CHS": "[TIA-485-A]TIA，“用于平衡数字多点系统的发电机和接收器的电气特性”，TIA-485-A（TIA-485的修订版），2003年3月<https://global.ihs.com/ doc_detail.cfm？项目编号=00032964>。"
    },
    {
      "indent": 0,
      "text": "Appendix A. Abstract MAC Interface",
      "section_title": true,
      "zh-CHS": "附录A.抽象MAC接口"
    },
    {
      "indent": 3,
      "text": "This Appendix is informative and not part of the standard.",
      "zh-CHS": "本附录仅供参考，不属于本标准的一部分。"
    },
    {
      "indent": 3,
      "text": "[BACnet], Clause 9 provides support for MAC-layer clients through its SendFrame and ReceivedDataNoReply procedures. However, it does not define a network-protocol independent abstract interface for the MAC. This is provided below as an aid to implementation.",
      "zh-CHS": "[BACnet]，第9条通过其SendFrame和ReceivedDataOreply过程为MAC层客户端提供支持。但是，它没有为MAC定义独立于网络协议的抽象接口。下文提供了这一信息，以帮助实施。"
    },
    {
      "indent": 0,
      "text": "A.1. MA-DATA.request",
      "section_title": true,
      "zh-CHS": "A.1. MA-DATA.request"
    },
    {
      "indent": 0,
      "text": "A.1.1. Function",
      "section_title": true,
      "zh-CHS": "A.1.1. 作用"
    },
    {
      "indent": 3,
      "text": "This primitive defines the transfer of data from a MAC client entity to a single peer entity or multiple peer entities in the case of a broadcast address.",
      "zh-CHS": "该原语定义了在广播地址的情况下，从MAC客户端实体到单个对等实体或多个对等实体的数据传输。"
    },
    {
      "indent": 0,
      "text": "A.1.2. Semantics of the Service Primitive",
      "section_title": true,
      "zh-CHS": "A.1.2. 服务原语的语义"
    },
    {
      "indent": 3,
      "text": "The semantics of the primitive are as follows:",
      "zh-CHS": "原语的语义如下所示："
    },
    {
      "indent": 5,
      "text": "MA-DATA.request ( destination_address, source_address, data, type )",
      "zh-CHS": "MA-DATA.request（目标地址、源地址、数据、类型）"
    },
    {
      "indent": 3,
      "text": "The 'destination_address' parameter may specify either an individual or a broadcast MAC entity address. It must contain sufficient information to create the Destination Address field (see Section 1.3) that is prepended to the frame by the local MAC sublayer entity. The 'source_address' parameter, if present, must specify an individual MAC address. If the source_address parameter is omitted, the local MAC sublayer entity will insert a value associated with that entity.",
      "zh-CHS": "“destination_address”参数可以指定单个或广播MAC实体地址。它必须包含足够的信息来创建目标地址字段（见第1.3节），该字段由本地MAC子层实体预先添加到帧中。“源地址”参数（如果存在）必须指定单个MAC地址。如果省略source_address参数，则本地MAC子层实体将插入与该实体关联的值。"
    },
    {
      "indent": 3,
      "text": "The 'data' parameter specifies the MAC service data unit (MSDU) to be transferred by the MAC sublayer entity. There is sufficient information associated with the MSDU for the MAC sublayer entity to determine the length of the data unit.",
      "zh-CHS": "“data”参数指定MAC子层实体要传输的MAC服务数据单元（MSDU）。MAC子层实体有足够的与MSDU关联的信息来确定数据单元的长度。"
    },
    {
      "indent": 3,
      "text": "The 'type' parameter specifies the value of the MS/TP Frame Type field that is prepended to the frame by the local MAC sublayer entity.",
      "zh-CHS": "“type”参数指定本地MAC子层实体在帧前面添加的MS/TP帧类型字段的值。"
    },
    {
      "indent": 0,
      "text": "A.1.3. When Generated",
      "section_title": true,
      "zh-CHS": "A.1.3. 生成时"
    },
    {
      "indent": 3,
      "text": "This primitive is generated by the MAC client entity whenever data shall be transferred to a peer entity or entities. This can be in response to a request from higher protocol layers or from data generated internally to the MAC client, such as a Token frame.",
      "zh-CHS": "每当数据传输到对等实体时，MAC客户端实体就会生成该原语。这可以响应来自更高协议层的请求，或者来自MAC客户端内部生成的数据，例如令牌帧。"
    },
    {
      "indent": 0,
      "text": "A.1.4. Effect on Receipt",
      "section_title": true,
      "zh-CHS": "A.1.4. 收到时的影响"
    },
    {
      "indent": 3,
      "text": "Receipt of this primitive will cause the MAC entity to insert all MAC-specific fields, including Destination Address, Source Address, Frame Type, and any fields that are unique to the particular media access method, and pass the properly formed frame to the lower protocol layers for transfer to the peer MAC sublayer entity or entities.",
      "zh-CHS": "接收此原语将导致MAC实体插入所有MAC特定字段，包括目标地址、源地址、帧类型和特定媒体访问方法特有的任何字段，并将正确形成的帧传递给较低的协议层，以便传输到对等MAC子层实体。"
    },
    {
      "indent": 0,
      "text": "A.2. MA-DATA.indication",
      "section_title": true,
      "zh-CHS": "A.2. MA-DATA指示"
    },
    {
      "indent": 0,
      "text": "A.2.1. Function",
      "section_title": true,
      "zh-CHS": "A.2.1. 作用"
    },
    {
      "indent": 3,
      "text": "This primitive defines the transfer of data from the MAC sublayer entity to the MAC client entity or entities in the case of a broadcast address.",
      "zh-CHS": "该原语定义了在广播地址的情况下，从MAC子层实体到MAC客户端实体的数据传输。"
    },
    {
      "indent": 0,
      "text": "A.2.2. Semantics of the Service Primitive",
      "section_title": true,
      "zh-CHS": "A.2.2. 服务原语的语义"
    },
    {
      "indent": 3,
      "text": "The semantics of the primitive are as follows:",
      "zh-CHS": "原语的语义如下所示："
    },
    {
      "indent": 5,
      "text": "MA-DATA.indication ( destination_address, source_address, data, type )",
      "zh-CHS": "MA-DATA.indication（目的地地址、源地址、数据、类型）"
    },
    {
      "indent": 3,
      "text": "The 'destination_address' parameter may be either an individual or a broadcast address as specified by the Destination Address field of the incoming frame. The 'source_address' parameter is an individual address as specified by the Source Address field of the incoming frame.",
      "zh-CHS": "“destination_address”参数可以是单个地址，也可以是由传入帧的destination address字段指定的广播地址。“source_address”参数是由传入帧的source address字段指定的单个地址。"
    },
    {
      "indent": 3,
      "text": "The 'data' parameter specifies the MAC service data unit (MSDU) as received by the local MAC entity. There is sufficient information associated with the MSDU for the MAC sublayer client to determine the length of the data unit.",
      "zh-CHS": "“data”参数指定本地MAC实体接收的MAC服务数据单元（MSDU）。MAC子层客户端有足够的与MSDU关联的信息来确定数据单元的长度。"
    },
    {
      "indent": 3,
      "text": "The 'type' parameter is the value of the MS/TP Frame Type field of the incoming frame.",
      "zh-CHS": "“type”参数是传入帧的MS/TP Frame type字段的值。"
    },
    {
      "indent": 0,
      "text": "A.2.3. When Generated",
      "section_title": true,
      "zh-CHS": "A.2.3. 生成时"
    },
    {
      "indent": 3,
      "text": "The MA_DATA.indication is passed from the MAC sublayer entity to the MAC client entity or entities to indicate the arrival of a frame to the local MAC sublayer entity that is destined for the MAC client. Such frames are reported only if they are validly formed and received without error, and their Destination Address designates the local MAC entity. Frames destined for the MAC Control sublayer are not passed to the MAC client.",
      "zh-CHS": "MA_DATA.indication从MAC子层实体传递到MAC客户端实体，以指示帧到达目的地为MAC客户端的本地MAC子层实体。只有当这些帧被有效地形成并且无误地接收，并且它们的目的地地址指定本地MAC实体时，才报告这些帧。发送给MAC控制子层的帧不会传递给MAC客户端。"
    },
    {
      "indent": 0,
      "text": "A.2.4. Effect on Receipt",
      "section_title": true,
      "zh-CHS": "A.2.4. 收到时的影响"
    },
    {
      "indent": 3,
      "text": "The effect of receipt of this primitive by the MAC client is unspecified.",
      "zh-CHS": "MAC客户端接收此原语的效果未指定。"
    },
    {
      "indent": 0,
      "text": "Appendix B. Consistent Overhead Byte Stuffing (COBS)",
      "zh-CHS": "附录B.一致开销字节填充（COBS）"
    },
    {
      "indent": 3,
      "text": "This Appendix is informative and not part of the standard.",
      "zh-CHS": "本附录仅供参考，不属于本标准的一部分。"
    },
    {
      "indent": 3,
      "text": "[BACnet], Clause 9 corrects a long-standing issue with the MS/TP specification, namely that preamble sequences were not escaped whenever they appeared in the Data or Data CRC fields. In rare cases, this resulted in dropped frames due to loss-of-frame synchronization. The solution is to encode the Data and 32-bit Data CRC fields before transmission using Consistent Overhead Byte Stuffing [COBS] and decode these fields upon reception.",
      "zh-CHS": "[BACnet]，第9条纠正了MS/TP规范的一个长期存在的问题，即前导序列在数据或数据CRC字段中出现时不会转义。在极少数情况下，这会由于丢失帧同步而导致丢失帧。解决方案是在传输前使用一致开销字节填充[COBS]对数据和32位数据CRC字段进行编码，并在接收时对这些字段进行解码。"
    },
    {
      "indent": 3,
      "text": "COBS is a run-length encoding method that nominally removes '0x00' octets from its input. Any selected octet value may be removed by XOR'ing that value with each octet of the COBS output. [BACnet], Clause 9 specifies the preamble octet '0x55' for removal.",
      "zh-CHS": "COBS是一种运行长度编码方法，名义上从输入中删除“0x00”八位字节。任何选定的八位字节值都可以通过将该值与COBS输出的每个八位字节进行异或来删除。[BACnet]，第9条规定删除前导八位组“0x55”。"
    },
    {
      "indent": 3,
      "text": "The minimum overhead of COBS is one octet per encoded field. The worst-case overhead in long fields is bounded to one octet per 254 as described in [COBS].",
      "zh-CHS": "COBS的最小开销是每个编码字段一个八位字节。如[COBS]中所述，长字段中的最坏情况开销限定为每254个八位组一个。"
    },
    {
      "indent": 3,
      "text": "Frame encoding proceeds logically in two passes. The Encoded Data field is prepared by passing the MSDU through the COBS encoder and XOR'ing the preamble octet '0x55' with each octet of the output. The Encoded CRC-32K field is then prepared by calculating a CRC-32K over the Encoded Data field and formatting it for transmission as described in Appendix C. The combined length of these fields, minus two octets for compatibility with legacy MS/TP devices, is placed in the MS/TP header Length field before transmission.",
      "zh-CHS": "帧编码逻辑上分两次进行。编码数据字段是通过将MSDU通过COBS编码器并将前导八位字节“0x55”与输出的每个八位字节异或而准备的。然后，通过计算编码数据字段上的CRC-32K并按照附录C中所述对其进行格式化以进行传输来准备编码的CRC-32K字段。这些字段的组合长度减去两个八位字节以与传统MS/TP设备兼容，在传输之前放入MS/TP报头长度字段。"
    },
    {
      "indent": 3,
      "text": "Example COBS encoder and decoder functions are shown below for illustration. Complete examples of use and test vectors are provided in [BACnet], Annex T.",
      "zh-CHS": "示例COBS编码器和解码器功能如下所示，以供说明。[BACnet]附录T中提供了使用和测试向量的完整示例。"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS>",
      "zh-CHS": "<代码开始>"
    },
    {
      "indent": 3,
      "text": "#include <stddef.h>\n#include <stdint.h>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "/*\n * Encodes 'length' octets of data located at 'from' and\n * writes one or more COBS code blocks at 'to', removing any\n * 'mask' octets that may be present in the encoded data.\n * Returns the length of the encoded data.\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "size_t\ncobs_encode (uint8_t *to, const uint8_t *from, size_t length,\n             uint8_t mask)\n{\n  size_t code_index = 0;\n  size_t read_index = 0;\n  size_t write_index = 1;\n  uint8_t code = 1;\n  uint8_t data, last_code;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "while (read_index < length) {\n  data = from[read_index++];\n  /*\n   * In the case of encountering a non-zero octet in the data,\n   * simply copy input to output and increment the code octet.\n   */\n  if (data != 0) {\n    to[write_index++] = data ^ mask;\n    code++;\n    if (code != 255)\n      continue;\n  }\n  /*\n   * In the case of encountering a zero in the data or having\n   * copied the maximum number (254) of non-zero octets, store\n   * the code octet and reset the encoder state variables.\n   */\n  last_code = code;\n  to[code_index] = code ^ mask;\n  code_index = write_index++;\n  code = 1;\n}\n/*\n * If the last chunk contains exactly 254 non-zero octets, then\n * this exception is handled above (and the returned length must\n * be adjusted). Otherwise, encode the last chunk normally, as if",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": " * a \"phantom zero\" is appended to the data.\n */\nif ((last_code == 255) && (code == 1))\n  write_index--;\nelse\n  to[code_index] = code ^ mask;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "  return write_index;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "#include <stddef.h>\n#include <stdint.h>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "/*\n * Decodes 'length' octets of data located at 'from' and\n * writes the original client data at 'to', restoring any\n * 'mask' octets that may present in the encoded data.\n * Returns the length of the encoded data or zero if error.\n */\nsize_t\ncobs_decode (uint8_t *to, const uint8_t *from, size_t length,\n             uint8_t mask)\n{\n  size_t read_index = 0;\n  size_t write_index = 0;\n  uint8_t code, last_code;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "while (read_index < length) {\n  code = from[read_index] ^ mask;\n  last_code = code;\n  /*\n   * Sanity check the encoding to prevent the while() loop below\n   * from overrunning the output buffer.\n   */\n  if (read_index + code > length)\n    return 0;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "read_index++;\nwhile (--code > 0)\n  to[write_index++] = from[read_index++] ^ mask;\n/*\n * Restore the implicit zero at the end of each decoded block\n * except when it contains exactly 254 non-zero octets or the\n * end of data has been reached.\n */\nif ((last_code != 255) && (read_index < length))\n  to[write_index++] = 0;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "  }\n  return write_index;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "zh-CHS": "<代码结束>"
    },
    {
      "indent": 0,
      "text": "Appendix C. Encoded CRC-32K (CRC32K)",
      "zh-CHS": "附录C编码CRC-32K（CRC32K）"
    },
    {
      "indent": 3,
      "text": "This Appendix is informative and not part of the standard.",
      "zh-CHS": "本附录仅供参考，不属于本标准的一部分。"
    },
    {
      "indent": 3,
      "text": "Extending the payload of MS/TP to 1500 octets requires upgrading the Data CRC from 16 bits to 32 bits. P. Koopman has authored several papers on evaluating CRC polynomials for network applications. In [CRC32K], he surveyed the entire 32-bit polynomial space and noted some that exceed the [IEEE.802.3] polynomial in performance. [BACnet], Clause 9 specifies one of these, the CRC-32K (Koopman) polynomial.",
      "zh-CHS": "将MS/TP的有效负载扩展到1500个八位字节需要将数据CRC从16位升级到32位。P.Koopman撰写了几篇关于评估网络应用中的CRC多项式的论文。在[CRC32K]中，他调查了整个32位多项式空间，并注意到一些在性能上超过[IEEE.802.3]多项式。[BACnet]，第9条规定了其中之一，即CRC-32K（Koopman）多项式。"
    },
    {
      "indent": 3,
      "text": "The specified use of the calc_crc32K() function is as follows. Before a frame is transmitted, 'crc_value' is initialized to all ones. After passing each octet of the [COBS] Encoded Data field through the function, the ones complement of the resulting 'crc_value' is arranged in LSB-first order and is itself [COBS] encoded. The length of the resulting Encoded CRC-32K field is always five octets.",
      "zh-CHS": "calc_crc32K（）函数的指定用法如下所示。在传输帧之前，“crc_值”初始化为所有值。通过函数传递[COBS]编码数据字段的每个八位组后，生成的“crc_值”的补位按LSB一阶排列，并且其本身是[COBS]编码的。生成的编码CRC-32K字段的长度始终为五个八位字节。"
    },
    {
      "indent": 3,
      "text": "Upon reception of a frame, 'crc_value' is initialized to all ones. The octets of the Encoded Data field are accumulated by the calc_crc32K() function before decoding. The Encoded CRC-32K field is then decoded and the resulting four octets are accumulated by the calc_crc32K() function. If the result is the expected residue value 'CRC32K_RESIDUE', then the frame was received correctly.",
      "zh-CHS": "接收到帧后，“crc_值”初始化为所有值。编码数据字段的八位字节在解码前由calc_crc32K（）函数累加。然后对编码的CRC-32K字段进行解码，并通过calc_crc32K（）函数累积得到的四个八位字节。如果结果是预期的剩余值“CRC32K_剩余”，则帧接收正确。"
    },
    {
      "indent": 3,
      "text": "An example CRC-32K function is shown below for illustration. Complete examples of use and test vectors are provided in [BACnet], Annex G.3.",
      "zh-CHS": "下面显示了一个示例CRC-32K函数以供说明。[BACnet]附录G.3中提供了使用和测试向量的完整示例。"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS>",
      "zh-CHS": "<代码开始>"
    },
    {
      "indent": 3,
      "text": "#include <stdint.h>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "/* See ANSI/ASHRAE Standard 135-2016 [BACnet], Section G.3.2 */\n#define CRC32K_INITIAL_VALUE (0xFFFFFFFF)\n#define CRC32K_RESIDUE (0x0843323B)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "/* CRC-32K polynomial, 1 + x**1 + ... + x**30 (+ x**32) */\n#define CRC32K_POLY (0xEB31D82E)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "/*\n * Accumulate 'data_value' into the CRC in 'crc_value'.\n * Return updated CRC.\n *\n * Note: crc_value must be set to CRC32K_INITIAL_VALUE\n * before initial call.\n */\nuint32_t\ncalc_crc32K (uint8_t data_value, uint32_t crc_value)\n{\n  int b;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "  for (b = 0; b < 8; b++) {\n    if ((data_value & 1) ^ (crc_value & 1)) {\n      crc_value >>= 1;\n      crc_value ^= CRC32K_POLY;\n    } else {\n      crc_value >>= 1;\n    }\n    data_value >>= 1;\n  }\n  return crc_value;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "zh-CHS": "<代码结束>"
    },
    {
      "indent": 0,
      "text": "Appendix D. Example 6LoBAC Frame Decode",
      "section_title": true,
      "zh-CHS": "附录D.示例6LoBAC帧解码"
    },
    {
      "indent": 3,
      "text": "This Appendix is informative and not part of the standard.",
      "zh-CHS": "本附录仅供参考，不属于本标准的一部分。"
    },
    {
      "indent": 3,
      "text": "BACnet MS/TP, Src (2), Dst (1), IPv6 Encapsulation\n    Preamble 55: 0x55\n    Preamble FF: 0xff\n    Frame Type: IPv6 Encapsulation (34)\n    Destination Address: 1\n    Source Address: 2\n    Length: 537\n    Header CRC: 0x1c [correct]\n    Extended Data CRC: 0x9e7259e2 [correct]\n6LoWPAN\n    IPHC Header\n        011. .... = Pattern: IP header compression (0x03)\n        ...1 1... .... .... = Traffic class and flow label:\n                              Version, traffic class, and flow label\n                              compressed (0x0003)\n        .... .0.. .... .... = Next header: Inline\n        .... ..00 .... .... = Hop limit: Inline (0x0000)\n        .... .... 1... .... = Context identifier extension: True\n        .... .... .1.. .... = Source address compression: Stateful\n        .... .... ..01 .... = Source address mode:\n                              64-bits inline (0x0001)\n        .... .... .... 0... = Multicast address compression: False\n        .... .... .... .1.. = Destination address compression:\n                              Stateful\n        .... .... .... ..10 = Destination address mode:\n                              16-bits inline (0x0002)\n        0000 .... = Source context identifier: 0x00\n        .... 0000 = Destination context identifier: 0x00\n        [Source context: aaaa:: (aaaa::)]\n        [Destination context: aaaa:: (aaaa::)]\n    Next header: ICMPv6 (0x3a)\n    Hop limit: 63\n    Source: aaaa::1 (aaaa::1)\n    Destination: aaaa::ff:fe00:1 (aaaa::ff:fe00:1)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Internet Protocol Version 6, Src: aaaa::1 (aaaa::1),\n                             Dst: aaaa::ff:fe00:1 (aaaa::ff:fe00:1)\n    0110 .... .... .... .... .... .... .... = Version: 6\n    .... 0000 0000 .... .... .... .... .... = Traffic class:\n                                              0x00000000\n    .... 0000 00.. .... .... .... .... .... = Differentiated\n                                              Services Field:\n                                              Default (0x00000000)\n    .... .... ..0. .... .... .... .... .... = ECN-Capable Transport\n                                              (ECT): Not set\n    .... .... ...0 .... .... .... .... .... = ECN-CE: Not set\n    .... .... .... 0000 0000 0000 0000 0000 = Flowlabel: 0x00000000\n    Payload length: 518\n    Next header: ICMPv6 (58)\n    Hop limit: 63\n    Source: aaaa::1 (aaaa::1)\n    Destination: aaaa::ff:fe00:1 (aaaa::ff:fe00:1)\nInternet Control Message Protocol v6\n    Type: Echo (ping) request (128)\n    Code: 0\n    Checksum: 0x783f [correct]\n    Identifier: 0x2ee5\n    Sequence: 2\n    [Response In: 5165]\n    Data (510 bytes)\n        Data: e4dbe8553ba0040008090a0b0c0d0e0f1011121314151617...\n        [Length: 510]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Frame (547 bytes):\n55 ff 22 01 02 02 19 1c 56 2d 83 56 6f 6a 54 54   U.\".....V-.VojTT\n54 54 54 54 57 54 56 54 d5 50 2d 6a 7b b0 5c 57   TTTTWTVT.P-j{.\\W\nb1 8e bd 00 6e f5 51 ac 5d 5c 5f 5e 59 58 5b 5a   ....n.Q.]\\_^YX[Z\n45 44 47 46 41 40 43 42 4d 4c 4f 4e 49 48 4b 4a   EDGFA@CBMLONIHKJ\n75 74 77 76 71 70 73 72 7d 7c 7f 7e 79 78 7b 7a   utwvqpsr}|.~yx{z\n65 64 67 66 61 60 63 62 6d 6c 6f 6e 69 68 6b 6a   edgfa`cbmlonihkj\n15 14 17 16 11 10 13 12 1d 1c 1f 1e 19 18 1b 1a   ................\n05 04 07 06 01 00 03 02 0d 0c 0f 0e 09 08 0b 0a   ................\n35 34 37 36 31 30 33 32 3d 3c 3f 3e 39 38 3b 3a   54761032=<?>98;:\n25 24 27 26 21 20 23 22 2d 2c 2f 2e 29 28 2b 2a   %$'&! #\"-,/.)(+*\nd5 d4 d7 d6 d1 d0 d3 d2 dd dc df de d9 d8 db da   ................\nc5 c4 c7 c6 c1 c0 c3 c2 cd cc cf ce c9 c8 cb ca   ................\nf5 f4 f7 f6 f1 f0 f3 f2 fd fc ff fe f9 f8 fb fa   ................\ne5 e4 e7 e6 e1 e0 e3 e2 ed ec ef ee e9 e8 eb ea   ................\n95 94 97 96 91 90 93 92 9d 9c 9f 9e 99 98 9b 9a   ................\n85 84 87 86 81 80 83 82 8d 8c 8f 8e 89 88 8b 8a   ................\nb5 b4 b7 b6 b1 b0 b3 b2 bd bc bf be b9 b8 bb ba   ................\na5 a4 a7 a6 a1 a0 a3 a2 ad ac af ae a9 a8 ab aa   ................\nab 54 57 56 51 50 53 52 5d 5c 5f 5e 59 58 5b 5a   .TWVQPSR]\\_^YX[Z\n45 44 47 46 41 40 43 42 4d 4c 4f 4e 49 48 4b 4a   EDGFA@CBMLONIHKJ\n75 74 77 76 71 70 73 72 7d 7c 7f 7e 79 78 7b 7a   utwvqpsr}|.~yx{z\n65 64 67 66 61 60 63 62 6d 6c 6f 6e 69 68 6b 6a   edgfa`cbmlonihkj\n15 14 17 16 11 10 13 12 1d 1c 1f 1e 19 18 1b 1a   ................\n05 04 07 06 01 00 03 02 0d 0c 0f 0e 09 08 0b 0a   ................\n35 34 37 36 31 30 33 32 3d 3c 3f 3e 39 38 3b 3a   54761032=<?>98;:\n25 24 27 26 21 20 23 22 2d 2c 2f 2e 29 28 2b 2a   %$'&! #\"-,/.)(+*\nd5 d4 d7 d6 d1 d0 d3 d2 dd dc df de d9 d8 db da   ................\nc5 c4 c7 c6 c1 c0 c3 c2 cd cc cf ce c9 c8 cb ca   ................\nf5 f4 f7 f6 f1 f0 f3 f2 fd fc ff fe f9 f8 fb fa   ................\ne5 e4 e7 e6 e1 e0 e3 e2 ed ec ef ee e9 e8 eb ea   ................\n95 94 97 96 91 90 93 92 9d 9c 9f 9e 99 98 9b 9a   ................\n85 84 87 86 81 80 83 82 8d 8c 8f 8e 89 88 8b 8a   ................\nb5 b4 b7 b6 b1 b0 b3 b2 bd bc bf be b9 b8 bb ba   ................\na5 a4 a7 a6 a1 a0 a3 a2 ad ac af ae a9 a8 50 cb   ..............P.\n27 0c b7                                          '..",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Decoded Data and CRC32K (537 bytes):\n78 d6 00 3a 3f 00 00 00 00 00 00 00 01 00 01 80   x..:?...........\n00 78 3f 2e e5 00 02 e4 db e8 55 3b a0 04 00 08   .x?.......U;....\n09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18   ................\n19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28   ....... !\"#$%&'(\n29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35 36 37 38   )*+,-./012345678\n39 3a 3b 3c 3d 3e 3f 40 41 42 43 44 45 46 47 48   9:;<=>?@ABCDEFGH\n49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58   IJKLMNOPQRSTUVWX\n59 5a 5b 5c 5d 5e 5f 60 61 62 63 64 65 66 67 68   YZ[\\]^_`abcdefgh\n69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76 77 78   ijklmnopqrstuvwx\n79 7a 7b 7c 7d 7e 7f 80 81 82 83 84 85 86 87 88   yz{|}~..........\n89 8a 8b 8c 8d 8e 8f 90 91 92 93 94 95 96 97 98   ................\n99 9a 9b 9c 9d 9e 9f a0 a1 a2 a3 a4 a5 a6 a7 a8   ................\na9 aa ab ac ad ae af b0 b1 b2 b3 b4 b5 b6 b7 b8   ................\nb9 ba bb bc bd be bf c0 c1 c2 c3 c4 c5 c6 c7 c8   ................\nc9 ca cb cc cd ce cf d0 d1 d2 d3 d4 d5 d6 d7 d8   ................\nd9 da db dc dd de df e0 e1 e2 e3 e4 e5 e6 e7 e8   ................\ne9 ea eb ec ed ee ef f0 f1 f2 f3 f4 f5 f6 f7 f8   ................\nf9 fa fb fc fd fe ff 00 01 02 03 04 05 06 07 08   ................\n09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18   ................\n19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28   ....... !\"#$%&'(\n29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35 36 37 38   )*+,-./012345678\n39 3a 3b 3c 3d 3e 3f 40 41 42 43 44 45 46 47 48   9:;<=>?@ABCDEFGH\n49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58   IJKLMNOPQRSTUVWX\n59 5a 5b 5c 5d 5e 5f 60 61 62 63 64 65 66 67 68   YZ[\\]^_`abcdefgh\n69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76 77 78   ijklmnopqrstuvwx\n79 7a 7b 7c 7d 7e 7f 80 81 82 83 84 85 86 87 88   yz{|}~..........\n89 8a 8b 8c 8d 8e 8f 90 91 92 93 94 95 96 97 98   ................\n99 9a 9b 9c 9d 9e 9f a0 a1 a2 a3 a4 a5 a6 a7 a8   ................\na9 aa ab ac ad ae af b0 b1 b2 b3 b4 b5 b6 b7 b8   ................\nb9 ba bb bc bd be bf c0 c1 c2 c3 c4 c5 c6 c7 c8   ................\nc9 ca cb cc cd ce cf d0 d1 d2 d3 d4 d5 d6 d7 d8   ................\nd9 da db dc dd de df e0 e1 e2 e3 e4 e5 e6 e7 e8   ................\ne9 ea eb ec ed ee ef f0 f1 f2 f3 f4 f5 f6 f7 f8   ................\nf9 fa fb fc fd 9e 72 59 e2                        ......rY.",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Decompressed 6LoWPAN IPHC (558 bytes):\n60 00 00 00 02 06 3a 3f aa aa 00 00 00 00 00 00   `.....:?........\n00 00 00 00 00 00 00 01 aa aa 00 00 00 00 00 00   ................\n00 00 00 ff fe 00 00 01 80 00 78 3f 2e e5 00 02   ..........x?....\ne4 db e8 55 3b a0 04 00 08 09 0a 0b 0c 0d 0e 0f   ...U;...........\n10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f   ................\n20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f    !\"#$%&'()*+,-./\n30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f   0123456789:;<=>?\n40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f   @ABCDEFGHIJKLMNO\n50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f   PQRSTUVWXYZ[\\]^_\n60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f   `abcdefghijklmno\n70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f   pqrstuvwxyz{|}~.\n80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f   ................\n90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f   ................\na0 a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af   ................\nb0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf   ................\nc0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf   ................\nd0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df   ................\ne0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef   ................\nf0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff   ................\n00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f   ................\n10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f   ................\n20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f    !\"#$%&'()*+,-./\n30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f   0123456789:;<=>?\n40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f   @ABCDEFGHIJKLMNO\n50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f   PQRSTUVWXYZ[\\]^_\n60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f   `abcdefghijklmno\n70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f   pqrstuvwxyz{|}~.\n80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f   ................\n90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f   ................\na0 a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af   ................\nb0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf   ................\nc0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf   ................\nd0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df   ................\ne0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef   ................\nf0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd         ..............",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Acknowledgements",
      "zh-CHS": "致谢"
    },
    {
      "indent": 3,
      "text": "We are grateful to the authors of [RFC4944] and members of the IETF 6LoWPAN working group; this document borrows liberally from their work. Ralph Droms and Brian Haberman provided indispensable guidance and support from the outset. Peter van der Stok, James Woodyatt, Carsten Bormann, and Dale Worley provided detailed reviews. Stuart Cheshire invented the very clever COBS encoding. Michael Osborne made the critical observation that encoding the data and CRC32K fields separately would allow the CRC to be calculated on the fly. Alexandru Petrescu, Brian Frank, Geoff Mulligan, and Don Sturek offered valuable comments.",
      "zh-CHS": "我们感谢[RFC4944]的作者和IETF 6LoWPAN工作组的成员；这份文件大量借鉴了他们的工作。拉尔夫·德罗姆斯和布赖恩·哈伯曼从一开始就提供了不可或缺的指导和支持。彼得·范德斯托克、詹姆斯·伍迪亚特、卡斯滕·鲍曼和戴尔·沃利提供了详细的评论。斯图尔特·切希尔发明了非常聪明的COBS编码。迈克尔·奥斯本（Michael Osborne）提出了一个关键的观察结果，即单独编码数据和CRC32K字段将允许动态计算CRC。亚历山德鲁·彼得雷斯库、布赖恩·弗兰克、杰夫·穆利根和唐·斯特雷克提出了宝贵的意见。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "zh-CHS": "作者地址"
    },
    {
      "indent": 3,
      "text": "Kerry Lynn (editor) Verizon Labs 50 Sylvan Rd Waltham, MA 02451 United States of America Phone: +1 781 296 9722 Email: kerlyn@ieee.org",
      "zh-CHS": "Kerry Lynn（编辑）Verizon实验室马萨诸塞州沃尔瑟姆市Sylvan路50号02451美利坚合众国电话：+1 781 296 9722电子邮件：kerlyn@ieee.org"
    },
    {
      "indent": 3,
      "text": "Jerry Martocci Johnson Controls, Inc. 507 E. Michigan St Milwaukee, WI 53202 United States of America Email: jpmartocci@sbcglobal.net",
      "zh-CHS": "Jerry Martocci Johnson Controls，Inc.美国威斯康星州密尔沃基市密歇根东街507号邮编：53202电子邮件：jpmartocci@sbcglobal.net"
    },
    {
      "indent": 3,
      "text": "Carl Neilson Delta Controls, Inc. 17850 56th Ave Surrey, BC V3S 1C7 Canada Phone: +1 604 575 5913 Email: cneilson@deltacontrols.com",
      "zh-CHS": "卡尔·尼尔森三角洲控制有限公司，地址：17850加拿大卑诗省萨里56大街V3S 1C7电话：+1604 575 5913电子邮件：cneilson@deltacontrols.com"
    },
    {
      "indent": 3,
      "text": "Stuart Donaldson Honeywell Automation & Control Solutions 6670 185th Ave NE Redmond, WA 98052 United States of America Email: stuart.donaldson@honeywell.com",
      "zh-CHS": "斯图尔特·唐纳森·霍尼韦尔自动化与控制解决方案公司，地址：美国华盛顿州雷德蒙东北大街6670 185号，邮编：98052电子邮件：斯图尔特。donaldson@honeywell.com"
    }
  ]
}