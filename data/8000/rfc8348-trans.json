{
  "title": {
    "text": "RFC 8348: A YANG Data Model for Hardware Management",
    "zh-CHS": "RFC 8348"
  },
  "number": 8348,
  "created_at": "2021-10-29 12:45:08.020010+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "Internet Engineering Task Force (IETF)                        A. Bierman\nRequest for Comments: 8348                                     YumaWorks\nCategory: Standards Track                                   M. Bjorklund\nISSN: 2070-1721                                           Tail-f Systems\n                                                                 J. Dong\n                                                     Huawei Technologies\n                                                            D. Romascanu\n                                                              March 2018",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "A YANG Data Model for Hardware Management",
      "zh-CHS": "一种用于硬件管理的YANG数据模型"
    },
    {
      "indent": 0,
      "text": "Abstract",
      "zh-CHS": "摘要"
    },
    {
      "indent": 3,
      "text": "This document defines a YANG data model for the management of hardware on a single server.",
      "zh-CHS": "本文档定义了用于管理单个服务器上硬件的数据模型。"
    },
    {
      "indent": 0,
      "text": "Status of This Memo",
      "zh-CHS": "关于下段备忘"
    },
    {
      "indent": 3,
      "text": "This is an Internet Standards Track document.",
      "zh-CHS": "这是一份互联网标准跟踪文件。"
    },
    {
      "indent": 3,
      "text": "This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by the Internet Engineering Steering Group (IESG). Further information on Internet Standards is available in Section 2 of RFC 7841.",
      "zh-CHS": "本文件是互联网工程任务组（IETF）的产品。它代表了IETF社区的共识。它已经接受了公众审查，并已被互联网工程指导小组（IESG）批准出版。有关互联网标准的更多信息，请参见RFC 7841第2节。"
    },
    {
      "indent": 3,
      "text": "Information about the current status of this document, any errata, and how to provide feedback on it may be obtained at https://www.rfc-editor.org/info/rfc8348.",
      "zh-CHS": "有关本文件当前状态、任何勘误表以及如何提供反馈的信息，请访问https://www.rfc-editor.org/info/rfc8348."
    },
    {
      "indent": 0,
      "text": "Copyright Notice",
      "zh-CHS": "版权公告"
    },
    {
      "indent": 3,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as the document authors. All rights reserved.",
      "zh-CHS": "版权所有（c）2018 IETF信托基金和确定为文件作者的人员。版权所有。"
    },
    {
      "indent": 3,
      "text": "This document is subject to BCP 78 and the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section 4.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.",
      "zh-CHS": "本文件受BCP 78和IETF信托有关IETF文件的法律规定的约束(https://trustee.ietf.org/license-info)自本文件出版之日起生效。请仔细阅读这些文件，因为它们描述了您对本文件的权利和限制。从本文件中提取的代码组件必须包括信托法律条款第4.e节中所述的简化BSD许可证文本，并提供简化BSD许可证中所述的无担保。"
    },
    {
      "indent": 0,
      "text": "Table of Contents",
      "zh-CHS": "目录"
    },
    {
      "indent": 3,
      "text": "1. Introduction ....................................................3\n   1.1. Terminology ................................................3\n   1.2. Tree Diagrams ..............................................3\n2. Objectives ......................................................4\n3. Hardware Data Model .............................................4\n   3.1. The Components Lists .......................................5\n4. Relationship to ENTITY-MIB ......................................6\n5. Relationship to ENTITY-SENSOR-MIB ...............................8\n6. Relationship to ENTITY-STATE-MIB ................................8\n7. Hardware YANG Modules ...........................................9\n   7.1. \"ietf-hardware\" Module .....................................9\n   7.2. \"iana-hardware\" Module ....................................34\n8. IANA Considerations ............................................38\n   8.1. URI Registrations .........................................38\n   8.2. YANG Module Registrations .................................39\n9. Security Considerations ........................................39\n10. References ....................................................40\n   10.1. Normative References .....................................40\n   10.2. Informative References ...................................41\nAppendix A.  Hardware State Data Model ............................42\n  A.1.  Hardware State YANG Module ................................43\nAcknowledgments ...................................................60\nAuthors' Addresses ................................................60",
      "raw": true,
      "toc": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1. Introduction",
      "section_title": true,
      "zh-CHS": "1. 介绍"
    },
    {
      "indent": 3,
      "text": "This document defines a YANG data model [RFC7950] for the management of hardware on a single server.",
      "zh-CHS": "本文档定义了一个数据模型[RFC7950]，用于管理单台服务器上的硬件。"
    },
    {
      "indent": 3,
      "text": "The data model includes configuration and system state (status information and counters for the collection of statistics).",
      "zh-CHS": "数据模型包括配置和系统状态（用于收集统计信息的状态信息和计数器）。"
    },
    {
      "indent": 3,
      "text": "The data model in this document is designed to be compliant with the Network Management Datastore Architecture (NMDA) [RFC8342]. For implementations that do not yet support NMDA, a temporary module with system state data only is defined in Appendix A.",
      "zh-CHS": "本文档中的数据模型设计为符合网络管理数据存储体系结构（NMDA）[RFC8342]。对于尚不支持NMDA的实现，附录a中定义了仅包含系统状态数据的临时模块。"
    },
    {
      "indent": 0,
      "text": "1.1. Terminology",
      "section_title": true,
      "zh-CHS": "1.1. 术语"
    },
    {
      "indent": 3,
      "text": "The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all capitals, as shown here.",
      "zh-CHS": "本文件中的关键词“必须”、“不得”、“必需”、“应”、“不应”、“建议”、“不建议”、“可”和“可选”在所有大写字母出现时（如图所示）应按照BCP 14[RFC2119][RFC8174]所述进行解释。"
    },
    {
      "indent": 3,
      "text": "The following terms are defined in [RFC8342] and are not redefined here:",
      "zh-CHS": "[RFC8342]中定义了以下术语，此处未重新定义："
    },
    {
      "indent": 3,
      "text": "o client",
      "zh-CHS": "o 客户"
    },
    {
      "indent": 3,
      "text": "o server",
      "zh-CHS": "o 服务器"
    },
    {
      "indent": 3,
      "text": "o configuration",
      "zh-CHS": "o 配置"
    },
    {
      "indent": 3,
      "text": "o system state",
      "zh-CHS": "o 系统状态"
    },
    {
      "indent": 3,
      "text": "o operational state",
      "zh-CHS": "o 运行状态"
    },
    {
      "indent": 3,
      "text": "o intended configuration",
      "zh-CHS": "o 预期配置"
    },
    {
      "indent": 0,
      "text": "1.2. Tree Diagrams",
      "section_title": true,
      "zh-CHS": "1.2. 树形图"
    },
    {
      "indent": 3,
      "text": "Tree diagrams used in this document follow the notation defined in [RFC8340].",
      "zh-CHS": "本文档中使用的树形图遵循[RFC8340]中定义的符号。"
    },
    {
      "indent": 0,
      "text": "2. Objectives",
      "section_title": true,
      "zh-CHS": "2. 目标"
    },
    {
      "indent": 3,
      "text": "This section describes some of the design objectives for the hardware data model.",
      "zh-CHS": "本节描述了硬件数据模型的一些设计目标。"
    },
    {
      "indent": 3,
      "text": "o The hardware data model needs to support many common properties used to identify hardware components.",
      "zh-CHS": "o 硬件数据模型需要支持许多用于标识硬件组件的公共属性。"
    },
    {
      "indent": 3,
      "text": "o Important information and states about hardware components need to be collected from devices that support the hardware data model.",
      "zh-CHS": "o 需要从支持硬件数据模型的设备收集有关硬件组件的重要信息和状态。"
    },
    {
      "indent": 3,
      "text": "o The hardware data model should be suitable for new implementations to use as is.",
      "zh-CHS": "o 硬件数据模型应该适合新的实现，以便按原样使用。"
    },
    {
      "indent": 3,
      "text": "o The hardware data model defined in this document can be implemented on a system that also implements ENTITY-MIB; thus, the mapping between the hardware data model and ENTITY-MIB should be clear.",
      "zh-CHS": "o 本文档中定义的硬件数据模型可以在同样实现ENTITY-MIB的系统上实现；因此，硬件数据模型和ENTITY-MIB之间的映射应该是清晰的。"
    },
    {
      "indent": 3,
      "text": "o The data model should support pre-provisioning of hardware components.",
      "zh-CHS": "o 数据模型应支持硬件组件的预配置。"
    },
    {
      "indent": 0,
      "text": "3. Hardware Data Model",
      "section_title": true,
      "zh-CHS": "3. 硬件数据模型"
    },
    {
      "indent": 3,
      "text": "This document defines the YANG module \"ietf-hardware\", which has the following structure:",
      "zh-CHS": "本文件定义了模块“ietf硬件”，其结构如下："
    },
    {
      "indent": 3,
      "text": "module: ietf-hardware\n  +--rw hardware\n     +--ro last-change?   yang:date-and-time\n     +--rw component* [name]\n        +--rw name              string\n        +--rw class             identityref\n        +--ro physical-index?   int32 {entity-mib}?\n        +--ro description?      string\n        +--rw parent?           -> ../../component/name\n        +--rw parent-rel-pos?   int32\n        +--ro contains-child*   -> ../../component/name\n        +--ro hardware-rev?     string\n        +--ro firmware-rev?     string\n        +--ro software-rev?     string\n        +--ro serial-num?       string\n        +--ro mfg-name?         string\n        +--ro model-name?       string\n        +--rw alias?            string\n        +--rw asset-id?         string\n        +--ro is-fru?           boolean\n        +--ro mfg-date?         yang:date-and-time",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "+--rw uri*              inet:uri\n+--ro uuid?             yang:uuid\n+--rw state {hardware-state}?\n|  +--ro state-last-changed?   yang:date-and-time\n|  +--rw admin-state?          admin-state\n|  +--ro oper-state?           oper-state\n|  +--ro usage-state?          usage-state\n|  +--ro alarm-state?          alarm-state\n|  +--ro standby-state?        standby-state\n+--ro sensor-data {hardware-sensor}?\n   +--ro value?               sensor-value\n   +--ro value-type?          sensor-value-type\n   +--ro value-scale?         sensor-value-scale\n   +--ro value-precision?     sensor-value-precision\n   +--ro oper-status?         sensor-status\n   +--ro units-display?       string\n   +--ro value-timestamp?     yang:date-and-time\n   +--ro value-update-rate?   uint32",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "notifications:\n  +---n hardware-state-change\n  +---n hardware-state-oper-enabled {hardware-state}?\n  |  +--ro name?          -> /hardware/component/name\n  |  +--ro admin-state?   -> /hardware/component/state/admin-state\n  |  +--ro alarm-state?   -> /hardware/component/state/alarm-state\n  +---n hardware-state-oper-disabled {hardware-state}?\n     +--ro name?          -> /hardware/component/name\n     +--ro admin-state?   -> /hardware/component/state/admin-state\n     +--ro alarm-state?   -> /hardware/component/state/alarm-state",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "3.1. The Components Lists",
      "section_title": true,
      "zh-CHS": "3.1. 组件列表"
    },
    {
      "indent": 3,
      "text": "The data model for hardware presented in this document uses a flat list of components. Each component in the list is identified by its name. Furthermore, each component has a mandatory \"class\" leaf.",
      "zh-CHS": "本文档中介绍的硬件数据模型使用组件的平面列表。列表中的每个组件都由其名称标识。此外，每个组件都有一个强制的“类”叶。"
    },
    {
      "indent": 3,
      "text": "The \"iana-hardware\" module defines YANG identities for the hardware types in the IANA-maintained \"IANA-ENTITY-MIB\" registry.",
      "zh-CHS": "“iana硬件”模块定义iana维护的“iana-ENTITY-MIB”注册表中硬件类型的标识。"
    },
    {
      "indent": 3,
      "text": "The \"class\" leaf is a YANG identity that describes the type of the hardware. Vendors are encouraged to either directly use one of the common IANA-defined identities or derive a more specific identity from one of them.",
      "zh-CHS": "“类”叶是描述硬件类型的标识。鼓励供应商直接使用IANA定义的通用标识之一，或从其中一个标识中派生出更具体的标识。"
    },
    {
      "indent": 0,
      "text": "4. Relationship to ENTITY-MIB",
      "section_title": true,
      "zh-CHS": "4. 与实体-MIB的关系"
    },
    {
      "indent": 3,
      "text": "If the device implements the ENTITY-MIB [RFC6933], each entry in the \"/hardware/component\" list in the operational state is mapped to one EntPhysicalEntry. Objects that are writable in the MIB are mapped to \"config true\" nodes in the \"/hardware/component\" list, except entPhysicalSerialNum, which is writable in the MIB but \"config false\" in the YANG module.",
      "zh-CHS": "如果设备实现了ENTITY-MIB[RFC6933]，则处于运行状态的“/hardware/component”列表中的每个条目都映射到一个EntPhysicalEntry。MIB中可写的对象映射到“/hardware/component”列表中的“config true”节点，但entPhysicalSerialNum除外，它在MIB中可写，但在模块中为“config false”。"
    },
    {
      "indent": 3,
      "text": "The \"physical-index\" leaf MUST contain the value of the corresponding entPhysicalEntry's entPhysicalIndex.",
      "zh-CHS": "“物理索引”叶必须包含相应entPhysicalEntry的entPhysicalIndex的值。"
    },
    {
      "indent": 3,
      "text": "The \"class\" leaf is mapped to both entPhysicalClass and entPhysicalVendorType. If the value of the \"class\" leaf is an identity that either is derived from or is one of the identities in the \"iana-hardware\" module, then entPhysicalClass contains the corresponding IANAPhysicalClass enumeration value. Otherwise, entPhysicalClass contains the IANAPhysicalClass value \"other(1)\". Vendors are encouraged to define an identity (derived from an identity in \"iana-hardware\" if possible) for each enterprise-specific registration identifier used for entPhysicalVendorType and use that identity for the \"class\" leaf.",
      "zh-CHS": "“类”叶映射到entPhysicalClass和EntPhysicalType。如果“类”叶的值是从“iana硬件”模块中派生的标识，或者是其中一个标识，则entPhysicalClass包含相应的IANAPhysicalClass枚举值。否则，entPhysicalClass包含IANAPhysicalClass值“other（1）”。鼓励供应商为EntPhysicalType使用的每个特定于企业的注册标识符定义一个标识（如果可能，从“iana硬件”中的标识派生），并将该标识用于“类”叶。"
    },
    {
      "indent": 3,
      "text": "The following table lists the YANG data nodes with corresponding objects in the ENTITY-MIB.",
      "zh-CHS": "下表列出了ENTITY-MIB中具有相应对象的数据节点。"
    },
    {
      "indent": 3,
      "text": "+--------------------------------+----------------------------------+\n| YANG data node in              | ENTITY-MIB object                |\n| /hardware/component            |                                  |\n+--------------------------------+----------------------------------+\n| name                           | entPhysicalName                  |\n| class                          | entPhysicalClass                 |\n|                                | entPhysicalVendorType            |\n| physical-index                 | entPhysicalIndex                 |\n| description                    | entPhysicalDescr                 |\n| parent                         | entPhysicalContainedIn           |\n| parent-rel-pos                 | entPhysicalParentRelPos          |\n| contains-child                 | entPhysicalChildIndex            |\n| hardware-rev                   | entPhysicalHardwareRev           |\n| firmware-rev                   | entPhysicalFirmwareRev           |\n| software-rev                   | entPhysicalSoftwareRev           |\n| serial-num                     | entPhysicalSerialNum             |\n| mfg-name                       | entPhysicalMfgName               |\n| model-name                     | entPhysicalModelName             |\n| alias                          | entPhysicalAlias                 |\n| asset-id                       | entPhysicalAssetID               |\n| is-fru                         | entPhysicalIsFRU                 |\n| mfg-date                       | entPhysicalMfgDate               |\n| uri                            | entPhysicalUris                  |\n| uuid                           | entPhysicalUUID                  |\n+--------------------------------+----------------------------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "YANG Data Nodes and Related ENTITY-MIB Objects",
      "zh-CHS": "YANG数据节点和相关实体MIB对象"
    },
    {
      "indent": 0,
      "text": "5. Relationship to ENTITY-SENSOR-MIB",
      "section_title": true,
      "zh-CHS": "5. 与ENTITY-SENSOR-MIB的关系"
    },
    {
      "indent": 3,
      "text": "If the device implements the ENTITY-SENSOR-MIB [RFC3433], each entry in the \"/hardware/component\" list where the container \"sensor-data\" exists is mapped to one EntPhySensorEntry.",
      "zh-CHS": "如果设备实现实体-SENSOR-MIB[RFC3433]，则存在容器“SENSOR data”的“/hardware/component”列表中的每个条目都映射到一个EntPhySensorEntry。"
    },
    {
      "indent": 3,
      "text": "The following table lists the YANG data nodes with corresponding objects in the ENTITY-SENSOR-MIB.",
      "zh-CHS": "下表列出了ENTITY-SENSOR-MIB中具有相应对象的数据节点。"
    },
    {
      "indent": 3,
      "text": "+-------------------------------------+-----------------------------+\n| YANG data node in                   | ENTITY-SENSOR-MIB object    |\n| /hardware/component/sensor-data     |                             |\n+-------------------------------------+-----------------------------+\n| value                               | entPhySensorValue           |\n| value-type                          | entPhySensorType            |\n| value-scale                         | entPhySensorScale           |\n| value-precision                     | entPhySensorPrecision       |\n| oper-status                         | entPhySensorOperStatus      |\n| units-display                       | entPhySensorUnitsDisplay    |\n| value-timestamp                     | entPhySensorValueTimeStamp  |\n| value-update-rate                   | entPhySensorValueUpdateRate |\n+-------------------------------------+-----------------------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "YANG Data Nodes and Related ENTITY-SENSOR-MIB Objects",
      "zh-CHS": "YANG数据节点和相关实体传感器MIB对象"
    },
    {
      "indent": 0,
      "text": "6. Relationship to ENTITY-STATE-MIB",
      "section_title": true,
      "zh-CHS": "6. 与实体状态MIB的关系"
    },
    {
      "indent": 3,
      "text": "If the device implements the ENTITY-STATE-MIB [RFC4268], each entry in the \"/hardware/component\" list where the container \"state\" exists is mapped to one EntStateEntry.",
      "zh-CHS": "如果设备实现了ENTITY-STATE-MIB[RFC4268]，则“/hardware/component”列表中容器“STATE”存在的每个条目都映射到一个EntStateEntry。"
    },
    {
      "indent": 3,
      "text": "The following table lists the YANG data nodes with corresponding objects in the ENTITY-STATE-MIB.",
      "zh-CHS": "下表列出了ENTITY-STATE-MIB中具有相应对象的数据节点。"
    },
    {
      "indent": 3,
      "text": "+------------------------------------------+------------------------+\n| YANG data node in                        | ENTITY-STATE-MIB       |\n| /hardware/component/state                | object                 |\n+------------------------------------------+------------------------+\n| state-last-changed                       | entStateLastChanged    |\n| admin-state                              | entStateAdmin          |\n| oper-state                               | entStateOper           |\n| usage-state                              | entStateUsage          |\n| alarm-state                              | entStateAlarm          |\n| standby-state                            | entStateStandby        |\n+------------------------------------------+------------------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "YANG Data Nodes and Related ENTITY-SENSOR-MIB Objects",
      "zh-CHS": "YANG数据节点和相关实体传感器MIB对象"
    },
    {
      "indent": 0,
      "text": "7. Hardware YANG Modules",
      "section_title": true,
      "zh-CHS": "7. 硬件模块"
    },
    {
      "indent": 0,
      "text": "7.1. \"ietf-hardware\" Module",
      "section_title": true,
      "zh-CHS": "7.1. “ietf硬件”模块"
    },
    {
      "indent": 3,
      "text": "This YANG module imports typedefs from [RFC6991].",
      "zh-CHS": "此模块从[RFC6991]导入typedefs。"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS> file \"ietf-hardware@2018-03-13.yang\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "module ietf-hardware {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-hardware\";\n  prefix hw;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "import ietf-inet-types {\n  prefix inet;\n}\nimport ietf-yang-types {\n  prefix yang;\n}\nimport iana-hardware {\n  prefix ianahw;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "organization \"IETF NETMOD (Network Modeling) Working Group\";",
      "zh-CHS": "组织“IETF NETMOD（网络建模）工作组”；"
    },
    {
      "indent": 4,
      "text": "contact\n  \"WG Web:   <https://datatracker.ietf.org/wg/netmod/>\n   WG List:  <mailto:netmod@ietf.org>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "Editor:   Andy Bierman\n          <mailto:andy@yumaworks.com>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "Editor:   Martin Bjorklund\n          <mailto:mbj@tail-f.com>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "Editor:   Jie Dong\n          <mailto:jie.dong@huawei.com>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "Editor:   Dan Romascanu\n          <mailto:dromasca@gmail.com>\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "description \"This module contains a collection of YANG definitions for managing hardware.",
      "zh-CHS": "description“此模块包含用于管理硬件的定义集合。"
    },
    {
      "indent": 7,
      "text": "This data model is designed for the Network Management Datastore Architecture (NMDA) defined in RFC 8342.",
      "zh-CHS": "该数据模型是为RFC 8342中定义的网络管理数据存储体系结构（NMDA）而设计的。"
    },
    {
      "indent": 7,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "zh-CHS": "版权所有（c）2018 IETF信托基金和被确定为代码作者的人员。版权所有。"
    },
    {
      "indent": 7,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info).",
      "zh-CHS": "根据IETF信托有关IETF文件的法律规定第4.c节规定的简化BSD许可证中包含的许可条款，允许以源代码和二进制格式重新分发和使用，无论是否修改(https://trustee.ietf.org/license-info)."
    },
    {
      "indent": 7,
      "text": "This version of this YANG module is part of RFC 8348; see the RFC itself for full legal notices.\";",
      "zh-CHS": "此模块的此版本是RFC 8348的一部分；有关完整的法律通知，请参见RFC本身。“；"
    },
    {
      "indent": 4,
      "text": "revision 2018-03-13 {\n  description\n    \"Initial revision.\";\n  reference\n    \"RFC 8348: A YANG Data Model for Hardware Management\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "/*\n * Features\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "feature entity-mib {\n  description\n    \"This feature indicates that the device implements\n     the ENTITY-MIB.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4)\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "feature hardware-state {\n  description\n    \"Indicates that ENTITY-STATE-MIB objects are supported\";\n  reference\n    \"RFC 4268: Entity State MIB\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "feature hardware-sensor {\n  description\n    \"Indicates that ENTITY-SENSOR-MIB objects are supported\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "/*\n * Typedefs",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "*/",
      "zh-CHS": "*/"
    },
    {
      "indent": 4,
      "text": "typedef admin-state {\n  type enumeration {\n    enum unknown {\n      value 1;\n      description\n        \"The resource is unable to report administrative state.\";\n    }\n    enum locked {\n      value 2;\n      description\n        \"The resource is administratively prohibited from use.\";\n    }\n    enum shutting-down {\n      value 3;\n      description\n        \"The resource usage is administratively limited to current\n         instances of use.\";\n    }\n    enum unlocked {\n      value 4;\n      description\n        \"The resource is not administratively prohibited from\n         use.\";\n    }\n  }\n  description\n    \"Represents the various possible administrative states.\";\n  reference\n    \"RFC 4268: Entity State MIB - EntityAdminState\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "typedef oper-state {\n  type enumeration {\n    enum unknown {\n      value 1;\n      description\n        \"The resource is unable to report its operational state.\";\n    }\n    enum disabled {\n      value 2;\n      description\n        \"The resource is totally inoperable.\";\n    }\n    enum enabled {\n      value 3;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "      description\n        \"The resource is partially or fully operable.\";\n    }\n    enum testing {\n      value 4;\n      description\n        \"The resource is currently being tested and cannot\n         therefore report whether or not it is operational.\";\n    }\n  }\n  description\n    \"Represents the possible values of operational states.\";\n  reference\n    \"RFC 4268: Entity State MIB - EntityOperState\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "typedef usage-state {\n  type enumeration {\n    enum unknown {\n      value 1;\n      description\n        \"The resource is unable to report usage state.\";\n    }\n    enum idle {\n      value 2;\n      description\n        \"The resource is servicing no users.\";\n    }\n    enum active {\n      value 3;\n      description\n        \"The resource is currently in use, and it has sufficient\n         spare capacity to provide for additional users.\";\n    }\n    enum busy {\n      value 4;\n      description\n        \"The resource is currently in use, but it currently has no\n         spare capacity to provide for additional users.\";\n    }\n  }\n  description\n    \"Represents the possible values of usage states.\";\n  reference\n    \"RFC 4268: Entity State MIB -  EntityUsageState\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "typedef alarm-state {",
      "zh-CHS": "类型定义报警状态{"
    },
    {
      "indent": 6,
      "text": "type bits {\n  bit unknown {\n    position 0;\n    description\n      \"The resource is unable to report alarm state.\";\n  }\n  bit under-repair {\n    position 1;\n    description\n      \"The resource is currently being repaired, which, depending\n       on the implementation, may make the other values in this\n       bit string not meaningful.\";\n  }\n  bit critical {\n    position 2;\n    description\n      \"One or more critical alarms are active against the\n       resource.\";\n  }\n  bit major {\n    position 3;\n    description\n      \"One or more major alarms are active against the\n       resource.\";\n  }\n  bit minor {\n    position 4;\n    description\n      \"One or more minor alarms are active against the\n       resource.\";\n  }\n  bit warning {\n    position 5;\n    description\n      \"One or more warning alarms are active against the\n       resource.\";\n  }\n  bit indeterminate {\n    position 6;\n    description\n      \"One or more alarms of whose perceived severity cannot be\n       determined are active against this resource.\";\n  }\n}\ndescription\n  \"Represents the possible values of alarm states.  An alarm is a\n   persistent indication of an error or warning condition.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "     When no bits of this attribute are set, then no active alarms\n     are known against this component and it is not under repair.\";\n  reference\n    \"RFC 4268: Entity State MIB - EntityAlarmStatus\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "typedef standby-state {\n  type enumeration {\n    enum unknown {\n      value 1;\n      description\n        \"The resource is unable to report standby state.\";\n    }\n    enum hot-standby {\n      value 2;\n      description\n        \"The resource is not providing service, but it will be\n         immediately able to take over the role of the resource to\n         be backed up, without the need for initialization\n         activity, and will contain the same information as the\n         resource to be backed up.\";\n    }\n    enum cold-standby {\n      value 3;\n      description\n        \"The resource is to back up another resource, but it will\n         not be immediately able to take over the role of a\n         resource to be backed up and will require some\n         initialization activity.\";\n    }\n    enum providing-service {\n      value 4;\n      description\n        \"The resource is providing service.\";\n    }\n  }\n  description\n    \"Represents the possible values of standby states.\";\n  reference\n    \"RFC 4268: Entity State MIB - EntityStandbyStatus\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "typedef sensor-value-type {\n  type enumeration {\n    enum other {\n      value 1;\n      description\n        \"A measure other than those listed below.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "}\nenum unknown {\n  value 2;\n  description\n    \"An unknown measurement or arbitrary, relative numbers\";\n}\nenum volts-AC {\n  value 3;\n  description\n    \"A measure of electric potential (alternating current).\";\n}\nenum volts-DC {\n  value 4;\n  description\n    \"A measure of electric potential (direct current).\";\n}\nenum amperes {\n  value 5;\n  description\n    \"A measure of electric current.\";\n}\nenum watts {\n  value 6;\n  description\n    \"A measure of power.\";\n}\nenum hertz {\n  value 7;\n  description\n    \"A measure of frequency.\";\n}\nenum celsius {\n  value 8;\n  description\n    \"A measure of temperature.\";\n}\nenum percent-RH {\n  value 9;\n  description\n    \"A measure of percent relative humidity.\";\n}\nenum rpm {\n  value 10;\n  description\n    \"A measure of shaft revolutions per minute.\";\n}\nenum cmm {\n  value 11;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "    description\n      \"A measure of cubic meters per minute (airflow).\";\n  }\n  enum truth-value {\n    value 12;\n    description\n      \"Value is one of 1 (true) or 2 (false)\";\n  }\n}\ndescription\n  \"A node using this data type represents the sensor measurement\n   data type associated with a physical sensor value.  The actual\n   data units are determined by examining a node of this type\n   together with the associated sensor-value-scale node.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "     A node of this type SHOULD be defined together with nodes of\n     type sensor-value-scale and type sensor-value-precision.\n     These three types are used to identify the semantics of a node\n     of type sensor-value.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               EntitySensorDataType\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "typedef sensor-value-scale {\n  type enumeration {\n    enum yocto {\n      value 1;\n      description\n        \"Data scaling factor of 10^-24.\";\n    }\n    enum zepto {\n      value 2;\n      description\n        \"Data scaling factor of 10^-21.\";\n    }\n    enum atto {\n      value 3;\n      description\n        \"Data scaling factor of 10^-18.\";\n    }\n    enum femto {\n      value 4;\n      description\n        \"Data scaling factor of 10^-15.\";\n    }\n    enum pico {\n      value 5;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "  description\n    \"Data scaling factor of 10^-12.\";\n}\nenum nano {\n  value 6;\n  description\n    \"Data scaling factor of 10^-9.\";\n}\nenum micro {\n  value 7;\n  description\n    \"Data scaling factor of 10^-6.\";\n}\nenum milli {\n  value 8;\n  description\n    \"Data scaling factor of 10^-3.\";\n}\nenum units {\n  value 9;\n  description\n    \"Data scaling factor of 10^0.\";\n}\nenum kilo {\n  value 10;\n  description\n    \"Data scaling factor of 10^3.\";\n}\nenum mega {\n  value 11;\n  description\n    \"Data scaling factor of 10^6.\";\n}\nenum giga {\n  value 12;\n  description\n    \"Data scaling factor of 10^9.\";\n}\nenum tera {\n  value 13;\n  description\n    \"Data scaling factor of 10^12.\";\n}\nenum peta {\n  value 14;\n  description\n    \"Data scaling factor of 10^15.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "  enum exa {\n    value 15;\n    description\n      \"Data scaling factor of 10^18.\";\n  }\n  enum zetta {\n    value 16;\n    description\n      \"Data scaling factor of 10^21.\";\n  }\n  enum yotta {\n    value 17;\n    description\n      \"Data scaling factor of 10^24.\";\n  }\n}\ndescription\n  \"A node using this data type represents a data scaling factor,\n   represented with an International System of Units (SI) prefix.\n   The actual data units are determined by examining a node of\n   this type together with the associated sensor-value-type.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "     A node of this type SHOULD be defined together with nodes of\n     type sensor-value-type and type sensor-value-precision.\n     Together, associated nodes of these three types are used to\n     identify the semantics of a node of type sensor-value.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               EntitySensorDataScale\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "typedef sensor-value-precision {\n  type int8 {\n    range \"-8 .. 9\";\n  }\n  description\n    \"A node using this data type represents a sensor value\n     precision range.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "A node of this type SHOULD be defined together with nodes of type sensor-value-type and type sensor-value-scale. Together, associated nodes of these three types are used to identify the semantics of a node of type sensor-value.",
      "zh-CHS": "此类型的节点应与传感器值类型和传感器值比例类型的节点一起定义。这三种类型的关联节点一起用于标识传感器值类型节点的语义。"
    },
    {
      "indent": 9,
      "text": "If a node of this type contains a value in the range 1 to 9, it represents the number of decimal places in the fractional part of an associated sensor-value fixed-point number.",
      "zh-CHS": "如果此类型的节点包含范围为1到9的值，则表示相关传感器值定点数小数部分的小数位数。"
    },
    {
      "indent": 9,
      "text": "If a node of this type contains a value in the range -8 to -1, it represents the number of accurate digits in the associated sensor-value fixed-point number.",
      "zh-CHS": "如果此类型的节点包含范围为-8到-1的值，则表示相关传感器值定点编号中的精确位数。"
    },
    {
      "indent": 9,
      "text": "The value zero indicates the associated sensor-value node is not a fixed-point number.",
      "zh-CHS": "值零表示关联的传感器值节点不是定点编号。"
    },
    {
      "indent": 9,
      "text": "Server implementers must choose a value for the associated sensor-value-precision node so that the precision and accuracy of the associated sensor-value node is correctly indicated.",
      "zh-CHS": "服务器实施者必须为关联的传感器值精度节点选择一个值，以便正确指示关联的传感器值节点的精度和精度。"
    },
    {
      "indent": 4,
      "text": "     For example, a component representing a temperature sensor\n     that can measure 0 to 100 degrees C in 0.1 degree\n     increments, +/- 0.05 degrees, would have a\n     sensor-value-precision value of '1', a sensor-value-scale\n     value of 'units', and a sensor-value ranging from '0' to\n     '1000'.  The sensor-value would be interpreted as\n     'degrees C * 10'.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               EntitySensorPrecision\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "typedef sensor-value {\n  type int32 {\n    range \"-1000000000 .. 1000000000\";\n  }\n  description\n   \"A node using this data type represents a sensor value.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "A node of this type SHOULD be defined together with nodes of type sensor-value-type, type sensor-value-scale, and type sensor-value-precision. Together, associated nodes of those three types are used to identify the semantics of a node of this data type.",
      "zh-CHS": "此类型的节点应与传感器值类型、传感器值比例类型和传感器值精度类型的节点一起定义。这三种类型的关联节点一起用于标识此数据类型的节点的语义。"
    },
    {
      "indent": 8,
      "text": "The semantics of a node using this data type are determined by the value of the associated sensor-value-type node.",
      "zh-CHS": "使用此数据类型的节点的语义由关联的传感器值类型节点的值确定。"
    },
    {
      "indent": 8,
      "text": "If the associated sensor-value-type node is equal to 'voltsAC', 'voltsDC', 'amperes', 'watts', 'hertz', 'celsius', or 'cmm', then a node of this type MUST contain a fixed-point number ranging from -999,999,999 to +999,999,999. The value -1000000000 indicates an underflow error. The value +1000000000 indicates an overflow error. The sensor-value-precision indicates how many fractional digits are represented in the associated sensor-value node.",
      "zh-CHS": "如果关联的传感器值类型节点等于“voltsAC”、“voltsDC”、“安培”、“瓦特”、“赫兹”、“摄氏度”或“cmm”，则此类型的节点必须包含范围为-9999999到+9999999的定点编号。值-100000000表示下溢错误。值+100000000表示溢出错误。传感器值精度指示关联传感器值节点中表示的小数位数。"
    },
    {
      "indent": 8,
      "text": "If the associated sensor-value-type node is equal to 'percentRH', then a node of this type MUST contain a number ranging from 0 to 100.",
      "zh-CHS": "如果关联的传感器值类型节点等于“percentRH”，则此类型的节点必须包含0到100之间的数字。"
    },
    {
      "indent": 8,
      "text": "If the associated sensor-value-type node is equal to 'rpm', then a node of this type MUST contain a number ranging from -999,999,999 to +999,999,999.",
      "zh-CHS": "如果关联的传感器值类型节点等于“rpm”，则此类型的节点必须包含范围为-999999999到+999999999的数字。"
    },
    {
      "indent": 8,
      "text": "If the associated sensor-value-type node is equal to 'truth-value', then a node of this type MUST contain either the value 1 (true) or the value 2 (false).",
      "zh-CHS": "如果关联的传感器值类型节点等于“真值”，则此类型的节点必须包含值1（真）或值2（假）。"
    },
    {
      "indent": 4,
      "text": "    If the associated sensor-value-type node is equal to 'other' or\n    'unknown', then a node of this type MUST contain a number\n    ranging from -1000000000 to 1000000000.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               EntitySensorValue\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "typedef sensor-status {\n  type enumeration {\n    enum ok {\n      value 1;\n      description\n        \"Indicates that the server can obtain the sensor value.\";\n    }\n    enum unavailable {\n      value 2;\n      description\n        \"Indicates that the server presently cannot obtain the\n         sensor value.\";\n    }\n    enum nonoperational {\n      value 3;\n      description\n        \"Indicates that the server believes the sensor is broken.\n         The sensor could have a hard failure (disconnected wire)\n         or a soft failure such as out-of-range, jittery, or wildly\n         fluctuating readings.\";\n    }\n  }\n  description\n    \"A node using this data type represents the operational status\n     of a physical sensor.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               EntitySensorStatus\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "}",
      "zh-CHS": "}"
    },
    {
      "indent": 4,
      "text": "/*\n * Data nodes\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "container hardware { description \"Data nodes representing components.",
      "zh-CHS": "容器硬件{description“表示组件的数据节点。"
    },
    {
      "indent": 9,
      "text": "If the server supports configuration of hardware components, then this data model is instantiated in the configuration datastores supported by the server. The leaf-list 'datastore' for the module 'ietf-hardware' in the YANG library provides this information.\";",
      "zh-CHS": "如果服务器支持硬件组件的配置，那么该数据模型将在服务器支持的配置数据存储中实例化。YANG库中模块“ietf硬件”的叶列表“数据存储”提供了此信息。“；"
    },
    {
      "indent": 6,
      "text": "leaf last-change {\n  type yang:date-and-time;\n  config false;\n  description\n    \"The time the '/hardware/component' list changed in the\n     operational state.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "list component {\n  key name;\n  description\n    \"List of components.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "When the server detects a new hardware component, it initializes a list entry in the operational state.",
      "zh-CHS": "当服务器检测到一个新的硬件组件时，它会在操作状态下初始化一个列表条目。"
    },
    {
      "indent": 11,
      "text": "If the server does not support configuration of hardware components, list entries in the operational state are initialized with values for all nodes as detected by the implementation.",
      "zh-CHS": "如果服务器不支持硬件组件的配置，则使用实现检测到的所有节点的值初始化处于操作状态的列表项。"
    },
    {
      "indent": 11,
      "text": "Otherwise, this procedure is followed:",
      "zh-CHS": "否则，请遵循以下步骤："
    },
    {
      "indent": 13,
      "text": "1. If there is an entry in the '/hardware/component' list in the intended configuration with values for the nodes 'class', 'parent', and 'parent-rel-pos' that are equal to the detected values, then the list entry in the operational state is initialized with the configured values, including the 'name'.",
      "zh-CHS": "1. 如果预期配置中的“/hardware/component”列表中有一个条目，其中节点“class”、“parent”和“parent rel pos”的值等于检测到的值，则使用配置值（包括“name”）初始化处于运行状态的列表条目。"
    },
    {
      "indent": 13,
      "text": "2. Otherwise (i.e., there is no matching configuration entry), the list entry in the operational state is initialized with values for all nodes as detected by the implementation.",
      "zh-CHS": "2. 否则（即，没有匹配的配置条目），将使用实现检测到的所有节点的值初始化处于操作状态的列表条目。"
    },
    {
      "indent": 8,
      "text": "   If the '/hardware/component' list in the intended\n   configuration is modified, then the system MUST behave as if\n   it re-initializes itself and follow the procedure in (1).\";\nreference\n  \"RFC 6933: Entity MIB (Version 4) - entPhysicalEntry\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf name {\n  type string;\n  description\n    \"The name assigned to this component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "     This name is not required to be the same as\n     entPhysicalName.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf class {\n  type identityref {\n    base ianahw:hardware-class;\n  }\n  mandatory true;\n  description\n    \"An indication of the general hardware type of the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalClass\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf physical-index {\n  if-feature entity-mib;\n  type int32 {\n    range \"1..2147483647\";\n  }\n  config false;\n  description\n    \"The entPhysicalIndex for the entPhysicalEntry represented\n     by this list entry.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalIndex\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf description {\n  type string;\n  config false;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "  description\n    \"A textual description of the component.  This node should\n     contain a string that identifies the manufacturer's name\n     for the component and should be set to a distinct value\n     for each version or model of the component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalDescr\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf parent {\n  type leafref {\n    path \"../../component/name\";\n    require-instance false;\n  }\n  description\n    \"The name of the component that physically contains this\n     component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 13,
      "text": "If this leaf is not instantiated, it indicates that this component is not contained in any other component.",
      "zh-CHS": "如果此叶未实例化，则表示此组件未包含在任何其他组件中。"
    },
    {
      "indent": 8,
      "text": "     In the event that a physical component is contained by\n     more than one physical component (e.g., double-wide\n     modules), this node contains the name of one of these\n     components.  An implementation MUST use the same name\n     every time this node is instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalContainedIn\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf parent-rel-pos {\n  type int32 {\n    range \"0 .. 2147483647\";\n  }\n  description\n    \"An indication of the relative position of this child\n     component among all its sibling components.  Sibling\n     components are defined as components that:",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "o share the same value of the 'parent' node and",
      "zh-CHS": "o 共享“父”节点的相同值，并且"
    },
    {
      "indent": 15,
      "text": "o share a common base identity for the 'class' node.",
      "zh-CHS": "o 共享“类”节点的公共基标识。"
    },
    {
      "indent": 13,
      "text": "Note that the last rule gives implementations flexibility in how components are numbered. For example, some implementations might have a single number series for all components derived from 'ianahw:port', while some others might have different number series for different",
      "zh-CHS": "请注意，最后一条规则为实现提供了组件编号方式的灵活性。例如，一些实现可能对从“ianahw:port”派生的所有组件使用一个数字系列，而另一些实现可能对不同的组件使用不同的数字系列"
    },
    {
      "indent": 13,
      "text": "components with identities derived from 'ianahw:port' (for example, one for registered jack 45 (RJ45) and one for small form-factor pluggable (SFP)).\";",
      "zh-CHS": "标识源自“ianahw:port”的组件（例如，一个用于注册插孔45（RJ45），一个用于小尺寸可插拔（SFP））；"
    },
    {
      "indent": 8,
      "text": "  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalParentRelPos\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf-list contains-child {\n  type leafref {\n    path \"../../component/name\";\n  }\n  config false;\n  description\n    \"The name of the contained component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalChildIndex\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf hardware-rev {\n  type string;\n  config false;\n  description\n    \"The vendor-specific hardware revision string for the\n     component.  The preferred value is the hardware revision\n     identifier actually printed on the component itself (if\n     present).\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalHardwareRev\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf firmware-rev {\n  type string;\n  config false;\n  description\n    \"The vendor-specific firmware revision string for the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalFirmwareRev\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf software-rev {\n  type string;\n  config false;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "  description\n    \"The vendor-specific software revision string for the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalSoftwareRev\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf serial-num {\n  type string;\n  config false;\n  description\n    \"The vendor-specific serial number string for the\n     component.  The preferred value is the serial number\n     string actually printed on the component itself (if\n     present).\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalSerialNum\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf mfg-name {\n  type string;\n  config false;\n  description\n    \"The name of the manufacturer of this physical component.\n     The preferred value is the manufacturer name string\n     actually printed on the component itself (if present).",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 13,
      "text": "Note that comparisons between instances of the 'model-name', 'firmware-rev', 'software-rev', and 'serial-num' nodes are only meaningful amongst components with the same value of 'mfg-name'.",
      "zh-CHS": "请注意，“型号名称”、“固件版本”、“软件版本”和“序列号”节点实例之间的比较仅在具有相同“制造商名称”值的组件之间有意义。"
    },
    {
      "indent": 8,
      "text": "     If the manufacturer name string associated with the\n     physical component is unknown to the server, then this\n     node is not instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf model-name {\n  type string;\n  config false;\n  description\n    \"The vendor-specific model name identifier string\n     associated with this physical component.  The preferred\n     value is the customer-visible part number, which may be\n     printed on the component itself.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "     If the model name string associated with the physical\n     component is unknown to the server, then this node is not\n     instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalModelName\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf alias {\n  type string;\n  description\n    \"An 'alias' name for the component, as specified by a\n     network manager, that provides a non-volatile 'handle' for\n     the component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 13,
      "text": "If no configured value exists, the server MAY set the value of this node to a locally unique value in the operational state.",
      "zh-CHS": "如果不存在已配置的值，服务器可以在操作状态下将此节点的值设置为本地唯一的值。"
    },
    {
      "indent": 8,
      "text": "     A server implementation MAY map this leaf to the\n     entPhysicalAlias MIB object.  Such an implementation needs\n     to use some mechanism to handle the differences in size\n     and characters allowed between this leaf and\n     entPhysicalAlias.  The definition of such a mechanism is\n     outside the scope of this document.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalAlias\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf asset-id {\n  type string;\n  description\n    \"This node is a user-assigned asset tracking identifier for\n     the component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "     A server implementation MAY map this leaf to the\n     entPhysicalAssetID MIB object.  Such an implementation\n     needs to use some mechanism to handle the differences in\n     size and characters allowed between this leaf and\n     entPhysicalAssetID.  The definition of such a mechanism is\n     outside the scope of this document.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf is-fru {\n  type boolean;\n  config false;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "  description\n    \"This node indicates whether or not this component is\n     considered a 'field-replaceable unit' by the vendor.  If\n     this node contains the value 'true', then this component\n     identifies a field-replaceable unit.  For all components\n     that are permanently contained within a field-replaceable\n     unit, the value 'false' should be returned for this\n     node.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf mfg-date {\n  type yang:date-and-time;\n  config false;\n  description\n    \"The date of manufacturing of the managed component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf-list uri {\n  type inet:uri;\n  description\n    \"This node contains identification information about the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalUris\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "leaf uuid {\n  type yang:uuid;\n  config false;\n  description\n    \"A Universally Unique Identifier of the component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalUUID\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "container state {\n  if-feature hardware-state;\n  description\n    \"State-related nodes\";\n  reference\n    \"RFC 4268: Entity State MIB\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf state-last-changed {\n  type yang:date-and-time;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "config false; description \"The date and time when the value of any of the admin-state, oper-state, usage-state, alarm-state, or standby-state changed for this component.",
      "zh-CHS": "配置错误；description“此组件的任何管理状态、操作状态、使用状态、报警状态或待机状态的值更改的日期和时间。"
    },
    {
      "indent": 10,
      "text": "     If there has been no change since the last\n     re-initialization of the local system, this node\n     contains the date and time of local system\n     initialization.  If there has been no change since the\n     component was added to the local system, this node\n     contains the date and time of the insertion.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateLastChanged\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf admin-state {\n  type admin-state;\n  description\n    \"The administrative state for this component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "This node refers to a component's administrative permission to service both other components within its containment hierarchy as well other users of its services defined by means outside the scope of this module.",
      "zh-CHS": "此节点是指组件的管理权限，它可以为其包含层次结构内的其他组件以及通过此模块范围外的方式定义的其服务的其他用户提供服务。"
    },
    {
      "indent": 10,
      "text": "     Some components exhibit only a subset of the remaining\n     administrative state values.  Some components cannot be\n     locked; hence, this node exhibits only the 'unlocked'\n     state.  Other components cannot be shut down gracefully;\n     hence, this node does not exhibit the 'shutting-down'\n     state.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateAdmin\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf oper-state {\n  type oper-state;\n  config false;\n  description\n    \"The operational state for this component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "Note that this node does not follow the administrative state. An administrative state of 'down' does not predict an operational state of 'disabled'.",
      "zh-CHS": "请注意，此节点不遵循管理状态。“关闭”的管理状态不能预测“禁用”的操作状态。"
    },
    {
      "indent": 10,
      "text": "     Note that some implementations may not be able to\n     accurately report oper-state while the admin-state node\n     has a value other than 'unlocked'.  In these cases, this\n     node MUST have a value of 'unknown'.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateOper\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf usage-state {\n  type usage-state;\n  config false;\n  description\n    \"The usage state for this component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 15,
      "text": "This node refers to a component's ability to service more components in a containment hierarchy.",
      "zh-CHS": "此节点表示组件为包含层次结构中的更多组件提供服务的能力。"
    },
    {
      "indent": 10,
      "text": "     Some components will exhibit only a subset of the usage\n     state values.  Components that are unable to ever\n     service any components within a containment hierarchy\n     will always have a usage state of 'busy'.  In some\n     cases, a component will be able to support only one\n     other component within its containment hierarchy and\n     will therefore only exhibit values of 'idle' and\n     'busy'.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateUsage\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf alarm-state {\n  type alarm-state;\n  config false;\n  description\n    \"The alarm state for this component.  It does not\n     include the alarms raised on child components within its\n     containment hierarchy.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateAlarm\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf standby-state {\n  type standby-state;\n  config false;\n  description\n    \"The standby state for this component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "       Some components will exhibit only a subset of the\n       remaining standby state values.  If this component\n       cannot operate in a standby role, the value of this node\n       will always be 'providing-service'.\";\n    reference\n      \"RFC 4268: Entity State MIB - entStateStandby\";\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "container sensor-data {\n  when 'derived-from-or-self(../class,\n                             \"ianahw:sensor\")' {\n    description\n      \"Sensor data nodes present for any component of type\n       'sensor'\";\n  }\n  if-feature hardware-sensor;\n  config false;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "description\n  \"Sensor-related nodes.\";\nreference\n  \"RFC 3433: Entity Sensor Management Information Base\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf value {\n  type sensor-value;\n  description\n    \"The most recent measurement obtained by the server\n     for this sensor.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "     A client that periodically fetches this node should also\n     fetch the nodes 'value-type', 'value-scale', and\n     'value-precision', since they may change when the value\n     is changed.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorValue\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf value-type {\n  type sensor-value-type;\n  description\n    \"The type of data units associated with the\n     sensor value\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorType\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf value-scale {\n  type sensor-value-scale;\n  description\n    \"The (power of 10) scaling factor associated\n     with the sensor value\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorScale\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf value-precision {\n  type sensor-value-precision;\n  description\n    \"The number of decimal places of precision\n     associated with the sensor value\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorPrecision\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf oper-status {\n  type sensor-status;\n  description\n    \"The operational status of the sensor.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorOperStatus\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf units-display {\n  type string;\n  description\n    \"A textual description of the data units that should be\n     used in the display of the sensor value.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorUnitsDisplay\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf value-timestamp {\n  type yang:date-and-time;\n  description\n    \"The time the status and/or value of this sensor was last\n     obtained by the server.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorValueTimeStamp\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 10,
      "text": "leaf value-update-rate {\n  type uint32;\n  units \"milliseconds\";\n  description\n    \"An indication of the frequency that the server updates\n     the associated 'value' node, represented in\n     milliseconds.  The value zero indicates:",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "- the sensor value is updated on demand (e.g., when polled by the server for a get-request),",
      "zh-CHS": "- 传感器值按需更新（例如，当服务器轮询get请求时），"
    },
    {
      "indent": 16,
      "text": "- the sensor value is updated when the sensor value changes (event-driven), or",
      "zh-CHS": "- 当传感器值发生变化时（事件驱动），传感器值会更新，或"
    },
    {
      "indent": 4,
      "text": "            - the server does not know the update rate.\";\n        reference\n          \"RFC 3433: Entity Sensor Management Information Base -\n                     entPhySensorValueUpdateRate\";\n      }\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "/*\n * Notifications\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "notification hardware-state-change {\n  description\n    \"A hardware-state-change notification is generated when the\n     value of /hardware/last-change changes in the operational\n     state.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entConfigChange\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "notification hardware-state-oper-enabled {\n  if-feature hardware-state;\n  description\n    \"A hardware-state-oper-enabled notification signifies that a\n     component has transitioned into the 'enabled' state.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "leaf name {\n  type leafref {\n    path \"/hardware/component/name\";\n  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "    description\n      \"The name of the component that has transitioned into the\n       'enabled' state.\";\n  }\n  leaf admin-state {\n    type leafref {\n      path \"/hardware/component/state/admin-state\";\n    }\n    description\n      \"The administrative state for the component.\";\n  }\n  leaf alarm-state {\n    type leafref {\n      path \"/hardware/component/state/alarm-state\";\n    }\n    description\n      \"The alarm state for the component.\";\n  }\n  reference\n    \"RFC 4268: Entity State MIB - entStateOperEnabled\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "notification hardware-state-oper-disabled {\n  if-feature hardware-state;\n  description\n    \"A hardware-state-oper-disabled notification signifies that a\n     component has transitioned into the 'disabled' state.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "leaf name {\n  type leafref {\n    path \"/hardware/component/name\";\n  }\n  description\n    \"The name of the component that has transitioned into the\n     'disabled' state.\";\n}\nleaf admin-state {\n  type leafref {\n    path \"/hardware/component/state/admin-state\";\n  }\n  description\n    \"The administrative state for the component.\";\n}\nleaf alarm-state {\n  type leafref {\n    path \"/hardware/component/state/alarm-state\";\n  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "    description\n      \"The alarm state for the component.\";\n  }\n  reference\n    \"RFC 4268: Entity State MIB - entStateOperDisabled\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "}",
      "zh-CHS": "}"
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "zh-CHS": "<代码结束>"
    },
    {
      "indent": 0,
      "text": "7.2. \"iana-hardware\" Module",
      "section_title": true,
      "zh-CHS": "7.2. “iana硬件”模块"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS> file \"iana-hardware@2018-03-13.yang\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "module iana-hardware {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:iana-hardware\";\n  prefix ianahw;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "organization \"IANA\"; contact \" Internet Assigned Numbers Authority",
      "zh-CHS": "“IANA”组织；联系“互联网分配号码管理局”"
    },
    {
      "indent": 8,
      "text": "Postal: ICANN 12025 Waterfront Drive, Suite 300 Los Angeles, CA 90094-2536 United States of America",
      "zh-CHS": "邮政：美国加利福尼亚州洛杉矶市ICANN 12025滨水路300号套房90094-2536"
    },
    {
      "indent": 8,
      "text": "Tel:    +1 310 301 5800\nE-Mail: iana@iana.org>\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "description \"IANA-defined identities for hardware class.",
      "zh-CHS": "描述“IANA为硬件类定义的标识。"
    },
    {
      "indent": 8,
      "text": "The latest revision of this YANG module can be obtained from the IANA website.",
      "zh-CHS": "此模块的最新版本可从IANA网站获得。"
    },
    {
      "indent": 8,
      "text": "Requests for new values should be made to IANA via email (iana@iana.org).",
      "zh-CHS": "应通过电子邮件向IANA请求新值(iana@iana.org)."
    },
    {
      "indent": 8,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "zh-CHS": "版权所有（c）2018 IETF信托基金和被确定为代码作者的人员。版权所有。"
    },
    {
      "indent": 8,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License",
      "zh-CHS": "根据简化BSD许可证中包含的许可条款，允许以源代码和二进制格式重新分发和使用，无论是否修改"
    },
    {
      "indent": 8,
      "text": "set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info).",
      "zh-CHS": "IETF信托法律条款第4.c节中规定的IETF文件(https://trustee.ietf.org/license-info)."
    },
    {
      "indent": 5,
      "text": "   The initial version of this YANG module is part of RFC 8348;\n   see the RFC itself for full legal notices.\";\nreference\n  \"https://www.iana.org/assignments/yang-parameters\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "revision 2018-03-13 {\n  description\n    \"Initial revision.\";\n  reference\n    \"RFC 8348: A YANG Data Model for Hardware Management\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "/*\n * Identities\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity hardware-class {\n  description\n    \"This identity is the base for all hardware class\n     identifiers.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity unknown {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is unknown\n     to the server.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity chassis {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is an\n     overall container for networking equipment.  Any class of\n     physical component, except a stack, may be contained within a\n     chassis; a chassis may only be contained within a stack.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity backplane {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of device for aggregating and forwarding networking traffic,\n     such as a shared backplane in a modular ethernet switch.  Note",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "     that an implementation may model a backplane as a single\n     physical component, which is actually implemented as multiple\n     discrete physical components (within a chassis or stack).\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity container {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is capable\n     of containing one or more removable physical entities,\n     possibly of different types.  For example, each (empty or\n     full) slot in a chassis will be modeled as a container.  Note\n     that all removable physical components should be modeled\n     within a container component, such as field-replaceable\n     modules, fans, or power supplies.  Note that all known\n     containers should be modeled by the agent, including empty\n     containers.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity power-supply {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is a\n     power-supplying component.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity fan {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is a fan or\n     other heat-reduction component.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity sensor {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of sensor, such as a temperature sensor within a router\n     chassis.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity module {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of self-contained sub-system.  If a module component is\n     removable, then it should be modeled within a container",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "     component; otherwise, it should be modeled directly within\n     another physical component (e.g., a chassis or another\n     module).\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity port {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of networking port capable of receiving and/or transmitting\n     networking traffic.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity stack {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of super-container (possibly virtual) intended to group\n     together multiple chassis entities.  A stack may be realized\n     by a virtual cable, a real interconnect cable attached to\n     multiple chassis, or multiple interconnect cables.  A stack\n     should not be modeled within any other physical components,\n     but a stack may be contained within another stack.  Only\n     chassis components should be contained within a stack.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity cpu {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of central processing unit.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity energy-object {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of energy object, i.e., it is a piece of equipment that is\n     part of or attached to a communications network that is\n     monitored, it is controlled, or it aids in the management of\n     another device for Energy Management.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "identity battery {\n  base ianahw:hardware-class;\n  description\n    \"This identity is applicable if the hardware class is some sort\n     of battery.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "}",
      "zh-CHS": "}"
    },
    {
      "indent": 3,
      "text": "  identity storage-drive {\n    base ianahw:hardware-class;\n    description\n      \"This identity is applicable if the hardware class is some sort\n       of component with data storage capability as its main\n       functionality, e.g., hard disk drive (HDD), solid-state device\n       (SSD), solid-state hybrid drive (SSHD), object storage device\n       (OSD), or other.\";\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "zh-CHS": "<代码结束>"
    },
    {
      "indent": 0,
      "text": "8. IANA Considerations",
      "section_title": true,
      "zh-CHS": "8. IANA考虑"
    },
    {
      "indent": 3,
      "text": "This document defines the initial version of the IANA-maintained \"iana-hardware\" YANG module.",
      "zh-CHS": "本文件定义了IANA维护的“IANA硬件”模块的初始版本。"
    },
    {
      "indent": 3,
      "text": "The \"iana-hardware\" YANG module is intended to reflect the \"IANA-ENTITY-MIB\" MIB module so that if a new enumeration is added to the \"IANAPhysicalClass\" textual convention, the same class is added as an identity derived from \"ianahw:hardware-class\".",
      "zh-CHS": "“iana hardware”模块旨在反映“iana-ENTITY-MIB”MIB模块，以便在“IANAPhysicalClass”文本约定中添加新枚举时，将同一类添加为从“ianahw:hardware class”派生的标识。"
    },
    {
      "indent": 3,
      "text": "When the \"iana-hardware\" YANG module is updated, a new \"revision\" statement must be added in front of the existing revision statements.",
      "zh-CHS": "更新“iana硬件”模块时，必须在现有修订声明之前添加新的“修订”声明。"
    },
    {
      "indent": 0,
      "text": "8.1. URI Registrations",
      "section_title": true,
      "zh-CHS": "8.1. URI注册"
    },
    {
      "indent": 3,
      "text": "This document registers three URIs in the \"IETF XML Registry\" [RFC3688]. Per the format in RFC 3688, the following registrations have been made.",
      "zh-CHS": "本文档在“IETF XML注册表”[RFC3688]中注册了三个URI。按照RFC 3688中的格式，进行了以下注册。"
    },
    {
      "indent": 5,
      "text": "URI: urn:ietf:params:xml:ns:yang:iana-hardware Registrant Contact: The IESG. XML: N/A, the requested URI is an XML namespace.",
      "zh-CHS": "URI:urn:ietf:params:xml:ns:yang:iana硬件注册人联系人：IESG。XML:N/A，请求的URI是一个XML名称空间。"
    },
    {
      "indent": 5,
      "text": "URI: urn:ietf:params:xml:ns:yang:ietf-hardware Registrant Contact: The IESG. XML: N/A, the requested URI is an XML namespace.",
      "zh-CHS": "URI:urn:ietf:params:xml:ns:yang:ietf硬件注册人联系人：IESG。XML:N/A，请求的URI是一个XML名称空间。"
    },
    {
      "indent": 5,
      "text": "URI: urn:ietf:params:xml:ns:yang:ietf-hardware-state Registrant Contact: The IESG. XML: N/A, the requested URI is an XML namespace.",
      "zh-CHS": "URI:urn:ietf:params:xml:ns:yang:ietf硬件状态注册人联系人：IESG。XML:N/A，请求的URI是一个XML名称空间。"
    },
    {
      "indent": 0,
      "text": "8.2. YANG Module Registrations",
      "section_title": true,
      "zh-CHS": "8.2. 杨模块注册"
    },
    {
      "indent": 3,
      "text": "This document registers three YANG modules in the \"YANG Module Names\" registry [RFC6020].",
      "zh-CHS": "本文件在“阳模块名称”注册表[RFC6020]中注册了三个阳模块。"
    },
    {
      "indent": 5,
      "text": "name:         iana-hardware\nnamespace:    urn:ietf:params:xml:ns:yang:iana-hardware\nprefix:       ianahw\nreference:    RFC 8348",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "name:         ietf-hardware\nnamespace:    urn:ietf:params:xml:ns:yang:ietf-hardware\nprefix:       hw\nreference:    RFC 8348",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "name:         ietf-hardware-state\nnamespace:    urn:ietf:params:xml:ns:yang:ietf-hardware-state\nprefix:       hw-state\nreference:    RFC 8348",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "9. Security Considerations",
      "section_title": true,
      "zh-CHS": "9. 安全考虑"
    },
    {
      "indent": 3,
      "text": "The YANG modules specified in this document define a schema for data that is designed to be accessed via network management protocols such as NETCONF [RFC6241] or RESTCONF [RFC8040]. The lowest NETCONF layer is the secure transport layer, and the mandatory-to-implement secure transport is Secure Shell (SSH) [RFC6242]. The lowest RESTCONF layer is HTTPS, and the mandatory-to-implement secure transport is TLS [RFC5246].",
      "zh-CHS": "本文档中指定的模块为数据定义了一个模式，该模式旨在通过网络管理协议（如NETCONF[RFC6241]或restcconf[RFC8040]）进行访问。最低的NETCONF层是安全传输层，实现安全传输的强制要求是安全Shell（SSH）[RFC6242]。最低的RESTCONF层是HTTPS，实现安全传输的强制层是TLS[RFC5246]。"
    },
    {
      "indent": 3,
      "text": "The NETCONF access control model [RFC8341] provides the means to restrict access for particular NETCONF or RESTCONF users to a preconfigured subset of all available NETCONF or RESTCONF protocol operations and content.",
      "zh-CHS": "NETCONF访问控制模型[RFC8341]提供了将特定NETCONF或RESTCONF用户的访问限制为所有可用NETCONF或RESTCONF协议操作和内容的预配置子集的方法。"
    },
    {
      "indent": 3,
      "text": "There are a number of data nodes defined in the YANG module \"ietf-hardware\" that are writable/creatable/deletable (i.e., config true, which is the default). These data nodes may be considered sensitive or vulnerable in some network environments. Write operations (e.g., edit-config) to these data nodes without proper protection can have a negative effect on network operations. These are the subtrees and data nodes and their sensitivity/vulnerability:",
      "zh-CHS": "模块“ietf硬件”中定义了许多数据节点，这些节点是可写/可创建/可删除的（即，默认为config true）。在某些网络环境中，这些数据节点可能被视为敏感或易受攻击。对这些数据节点的写入操作（如编辑配置）如果没有适当的保护，可能会对网络操作产生负面影响。这些是子树和数据节点及其敏感性/漏洞："
    },
    {
      "indent": 3,
      "text": "/hardware/component/admin-state: Setting this node to 'locked' or 'shutting-down' can cause disruption of services ranging from those running on a port to those on an entire device, depending on the type of component.",
      "zh-CHS": "/硬件/组件/管理状态：根据组件的类型，将此节点设置为“锁定”或“关闭”可能会导致服务中断，服务范围从端口上运行的服务到整个设备上运行的服务。"
    },
    {
      "indent": 3,
      "text": "Some of the readable data nodes in these YANG modules may be considered sensitive or vulnerable in some network environments. It is thus important to control read access (e.g., via get, get-config, or notification) to these data nodes. These are the subtrees and data nodes and their sensitivity/vulnerability:",
      "zh-CHS": "在某些网络环境中，这些模块中的一些可读数据节点可能被视为敏感或易受攻击。因此，控制对这些数据节点的读取访问（例如，通过get、get config或通知）非常重要。这些是子树和数据节点及其敏感性/漏洞："
    },
    {
      "indent": 3,
      "text": "/hardware/component: The leafs in this list expose information about the physical components in a device, which may be used to identify the vendor, model, version, and specific device-identification information of each system component.",
      "zh-CHS": "/硬件/组件：此列表中的叶子显示设备中物理组件的信息，可用于标识每个系统组件的供应商、型号、版本和特定设备标识信息。"
    },
    {
      "indent": 3,
      "text": "/hardware/component/sensor-data/value: This node may expose the values of particular physical sensors in a device.",
      "zh-CHS": "/硬件/组件/传感器数据/值：此节点可以公开设备中特定物理传感器的值。"
    },
    {
      "indent": 3,
      "text": "/hardware/component/state: Access to this node allows one to figure out what the active and standby resources in a device are.",
      "zh-CHS": "/硬件/组件/状态：访问此节点可以确定设备中的活动和备用资源。"
    },
    {
      "indent": 0,
      "text": "10. References",
      "section_title": true,
      "zh-CHS": "10. 工具书类"
    },
    {
      "indent": 0,
      "text": "10.1. Normative References",
      "section_title": true,
      "zh-CHS": "10.1. 规范性引用文件"
    },
    {
      "indent": 3,
      "text": "[RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997, <https://www.rfc-editor.org/info/rfc2119>.",
      "zh-CHS": "[RFC2119]Bradner，S.，“RFC中用于表示需求水平的关键词”，BCP 14，RFC 2119，DOI 10.17487/RFC2119，1997年3月<https://www.rfc-editor.org/info/rfc2119>."
    },
    {
      "indent": 3,
      "text": "[RFC3433] Bierman, A., Romascanu, D., and K. Norseth, \"Entity Sensor Management Information Base\", RFC 3433, DOI 10.17487/RFC3433, December 2002, <https://www.rfc-editor.org/info/rfc3433>.",
      "zh-CHS": "[RFC3433]Bierman，A.，Romascanu，D.，和K.Norseth，“实体传感器管理信息库”，RFC 3433，DOI 10.17487/RFC3433，2002年12月<https://www.rfc-editor.org/info/rfc3433>."
    },
    {
      "indent": 3,
      "text": "[RFC3688] Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688, DOI 10.17487/RFC3688, January 2004, <https://www.rfc-editor.org/info/rfc3688>.",
      "zh-CHS": "[RFC3688]Mealling，M.，“IETF XML注册表”，BCP 81，RFC 3688，DOI 10.17487/RFC3688，2004年1月<https://www.rfc-editor.org/info/rfc3688>."
    },
    {
      "indent": 3,
      "text": "[RFC4268] Chisholm, S. and D. Perkins, \"Entity State MIB\", RFC 4268, DOI 10.17487/RFC4268, November 2005, <https://www.rfc-editor.org/info/rfc4268>.",
      "zh-CHS": "[RFC4268]Chisholm，S.和D.Perkins，“实体国家MIB”，RFC 4268，DOI 10.17487/RFC4268，2005年11月<https://www.rfc-editor.org/info/rfc4268>."
    },
    {
      "indent": 3,
      "text": "[RFC5246] Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS) Protocol Version 1.2\", RFC 5246, DOI 10.17487/RFC5246, August 2008, <https://www.rfc-editor.org/info/rfc5246>.",
      "zh-CHS": "[RFC5246]Dierks，T.和E.Rescorla，“传输层安全（TLS）协议版本1.2”，RFC 5246，DOI 10.17487/RFC5246，2008年8月<https://www.rfc-editor.org/info/rfc5246>."
    },
    {
      "indent": 3,
      "text": "[RFC6020] Bjorklund, M., Ed., \"YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)\", RFC 6020, DOI 10.17487/RFC6020, October 2010, <https://www.rfc-editor.org/info/rfc6020>.",
      "zh-CHS": "[RFC6020]Bjorklund，M.，Ed.“YANG-网络配置协议的数据建模语言（NETCONF）”，RFC 6020，DOI 10.17487/RFC6020，2010年10月<https://www.rfc-editor.org/info/rfc6020>."
    },
    {
      "indent": 3,
      "text": "[RFC6241] Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed., and A. Bierman, Ed., \"Network Configuration Protocol (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011, <https://www.rfc-editor.org/info/rfc6241>.",
      "zh-CHS": "[RFC6241]Enns，R.，Ed.，Bjorklund，M.，Ed.，Schoenwaeld，J.，Ed.，和A.Bierman，Ed.，“网络配置协议（NETCONF）”，RFC 6241，DOI 10.17487/RFC6241，2011年6月<https://www.rfc-editor.org/info/rfc6241>."
    },
    {
      "indent": 3,
      "text": "[RFC6242] Wasserman, M., \"Using the NETCONF Protocol over Secure Shell (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011, <https://www.rfc-editor.org/info/rfc6242>.",
      "zh-CHS": "[RFC6242]Wasserman，M.“在安全外壳上使用NETCONF协议（SSH）”，RFC 6242，DOI 10.17487/RFC6242，2011年6月<https://www.rfc-editor.org/info/rfc6242>."
    },
    {
      "indent": 3,
      "text": "[RFC6933] Bierman, A., Romascanu, D., Quittek, J., and M. Chandramouli, \"Entity MIB (Version 4)\", RFC 6933, DOI 10.17487/RFC6933, May 2013, <https://www.rfc-editor.org/info/rfc6933>.",
      "zh-CHS": "[RFC6933]Bierman，A.，Romascanu，D.，Quittek，J.，和M.Chandramouli，“实体MIB（版本4）”，RFC 6933，DOI 10.17487/RFC6933，2013年5月<https://www.rfc-editor.org/info/rfc6933>."
    },
    {
      "indent": 3,
      "text": "[RFC6991] Schoenwaelder, J., Ed., \"Common YANG Data Types\", RFC 6991, DOI 10.17487/RFC6991, July 2013, <https://www.rfc-editor.org/info/rfc6991>.",
      "zh-CHS": "[RFC6991]Schoenwaeld，J.，Ed.，“常见杨数据类型”，RFC 6991，DOI 10.17487/RFC69911913年7月<https://www.rfc-editor.org/info/rfc6991>."
    },
    {
      "indent": 3,
      "text": "[RFC7950] Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\", RFC 7950, DOI 10.17487/RFC7950, August 2016, <https://www.rfc-editor.org/info/rfc7950>.",
      "zh-CHS": "[RFC7950]Bjorklund，M.，Ed.“YANG 1.1数据建模语言”，RFC 7950，DOI 10.17487/RFC7950，2016年8月<https://www.rfc-editor.org/info/rfc7950>."
    },
    {
      "indent": 3,
      "text": "[RFC8040] Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF Protocol\", RFC 8040, DOI 10.17487/RFC8040, January 2017, <https://www.rfc-editor.org/info/rfc8040>.",
      "zh-CHS": "[RFC8040]Bierman，A.，Bjorklund，M.，和K.Watsen，“RESTCONF协议”，RFC 8040，DOI 10.17487/RFC8040，2017年1月<https://www.rfc-editor.org/info/rfc8040>."
    },
    {
      "indent": 3,
      "text": "[RFC8174] Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017, <https://www.rfc-editor.org/info/rfc8174>.",
      "zh-CHS": "[RFC8174]Leiba，B.，“RFC 2119关键词中大写与小写的歧义”，BCP 14，RFC 8174，DOI 10.17487/RFC8174，2017年5月<https://www.rfc-editor.org/info/rfc8174>."
    },
    {
      "indent": 3,
      "text": "[RFC8341] Bierman, A. and M. Bjorklund, \"Network Configuration Access Control Model\", STD 91, RFC 8341, DOI 10.17487/RFC8341, March 2018, <https://www.rfc-editor.org/info/rfc8341>.",
      "zh-CHS": "[RFC8341]Bierman，A.和M.Bjorklund，“网络配置访问控制模型”，STD 91，RFC 8341，DOI 10.17487/RFC8341，2018年3月<https://www.rfc-editor.org/info/rfc8341>."
    },
    {
      "indent": 3,
      "text": "[RFC8342] Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K., and R. Wilton, \"Network Management Datastore Architecture (NMDA)\", RFC 8342, DOI 10.17487/RFC8342, March 2018, <https://www.rfc-editor.org/info/rfc8342>.",
      "zh-CHS": "[RFC8342]Bjorklund，M.，Schoenwaeld，J.，Shafer，P.，Watsen，K.，和R.Wilton，“网络管理数据存储体系结构（NMDA）”，RFC 8342，DOI 10.17487/RFC8342，2018年3月<https://www.rfc-editor.org/info/rfc8342>."
    },
    {
      "indent": 0,
      "text": "10.2. Informative References",
      "section_title": true,
      "zh-CHS": "10.2. 资料性引用"
    },
    {
      "indent": 3,
      "text": "[RFC8340] Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\", BCP 215, RFC 8340, DOI 10.17487/RFC8340, March 2018, <https://www.rfc-editor.org/info/rfc8340>.",
      "zh-CHS": "[RFC8340]Bjorklund，M.和L.Berger，编辑，“杨树图”，BCP 215，RFC 8340，DOI 10.17487/RFC8340，2018年3月<https://www.rfc-editor.org/info/rfc8340>."
    },
    {
      "indent": 0,
      "text": "Appendix A. Hardware State Data Model",
      "section_title": true,
      "zh-CHS": "附录A.硬件状态数据模型"
    },
    {
      "indent": 3,
      "text": "This non-normative appendix contains a data model designed as a temporary solution for implementations that do not yet support the Network Management Datastore Architecture (NMDA) defined in [RFC8342]. It has the following structure:",
      "zh-CHS": "本非规范性附录包含一个数据模型，该模型是为尚未支持[RFC8342]中定义的网络管理数据存储体系结构（NMDA）的实施而设计的临时解决方案。其结构如下："
    },
    {
      "indent": 3,
      "text": "module: ietf-hardware-state\n  x--ro hardware\n     x--ro last-change?   yang:date-and-time\n     x--ro component* [name]\n        x--ro name              string\n        x--ro class             identityref\n        x--ro physical-index?   int32 {entity-mib}?\n        x--ro description?      string\n        x--ro parent?           -> ../../component/name\n        x--ro parent-rel-pos?   int32\n        x--ro contains-child*   -> ../../component/name\n        x--ro hardware-rev?     string\n        x--ro firmware-rev?     string\n        x--ro software-rev?     string\n        x--ro serial-num?       string\n        x--ro mfg-name?         string\n        x--ro model-name?       string\n        x--ro alias?            string\n        x--ro asset-id?         string\n        x--ro is-fru?           boolean\n        x--ro mfg-date?         yang:date-and-time\n        x--ro uri*              inet:uri\n        x--ro uuid?             yang:uuid\n        x--ro state {hardware-state}?\n        |  x--ro state-last-changed?   yang:date-and-time\n        |  x--ro admin-state?          hw:admin-state\n        |  x--ro oper-state?           hw:oper-state\n        |  x--ro usage-state?          hw:usage-state\n        |  x--ro alarm-state?          hw:alarm-state\n        |  x--ro standby-state?        hw:standby-state\n        x--ro sensor-data {hardware-sensor}?\n           x--ro value?               hw:sensor-value\n           x--ro value-type?          hw:sensor-value-type\n           x--ro value-scale?         hw:sensor-value-scale\n           x--ro value-precision?     hw:sensor-value-precision\n           x--ro oper-status?         hw:sensor-status\n           x--ro units-display?       string\n           x--ro value-timestamp?     yang:date-and-time\n           x--ro value-update-rate?   uint32",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "notifications:\n  x---n hardware-state-change\n  x---n hardware-state-oper-enabled {hardware-state}?\n  |  x--ro name?          -> /hardware/component/name\n  |  x--ro admin-state?   -> /hardware/component/state/admin-state\n  |  x--ro alarm-state?   -> /hardware/component/state/alarm-state\n  x---n hardware-state-oper-disabled {hardware-state}?\n     x--ro name?          -> /hardware/component/name\n     x--ro admin-state?   -> /hardware/component/state/admin-state\n     x--ro alarm-state?   -> /hardware/component/state/alarm-state",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "A.1. Hardware State YANG Module",
      "section_title": true,
      "zh-CHS": "A.1. 硬件状态模块"
    },
    {
      "indent": 3,
      "text": "<CODE BEGINS> file \"ietf-hardware-state@2018-03-13.yang\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "module ietf-hardware-state {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-hardware-state\";\n  prefix hw-state;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "import ietf-inet-types {\n  prefix inet;\n}\nimport ietf-yang-types {\n  prefix yang;\n}\nimport iana-hardware {\n  prefix ianahw;\n}\nimport ietf-hardware {\n  prefix hw;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "organization \"IETF NETMOD (Network Modeling) Working Group\";",
      "zh-CHS": "组织“IETF NETMOD（网络建模）工作组”；"
    },
    {
      "indent": 5,
      "text": "contact\n  \"WG Web:   <https://datatracker.ietf.org/wg/netmod/>\n   WG List:  <mailto:netmod@ietf.org>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "Editor:   Andy Bierman\n          <mailto:andy@yumaworks.com>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "Editor:   Martin Bjorklund\n          <mailto:mbj@tail-f.com>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "Editor:   Jie Dong\n          <mailto:jie.dong@huawei.com>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 8,
      "text": "Editor:   Dan Romascanu\n          <mailto:dromasca@gmail.com>\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "description \"This module contains a collection of YANG definitions for monitoring hardware.",
      "zh-CHS": "description“此模块包含监控硬件的定义集合。"
    },
    {
      "indent": 8,
      "text": "This data model is designed as a temporary solution for implementations that do not yet support the Network Management Datastore Architecture (NMDA) defined in RFC 8342. Such an implementation cannot implement the module 'ietf-hardware' properly, since without NMDA support, it is not possible to distinguish between instances of nodes in the running configuration and operational states.",
      "zh-CHS": "此数据模型设计为临时解决方案，用于尚未支持RFC 8342中定义的网络管理数据存储体系结构（NMDA）的实现。这种实现无法正确实现模块“ietf硬件”，因为如果没有NMDA支持，就无法区分运行配置和运行状态下的节点实例。"
    },
    {
      "indent": 8,
      "text": "The data model in this module is the same as the data model in 'ietf-hardware', except all nodes are marked as 'config false'.",
      "zh-CHS": "此模块中的数据模型与“ietf硬件”中的数据模型相同，只是所有节点都标记为“配置错误”。"
    },
    {
      "indent": 8,
      "text": "If a server that implements this module but doesn't support NMDA also supports configuration of hardware components, it SHOULD also implement the module 'ietf-hardware' in the configuration datastores. The corresponding state data is found in the '/hw-state:hardware' subtree.",
      "zh-CHS": "如果实现此模块但不支持NMDA的服务器也支持硬件组件的配置，则还应在配置数据存储中实现模块“ietf硬件”。在“/hw state:hardware”子树中可以找到相应的状态数据。"
    },
    {
      "indent": 8,
      "text": "Copyright (c) 2018 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "zh-CHS": "版权所有（c）2018 IETF信托基金和被确定为代码作者的人员。版权所有。"
    },
    {
      "indent": 8,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info).",
      "zh-CHS": "根据IETF信托有关IETF文件的法律规定第4.c节规定的简化BSD许可证中包含的许可条款，允许以源代码和二进制格式重新分发和使用，无论是否修改(https://trustee.ietf.org/license-info)."
    },
    {
      "indent": 8,
      "text": "This version of this YANG module is part of RFC 8348; see the RFC itself for full legal notices.\";",
      "zh-CHS": "此模块的此版本是RFC 8348的一部分；有关完整的法律通知，请参见RFC本身。“；"
    },
    {
      "indent": 5,
      "text": "revision 2018-03-13 {\n  description\n    \"Initial revision.\";\n  reference\n    \"RFC 8348: A YANG Data Model for Hardware Management\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "/*\n * Features\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "feature entity-mib {\n  status deprecated;\n  description\n    \"This feature indicates that the device implements\n     the ENTITY-MIB.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4)\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "feature hardware-state {\n  status deprecated;\n  description\n    \"Indicates that ENTITY-STATE-MIB objects are supported\";\n  reference\n    \"RFC 4268: Entity State MIB\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "feature hardware-sensor {\n  status deprecated;\n  description\n    \"Indicates that ENTITY-SENSOR-MIB objects are supported\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "/*\n * Data nodes\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "container hardware {\n  config false;\n  status deprecated;\n  description\n    \"Data nodes representing components.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "leaf last-change {\n  type yang:date-and-time;\n  status deprecated;\n  description\n    \"The time the '/hardware/component' list changed in the\n     operational state.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "list component {\n  key name;\n  status deprecated;\n  description\n    \"List of components.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 12,
      "text": "When the server detects a new hardware component, it initializes a list entry in the operational state.",
      "zh-CHS": "当服务器检测到一个新的硬件组件时，它会在操作状态下初始化一个列表条目。"
    },
    {
      "indent": 12,
      "text": "If the server does not support configuration of hardware components, list entries in the operational state are initialized with values for all nodes as detected by the implementation.",
      "zh-CHS": "如果服务器不支持硬件组件的配置，则使用实现检测到的所有节点的值初始化处于操作状态的列表项。"
    },
    {
      "indent": 12,
      "text": "Otherwise, this procedure is followed:",
      "zh-CHS": "否则，请遵循以下步骤："
    },
    {
      "indent": 14,
      "text": "1. If there is an entry in the '/hardware/component' list in the intended configuration with values for the nodes 'class', 'parent', and 'parent-rel-pos' that are equal to the detected values, then:",
      "zh-CHS": "1. 如果在预期配置的“/hardware/component”列表中有一个条目，其中节点“class”、“parent”和“parent rel pos”的值等于检测到的值，则："
    },
    {
      "indent": 14,
      "text": "1a. If the configured entry has a value for 'mfg-name' that is equal to the detected value or if the 'mfg-name' value cannot be detected, then the list entry in the operational state is initialized with the configured values for all configured nodes, including the 'name'.",
      "zh-CHS": "1a。如果配置条目的“mfg name”值等于检测到的值，或者如果无法检测到“mfg name”值，则使用所有配置节点（包括“name”）的配置值初始化处于操作状态的列表条目。"
    },
    {
      "indent": 18,
      "text": "Otherwise, the list entry in the operational state is initialized with values for all nodes as detected by the implementation. The implementation may raise an alarm that informs about the 'mfg-name' mismatch condition. How this is done is outside the scope of this document.",
      "zh-CHS": "否则，将使用实现检测到的所有节点的值初始化处于操作状态的列表项。实施可能会发出警报，通知“制造商名称”不匹配情况。如何做到这一点超出了本文件的范围。"
    },
    {
      "indent": 14,
      "text": "1b. Otherwise (i.e., there is no matching configuration entry), the list entry in the operational state is initialized with values for all nodes as detected by the implementation.",
      "zh-CHS": "1b。否则（即，没有匹配的配置条目），将使用实现检测到的所有节点的值初始化处于操作状态的列表条目。"
    },
    {
      "indent": 9,
      "text": "   If the '/hardware/component' list in the intended\n   configuration is modified, then the system MUST behave as if\n   it re-initializes itself and follow the procedure in (1).\";\nreference\n  \"RFC 6933: Entity MIB (Version 4) - entPhysicalEntry\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf name {\n  type string;\n  status deprecated;\n  description\n    \"The name assigned to this component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "This name is not required to be the same as entPhysicalName.\";",
      "zh-CHS": "此名称不必与entPhysicalName相同。“；"
    },
    {
      "indent": 9,
      "text": "}",
      "zh-CHS": "}"
    },
    {
      "indent": 9,
      "text": "leaf class {\n  type identityref {\n    base ianahw:hardware-class;\n  }\n  mandatory true;\n  status deprecated;\n  description\n    \"An indication of the general hardware type of the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalClass\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf physical-index {\n  if-feature entity-mib;\n  type int32 {\n    range \"1..2147483647\";\n  }\n  status deprecated;\n  description\n    \"The entPhysicalIndex for the entPhysicalEntry represented\n     by this list entry.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalIndex\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf description {\n  type string;\n  status deprecated;\n  description\n    \"A textual description of the component.  This node should\n     contain a string that identifies the manufacturer's name\n     for the component and should be set to a distinct value\n     for each version or model of the component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalDescr\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf parent {\n  type leafref {\n    path \"../../component/name\";\n    require-instance false;\n  }\n  status deprecated;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "description \"The name of the component that physically contains this component.",
      "zh-CHS": "description“物理上包含此组件的组件的名称。"
    },
    {
      "indent": 14,
      "text": "If this leaf is not instantiated, it indicates that this component is not contained in any other component.",
      "zh-CHS": "如果此叶未实例化，则表示此组件未包含在任何其他组件中。"
    },
    {
      "indent": 9,
      "text": "     In the event that a physical component is contained by\n     more than one physical component (e.g., double-wide\n     modules), this node contains the name of one of these\n     components.  An implementation MUST use the same name\n     every time this node is instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalContainedIn\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf parent-rel-pos {\n  type int32 {\n    range \"0 .. 2147483647\";\n  }\n  status deprecated;\n  description\n    \"An indication of the relative position of this child\n     component among all its sibling components.  Sibling\n     components are defined as components that:",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "o share the same value of the 'parent' node and",
      "zh-CHS": "o 共享“父”节点的相同值，并且"
    },
    {
      "indent": 16,
      "text": "o share a common base identity for the 'class' node.",
      "zh-CHS": "o 共享“类”节点的公共基标识。"
    },
    {
      "indent": 14,
      "text": "Note that the last rule gives implementations flexibility in how components are numbered. For example, some implementations might have a single number series for all components derived from 'ianahw:port', while some others might have different number series for different components with identities derived from 'ianahw:port' (for example, one for RJ45 and one for SFP).\";",
      "zh-CHS": "请注意，最后一条规则为实现提供了组件编号方式的灵活性。例如，一些实现可能对从“ianahw:port”派生的所有组件使用一个数字系列，而另一些实现可能对从“ianahw:port”派生的标识的不同组件使用不同的数字系列（例如，一个用于RJ45，一个用于SFP）。”；"
    },
    {
      "indent": 9,
      "text": "  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalParentRelPos\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf-list contains-child {\n  type leafref {\n    path \"../../component/name\";\n  }",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "  status deprecated;\n  description\n    \"The name of the contained component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalChildIndex\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf hardware-rev {\n  type string;\n  status deprecated;\n  description\n    \"The vendor-specific hardware revision string for the\n     component.  The preferred value is the hardware revision\n     identifier actually printed on the component itself (if\n     present).\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalHardwareRev\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf firmware-rev {\n  type string;\n  status deprecated;\n  description\n    \"The vendor-specific firmware revision string for the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalFirmwareRev\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf software-rev {\n  type string;\n  status deprecated;\n  description\n    \"The vendor-specific software revision string for the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) -\n               entPhysicalSoftwareRev\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf serial-num {\n  type string;\n  status deprecated;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "  description\n    \"The vendor-specific serial number string for the\n     component.  The preferred value is the serial number\n     string actually printed on the component itself (if\n     present).\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalSerialNum\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf mfg-name {\n  type string;\n  status deprecated;\n  description\n    \"The name of the manufacturer of this physical component.\n     The preferred value is the manufacturer name string\n     actually printed on the component itself (if present).",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 14,
      "text": "Note that comparisons between instances of the 'model-name', 'firmware-rev', 'software-rev', and 'serial-num' nodes are only meaningful amongst components with the same value of 'mfg-name'.",
      "zh-CHS": "请注意，“型号名称”、“固件版本”、“软件版本”和“序列号”节点实例之间的比较仅在具有相同“制造商名称”值的组件之间有意义。"
    },
    {
      "indent": 9,
      "text": "     If the manufacturer name string associated with the\n     physical component is unknown to the server, then this\n     node is not instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf model-name {\n  type string;\n  status deprecated;\n  description\n    \"The vendor-specific model name identifier string\n     associated with this physical component.  The preferred\n     value is the customer-visible part number, which may be\n     printed on the component itself.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "     If the model name string associated with the physical\n     component is unknown to the server, then this node is not\n     instantiated.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalModelName\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf alias {\n  type string;\n  status deprecated;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "description \"An 'alias' name for the component, as specified by a network manager, that provides a non-volatile 'handle' for the component.",
      "zh-CHS": "description“由网络管理器指定的组件“别名”，为组件提供非易失性“句柄”。"
    },
    {
      "indent": 14,
      "text": "If no configured value exists, the server MAY set the value of this node to a locally unique value in the operational state.",
      "zh-CHS": "如果不存在已配置的值，服务器可以在操作状态下将此节点的值设置为本地唯一的值。"
    },
    {
      "indent": 9,
      "text": "     A server implementation MAY map this leaf to the\n     entPhysicalAlias MIB object.  Such an implementation needs\n     to use some mechanism to handle the differences in size\n     and characters allowed between this leaf and\n     entPhysicalAlias.  The definition of such a mechanism is\n     outside the scope of this document.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalAlias\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf asset-id {\n  type string;\n  status deprecated;\n  description\n    \"This node is a user-assigned asset tracking identifier for\n     the component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "     A server implementation MAY map this leaf to the\n     entPhysicalAssetID MIB object.  Such an implementation\n     needs to use some mechanism to handle the differences in\n     size and characters allowed between this leaf and\n     entPhysicalAssetID.  The definition of such a mechanism is\n     outside the scope of this document.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf is-fru {\n  type boolean;\n  status deprecated;\n  description\n    \"This node indicates whether or not this component is\n     considered a 'field-replaceable unit' by the vendor.  If\n     this node contains the value 'true', then this component\n     identifies a field-replaceable unit.  For all components\n     that are permanently contained within a field-replaceable\n     unit, the value 'false' should be returned for this\n     node.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf mfg-date {\n  type yang:date-and-time;\n  status deprecated;\n  description\n    \"The date of manufacturing of the managed component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf-list uri {\n  type inet:uri;\n  status deprecated;\n  description\n    \"This node contains identification information about the\n     component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalUris\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "leaf uuid {\n  type yang:uuid;\n  status deprecated;\n  description\n    \"A Universally Unique Identifier of the component.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entPhysicalUUID\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "container state {\n  if-feature hardware-state;\n  status deprecated;\n  description\n    \"State-related nodes\";\n  reference\n    \"RFC 4268: Entity State MIB\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf state-last-changed {\n  type yang:date-and-time;\n  status deprecated;\n  description\n    \"The date and time when the value of any of the\n     admin-state, oper-state, usage-state, alarm-state, or\n     standby-state changed for this component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     If there has been no change since the last\n     re-initialization of the local system, this node\n     contains the date and time of local system\n     initialization.  If there has been no change since the\n     component was added to the local system, this node\n     contains the date and time of the insertion.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateLastChanged\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf admin-state {\n  type hw:admin-state;\n  status deprecated;\n  description\n    \"The administrative state for this component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "This node refers to a component's administrative permission to service both other components within its containment hierarchy as well as other users of its services defined by means outside the scope of this module.",
      "zh-CHS": "此节点是指组件对其包含层次结构内的其他组件以及通过此模块范围外的方式定义的其服务的其他用户提供服务的管理权限。"
    },
    {
      "indent": 11,
      "text": "     Some components exhibit only a subset of the remaining\n     administrative state values.  Some components cannot be\n     locked; hence, this node exhibits only the 'unlocked'\n     state.  Other components cannot be shut down gracefully;\n     hence, this node does not exhibit the 'shutting-down'\n     state.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateAdmin\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf oper-state {\n  type hw:oper-state;\n  status deprecated;\n  description\n    \"The operational state for this component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "Note that this node does not follow the administrative state. An administrative state of 'down' does not predict an operational state of 'disabled'.",
      "zh-CHS": "请注意，此节点不遵循管理状态。“关闭”的管理状态不能预测“禁用”的操作状态。"
    },
    {
      "indent": 13,
      "text": "   Note that some implementations may not be able to\n   accurately report oper-state while the admin-state node\n   has a value other than 'unlocked'.  In these cases, this\n   node MUST have a value of 'unknown'.\";\nreference\n  \"RFC 4268: Entity State MIB - entStateOper\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "}",
      "zh-CHS": "}"
    },
    {
      "indent": 11,
      "text": "leaf usage-state {\n  type hw:usage-state;\n  status deprecated;\n  description\n    \"The usage state for this component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 16,
      "text": "This node refers to a component's ability to service more components in a containment hierarchy.",
      "zh-CHS": "此节点表示组件为包含层次结构中的更多组件提供服务的能力。"
    },
    {
      "indent": 11,
      "text": "     Some components will exhibit only a subset of the usage\n     state values.  Components that are unable to ever\n     service any components within a containment hierarchy\n     will always have a usage state of 'busy'.  In some\n     cases, a component will be able to support only one\n     other component within its containment hierarchy and\n     will therefore only exhibit values of 'idle' and\n     'busy'.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateUsage\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf alarm-state {\n  type hw:alarm-state;\n  status deprecated;\n  description\n    \"The alarm state for this component.  It does not\n     include the alarms raised on child components within its\n     containment hierarchy.\";\n  reference\n    \"RFC 4268: Entity State MIB - entStateAlarm\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf standby-state {\n  type hw:standby-state;\n  status deprecated;\n  description\n    \"The standby state for this component.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "       Some components will exhibit only a subset of the\n       remaining standby state values.  If this component\n       cannot operate in a standby role, the value of this node\n       will always be 'providing-service'.\";\n    reference\n      \"RFC 4268: Entity State MIB - entStateStandby\";\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 9,
      "text": "container sensor-data {\n  when 'derived-from-or-self(../class,\n                             \"ianahw:sensor\")' {\n    description\n      \"Sensor data nodes present for any component of type\n       'sensor'\";\n  }\n  if-feature hardware-sensor;\n  status deprecated;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "description\n  \"Sensor-related nodes.\";\nreference\n  \"RFC 3433: Entity Sensor Management Information Base\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf value {\n  type hw:sensor-value;\n  status deprecated;\n  description\n    \"The most recent measurement obtained by the server\n     for this sensor.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "     A client that periodically fetches this node should also\n     fetch the nodes 'value-type', 'value-scale', and\n     'value-precision', since they may change when the value\n     is changed.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorValue\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf value-type {\n  type hw:sensor-value-type;\n  status deprecated;\n  description\n    \"The type of data units associated with the\n     sensor value\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorType\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf value-scale {\n  type hw:sensor-value-scale;\n  status deprecated;\n  description\n    \"The (power of 10) scaling factor associated\n     with the sensor value\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorScale\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf value-precision {\n  type hw:sensor-value-precision;\n  status deprecated;\n  description\n    \"The number of decimal places of precision\n     associated with the sensor value\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorPrecision\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf oper-status {\n  type hw:sensor-status;\n  status deprecated;\n  description\n    \"The operational status of the sensor.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorOperStatus\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf units-display {\n  type string;\n  status deprecated;\n  description\n    \"A textual description of the data units that should be\n     used in the display of the sensor value.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorUnitsDisplay\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf value-timestamp {\n  type yang:date-and-time;\n  status deprecated;\n  description\n    \"The time the status and/or value of this sensor was last\n     obtained by the server.\";\n  reference\n    \"RFC 3433: Entity Sensor Management Information Base -\n               entPhySensorValueTimeStamp\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 11,
      "text": "leaf value-update-rate {\n  type uint32;\n  units \"milliseconds\";\n  status deprecated;\n  description\n    \"An indication of the frequency that the server updates\n     the associated 'value' node, represented in\n     milliseconds.  The value zero indicates:",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 17,
      "text": "- the sensor value is updated on demand (e.g., when polled by the server for a get-request),",
      "zh-CHS": "- 传感器值按需更新（例如，当服务器轮询get请求时），"
    },
    {
      "indent": 17,
      "text": "- the sensor value is updated when the sensor value changes (event-driven), or",
      "zh-CHS": "- 当传感器值发生变化时（事件驱动），传感器值会更新，或"
    },
    {
      "indent": 5,
      "text": "            - the server does not know the update rate.\";\n        reference\n          \"RFC 3433: Entity Sensor Management Information Base -\n                     entPhySensorValueUpdateRate\";\n      }\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "/*\n * Notifications\n */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "notification hardware-state-change {\n  status deprecated;\n  description\n    \"A hardware-state-change notification is generated when the\n     value of /hardware/last-change changes in the operational\n     state.\";\n  reference\n    \"RFC 6933: Entity MIB (Version 4) - entConfigChange\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "notification hardware-state-oper-enabled {\n  if-feature hardware-state;\n  status deprecated;\n  description\n    \"A hardware-state-oper-enabled notification signifies that a\n     component has transitioned into the 'enabled' state.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "leaf name {\n  type leafref {\n    path \"/hardware/component/name\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "    }\n    status deprecated;\n    description\n      \"The name of the component that has transitioned into the\n       'enabled' state.\";\n  }\n  leaf admin-state {\n    type leafref {\n      path \"/hardware/component/state/admin-state\";\n    }\n    status deprecated;\n    description\n      \"The administrative state for the component.\";\n  }\n  leaf alarm-state {\n    type leafref {\n      path \"/hardware/component/state/alarm-state\";\n    }\n    status deprecated;\n    description\n      \"The alarm state for the component.\";\n  }\n  reference\n    \"RFC 4268: Entity State MIB - entStateOperEnabled\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "notification hardware-state-oper-disabled {\n  if-feature hardware-state;\n  status deprecated;\n  description\n    \"A hardware-state-oper-disabled notification signifies that a\n     component has transitioned into the 'disabled' state.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "leaf name {\n  type leafref {\n    path \"/hardware/component/name\";\n  }\n  status deprecated;\n  description\n    \"The name of the component that has transitioned into the\n     'disabled' state.\";\n}\nleaf admin-state {\n  type leafref {\n    path \"/hardware/component/state/admin-state\";\n  }\n  status deprecated;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "    description\n      \"The administrative state for the component.\";\n  }\n  leaf alarm-state {\n    type leafref {\n      path \"/hardware/component/state/alarm-state\";\n    }\n    status deprecated;\n    description\n      \"The alarm state for the component.\";\n  }\n  reference\n    \"RFC 4268: Entity State MIB - entStateOperDisabled\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "}",
      "zh-CHS": "}"
    },
    {
      "indent": 3,
      "text": "<CODE ENDS>",
      "zh-CHS": "<代码结束>"
    },
    {
      "indent": 0,
      "text": "Acknowledgments",
      "zh-CHS": "致谢"
    },
    {
      "indent": 3,
      "text": "The authors wish to thank the following individuals, who all provided helpful comments on various draft versions of this document: Bart Bogaert, Timothy Carey, William Lupton, and Juergen Schoenwaelder.",
      "zh-CHS": "作者希望感谢以下个人，他们都对本文件的各种草案版本提供了有益的意见：巴特·博格尔特、蒂莫西·凯里、威廉·卢普顿和尤尔根·斯肯瓦埃尔德。"
    },
    {
      "indent": 0,
      "text": "Authors' Addresses",
      "zh-CHS": "作者地址"
    },
    {
      "indent": 3,
      "text": "Andy Bierman YumaWorks",
      "zh-CHS": "安迪·比尔曼·尤马沃斯"
    },
    {
      "indent": 3,
      "text": "Email: andy@yumaworks.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Martin Bjorklund Tail-f Systems",
      "zh-CHS": "Martin Bjorklund Tail-f系统"
    },
    {
      "indent": 3,
      "text": "Email: mbj@tail-f.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Jie Dong Huawei Technologies",
      "zh-CHS": "杰东华为技术有限公司"
    },
    {
      "indent": 3,
      "text": "Email: jie.dong@huawei.com",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Dan Romascanu",
      "zh-CHS": "丹·罗马斯卡努"
    },
    {
      "indent": 3,
      "text": "Email: dromasca@gmail.com",
      "raw": true,
      "zh-CHS": " "
    }
  ]
}