{
  "title": {
    "text": "RFC 9001: Using TLS to Secure QUIC",
    "zh-CHS": "RFC 9001"
  },
  "number": 9001,
  "created_at": "2021-10-28 02:49:51.596589+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "+-------------+------------+--------------+---------+\nContent   |             |            |  Application |         |\nLayer     |  Handshake  |   Alerts   |     Data     |   ...   |\n          |             |            |              |         |\n          +-------------+------------+--------------+---------+\nRecord    |                                                   |\nLayer     |                      Records                      |\n          |                                                   |\n          +---------------------------------------------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "Client Server",
      "zh-CHS": "客户端服务器"
    },
    {
      "indent": 3,
      "text": " ClientHello\n(0-RTT Application Data)  -------->\n                                               ServerHello\n                                      {EncryptedExtensions}\n                                                 {Finished}\n                          <--------      [Application Data]\n{Finished}                -------->",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "[Application Data]        <------->      [Application Data]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "() Indicates messages protected by Early Data (0-RTT) Keys {} Indicates messages protected using Handshake Keys [] Indicates messages protected using Application Data (1-RTT) Keys",
      "zh-CHS": "（）表示受早期数据（0-RTT）键保护的消息{}表示使用握手键保护的消息[]表示使用应用程序数据（1-RTT）键保护的消息"
    },
    {
      "indent": 0,
      "text": "+--------------+--------------+ +-------------+\n|     TLS      |     TLS      | |    QUIC     |\n|  Handshake   |    Alerts    | | Applications|\n|              |              | |  (h3, etc.) |\n+--------------+--------------+-+-------------+\n|                                             |\n|                QUIC Transport               |\n|   (streams, reliability, congestion, etc.)  |\n|                                             |\n+---------------------------------------------+\n|                                             |\n|            QUIC Packet Protection           |\n|                                             |\n+---------------------------------------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "+------------+                               +------------+\n|            |<---- Handshake Messages ----->|            |\n|            |<- Validate 0-RTT Parameters ->|            |\n|            |<--------- 0-RTT Keys ---------|            |\n|    QUIC    |<------- Handshake Keys -------|    TLS     |\n|            |<--------- 1-RTT Keys ---------|            |\n|            |<------- Handshake Done -------|            |\n+------------+                               +------------+\n |         ^\n | Protect | Protected\n v         | Packet\n+------------+\n|   QUIC     |\n|  Packet    |\n| Protection |\n+------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Client                                                    Server\n======                                                    ======",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Get Handshake\n                     Initial ------------->\nInstall tx 0-RTT keys\n                     0-RTT - - - - - - - ->",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 21,
      "text": "                         Handshake Received\n                              Get Handshake\n<------------- Initial\n                      Install rx 0-RTT keys\n                     Install Handshake keys\n                              Get Handshake\n<----------- Handshake\n                      Install tx 1-RTT keys\n<- - - - - - - - 1-RTT",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Handshake Received (Initial)\nInstall Handshake keys\nHandshake Received (Handshake)\nGet Handshake\n                     Handshake ----------->\nHandshake Complete\nInstall 1-RTT keys\n                     1-RTT - - - - - - - ->",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "                                              Handshake Received\n                                              Handshake Complete\n                                             Handshake Confirmed\n                                           Install rx 1-RTT keys\n                     <--------------- 1-RTT\n                           (HANDSHAKE_DONE)\nHandshake Confirmed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "initial_salt = 0x38762cf7f55934b34d179ae6a4c80cadccbb7f0a initial_secret = HKDF-Extract(initial_salt, client_dst_connection_id)",
      "zh-CHS": "初始密码=0x38762CF7F55934B34D179AE6A4C80CADCBB7F0A初始密码=HKDF摘录（初始密码，客户端dst连接id）"
    },
    {
      "indent": 0,
      "text": "client_initial_secret = HKDF-Expand-Label(initial_secret, \"client in\", \"\", Hash.length) server_initial_secret = HKDF-Expand-Label(initial_secret, \"server in\", \"\", Hash.length)",
      "zh-CHS": "client\\u initial\\u secret=HKDF扩展标签（initial\\u secret，“client in”，“”，Hash.length）server\\u initial\\u secret=HKDF扩展标签（initial\\u secret，“server in”，“”，Hash.length）"
    },
    {
      "indent": 0,
      "text": "mask = header_protection(hp_key, sample)",
      "zh-CHS": "掩码=标题保护（hp\\U键，示例）"
    },
    {
      "indent": 0,
      "text": "pn_length = (packet[0] & 0x03) + 1\nif (packet[0] & 0x80) == 0x80:\n   # Long header: 4 bits masked\n   packet[0] ^= mask[0] & 0x0f\nelse:\n   # Short header: 5 bits masked\n   packet[0] ^= mask[0] & 0x1f",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "# pn_offset is the start of the Packet Number field.\npacket[pn_offset:pn_offset+pn_length] ^= mask[1:1+pn_length]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Initial Packet {\n  Header Form (1) = 1,\n  Fixed Bit (1) = 1,\n  Long Packet Type (2) = 0,\n  Reserved Bits (2),         # Protected\n  Packet Number Length (2),  # Protected\n  Version (32),\n  DCID Len (8),\n  Destination Connection ID (0..160),\n  SCID Len (8),\n  Source Connection ID (0..160),\n  Token Length (i),\n  Token (..),\n  Length (i),\n  Packet Number (8..32),     # Protected\n  Protected Payload (0..24), # Skipped Part\n  Protected Payload (128),   # Sampled Part\n  Protected Payload (..)     # Remainder\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "1-RTT Packet {\n  Header Form (1) = 0,\n  Fixed Bit (1) = 1,\n  Spin Bit (1),\n  Reserved Bits (2),         # Protected\n  Key Phase (1),             # Protected\n  Packet Number Length (2),  # Protected\n  Destination Connection ID (0..160),\n  Packet Number (8..32),     # Protected\n  Protected Payload (0..24), # Skipped Part\n  Protected Payload (128),   # Sampled Part\n  Protected Payload (..),    # Remainder\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "# pn_offset is the start of the Packet Number field. sample_offset = pn_offset + 4",
      "zh-CHS": "#pn_offset是数据包编号字段的开始。样本偏移量=pn偏移量+4"
    },
    {
      "indent": 0,
      "text": "sample = packet[sample_offset..sample_offset+sample_length]",
      "zh-CHS": "样本=数据包[样本偏移量..样本偏移量+样本长度]"
    },
    {
      "indent": 0,
      "text": "pn_offset = 1 + len(connection_id)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "pn_offset = 7 + len(destination_connection_id) +\n                len(source_connection_id) +\n                len(payload_length)\nif packet_type == Initial:\n    pn_offset += len(token_length) +\n                 len(token)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "header_protection(hp_key, sample):\n  mask = AES-ECB(hp_key, sample)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "header_protection(hp_key, sample):\n  counter = sample[0..3]\n  nonce = sample[4..15]\n  mask = ChaCha20(hp_key, counter, nonce, {0,0,0,0,0})",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "Retry Pseudo-Packet {\n  ODCID Length (8),\n  Original Destination Connection ID (0..160),\n  Header Form (1) = 1,\n  Fixed Bit (1) = 1,\n  Long Packet Type (2) = 3,\n  Unused (4),\n  Version (32),\n  DCID Len (8),\n  Destination Connection ID (0..160),\n  SCID Len (8),\n  Source Connection ID (0..160),\n  Retry Token (..),\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "Initiating Peer Responding Peer",
      "zh-CHS": "启动对等响应对等"
    },
    {
      "indent": 0,
      "text": "@M [0] QUIC Packets",
      "zh-CHS": "@M[0]QUIC包"
    },
    {
      "indent": 0,
      "text": "... Update to @N\n@N [1] QUIC Packets\n                      -------->\n                                         Update to @N ...\n                                      QUIC Packets [1] @N\n                      <--------\n                                      QUIC Packets [1] @N\n                                    containing ACK\n                      <--------\n... Key Update Permitted",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "@N [1] QUIC Packets\n         containing ACK for @N packets\n                      -------->\n                                 Key Update Permitted ...",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "secret_<n+1> = HKDF-Expand-Label(secret_<n>, \"quic ku\",\n                                 \"\", Hash.length)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "enum {\n   quic_transport_parameters(0x39), (65535)\n} ExtensionType;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "protected_field = field XOR PRF(hp_key, sample)",
      "zh-CHS": "受保护的\\u字段=字段异或PRF（hp\\u键，示例）"
    },
    {
      "indent": 0,
      "text": "initial_secret = HKDF-Extract(initial_salt, cid)\n    = 7db5df06e7a69e432496adedb0085192\n      3595221596ae2ae9fb8115c1e9ed0a44",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "client_initial_secret\n    = HKDF-Expand-Label(initial_secret, \"client in\", \"\", 32)\n    = c00cf151ca5be075ed0ebfb5c80323c4\n      2d6b7db67881289af4008f1f6c357aea",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "key = HKDF-Expand-Label(client_initial_secret, \"quic key\", \"\", 16)\n    = 1f369613dd76d5467730efcbe3b1a22d",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "iv = HKDF-Expand-Label(client_initial_secret, \"quic iv\", \"\", 12) = fa044b2f42a3fd3b46fb255c",
      "zh-CHS": "iv=HKDF扩展标签（客户初始密码，“quic iv”，12）=FA044B2AF42A3FD3B46FB255C"
    },
    {
      "indent": 0,
      "text": "hp  = HKDF-Expand-Label(client_initial_secret, \"quic hp\", \"\", 16)\n    = 9f50449e04a0e810283a1e9933adedd2",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "server_initial_secret\n    = HKDF-Expand-Label(initial_secret, \"server in\", \"\", 32)\n    = 3c199828fd139efd216c155ad844cc81\n      fb82fa8d7446fa7d78be803acdda951b",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "key = HKDF-Expand-Label(server_initial_secret, \"quic key\", \"\", 16)\n    = cf3a5331653c364c88f0f379b6067e37",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "iv = HKDF-Expand-Label(server_initial_secret, \"quic iv\", \"\", 12) = 0ac1493ca1905853b0bba03e",
      "zh-CHS": "iv=HKDF扩展标签（服务器初始密码，“quic iv”，12）=0ac1493ca1905853b0bba03e"
    },
    {
      "indent": 0,
      "text": "hp  = HKDF-Expand-Label(server_initial_secret, \"quic hp\", \"\", 16)\n    = c206b8d9b9f0f37644430b490eeaa314",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "060040f1010000ed0303ebf8fa56f129 39b9584a3896472ec40bb863cfd3e868 04fe3a47f06a2b69484c000004130113 02010000c000000010000e00000b6578 616d706c652e636f6dff01000100000a 00080006001d00170018001000070005 04616c706e0005000501000000000033 00260024001d00209370b2c9caa47fba baf4559fedba753de171fa71f50f1ce1 5d43e994ec74d748002b000302030400 0d0010000e0403050306030203080408 050806002d00020101001c0002400100 3900320408ffffffffffffffff050480 00ffff07048000ffff08011001048000 75300901100f088394c8f03e51570806 048000ffff",
      "zh-CHS": "060040f1010000ed0303ebf8fa56f129 39b9584a3896472ec40bb863cfd3e868 04FE3A47F06A2B69484C00004130113 02010000c000000010000e00000b6578 616D706C652E636F6DFF0100000000A 00080006001D00170018001000005 04616C706E0005000501000000033 00026001D0209370B2C9CAAFBA BAF4559FE753DE171FA71F50F12BCE1 5D43E994EC748000304000D0010000E040305030203080408 05080600600200020101001C0002400100 3900320408FFFFFF0504800FFFF0804800FF08011001048000 75300901100f088394c8f03e51570806 048000ffff"
    },
    {
      "indent": 0,
      "text": "c300000001088394c8f03e5157080000449e00000002",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "sample = d1b1c98dd7689fb8ec11d242b123dc9b",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "mask = AES-ECB(hp, sample)[0..4] = 437b9aec36",
      "zh-CHS": "掩码=AES-ECB（hp，样本）[0..4]=437B9EC36"
    },
    {
      "indent": 0,
      "text": "header[0] ^= mask[0] & 0x0f\n     = c0\nheader[18..21] ^= mask[1..4]\n     = 7b9aec34\nheader = c000000001088394c8f03e5157080000449e7b9aec34",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "c000000001088394c8f03e5157080000 449e7b9aec34d1b1c98dd7689fb8ec11\nd242b123dc9bd8bab936b47d92ec356c 0bab7df5976d27cd449f63300099f399\n1c260ec4c60d17b31f8429157bb35a12 82a643a8d2262cad67500cadb8e7378c\n8eb7539ec4d4905fed1bee1fc8aafba1 7c750e2c7ace01e6005f80fcb7df6212\n30c83711b39343fa028cea7f7fb5ff89 eac2308249a02252155e2347b63d58c5\n457afd84d05dfffdb20392844ae81215 4682e9cf012f9021a6f0be17ddd0c208\n4dce25ff9b06cde535d0f920a2db1bf3 62c23e596d11a4f5a6cf3948838a3aec\n4e15daf8500a6ef69ec4e3feb6b1d98e 610ac8b7ec3faf6ad760b7bad1db4ba3\n485e8a94dc250ae3fdb41ed15fb6a8e5 eba0fc3dd60bc8e30c5c4287e53805db\n059ae0648db2f64264ed5e39be2e20d8 2df566da8dd5998ccabdae053060ae6c\n7b4378e846d29f37ed7b4ea9ec5d82e7 961b7f25a9323851f681d582363aa5f8\n9937f5a67258bf63ad6f1a0b1d96dbd4 faddfcefc5266ba6611722395c906556\nbe52afe3f565636ad1b17d508b73d874 3eeb524be22b3dcbc2c7468d54119c74\n68449a13d8e3b95811a198f3491de3e7 fe942b330407abf82a4ed7c1b311663a\nc69890f4157015853d91e923037c227a 33cdd5ec281ca3f79c44546b9d90ca00\nf064c99e3dd97911d39fe9c5d0b23a22 9a234cb36186c4819e8b9c5927726632\n291d6a418211cc2962e20fe47feb3edf 330f2c603a9d48c0fcb5699dbfe58964\n25c5bac4aee82e57a85aaf4e2513e4f0 5796b07ba2ee47d80506f8d2c25e50fd\n14de71e6c418559302f939b0e1abd576 f279c4b2e0feb85c1f28ff18f58891ff\nef132eef2fa09346aee33c28eb130ff2 8f5b766953334113211996d20011a198\ne3fc433f9f2541010ae17c1bf202580f 6047472fb36857fe843b19f5984009dd\nc324044e847a4f4a0ab34f719595de37 252d6235365e9b84392b061085349d73\n203a4a13e96f5432ec0fd4a1ee65accd d5e3904df54c1da510b0ff20dcc0c77f\ncb2c0e0eb605cb0504db87632cf3d8b4 dae6e705769d1de354270123cb11450e\nfc60ac47683d7b8d0f811365565fd98c 4c8eb936bcab8d069fc33bd801b03ade\na2e1fbc5aa463d08ca19896d2bf59a07 1b851e6c239052172f296bfb5e724047\n90a2181014f3b94a4e97d117b4381303 68cc39dbb2d198065ae3986547926cd2\n162f40a29f0c3c8745c0f50fba3852e5 66d44575c29d39a03f0cda721984b6f4\n40591f355e12d439ff150aab7613499d bd49adabc8676eef023b15b65bfc5ca0\n6948109f23f350db82123535eb8a7433 bdabcb909271a6ecbcb58b936a88cd4e\n8f2e6ff5800175f113253d8fa9ca8885 c2f552e657dc603f252e1a8e308f76f0\nbe79e2fb8f5d5fbbe2e30ecadd220723 c8c0aea8078cdfcb3868263ff8f09400\n54da48781893a7e49ad5aff4af300cd8 04a6b6279ab3ff3afb64491c85194aab\n760d58a606654f9f4400e8b38591356f bf6425aca26dc85244259ff2b19c41b9\nf96f3ca9ec1dde434da7d2d392b905dd f3d1f9af93d1af5950bd493f5aa731b4\n056df31bd267b6b90a079831aaf579be 0a39013137aac6d404f518cfd4684064\n7e78bfe706ca4cf5e9c5453e9f7cfd2b 8b4c8d169a44e55c88d4a9a7f9474241\ne221af44860018ab0856972e194cd934",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "02000000000600405a020000560303ee fce7f7b37ba1d1632e96677825ddf739 88cfc79825df566dc5430b9a045a1200 130100002e00330024001d00209d3c94 0d89690b84d08a60993c144eca684d10 81287c834d5311bcf32bb9da1a002b00 020304",
      "zh-CHS": "0200000000006000405A02000056003EE fce7f7b37ba1d1632e96677825ddf739 88cfc79825df566dc5430b9a045a1200 130100002E00330024001D000209D3C94 0D89690B84D08A60993C144ECA684D1287C834D5311BCF32BB9DA1A002B004"
    },
    {
      "indent": 0,
      "text": "c1000000010008f067a5502a4262b50040750001",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "sample = 2cd0991cd25b0aac406a5816b6394100\nmask   = 2ec0d8356a\nheader = cf000000010008f067a5502a4262b5004075c0d9",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "cf000000010008f067a5502a4262b500 4075c0d95a482cd0991cd25b0aac406a 5816b6394100f37a1c69797554780bb3 8cc5a99f5ede4cf73c3ec2493a1839b3 dbcba3f6ea46c5b7684df3548e7ddeb9 c3bf9c73cc3f3bded74b562bfb19fb84 022f8ef4cdd93795d77d06edbb7aaf2f 58891850abbdca3d20398c276456cbc4 2158407dd074ee",
      "zh-CHS": "cf000000010008f067a5502a4262b500 4075c0d95a482cd0991cd25b0aac406a 5816B6394100F37A1C697554780BB3 8CC5A99F5EDE4CF73C2493A1839B3 dbcba3f6ea46c5b7684df3548e7ddeb9 C3BF9C73CC3BDED74B56BFB19FB84 022F8EF4CDD93795D77D06ED7AAF2F 58891850ABDCA30398C276456CBEE21707407DDE"
    },
    {
      "indent": 0,
      "text": "ff000000010008f067a5502a4262b574 6f6b656e04a265ba2eff4d829058fb3f 0f2496ba",
      "zh-CHS": "ff000000010008f067a5502a4262b574 6f6b656e04a265ba2eff4d829058fb3f 0f2496ba"
    },
    {
      "indent": 0,
      "text": "secret\n    = 9ac312a7f877468ebe69422748ad00a1\n      5443f18203a07d6060f688f30f21632b",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "key = HKDF-Expand-Label(secret, \"quic key\", \"\", 32)\n    = c6d98ff3441c3fe1b2182094f69caa2e\n      d4b716b65488960a7a984979fb23e1c8",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "iv = HKDF-Expand-Label(secret, \"quic iv\", \"\", 12) = e0459b3474bdd0e44a41c144",
      "zh-CHS": "iv=HKDF扩展标签（机密，“quic iv”，“12）=e0459b3474bdd0e44a41c144"
    },
    {
      "indent": 0,
      "text": "hp  = HKDF-Expand-Label(secret, \"quic hp\", \"\", 32)\n    = 25a282b9e82f06f21f488917a4fc8f1b\n      73573685608597d0efcb076b0ab7a7a4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "ku  = HKDF-Expand-Label(secret, \"quic ku\", \"\", 32)\n    = 1223504755036d556342ee9361d25342\n      1a826c9ecdf3c7148684b36b714881f9",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "pn                 = 654360564 (decimal)\nnonce              = e0459b3474bdd0e46d417eb0\nunprotected header = 4200bff4\npayload plaintext  = 01\npayload ciphertext = 655e5cd55c41f69080575d7999c25a5bfb",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "sample = 5e5cd55c41f69080575d7999c25a5bfb mask = aefefe7d03 header = 4cfe4189",
      "zh-CHS": "样本=5e5cd55c41f69080575d7999c25a5bfb掩码=AEFE7D03头=4cfe4189"
    },
    {
      "indent": 0,
      "text": "packet = 4cfe4189655e5cd55c41f69080575d7999c25a5bfb",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "2 * (q * l)^2 / 2^n",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "q <= 2^35 / l",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "(1 / 2^(8 * n)) + ((2 * v) / 2^(2 * n))\n        + ((2 * o * v) / 2^(k + n)) + (n * (v + (v * l)) / 2^k)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "v <= 2^64 / l",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "v <= 2^192 / l",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "(2l * q)^2 / 2^n",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "v / 2^t + (2l * (v + q))^2 / 2^n",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "v + q <= 2^34.5 / l",
      "raw": true,
      "zh-CHS": " "
    }
  ]
}