{
  "title": {
    "text": "RFC 9020: YANG Data Model for Segment Routing",
    "zh-CHS": "RFC 9020"
  },
  "number": 9020,
  "created_at": "2021-10-28 02:51:14.928344+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "module: ietf-segment-routing\n  augment /rt:routing:\n    +--rw segment-routing",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "module: ietf-segment-routing-mpls\n  augment /rt:routing/sr:segment-routing:\n    +--rw sr-mpls\n       +--rw bindings\n       |  +--rw mapping-server {mapping-server}?\n       |  |  +--rw policy* [name]\n       |  |     +--rw name       string\n       |  |     +--rw entries\n       |  |        +--rw mapping-entry* [prefix algorithm]\n       |  |           +--rw prefix        inet:ip-prefix\n       |  |           +--rw value-type?   enumeration\n       |  |           +--rw start-sid     uint32\n       |  |           +--rw range?        uint32\n       |  |           +--rw algorithm     identityref\n       |  +--rw connected-prefix-sid-map\n       |  |  +--rw connected-prefix-sid* [prefix algorithm]\n       |  |     +--rw prefix               inet:ip-prefix\n       |  |     +--rw value-type?          enumeration\n       |  |     +--rw start-sid            uint32\n       |  |     +--rw range?               uint32\n       |  |     +--rw algorithm            identityref\n       |  |     +--rw last-hop-behavior?   enumeration\n       |  +--rw local-prefix-sid\n       |     +--rw local-prefix-sid* [prefix algorithm]\n       |        +--rw prefix        inet:ip-prefix\n       |        +--rw value-type?   enumeration\n       |        +--rw start-sid     uint32\n       |        +--rw range?        uint32\n       |        +--rw algorithm     identityref\n       +--rw srgb\n       |  +--rw srgb* [lower-bound upper-bound]\n       |     +--rw lower-bound    uint32\n       |     +--rw upper-bound    uint32\n       +--rw srlb\n       |  +--rw srlb* [lower-bound upper-bound]\n       |     +--rw lower-bound    uint32\n       |     +--rw upper-bound    uint32\n       +--ro label-blocks* []\n       |  +--ro lower-bound?   uint32\n       |  +--ro upper-bound?   uint32\n       |  +--ro size?          uint32\n       |  +--ro free?          uint32\n       |  +--ro used?          uint32\n       |  +--ro scope?         enumeration\n       +--ro sid-db\n          +--ro sid* [target sid source source-protocol binding-type]\n             +--ro target             string\n             +--ro sid                uint32\n             +--ro algorithm?         uint8\n             +--ro source             inet:ip-address\n             +--ro used?              boolean\n             +--ro source-protocol    -> /rt:routing\n                                         /control-plane-protocols\n                                         /control-plane-protocol/name\n             +--ro binding-type       enumeration\n             +--ro scope?             enumeration",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "notifications:\n  +---n segment-routing-srgb-collision\n  |  +--ro srgb-collisions* []\n  |     +--ro lower-bound?          uint32\n  |     +--ro upper-bound?          uint32\n  |     +--ro routing-protocol?     -> /rt:routing\n  |                                    /control-plane-protocols\n  |                                    /control-plane-protocol/name\n  |     +--ro originating-rtr-id?   router-or-system-id\n  +---n segment-routing-global-sid-collision\n  |  +--ro received-target?       string\n  |  +--ro new-sid-rtr-id?        router-or-system-id\n  |  +--ro original-target?       string\n  |  +--ro original-sid-rtr-id?   router-or-system-id\n  |  +--ro index?                 uint32\n  |  +--ro routing-protocol?      -> /rt:routing\n  |                                  /control-plane-protocols\n  |                                  /control-plane-protocol/name\n  +---n segment-routing-index-out-of-range\n     +--ro received-target?    string\n     +--ro received-index?     uint32\n     +--ro routing-protocol?   -> /rt:routing\n                                  /control-plane-protocols\n                                  /control-plane-protocol/name",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "        +-------+                 +------+\n        |       | ------- L1 ---- |      |\n        |   R1  | ------- L2 ---- |  R2  |\n        |       | ------- L3 ---- |      |\n        |       | ------- L4 ---- |      |\n        +-------+                 +------+\n<CODE BEGINS> file \"ietf-segment-routing@2021-05-26.yang\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "module ietf-segment-routing {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-segment-routing\";\n  prefix sr;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "import ietf-routing {\n  prefix rt;\n  reference \"RFC 8349: A YANG Data Model for Routing\n                       Management (NMDA Version)\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "organization\n  \"IETF SPRING - SPRING Working Group\";\ncontact\n  \"WG Web:   <https://datatracker.ietf.org/wg/spring/>\n   WG List:  <mailto:spring@ietf.org>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "Author:    Stephane Litkowski\n          <mailto:slitkows.ietf@gmail.com>\nAuthor:    Yingzhen Qu\n          <mailto:yingzhen.qu@futurewei.com>\nAuthor:    Acee Lindem\n          <mailto:acee@cisco.com>\nAuthor:    Pushpasis Sarkar\n          <mailto:pushpasis.ietf@gmail.com>\nAuthor:    Jeff Tantsura\n          <jefftant.ietf@gmail.com>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": " \"; description \"This YANG module defines a generic framework for Segment Routing (SR). It is to be augmented by models for different SR data planes.",
      "zh-CHS": "“说明”此模块定义了段路由（SR）的通用框架。它将通过不同SR数据平面的模型进行扩充。"
    },
    {
      "indent": 5,
      "text": "This YANG module conforms to the Network Management Datastore Architecture (NMDA), as described in RFC 8242.",
      "zh-CHS": "该模块符合RFC 8242中所述的网络管理数据存储体系结构（NMDA）。"
    },
    {
      "indent": 5,
      "text": "The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document are to be interpreted as described in BCP 14 (RFC 2119) (RFC 8174) when, and only when, they appear in all capitals, as shown here.",
      "zh-CHS": "本文件中的关键词“必须”、“不得”、“必需”、“应”、“不应”、“建议”、“不建议”、“可能”和“可选”在所有大写字母出现时（如图所示）应按照BCP 14（RFC 2119）（RFC 8174）所述进行解释。"
    },
    {
      "indent": 5,
      "text": "Copyright (c) 2021 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "zh-CHS": "版权所有（c）2021 IETF信托基金和被确定为代码作者的人员。版权所有。"
    },
    {
      "indent": 5,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info).",
      "zh-CHS": "根据IETF信托有关IETF文件的法律规定第4.c节规定的简化BSD许可证中包含的许可条款，允许以源代码和二进制格式重新分发和使用，无论是否修改(https://trustee.ietf.org/license-info)."
    },
    {
      "indent": 5,
      "text": "This version of this YANG module is part of RFC 9020;\nsee the RFC itself for full legal notices.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "reference \"RFC 9020: YANG Data Model for Segment Routing.\";",
      "zh-CHS": "参考“RFC 9020：分段布线的YANG数据模型”；"
    },
    {
      "indent": 2,
      "text": "revision 2021-05-26 {\n  description\n    \"Initial version\";\n  reference\n    \"RFC 9020: YANG Data Model for Segment Routing.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "  augment \"/rt:routing\" {\n    description\n      \"This module augments the routing data model (RFC 8349)\n       with Segment Routing (SR).\";\n    container segment-routing {\n      description\n        \"Segment Routing configuration.  This container\n         is to be augmented by models for different SR\n         data planes.\";\n      reference\n        \"RFC 8402: Segment Routing Architecture.\";\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "<CODE ENDS><CODE BEGINS> file \"ietf-segment-routing-common@2021-05-26.yang\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "module ietf-segment-routing-common {\n  yang-version 1.1;\n  namespace\n   \"urn:ietf:params:xml:ns:yang:ietf-segment-routing-common\";\n  prefix sr-cmn;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "import ietf-inet-types {\n  prefix inet;\n  reference\n    \"RFC 6991: Common YANG Data Types\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "organization\n  \"IETF SPRING - SPRING Working Group\";\ncontact\n  \"WG Web:   <https://datatracker.ietf.org/wg/spring/>\n   WG List:  <mailto:spring@ietf.org>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "Author:    Stephane Litkowski\n          <mailto:slitkows.ietf@gmail.com>\nAuthor:    Yingzhen Qu\n          <mailto:yingzhen.qu@futurewei.com>\nAuthor:    Acee Lindem\n          <mailto:acee@cisco.com>\nAuthor:    Pushpasis Sarkar\n          <mailto:pushpasis.ietf@gmail.com>\nAuthor:    Jeff Tantsura\n          <jefftant.ietf@gmail.com>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": " \"; description \"This YANG module defines a collection of generic types and groupings for Segment Routing (SR), as described in RFC 8402.",
      "zh-CHS": "“description”此模块定义了段路由（SR）的泛型类型和分组集合，如RFC 8402中所述。"
    },
    {
      "indent": 5,
      "text": "This YANG module conforms to the Network Management Datastore Architecture (NMDA), as described in RFC 8242.",
      "zh-CHS": "该模块符合RFC 8242中所述的网络管理数据存储体系结构（NMDA）。"
    },
    {
      "indent": 5,
      "text": "The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document are to be interpreted as described in BCP 14 (RFC 2119) (RFC 8174) when, and only when, they appear in all capitals, as shown here.",
      "zh-CHS": "本文件中的关键词“必须”、“不得”、“必需”、“应”、“不应”、“建议”、“不建议”、“可能”和“可选”在所有大写字母出现时（如图所示）应按照BCP 14（RFC 2119）（RFC 8174）所述进行解释。"
    },
    {
      "indent": 5,
      "text": "Copyright (c) 2021 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "zh-CHS": "版权所有（c）2021 IETF信托基金和被确定为代码作者的人员。版权所有。"
    },
    {
      "indent": 5,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info).",
      "zh-CHS": "根据IETF信托有关IETF文件的法律规定第4.c节规定的简化BSD许可证中包含的许可条款，允许以源代码和二进制格式重新分发和使用，无论是否修改(https://trustee.ietf.org/license-info)."
    },
    {
      "indent": 2,
      "text": "   This version of this YANG module is part of RFC 9020;\n   see the RFC itself for full legal notices.\";\nreference\n  \"RFC 9020: YANG Data Model for Segment Routing\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "revision 2021-05-26 {\n  description\n    \"Initial version\";\n  reference\n    \"RFC 9020: YANG Data Model for Segment Routing\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "feature sid-last-hop-behavior {\n  description\n    \"Configurable last-hop behavior.\";\n  reference\n    \"RFC 8660: Segment Routing with the MPLS Data Plane\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity prefix-sid-algorithm {\n  description\n    \"Base identity for prefix-sid algorithm.\";\n  reference\n    \"RFC 8402: Segment Routing Architecture\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity prefix-sid-algorithm-shortest-path {\n  base prefix-sid-algorithm;\n  description\n    \"Shortest Path First (SPF) Prefix-SID algorithm.  This\n     is the default algorithm.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity prefix-sid-algorithm-strict-spf {\n  base prefix-sid-algorithm;\n  description\n    \"This algorithm mandates that the packet is forwarded\n     according to the ECMP-aware SPF algorithm.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping srlr {\n  description\n    \"Grouping for SR Label Range configuration.\";\n  leaf lower-bound {\n    type uint32;\n    description\n      \"Lower value in the label range.\";\n  }\n  leaf upper-bound {\n    type uint32;\n    must '../lower-bound < ../upper-bound' {\n      error-message\n        \"The upper-bound must be greater than the lower-bound.\";\n      description\n        \"The value must be greater than lower-bound.\";\n    }\n    description\n      \"Upper value in the label range.\";\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping srgb {\n  description\n    \"Grouping for SR Global Label Range.\";\n  list srgb {\n    key \"lower-bound upper-bound\";\n    ordered-by user;\n    description\n      \"List of global blocks to be advertised.\";\n    uses srlr;\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping srlb {\n  description\n    \"Grouping for SR Local Block Range.\";\n  list srlb {\n    key \"lower-bound upper-bound\";\n    ordered-by user;\n    description\n      \"List of SRLBs.\";\n    uses srlr;\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping sid-value-type {\n  description\n    \"Defines how the SID value is expressed.\";\n  leaf value-type {\n    type enumeration {\n      enum index {\n        description\n          \"The value will be interpreted as an index.\";\n      }\n      enum absolute {\n        description\n          \"The value will become interpreted as an absolute\n           value.\";\n      }\n    }\n    default \"index\";\n    description\n      \"This leaf defines how the value must be interpreted.\";\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping prefix-sid {\n  description\n    \"This grouping defines configuration of a Prefix-SID.\";\n  leaf prefix {\n    type inet:ip-prefix;\n    description\n      \"Connected Prefix-SID.\";\n  }\n  uses prefix-sid-attributes;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping ipv4-sid {\n  description\n    \"Grouping for an IPv4 Prefix-SID.\";\n  leaf prefix {\n    type inet:ipv4-prefix;\n    description\n      \"Connected IPv4 Prefix-SID.\";\n  }\n  uses prefix-sid-attributes;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping ipv6-sid {\n  description\n    \"Grouping for an IPv6 Prefix-SID.\";\n  leaf prefix {\n    type inet:ipv6-prefix;\n    description\n      \"Connected IPv6 Prefix-SID.\";\n  }\n  uses prefix-sid-attributes;\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping last-hop-behavior {\n  description\n    \"Defines last-hop behavior.\";\n  leaf last-hop-behavior {\n    if-feature \"sid-last-hop-behavior\";\n    type enumeration {\n      enum explicit-null {\n        description\n          \"Use explicit-null for the SID.\";\n      }\n      enum no-php {\n        description\n          \"Do not use MPLS Penultimate Hop Popping (PHP)\n           for the SID.\";\n      }\n      enum php {\n        description\n          \"Use MPLS PHP for the SID.\";\n      }\n    }\n    description\n      \"Configure last-hop behavior.\";\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "  grouping prefix-sid-attributes {\n    description\n      \"Grouping for Segment Routing (SR) prefix attributes.\";\n    uses sid-value-type;\n    leaf start-sid {\n      type uint32;\n      mandatory true;\n      description\n        \"Value associated with prefix.  The value must be\n         interpreted in the context of sid-value-type.\";\n    }\n    leaf range {\n      type uint32;\n      description\n        \"Indicates how many SIDs can be allocated.\";\n    }\n    leaf algorithm {\n      type identityref {\n        base prefix-sid-algorithm;\n      }\n      description\n        \"Prefix-SID algorithm.\";\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "<CODE ENDS><CODE BEGINS> file \"ietf-segment-routing-mpls@2021-05-26.yang\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "module ietf-segment-routing-mpls {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-segment-routing-mpls\";\n  prefix sr-mpls;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "import ietf-inet-types {\n  prefix inet;\n  reference\n    \"RFC 6991: Common YANG Data Types\";\n}\nimport ietf-routing {\n  prefix rt;\n  reference\n    \"RFC 8349: A YANG Data Model for Routing\n               Management (NMDA Version)\";\n}\nimport ietf-routing-types {\n  prefix rt-types;\n  reference\n    \"RFC 8294: Common YANG Data Types for the\n               Routing Area\";\n}\nimport ietf-segment-routing {\n  prefix sr;\n  reference\n    \"RFC 9020: YANG Data Model for Segment Routing\";\n}\nimport ietf-segment-routing-common {\n  prefix sr-cmn;\n  reference\n    \"RFC 9020: YANG Data Model for Segment Routing\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "organization\n  \"IETF SPRING - SPRING Working Group\";\ncontact\n  \"WG Web:   <https://datatracker.ietf.org/wg/spring/>\n   WG List:  <mailto:spring@ietf.org>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 5,
      "text": "Author:    Stephane Litkowski\n          <mailto:slitkows.ietf@gmail.com>\nAuthor:    Yingzhen Qu\n          <mailto:yingzhen.qu@futurewei.com>\nAuthor:    Acee Lindem\n          <mailto:acee@cisco.com>\nAuthor:    Pushpasis Sarkar\n          <mailto:pushpasis.ietf@gmail.com>\nAuthor:    Jeff Tantsura\n          <jefftant.ietf@gmail.com>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": " \"; description \"This YANG module defines a generic configuration model for the Segment Routing MPLS data plane.",
      "zh-CHS": "“说明”此模块定义了段路由MPLS数据平面的通用配置模型。"
    },
    {
      "indent": 5,
      "text": "This YANG module conforms to the Network Management Datastore Architecture (NMDA), as described in RFC 8242.",
      "zh-CHS": "该模块符合RFC 8242中所述的网络管理数据存储体系结构（NMDA）。"
    },
    {
      "indent": 5,
      "text": "The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document are to be interpreted as described in BCP 14 (RFC 2119) (RFC 8174) when, and only when, they appear in all capitals, as shown here.",
      "zh-CHS": "本文件中的关键词“必须”、“不得”、“必需”、“应”、“不应”、“建议”、“不建议”、“可能”和“可选”在所有大写字母出现时（如图所示）应按照BCP 14（RFC 2119）（RFC 8174）所述进行解释。"
    },
    {
      "indent": 5,
      "text": "Copyright (c) 2021 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "zh-CHS": "版权所有（c）2021 IETF信托基金和被确定为代码作者的人员。版权所有。"
    },
    {
      "indent": 5,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info).",
      "zh-CHS": "根据IETF信托有关IETF文件的法律规定第4.c节规定的简化BSD许可证中包含的许可条款，允许以源代码和二进制格式重新分发和使用，无论是否修改(https://trustee.ietf.org/license-info)."
    },
    {
      "indent": 2,
      "text": "   This version of this YANG module is part of RFC 9020;\n   see the RFC itself for full legal notices.\";\nreference\n  \"RFC 9020: YANG Data Model for Segment Routing\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "revision 2021-05-26 {\n  description\n    \"Initial version\";\n  reference\n    \"RFC 9020: YANG Data Model for Segment Routing\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "feature mapping-server {\n  description\n    \"Support for Segment Routing Mapping Server (SRMS).\";\n  reference\n    \"RFC 8661: Segment Routing MPLS Interworking\n               with LDP\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "feature protocol-srgb {\n  description\n    \"Support for per-protocol Segment Routing Global Block\n     (SRGB) configuration.\";\n  reference\n    \"RFC 8660: Segment Routing with the MPLS\n               Data Plane\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "typedef system-id {\n  type string {\n    pattern '[0-9A-Fa-f]{4}\\.[0-9A-Fa-f]{4}\\.[0-9A-Fa-f]{4}';\n  }\n  description\n    \"This type defines an IS-IS system-id using a pattern.\n     An example system-id is 0143.0438.AEF0.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "typedef router-or-system-id {\n  type union {\n    type rt-types:router-id;\n    type system-id;\n  }\n  description\n    \"OSPF/BGP router-id or IS-IS system ID.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping sr-control-plane {\n  description\n    \"Defines protocol configuration.\";\n  container segment-routing {\n    description\n      \"Segment Routing global configuration.\";\n    leaf enabled {\n      type boolean;\n      default \"false\";\n      description\n        \"Enables Segment Routing control-plane protocol\n         extensions.\";\n    }\n    container bindings {\n      if-feature \"mapping-server\";\n      description\n        \"Control of binding advertisement and reception.\";\n      container advertise {\n        description\n          \"Control advertisement of local mappings\n           in binding TLVs.\";\n        leaf-list policies {\n          type leafref {\n            path \"/rt:routing/sr:segment-routing/sr-mpls:sr-mpls\"\n               + \"/sr-mpls:bindings/sr-mpls:mapping-server\"\n               + \"/sr-mpls:policy/sr-mpls:name\";\n          }\n          description\n            \"List of binding advertisement policies.\";\n        }\n      }\n      leaf receive {\n        type boolean;\n        default \"true\";\n        description\n          \"Allow the reception and usage of binding TLVs.\";\n      }\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping igp-interface {\n  description\n    \"Grouping for IGP interface configuration.\";\n  container segment-routing {\n    description\n      \"Container for SR interface configuration.\";\n    container adjacency-sid {\n      description\n        \"Adjacency SID (Adj-SID) configuration.\";\n      reference\n        \"RFC 8660: Segment Routing with the MPLS\n                   Data Plane\";\n      list adj-sids {\n        key \"value\";\n        uses sr-cmn:sid-value-type;\n        leaf value {\n          type uint32;\n          description\n            \"Value of the Adj-SID.\";\n        }\n        leaf protected {\n          type boolean;\n          default \"false\";\n          description\n            \"It is used to protect the Adj-SID, e.g., using\n             IP Fast Reroute (IPFRR) or MPLS-FRR.\";\n        }\n        leaf weight {\n          type uint8;\n          description\n            \"The load-balancing factor over parallel adjacencies.\";\n          reference\n            \"RFC 8402: Segment Routing Architecture\n             RFC 8665: OSPF Extensions for Segment Routing\n             RFC 8667: IS-IS Extensions for Segment\n                       Routing\";\n        }\n        description\n          \"List of Adj-SIDs and their configuration.\";\n      }\n      list advertise-adj-group-sid {\n        key \"group-id\";\n        description\n          \"Control advertisement of S-flag or G-flag.  Enable\n           advertisement of a common Adj-SID for parallel\n           links.\";\n        reference\n          \"RFC 8665: OSPF Extensions for Segment Routing,\n                     Section 6.1\n           RFC 8667: IS-IS Extensions for Segment\n                     Routing, Section 2.2.1\";\n        leaf group-id {\n          type uint32;\n          description\n            \"The value is an internal value to identify a\n             group-ID. Interfaces with the same group-ID\n             will be bundled together.\";\n        }\n      }\n      leaf advertise-protection {\n        type enumeration {\n          enum single {\n            description\n              \"A single Adj-SID is associated with the\n               adjacency and reflects the protection\n               configuration.\";\n          }\n          enum dual {\n            description\n              \"Two Adj-SIDs will be associated with the adjacency\n               if the interface is protected.  In this case, one\n               Adj-SID will be advertised with the backup-flag\n               set and the other with the backup-flag clear.  In\n               the case where protection is not configured, a\n               single Adj-SID will be advertised with the\n               backup-flag clear.\";\n          }\n        }\n        description\n          \"If set, the Adj-SID refers to a protected adjacency.\";\n        reference\n          \"RFC 8665: OSPF Extensions for Segment Routing,\n                     Section 6.1\n           RFC 8667: IS-IS Extensions for Segment\n                     Routing, Section 2.2.1\";\n      }\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "augment \"/rt:routing/sr:segment-routing\" {\n  description\n    \"This augments the routing data model (RFC 8349)\n     with Segment Routing (SR) using the MPLS data plane.\";\n  container sr-mpls {\n    description\n      \"Segment Routing global configuration and\n       operational state.\";\n    container bindings {\n      description\n        \"List of bindings.\";\n      container mapping-server {\n        if-feature \"mapping-server\";\n        description\n          \"Configuration of mapping-server local entries.\";\n        list policy {\n          key \"name\";\n          description\n            \"List mapping-server policies.\";\n          leaf name {\n            type string;\n            description\n              \"Name of the mapping policy.\";\n          }\n          container entries {\n            description\n              \"IPv4/IPv6 mapping entries.\";\n            list mapping-entry {\n              key \"prefix algorithm\";\n              description\n                \"Mapping entries.\";\n              uses sr-cmn:prefix-sid;\n            }\n          }\n        }\n      }\n      container connected-prefix-sid-map {\n        description\n          \"Prefix-SID configuration.\";\n        list connected-prefix-sid {\n          key \"prefix algorithm\";\n          description\n            \"List of mappings of Prefix-SIDs to IPv4/IPv6\n             local prefixes.\";\n          uses sr-cmn:prefix-sid;\n          uses sr-cmn:last-hop-behavior;\n        }\n      }\n      container local-prefix-sid {\n        description\n          \"Local SID configuration.\";\n        list local-prefix-sid {\n          key \"prefix algorithm\";\n          description\n            \"List of local IPv4/IPv6 Prefix-SIDs.\";\n          uses sr-cmn:prefix-sid;\n        }\n      }\n    }\n    container srgb {\n      description\n        \"Global SRGB configuration.\";\n      uses sr-cmn:srgb;\n    }\n    container srlb {\n      description\n        \"Segment Routing Local Block (SRLB) configuration.\";\n      uses sr-cmn:srlb;\n    }\n    list label-blocks {\n      config false;\n      description\n        \"List of label blocks currently in use.\";\n      leaf lower-bound {\n        type uint32;\n        description\n          \"Lower bound of the label block.\";\n      }\n      leaf upper-bound {\n        type uint32;\n        description\n          \"Upper bound of the label block.\";\n      }\n      leaf size {\n        type uint32;\n        description\n          \"Number of indexes in the block.\";\n      }\n      leaf free {\n        type uint32;\n        description\n          \"Number of free indexes in the block.\";\n      }\n      leaf used {\n        type uint32;\n        description\n          \"Number of indexes in use in the block.\";\n      }\n      leaf scope {\n        type enumeration {\n          enum global {\n            description\n              \"Global SID.\";\n          }\n          enum local {\n            description\n              \"Local SID.\";\n          }\n        }\n        description\n          \"Scope of this label block.\";\n      }\n    }\n    container sid-db {\n      config false;\n      description\n        \"List of prefix and SID associations.\";\n      list sid {\n        key \"target sid source source-protocol binding-type\";\n        ordered-by system;\n        description\n          \"SID binding.\";\n        leaf target {\n          type string;\n          description\n            \"Defines the target of the binding.  It can be a\n             prefix or something else.\";\n        }\n        leaf sid {\n          type uint32;\n          description\n            \"Index associated with the prefix.\";\n        }\n        leaf algorithm {\n          type uint8;\n          description\n            \"Algorithm to be used for the Prefix-SID.\";\n          reference\n            \"RFC 8665: OSPF Extensions for Segment Routing\n             RFC 8667: IS-IS Extensions for Segment\n                       Routing\n             RFC 8669: Segment Routing Prefix Segment\n                       Identifier Extensions to BGP\";\n        }\n        leaf source {\n          type inet:ip-address;\n          description\n            \"IP address of the router that owns the binding.\";\n        }\n        leaf used {\n          type boolean;\n          description\n            \"Indicates if the binding is installed in the\n             forwarding plane.\";\n        }\n        leaf source-protocol {\n          type leafref {\n            path \"/rt:routing/rt:control-plane-protocols/\"\n               + \"rt:control-plane-protocol/rt:name\";\n          }\n          description\n            \"Routing protocol that owns the binding.\";\n        }\n        leaf binding-type {\n          type enumeration {\n            enum prefix-sid {\n              description\n                \"Binding is learned from a Prefix-SID.\";\n            }\n            enum binding-tlv {\n              description\n                \"Binding is learned from a binding TLV.\";\n            }\n          }\n          description\n            \"Type of binding.\";\n        }\n        leaf scope {\n          type enumeration {\n            enum global {\n              description\n                \"Global SID.\";\n            }\n            enum local {\n              description\n                \"Local SID.\";\n            }\n          }\n          description\n            \"SID scoping.\";\n        }\n      }\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "notification segment-routing-srgb-collision {\n  description\n    \"This notification is sent when SRGB blocks received from\n     different routers collide.\";\n  list srgb-collisions {\n    description\n      \"List of SRGB blocks that collide.\";\n    leaf lower-bound {\n      type uint32;\n      description\n        \"Lower value in the block.\";\n    }\n    leaf upper-bound {\n      type uint32;\n      description\n        \"Upper value in the block.\";\n    }\n    leaf routing-protocol {\n      type leafref {\n        path \"/rt:routing/rt:control-plane-protocols/\"\n           + \"rt:control-plane-protocol/rt:name\";\n      }\n      description\n        \"Routing protocol reference for SRGB collision.\";\n    }\n    leaf originating-rtr-id {\n      type router-or-system-id;\n      description\n        \"Originating router ID of this SRGB block.\";\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "notification segment-routing-global-sid-collision {\n  description\n    \"This notification is sent when a new mapping is learned\n     containing a mapping where the SID is already used.\n     The notification generation must be throttled with at least\n     a 5-second gap between notifications.\";\n  leaf received-target {\n    type string;\n    description\n      \"Target received in the router advertisement that caused\n       the SID collision.\";\n  }\n  leaf new-sid-rtr-id {\n    type router-or-system-id;\n    description\n      \"Router ID that advertised the colliding SID.\";\n  }\n  leaf original-target {\n    type string;\n    description\n      \"Target already available in the database with the same SID\n       as the received target.\";\n  }\n  leaf original-sid-rtr-id {\n    type router-or-system-id;\n    description\n      \"Router ID for the router that originally advertised the\n       colliding SID, i.e., the instance in the database.\";\n  }\n  leaf index {\n    type uint32;\n    description\n      \"Value of the index used by two different prefixes.\";\n  }\n  leaf routing-protocol {\n    type leafref {\n      path \"/rt:routing/rt:control-plane-protocols/\"\n         + \"rt:control-plane-protocol/rt:name\";\n    }\n    description\n      \"Routing protocol reference for colliding SID.\";\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "  notification segment-routing-index-out-of-range {\n    description\n      \"This notification is sent when a binding is received\n       containing a segment index that is out of the local\n       configured ranges.  The notification generation must be\n       throttled with at least a 5-second gap between\n       notifications.\";\n    leaf received-target {\n      type string;\n      description\n        \"A human-readable string representing the target\n         received in the protocol-specific advertisement\n         corresponding to the out-of-range index.\";\n    }\n    leaf received-index {\n      type uint32;\n      description\n        \"Value of the index received.\";\n    }\n    leaf routing-protocol {\n      type leafref {\n        path \"/rt:routing/rt:control-plane-protocols/\"\n           + \"rt:control-plane-protocol/rt:name\";\n      }\n      description\n        \"Routing protocol reference for out-of-range indexed.\";\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "<CODE ENDS>\n<routing xmlns=\"urn:ietf:params:xml:ns:yang:ietf-routing\">\n  <segment-routing\n    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-segment-routing\">\n    <sr-mpls\n      xmlns=\"urn:ietf:params:xml:ns:yang:ietf-segment-routing-mpls\">\n      <bindings>\n        <mapping-server>\n          <policy>\n            <name>mapping 1</name>\n            <entries>\n              <mapping-entry>\n                <prefix>198.51.100.0/24</prefix>\n                <algorithm xmlns:sr-cmn=\"urn:ietf:params:xml:ns:yang\\\n                  :ietf-segment-routing-common\">\\\n                  sr-cmn:prefix-sid-algorithm-shortest-path\\\n                </algorithm>\n                <start-sid>200</start-sid>\n                <range>100</range>\n              </mapping-entry>\n            </entries>\n          </policy>\n        </mapping-server>\n        <connected-prefix-sid-map>\n          <connected-prefix-sid>\n            <prefix>192.0.2.0/24</prefix>\n            <algorithm xmlns:sr-cmn=\"urn:ietf:params:xml:ns:yang:\\\n              ietf-segment-routing-common\">\\\n              sr-cmn:prefix-sid-algorithm-strict-spf</algorithm>\n            <start-sid>100</start-sid>\n            <range>1</range>\n            <last-hop-behavior>php</last-hop-behavior>\n          </connected-prefix-sid>\n        </connected-prefix-sid-map>\n      </bindings>\n      <srgb>\n        <srgb>\n          <lower-bound>45000</lower-bound>\n          <upper-bound>55000</upper-bound>\n        </srgb>\n      </srgb>\n    </sr-mpls>\n  </segment-routing>\n</routing>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "{\n  \"ietf-routing:routing\": {\n    \"ietf-segment-routing:segment-routing\": {\n      \"ietf-segment-routing-mpls:sr-mpls\": {\n        \"bindings\": {\n          \"mapping-server\": {\n            \"policy\": [\n              {\n                \"name\": \"mapping 1\",\n                \"entries\": {\n                  \"mapping-entry\": [\n                    {\n                      \"prefix\": \"198.51.100.0/24\",\n                      \"algorithm\": \"ietf-segment-routing-common:\\\n                      prefix-sid-algorithm-shortest-path\",\n                      \"start-sid\": 200,\n                      \"range\": 100\n                    }\n                  ]\n                }\n              }\n            ]\n          },\n          \"connected-prefix-sid-map\": {\n            \"connected-prefix-sid\": [\n              {\n                \"prefix\": \"192.0.2.0/24\",\n                \"algorithm\": \"ietf-segment-routing-common:\\\n                prefix-sid-algorithm-strict-spf\",\n                \"start-sid\": 100,\n                \"range\": 1,\n                \"last-hop-behavior\": \"php\"\n              }\n            ]\n          }\n        },\n        \"srgb\": {\n          \"srgb\": [\n            {\n              \"lower-bound\": 45000,\n              \"upper-bound\": 55000\n            }\n          ]\n        }\n      }\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "<routing xmlns=\"urn:ietf:params:xml:ns:yang:ietf-routing\">\n  <segment-routing\n    xmlns=\"urn:ietf:params:xml:ns:yang:ietf-segment-routing\">\n    <sr-mpls\n      xmlns=\"urn:ietf:params:xml:ns:yang:ietf-segment-routing-mpls\">\n      <bindings>\n        <mapping-server>\n          <policy>\n            <name>mapping 1</name>\n            <entries>\n              <mapping-entry>\n                <prefix>2001:db8:aaaa:bbbb::/64</prefix>\n                <algorithm xmlns:sr-cmn=\"urn:ietf:params:xml:ns:yang\\\n                  :ietf-segment-routing-common\">\\\n                  sr-cmn:prefix-sid-algorithm-shortest-path\\\n                </algorithm>\n                <start-sid>200</start-sid>\n                <range>100</range>\n              </mapping-entry>\n            </entries>\n          </policy>\n        </mapping-server>\n        <connected-prefix-sid-map>\n          <connected-prefix-sid>\n            <prefix>2001:db8:aaaa:cccc::/64</prefix>\n            <algorithm xmlns:sr-cmn=\"urn:ietf:params:xml:ns:yang:\\\n              ietf-segment-routing-common\">\\\n              sr-cmn:prefix-sid-algorithm-strict-spf</algorithm>\n            <start-sid>100</start-sid>\n            <range>1</range>\n            <last-hop-behavior>php</last-hop-behavior>\n          </connected-prefix-sid>\n        </connected-prefix-sid-map>\n      </bindings>\n      <srgb>\n        <srgb>\n          <lower-bound>45000</lower-bound>\n          <upper-bound>55000</upper-bound>\n        </srgb>\n      </srgb>\n    </sr-mpls>\n  </segment-routing>\n</routing>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "{\n  \"ietf-routing:routing\": {\n    \"ietf-segment-routing:segment-routing\": {\n      \"ietf-segment-routing-mpls:sr-mpls\": {\n        \"bindings\": {\n          \"mapping-server\": {\n            \"policy\": [\n              {\n                \"name\": \"mapping 1\",\n                \"entries\": {\n                  \"mapping-entry\": [\n                    {\n                      \"prefix\": \"2001:db8:aaaa:bbbb::/64\",\n                      \"algorithm\": \"ietf-segment-routing-common:\\\n                      prefix-sid-algorithm-shortest-path\",\n                      \"start-sid\": 200,\n                      \"range\": 100\n                    }\n                  ]\n                }\n              }\n            ]\n          },\n          \"connected-prefix-sid-map\": {\n            \"connected-prefix-sid\": [\n              {\n                \"prefix\": \"2001:db8:aaaa:cccc::/64\",\n                \"algorithm\": \"ietf-segment-routing-common:\\\n                prefix-sid-algorithm-strict-spf\",\n                \"start-sid\": 100,\n                \"range\": 1,\n                \"last-hop-behavior\": \"php\"\n              }\n            ]\n          }\n        },\n        \"srgb\": {\n          \"srgb\": [\n            {\n              \"lower-bound\": 45000,\n              \"upper-bound\": 55000\n            }\n          ]\n        }\n      }\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    }
  ]
}