{
  "title": {
    "text": "RFC 9051: Internet Message Access Protocol (IMAP) - Version 4rev2",
    "zh-CHS": "RFC 9051"
  },
  "number": 9051,
  "created_at": "2021-10-28 02:54:50.329329+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "+----------------------+\n                   |connection established|\n                   +----------------------+\n                              ||\n                              \\/\n            +--------------------------------------+\n            |          server greeting             |\n            +--------------------------------------+\n                      || (1)       || (2)        || (3)\n                      \\/           ||            ||\n            +-----------------+    ||            ||\n            |Not Authenticated|    ||            ||\n            +-----------------+    ||            ||\n             || (7)   || (4)       ||            ||\n             ||       \\/           \\/            ||\n             ||     +----------------+           ||\n             ||     | Authenticated  |<=++       ||\n             ||     +----------------+  ||       ||\n             ||       || (7)   || (5)   || (6)   ||\n             ||       ||       \\/       ||       ||\n             ||       ||    +--------+  ||       ||\n             ||       ||    |Selected|==++       ||\n             ||       ||    +--------+           ||\n             ||       ||       || (7)            ||\n             \\/       \\/       \\/                \\/\n            +--------------------------------------+\n            |               Logout                 |\n            +--------------------------------------+\n                              ||\n                              \\/\n                +-------------------------------+\n                |both sides close the connection|\n                +-------------------------------+",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "* LIST () \"/\" NIL",
      "zh-CHS": "* 列表（）“/”无"
    },
    {
      "indent": 2,
      "text": "* LIST () \"/\" \"NIL\"",
      "zh-CHS": "* 列表（）“/”无”"
    },
    {
      "indent": 2,
      "text": "* FETCH 1 (BODY[1] NIL)",
      "zh-CHS": "* 获取1（正文[1]无）"
    },
    {
      "indent": 2,
      "text": "* FETCH 1 (BODY[1] \"NIL\")",
      "zh-CHS": "* 获取1（正文[1]“无”）"
    },
    {
      "indent": 2,
      "text": "C: abcd CAPABILITY\nS: * CAPABILITY IMAP4rev2 STARTTLS AUTH=GSSAPI\n LOGINDISABLED\nS: abcd OK CAPABILITY completed\nC: efgh STARTTLS\nS: efgh OK STARTTLS completed\n<TLS negotiation, further commands are under TLS layer>\nC: ijkl CAPABILITY\nS: * CAPABILITY IMAP4rev2 AUTH=GSSAPI AUTH=PLAIN\nS: ijkl OK CAPABILITY completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a002 NOOP\nS: a002 OK NOOP completed\n   . . .\nC: a047 NOOP\nS: * 22 EXPUNGE\nS: * 23 EXISTS\nS: * 14 FETCH (UID 1305 FLAGS (\\Seen \\Deleted))\nS: a047 OK NOOP completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A023 LOGOUT\nS: * BYE IMAP4rev2 Server logging out\nS: A023 OK LOGOUT completed\n(Server and client then close the connection)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "C: a001 CAPABILITY\nS: * CAPABILITY IMAP4rev2 STARTTLS LOGINDISABLED\nS: a001 OK CAPABILITY completed\nC: a002 STARTTLS\nS: a002 OK Begin TLS negotiation now\n<TLS negotiation, further commands are under TLS layer>\nC: a003 CAPABILITY\nS: * CAPABILITY IMAP4rev2 AUTH=PLAIN\nS: a003 OK CAPABILITY completed\nC: a004 AUTHENTICATE PLAIN dGVzdAB0ZXN0AHRlc3Q=\nS: a004 OK Success (tls protection)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * OK [CAPABILITY IMAP4rev2 STARTTLS AUTH=GSSAPI]\n Capabilities\nC: A001 AUTHENTICATE GSSAPI\nS: +\nC: YIIB+wYJKoZIhvcSAQICAQBuggHqMIIB5qADAgEFoQMCAQ6iBw\n   MFACAAAACjggEmYYIBIjCCAR6gAwIBBaESGxB1Lndhc2hpbmd0\n   b24uZWR1oi0wK6ADAgEDoSQwIhsEaW1hcBsac2hpdmFtcy5jYW\n   Mud2FzaGluZ3Rvbi5lZHWjgdMwgdCgAwIBAaEDAgEDooHDBIHA\n   cS1GSa5b+fXnPZNmXB9SjL8Ollj2SKyb+3S0iXMljen/jNkpJX\n   AleKTz6BQPzj8duz8EtoOuNfKgweViyn/9B9bccy1uuAE2HI0y\n   C/PHXNNU9ZrBziJ8Lm0tTNc98kUpjXnHZhsMcz5Mx2GR6dGknb\n   I0iaGcRerMUsWOuBmKKKRmVMMdR9T3EZdpqsBd7jZCNMWotjhi\n   vd5zovQlFqQ2Wjc2+y46vKP/iXxWIuQJuDiisyXF0Y8+5GTpAL\n   pHDc1/pIGmMIGjoAMCAQGigZsEgZg2on5mSuxoDHEA1w9bcW9n\n   FdFxDKpdrQhVGVRDIzcCMCTzvUboqb5KjY1NJKJsfjRQiBYBdE\n   NKfzK+g5DlV8nrw81uOcP8NOQCLR5XkoMHC0Dr/80ziQzbNqhx\n   O6652Npft0LQwJvenwDI13YxpwOdMXzkWZN/XrEqOWp6GCgXTB\n   vCyLWLlWnbaUkZdEYbKHBPjd8t/1x5Yg==\nS: + YGgGCSqGSIb3EgECAgIAb1kwV6ADAgEFoQMCAQ+iSzBJoAMC\n   AQGiQgRAtHTEuOP2BXb9sBYFR4SJlDZxmg39IxmRBOhXRKdDA0\n   uHTCOT9Bq3OsUTXUlk0CsFLoa8j+gvGDlgHuqzWHPSQg==\nC:\nS: + YDMGCSqGSIb3EgECAgIBAAD/////6jcyG4GE3KkTzBeBiVHe\n   ceP2CWY0SR0fAQAgAAQEBAQ=\nC: YDMGCSqGSIb3EgECAgIBAAD/////3LQBHXTpFfZgrejpLlLImP\n   wkhbfa2QteAQAgAG1yYwE=\nS: A001 OK GSSAPI authentication successful",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * OK [CAPABILITY IMAP4rev2 STARTTLS AUTH=GSSAPI\n LOGINDISABLED] Server ready\nC: A01 STARTTLS\nS: A01 OK STARTTLS completed\n<TLS negotiation, further commands are under TLS layer>\nC: A02 CAPABILITY\nS: * CAPABILITY IMAP4rev2 AUTH=GSSAPI AUTH=PLAIN\nS: A02 OK CAPABILITY completed\nC: A03 AUTHENTICATE PLAIN dGVzdAB0ZXN0AHRlc3Q=\nS: A03 OK Success (tls protection)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "... client connects to server and negotiates a TLS\n    protection layer ...\nC: C01 CAPABILITY\nS: * CAPABILITY IMAP4rev2 AUTH=PLAIN\nS: C01 OK Completed\nC: A01 AUTHENTICATE PLAIN\nS: +\nC: dGVzdAB0ZXN0AHRlc3Q=\nS: A01 OK Success (tls protection)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "... client connects to server and negotiates a TLS\n    protection layer ...\nC: C01 CAPABILITY\nS: * CAPABILITY IMAP4rev2 AUTH=PLAIN AUTH=EXTERNAL\nS: C01 OK Completed\nC: A01 AUTHENTICATE EXTERNAL =\nS: A01 OK Success (tls protection)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a001 LOGIN SMITH SESAME\nS: a001 OK LOGIN completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: t1 CAPABILITY\nS: * CAPABILITY IMAP4rev2 ID LITERAL+ X-GOOD-IDEA\nS: t1 OK foo\nC: t2 ENABLE CONDSTORE X-GOOD-IDEA\nS: * ENABLED X-GOOD-IDEA\nS: t2 OK foo\nC: t3 CAPABILITY\nS: * CAPABILITY IMAP4rev2 ID LITERAL+ X-GOOD-IDEA\nS: t3 OK foo again",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a1 ENABLE CONDSTORE\nS: * ENABLED CONDSTORE\nS: a1 OK Conditional Store enabled",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A142 SELECT INBOX\nS: * 172 EXISTS\nS: * OK [UIDVALIDITY 3857529045] UIDs valid\nS: * OK [UIDNEXT 4392] Predicted next UID\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\nS: * OK [PERMANENTFLAGS (\\Deleted \\Seen \\*)] Limited\nS: * LIST () \"/\" INBOX\nS: A142 OK [READ-WRITE] SELECT completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A142 SELECT INBOX\nS: * 172 EXISTS\nS: * OK [UIDVALIDITY 3857529045] UIDs valid\nS: * OK [UIDNEXT 4392] Predicted next UID\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\nS: * OK [PERMANENTFLAGS (\\Deleted \\Seen \\*)] Limited\nS: A142 OK [READ-WRITE] SELECT completed\n[...some time later...]\nC: A143 SELECT Drafts\nS: * OK [CLOSED] Previous mailbox is now closed\nS: * 5 EXISTS\nS: * OK [UIDVALIDITY 9877410381] UIDs valid\nS: * OK [UIDNEXT 102] Predicted next UID\nS: * LIST () \"/\" Drafts\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\nS: * OK [PERMANENTFLAGS (\\Deleted \\Seen \\Answered\n    \\Flagged \\Draft \\*)] System flags and keywords allowed\nS: A143 OK [READ-WRITE] SELECT completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 3,
      "text": "C: A932 EXAMINE blurdybloop\nS: * 17 EXISTS\nS: * OK [UIDVALIDITY 3857529045] UIDs valid\nS: * OK [UIDNEXT 4392] Predicted next UID\nS: * LIST () \"/\" blurdybloop\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\nS: * OK [PERMANENTFLAGS ()] No permanent flags permitted\nS: A932 OK [READ-ONLY] EXAMINE completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A003 CREATE owatagusiam/\nS: A003 OK CREATE completed\nC: A004 CREATE owatagusiam/blurdybloop\nS: A004 OK CREATE completed\nC: A005 CREATE NonNormalized\nS: * LIST () \"/\" \"Normalized\" (\"OLDNAME\" (\"NonNormalized\"))\nS: A005 OK CREATE completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A682 LIST \"\" *\nS: * LIST () \"/\" blurdybloop\nS: * LIST (\\Noselect) \"/\" foo\nS: * LIST () \"/\" foo/bar\nS: A682 OK LIST completed\nC: A683 DELETE blurdybloop\nS: A683 OK DELETE completed\nC: A684 DELETE foo\nS: A684 NO Name \"foo\" has inferior hierarchical names\nC: A685 DELETE foo/bar\nS: A685 OK DELETE Completed\nC: A686 LIST \"\" *\nS: * LIST (\\Noselect) \"/\" foo\nS: A686 OK LIST completed\nC: A687 DELETE foo\nS: A687 OK DELETE Completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A82 LIST \"\" *\nS: * LIST () \".\" blurdybloop\nS: * LIST () \".\" foo\nS: * LIST () \".\" foo.bar\nS: A82 OK LIST completed\nC: A83 DELETE blurdybloop\nS: A83 OK DELETE completed\nC: A84 DELETE foo\nS: A84 OK DELETE Completed\nC: A85 LIST \"\" *\nS: * LIST () \".\" foo.bar\nS: A85 OK LIST completed\nC: A86 LIST \"\" %\nS: * LIST (\\Noselect) \".\" foo\nS: A86 OK LIST completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A682 LIST \"\" *\nS: * LIST () \"/\" blurdybloop\nS: * LIST (\\Noselect) \"/\" foo\nS: * LIST () \"/\" foo/bar\nS: A682 OK LIST completed\nC: A683 RENAME blurdybloop sarasoop\nS: A683 OK RENAME completed\nC: A684 RENAME foo zowie\nS: A684 OK RENAME Completed\nC: A685 LIST \"\" *\nS: * LIST () \"/\" sarasoop\nS: * LIST (\\Noselect) \"/\" zowie\nS: * LIST () \"/\" zowie/bar\nS: A685 OK LIST completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: Z432 LIST \"\" *\nS: * LIST () \".\" INBOX\nS: * LIST () \".\" INBOX.bar\nS: Z432 OK LIST completed\nC: Z433 RENAME INBOX old-mail\nS: Z433 OK RENAME completed\nC: Z434 LIST \"\" *\nS: * LIST () \".\" INBOX\nS: * LIST () \".\" INBOX.bar\nS: * LIST () \".\" old-mail\nS: Z434 OK LIST completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: 1001 RENAME X Y\nC: 1002 SUBSCRIBE Y\nC: 1003 UNSUBSCRIBE X",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A002 SUBSCRIBE #news.comp.mail.mime\nS: A002 OK SUBSCRIBE completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A002 UNSUBSCRIBE #news.comp.mail.mime\nS: A002 OK UNSUBSCRIBE completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * LIST (\\Subscribed \\NonExistent) \"/\" \"Fruit/Peach\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * LIST (\\NonExistent) \".\" \"INBOX.DeletedMailbox\"",
      "zh-CHS": "S:*列表（\\不存在）“.”“收件箱.删除邮箱”"
    },
    {
      "indent": 2,
      "text": "S: * LIST () \"/\" \"NewMailbox\" (\"OLDNAME\" (\"OldMailbox\"))",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A101 LIST \"\" \"\"\nS: * LIST (\\Noselect) \"/\" \"\"\nS: A101 OK LIST Completed\nC: A102 LIST #news.comp.mail.misc \"\"\nS: * LIST (\\Noselect) \".\" #news.\nS: A102 OK LIST Completed\nC: A103 LIST /usr/staff/jones \"\"\nS: * LIST (\\Noselect) \"/\" /\nS: A103 OK LIST Completed\nC: A202 LIST ~/Mail/ %\nS: * LIST (\\Noselect) \"/\" ~/Mail/foo\nS: * LIST () \"/\" ~/Mail/meetings\nS: A202 OK LIST completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A01 LIST \"\" \"*\"\nS: * LIST (\\Marked \\NoInferiors) \"/\" \"inbox\"\nS: * LIST () \"/\" \"Fruit\"\nS: * LIST () \"/\" \"Fruit/Apple\"\nS: * LIST () \"/\" \"Fruit/Banana\"\nS: * LIST () \"/\" \"Tofu\"\nS: * LIST () \"/\" \"Vegetable\"\nS: * LIST () \"/\" \"Vegetable/Broccoli\"\nS: * LIST () \"/\" \"Vegetable/Corn\"\nS: A01 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A02 LIST (SUBSCRIBED) \"\" \"*\"\nS: * LIST (\\Marked \\NoInferiors \\Subscribed) \"/\" \"inbox\"\nS: * LIST (\\Subscribed) \"/\" \"Fruit/Banana\"\nS: * LIST (\\Subscribed \\NonExistent) \"/\" \"Fruit/Peach\"\nS: * LIST (\\Subscribed) \"/\" \"Vegetable\"\nS: * LIST (\\Subscribed) \"/\" \"Vegetable/Broccoli\"\nS: A02 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A03 LIST () \"\" \"%\" RETURN (CHILDREN)\nS: * LIST (\\Marked \\NoInferiors) \"/\" \"inbox\"\nS: * LIST (\\HasChildren) \"/\" \"Fruit\"\nS: * LIST (\\HasNoChildren) \"/\" \"Tofu\"\nS: * LIST (\\HasChildren) \"/\" \"Vegetable\"\nS: A03 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A04 LIST (REMOTE) \"\" \"%\" RETURN (CHILDREN)\nS: * LIST (\\Marked \\NoInferiors) \"/\" \"inbox\"\nS: * LIST (\\HasChildren) \"/\" \"Fruit\"\nS: * LIST (\\HasNoChildren) \"/\" \"Tofu\"\nS: * LIST (\\HasChildren) \"/\" \"Vegetable\"\nS: * LIST (\\Remote \\HasNoChildren) \"/\" \"Bread\"\nS: * LIST (\\HasChildren \\Remote) \"/\" \"Meat\"\nS: A04 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A05 LIST (REMOTE SUBSCRIBED) \"\" \"*\"\nS: * LIST (\\Marked \\NoInferiors \\Subscribed) \"/\" \"inbox\"\nS: * LIST (\\Subscribed) \"/\" \"Fruit/Banana\"\nS: * LIST (\\Subscribed \\NonExistent) \"/\" \"Fruit/Peach\"\nS: * LIST (\\Subscribed) \"/\" \"Vegetable\"\nS: * LIST (\\Subscribed) \"/\" \"Vegetable/Broccoli\"\nS: * LIST (\\Remote \\Subscribed) \"/\" \"Bread\"\nS: A05 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A06 LIST (REMOTE) \"\" \"*\" RETURN (SUBSCRIBED)\nS: * LIST (\\Marked \\NoInferiors \\Subscribed) \"/\" \"inbox\"\nS: * LIST () \"/\" \"Fruit\"\nS: * LIST () \"/\" \"Fruit/Apple\"\nS: * LIST (\\Subscribed) \"/\" \"Fruit/Banana\"\nS: * LIST () \"/\" \"Tofu\"\nS: * LIST (\\Subscribed) \"/\" \"Vegetable\"\nS: * LIST (\\Subscribed) \"/\" \"Vegetable/Broccoli\"\nS: * LIST () \"/\" \"Vegetable/Corn\"\nS: * LIST (\\Remote \\Subscribed) \"/\" \"Bread\"\nS: * LIST (\\Remote) \"/\" \"Meat\"\nS: A06 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: C01 LIST \"\" \"*\"\nS: * LIST (\\Marked \\NoInferiors) \"/\" \"inbox\"\nS: * LIST () \"/\" \"Foo\"\nS: * LIST () \"/\" \"Foo/Bar\"\nS: * LIST () \"/\" \"Foo/Baz\"\nS: * LIST () \"/\" \"Moo\"\nS: C01 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: CA3 LIST \"\" \"%\" RETURN (CHILDREN)\nS: * LIST (\\Marked \\NoInferiors) \"/\" \"inbox\"\nS: * LIST (\\HasChildren) \"/\" \"Foo\"\nS: * LIST (\\HasNoChildren) \"/\" \"Moo\"\nS: CA3 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: C02 LIST (SUBSCRIBED) \"\" \"*\"\nS: * LIST (\\Subscribed) \"/\" \"Foo/Baz\"\nS: C02 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: C04 LIST (SUBSCRIBED RECURSIVEMATCH) \"\" \"%\"\nS: * LIST () \"/\" \"Foo\" (\"CHILDINFO\" (\"SUBSCRIBED\"))\nS: C04 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: C04 LIST (SUBSCRIBED RECURSIVEMATCH) \"\" \"%\"\nS: * LIST (\\Subscribed) \"/\" \"Foo\" (\"CHILDINFO\"\n    (\"SUBSCRIBED\"))\nS: C04 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: C04 LIST (SUBSCRIBED RECURSIVEMATCH) \"\" \"%\"\nS: * LIST (\\Subscribed \\HasChildren) \"/\" \"Foo\"\n    (\"CHILDINFO\" (\"SUBSCRIBED\"))\nS: C04 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: C04 LIST (SUBSCRIBED RECURSIVEMATCH) \"\" \"%\"\nS: * LIST (\\NonExistent) \"/\" \"Foo\" (\"CHILDINFO\"\n    (\"SUBSCRIBED\"))\nS: C04 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: C04 LIST (SUBSCRIBED RECURSIVEMATCH) \"\" \"%\" RETURN\n    (CHILDREN)\nS: * LIST (\\HasChildren \\Subscribed) \"/\" \"Foo\"\nS: * LIST (\\HasNoChildren \\Subscribed) \"/\" \"Moo\"\nS: C04 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: D01 LIST \"\" \"*\"\nS: * LIST (\\Marked \\NoInferiors) \"/\" \"inbox\"\nS: * LIST () \"/\" \"foo2\"\nS: * LIST () \"/\" \"foo2/bar1\"\nS: * LIST () \"/\" \"foo2/bar2\"\nS: * LIST () \"/\" \"baz2\"\nS: * LIST () \"/\" \"baz2/bar2\"\nS: * LIST () \"/\" \"baz2/bar22\"\nS: * LIST () \"/\" \"baz2/bar222\"\nS: * LIST () \"/\" \"eps2\"\nS: * LIST () \"/\" \"eps2/mamba\"\nS: * LIST () \"/\" \"qux2/bar2\"\nS: D01 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: D02 LIST (SUBSCRIBED) \"\" \"*\"\nS: * LIST (\\Subscribed) \"/\" \"foo2/bar1\"\nS: * LIST (\\Subscribed) \"/\" \"foo2/bar2\"\nS: * LIST (\\Subscribed) \"/\" \"baz2/bar2\"\nS: * LIST (\\Subscribed) \"/\" \"baz2/bar22\"\nS: * LIST (\\Subscribed) \"/\" \"baz2/bar222\"\nS: * LIST (\\Subscribed) \"/\" \"eps2\"\nS: * LIST (\\Subscribed) \"/\" \"eps2/mamba\"\nS: * LIST (\\Subscribed) \"/\" \"qux2/bar2\"\nS: D02 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: D03 LIST (RECURSIVEMATCH SUBSCRIBED) \"\" \"*2\"\nS: * LIST () \"/\" \"foo2\" (\"CHILDINFO\" (\"SUBSCRIBED\"))\nS: * LIST (\\Subscribed) \"/\" \"foo2/bar2\"\nS: * LIST (\\Subscribed) \"/\" \"baz2/bar2\"\nS: * LIST (\\Subscribed) \"/\" \"baz2/bar22\"\nS: * LIST (\\Subscribed) \"/\" \"baz2/bar222\"\nS: * LIST (\\Subscribed) \"/\" \"eps2\" (\"CHILDINFO\" (\"SUBSCRIBED\"))\nS: * LIST (\\Subscribed) \"/\" \"qux2/bar2\"\nS: D03 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * LIST () \"/\" \"baz2\" (\"CHILDINFO\" (\"SUBSCRIBED\"))\nS: * LIST (\\NonExistent) \"/\" \"qux2\" (\"CHILDINFO\" (\"SUBSCRIBED\"))",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: D03 LIST (RECURSIVEMATCH SUBSCRIBED) \"\" \"*\"\nS: * LIST () \"/\" \"foo2\" (\"CHILDINFO\" (\"SUBSCRIBED\"))\nS: * LIST (\\Subscribed) \"/\" \"foo2/bar1\"\nS: * LIST (\\Subscribed) \"/\" \"foo2/bar2\"\nS: * LIST () \"/\" \"baz2\" (\"CHILDINFO\" (\"SUBSCRIBED\"))\nS: * LIST (\\Subscribed) \"/\" \"baz2/bar2\"\nS: * LIST (\\Subscribed) \"/\" \"baz2/bar22\"\nS: * LIST (\\Subscribed) \"/\" \"baz2/bar222\"\nS: * LIST (\\Subscribed) \"/\" \"eps2\" (\"CHILDINFO\" (\"SUBSCRIBED\"))\nS: * LIST (\\Subscribed) \"/\" \"eps2/mamba\"\nS: * LIST (\\Subscribed) \"/\" \"qux2/bar2\"\nS: D03 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a1 LIST \"\" (\"foo\")\nS: * LIST () \"/\" foo\nS: a1 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a2 LIST (SUBSCRIBED) \"\" \"foo/*\"\nS: * LIST (\\Subscribed \\NonExistent) \"/\" foo/bar\nS: a2 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a3 LIST (SUBSCRIBED RECURSIVEMATCH) \"\" foo RETURN (CHILDREN)\nS: * LIST (\\HasNoChildren) \"/\" foo (\"CHILDINFO\" (\"SUBSCRIBED\"))\nS: a3 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a1 LIST (REMOTE) \"\" *\nS: * LIST () \"/\" music/rock\nS: * LIST (\\Remote) \"/\" also/jazz\nS: a1 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a2 LIST () \"\" %\nS: * LIST (\\NonExistent \\HasChildren) \"/\" music\nS: a2 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a3 LIST (REMOTE) \"\" %\nS: * LIST (\\NonExistent \\HasChildren) \"/\" music\nS: * LIST (\\NonExistent \\HasChildren) \"/\" also\nS: a3 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a3.1 LIST \"\" (% music/rock)\nS: * LIST () \"/\" music/rock\nS: a3.1 OK done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A01 LIST \"\" % RETURN (STATUS (MESSAGES UNSEEN))\nS: * LIST () \".\"  \"INBOX\"\nS: * STATUS \"INBOX\" (MESSAGES 17 UNSEEN 16)\nS: * LIST () \".\" \"foo\"\nS: * STATUS \"foo\" (MESSAGES 30 UNSEEN 29)\nS: * LIST (\\NoSelect) \".\" \"bar\"\nS: A01 OK List completed.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A02 LIST (SUBSCRIBED RECURSIVEMATCH) \"\" % RETURN (STATUS\n     (MESSAGES))\nS: * LIST (\\Subscribed) \".\"  \"INBOX\"\nS: * STATUS \"INBOX\" (MESSAGES 17)\nS: * LIST () \".\" \"foo\" (CHILDINFO (\"SUBSCRIBED\"))\nS: A02 OK List completed.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A001 NAMESPACE\nS: * NAMESPACE ((\"\" \"/\")) NIL NIL\nS: A001 OK NAMESPACE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A001 NAMESPACE\nS: * NAMESPACE NIL NIL ((\"\" \".\"))\nS: A001 OK NAMESPACE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A001 NAMESPACE\nS: * NAMESPACE ((\"\" \"/\")) NIL ((\"Public Folders/\" \"/\"))\nS: A001 OK NAMESPACE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A001 NAMESPACE\nS: * NAMESPACE ((\"\" \"/\")) ((\"~\" \"/\")) ((\"#shared/\" \"/\")\n    (\"#public/\" \"/\")(\"#ftp/\" \"/\")(\"#news.\" \".\"))\nS: A001 OK NAMESPACE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A001 NAMESPACE\nS: * NAMESPACE ((\"INBOX.\" \".\")) NIL  NIL\nS: A001 OK NAMESPACE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A002 CREATE \"INBOX.Sent Mail\"\nS: A002 OK CREATE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A001 NAMESPACE\nS: * NAMESPACE ((\"\" \"/\")(\"#mh/\" \"/\" \"X-PARAM\"\n    (\"FLAG1\" \"FLAG2\"))) NIL NIL\nS: A001 OK NAMESPACE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A002 LIST (SPECIAL-USE) \"\" \"*\"\nS: * LIST (\\NonExistent \\Archive) \"/\" Archives\nS: * LIST (\\NonExistent \\Drafts) \"/\" Drafts\nS: * LIST (\\NonExistent \\Junk) \"/\" Junk\nS: * LIST (\\NonExistent \\Sent) \"/\" \"Sent Mail\"\nS: * LIST (\\NonExistent \\Trash) \"/\" \"Deleted Items\"\nS: A002 OK LIST Completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A003 LIST (SPECIAL-USE) \"#mh/\" \"*\"\nS: * LIST (\\NonExistent \\Archive) \"/\" \"#mh/Archives\"\nS: * LIST (\\NonExistent \\Drafts) \"/\" \"#mh/Drafts\"\nS: * LIST (\\NonExistent \\Junk) \"/\" \"#mh/Junk\"\nS: * LIST (\\NonExistent \\Sent) \"/\" \"#mh/Sent Mail\"\nS: * LIST (\\NonExistent \\Trash) \"/\" \"#mh/Deleted Items\"\nS: A003 OK LIST Completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A004 CREATE \"Sent Mail\"\nS: A004 OK CREATE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A005 CREATE \"Delete Items\"\nS: A005 OK CREATE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A006 CREATE \"#mh/Deleted Items\"\nS: A006 OK CREATE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A001 NAMESPACE\nS: * NAMESPACE ((\"\" \"/\")) ((\"Other Users/\" \"/\")) NIL\nS: A001 OK NAMESPACE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A002 LIST \"\" \"Other Users/%\"\nS: * LIST () \"/\" \"Other Users/Mike\"\nS: * LIST () \"/\" \"Other Users/Karen\"\nS: * LIST () \"/\" \"Other Users/Matthew\"\nS: * LIST () \"/\" \"Other Users/Tesa\"\nS: A002 OK LIST command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A001 NAMESPACE\nS: * NAMESPACE ((\"\" \"/\")) ((\"#Users/\" \"/\")) NIL\nS: A001 OK NAMESPACE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A002 LIST \"\" \"#Users/%\"\nS: A002 NO The requested item could not be found.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A003 LIST \"\" \"#Users/Mike/%\"\nS: * LIST () \"/\" \"#Users/Mike/INBOX\"\nS: * LIST () \"/\" \"#Users/Mike/Foo\"\nS: A003 OK LIST command completed.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A001 NAMESPACE\nS: * NAMESPACE ((\"\" \"/\")) ((\"~\" \"/\")) NIL\nS: A001 OK NAMESPACE command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A002 LIST \"\" \"~mark/%\"\nS: * LIST () \"/\" \"~mark/INBOX\"\nS: * LIST () \"/\" \"~mark/foo\"\nS: A002 OK LIST command completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A042 STATUS blurdybloop (UIDNEXT MESSAGES)\nS: * STATUS blurdybloop (MESSAGES 231 UIDNEXT 44292)\nS: A042 OK STATUS completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A003 APPEND saved-messages (\\Seen) {326}\nS: + Ready for literal data\nC: Date: Mon, 7 Feb 1994 21:52:25 -0800 (PST)\nC: From: Fred Foobar <foobar@Blurdybloop.example>\nC: Subject: afternoon meeting\nC: To: mooch@owatagu.siam.edu.example\nC: Message-Id: <B27397-0100000@Blurdybloop.example>\nC: MIME-Version: 1.0\nC: Content-Type: TEXT/PLAIN; CHARSET=US-ASCII\nC:\nC: Hello Joe, do you think we can meet at 3:30 tomorrow?\nC:\nS: A003 OK APPEND completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A003 APPEND saved-messages (\\Seen) {297+}\nC: Date: Mon, 7 Feb 1994 21:52:25 -0800 (PST)\nC: From: Fred Foobar <foobar@example.com>\nC: Subject: afternoon meeting\nC: To: mooch@example.com\nC: Message-Id: <B27397-0100000@example.com>\nC: MIME-Version: 1.0\nC: Content-Type: TEXT/PLAIN; CHARSET=US-ASCII\nC:\nC: Hello Joe, do you think we can meet at 3:30 tomorrow?\nC:\nS: A003 OK [APPENDUID 38505 3955] APPEND completed\nC: A004 COPY 2:4 meeting\nS: A004 OK [COPYUID 38505 304,319:320 3956:3958] Done\nC: A005 UID COPY 305:310 meeting\nS: A005 OK No matching messages, so nothing copied\nC: A006 COPY 2 funny\nS: A006 OK Done\nC: A007 SELECT funny\nS: * 1 EXISTS\nS: * OK [UIDVALIDITY 3857529045] Validity session-only\nS: * OK [UIDNEXT 2] Predicted next UID\nS: * NO [UIDNOTSTICKY] Non-persistent UIDs\nS: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\nS: * OK [PERMANENTFLAGS (\\Deleted \\Seen)] Limited\nS: * LIST () \".\" funny\nS: A007 OK [READ-WRITE] SELECT completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A001 SELECT INBOX\nS: * FLAGS (\\Deleted \\Seen \\Flagged)\nS: * OK [PERMANENTFLAGS (\\Deleted \\Seen \\Flagged)] Limited\nS: * 3 EXISTS\nS: * OK [UIDVALIDITY 1]\nS: * OK [UIDNEXT 1]\nS: * LIST () \"/\" INBOX\nS: A001 OK [READ-WRITE] SELECT completed\nC: A002 IDLE\nS: + idling\n...time passes; new mail arrives...\nS: * 4 EXISTS\nC: DONE\nS: A002 OK IDLE terminated\n...another client expunges message 2 now...\nC: A003 FETCH 4 ALL\nS: * 4 FETCH (...)\nS: A003 OK FETCH completed\nC: A004 IDLE\nS: * 2 EXPUNGE\nS: * 3 EXISTS\nS: + idling\n...time passes; another client expunges message 3...\nS: * 3 EXPUNGE\nS: * 2 EXISTS\n...time passes; new mail arrives...\nS: * 3 EXISTS\nC: DONE\nS: A004 OK IDLE terminated\nC: A005 FETCH 3 ALL\nS: * 3 FETCH (...)\nS: A005 OK FETCH completed\nC: A006 IDLE",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A341 CLOSE\nS: A341 OK CLOSE completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A342 UNSELECT\nS: A342 OK Unselect completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A202 EXPUNGE\nS: * 3 EXPUNGE\nS: * 3 EXPUNGE\nS: * 5 EXPUNGE\nS: * 8 EXPUNGE\nS: A202 OK EXPUNGE completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A282 SEARCH RETURN (MIN COUNT) FLAGGED\n    SINCE 1-Feb-1994 NOT FROM \"Smith\"\nS: * ESEARCH (TAG \"A282\") MIN 2 COUNT 3\nS: A282 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A283 SEARCH RETURN () FLAGGED\n    SINCE 1-Feb-1994 NOT FROM \"Smith\"\nS: * ESEARCH (TAG \"A283\") ALL 2,10:11\nS: A283 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A284 SEARCH TEXT \"string not in mailbox\"\nS: * ESEARCH (TAG \"A284\")\nS: A284 OK SEARCH completed\nC: A285 SEARCH CHARSET UTF-8 TEXT {12}\nS: + Ready for literal text\nC: отпуск\nS: * ESEARCH (TAG \"A285\") ALL 43\nS: A285 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A284 SEARCH RETURN (MIN) UNSEEN\nS: * ESEARCH (TAG \"A284\") MIN 4\nS: A284 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A285 UID SEARCH RETURN (MIN MAX) 1:5000\nS: * ESEARCH (TAG \"A285\") UID MIN 7 MAX 3800\nS: A285 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A286 SEARCH RETURN (COUNT) DELETED\nS: * ESEARCH (TAG \"A286\") COUNT 15\nS: A286 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A282 SEARCH RETURN (SAVE) FLAGGED SINCE 1-Feb-1994\n    NOT FROM \"Smith\"\nS: A282 OK SEARCH completed, result saved\nC: A283 FETCH $ (UID INTERNALDATE FLAGS BODY.PEEK[HEADER])\nS: * 2 FETCH (UID 14 ...\nS: * 84 FETCH (UID 100 ...\nS: * 882 FETCH (UID 1115 ...\nS: A283 OK completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A282 SEARCH RETURN (SAVE) FLAGGED SINCE 1-Feb-1994\n    NOT FROM \"Smith\"\nC: A283 FETCH $ (UID INTERNALDATE FLAGS BODY.PEEK[HEADER])\nS: A282 OK SEARCH completed\nS: * 2 FETCH (UID 14 ...\nS: * 84 FETCH (UID 100 ...\nS: * 882 FETCH (UID 1115 ...\nS: A283 OK completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A300 SEARCH RETURN (SAVE) SINCE 1-Jan-2004\n    NOT FROM \"Smith\"\nS: A300 OK SEARCH completed\nC: A301 UID SEARCH UID $ SMALLER 4096\nS: * ESEARCH (TAG \"A301\") UID ALL 17,900,901\nS: A301 OK completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A301 UID SEARCH $ SMALLER 4096",
      "zh-CHS": "C:A301 UID搜索$4096"
    },
    {
      "indent": 2,
      "text": "C: P282 SEARCH RETURN (SAVE) SINCE 1-Feb-1994\n    NOT FROM \"Smith\"\nS: P282 OK SEARCH completed\nC: P283 SEARCH CHARSET UTF-8 (OR $ 1,3000:3021) TEXT {8+}\nC: мать\nS: * ESEARCH (TAG \"P283\") ALL 882,1102,3003,3005:3006\nS: P283 OK completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": " C: B282 SEARCH RETURN (SAVE) SINCE 1-Feb-1994\n     NOT FROM \"Smith\"\n S: B282 OK SEARCH completed\n C: B283 SEARCH RETURN (SAVE) CHARSET KOI8-R\n     (OR $ 1,3000:3021) TEXT {4}\n C: XXXX\n S: B283 NO [BADCHARSET UTF-8] KOI8-R is not supported\n//After this command, the saved result variable contains\n//no messages.  A client that wants to reissue the B283\n//SEARCH command with another CHARSET would have to reissue\n//the B282 command as well.  One possible workaround for\n//this is to include the desired CHARSET parameter\n//in the earliest SEARCH RETURN (SAVE) command in a\n//sequence of related SEARCH commands, to cause\n//the earliest SEARCH in the sequence to fail.\n//A better approach might be to always use CHARSET UTF-8\n//instead.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": " C: E282 SEARCH RETURN (SAVE) SINCE 28-Oct-2006\n     NOT FROM \"Eric\"\n C: E283 COPY $ \"Other Messages\"\n//The \"$\" contains no messages\n S: E282 OK SEARCH completed\n S: E283 OK COPY completed, nothing copied",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: F282 SEARCH RETURN (SAVE) KEYWORD $Junk\nC: F283 COPY $ \"Junk\"\nC: F284 STORE $ +FLAGS.Silent (\\Deleted)\nS: F282 OK SEARCH completed\nS: F283 OK COPY completed\nS: F284 OK STORE completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": " C: G282 SEARCH RETURN (SAVE) KEYWORD $Junk\n C: G283 SEARCH RETURN (ALL) SINCE 28-Oct-2006\n     FROM \"Eric\"\n// The server can execute the two SEARCH commands\n// in any order, as they don't have any dependency.\n// For example, it may return:\n S: * ESEARCH (TAG \"G283\") ALL 3:15,27,29:103\n S: G283 OK SEARCH completed\n S: G282 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 1,
      "text": " C: H282 SEARCH RETURN (SAVE) KEYWORD $Junk\n C: H283 SEARCH RETURN (SAVE) SINCE 28-Oct-2006\n     FROM \"Eric\"\n S: H282 OK SEARCH completed\n S: H283 OK SEARCH completed\n// At this point \"$\" would contain results of H283",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "  C: C282 SEARCH RETURN (ALL) SINCE 12-Feb-2006\n      NOT FROM \"Smith\"\n  S: * ESEARCH (TAG \"C283\") ALL 2,10:15,21\n//$ value hasn't changed\n  S: C282 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "  C: C283 SEARCH RETURN (ALL SAVE) SINCE 12-Feb-2006\n      NOT FROM \"Smith\"\n  S: * ESEARCH (TAG \"C283\") ALL 2,10:15,21\n//$ value is 2,10:15,21\n  S: C283 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "  C: C284 SEARCH RETURN (SAVE MIN) SINCE 12-Feb-2006\n      NOT FROM \"Smith\"\n  S: * ESEARCH (TAG \"C284\") MIN 2\n//$ value is 2\n  S: C284 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "  C: C285 SEARCH RETURN (MAX SAVE MIN) SINCE\n      12-Feb-2006 NOT FROM \"Smith\"\n  S: * ESEARCH (TAG \"C285\") MIN 2 MAX 21\n//$ value is 2,21\n  S: C285 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "  C: C286 SEARCH RETURN (MAX SAVE MIN COUNT)\n      SINCE 12-Feb-2006 NOT FROM \"Smith\"\n  S: * ESEARCH (TAG \"C286\") MIN 2 MAX 21 COUNT 8\n//$ value is 2,10:15,21\n  S: C286 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "  C: C286 SEARCH RETURN (ALL SAVE MIN) SINCE\n      12-Feb-2006 NOT FROM \"Smith\"\n  S: * ESEARCH (TAG \"C286\") MIN 2 ALL 2,10:15,21\n//$ value is 2,10:15,21\n  S: C286 OK SEARCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A654 FETCH 2:4 (FLAGS BODY[HEADER.FIELDS (DATE FROM)])\nS: * 2 FETCH ....\nS: * 3 FETCH ....\nS: * 4 FETCH ....\nS: A654 OK FETCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "HEADER ([RFC5322] header of the message) TEXT ([RFC5322] text body of the message) MULTIPART/MIXED 1 TEXT/PLAIN 2 APPLICATION/OCTET-STREAM 3 MESSAGE/RFC822 3.HEADER ([RFC5322] header of the message) 3.TEXT ([RFC5322] text body of the message) MULTIPART/MIXED 3.1 TEXT/PLAIN 3.2 APPLICATION/OCTET-STREAM 4 MULTIPART/MIXED 4.1 IMAGE/GIF 4.1.MIME ([MIME-IMB] header for the IMAGE/GIF) 4.2 MESSAGE/RFC822 4.2.HEADER ([RFC5322] header of the message) 4.2.TEXT ([RFC5322] text body of the message) MULTIPART/MIXED 4.2.1 TEXT/PLAIN 4.2.2 MULTIPART/ALTERNATIVE 4.2.2.1 TEXT/PLAIN 4.2.2.2 TEXT/RICHTEXT",
      "zh-CHS": "HEADER（[RFC5322]消息头）TEXT（[RFC5322]消息正文）MULTIPART/MIXED 1 TEXT/PLAIN 2 APPLICATION/OCTET-STREAM 3 message/RFC822 3.HEADER（[RFC5322]消息头）TEXT（[RFC5322]消息正文）MULTIPART/MIXED 3.1 TEXT/PLAIN 3.2 APPLICATION/OCTET-STREAM 4 MULTIPART/MIXED 4.1 IMAGE/GIF 4.1.MIME(图像的[MIME-IMB]头/GIF）4.2消息/RFC822 4.2.header（[RFC5322]消息头）4.2.TEXT（[RFC5322]消息正文）多部分/MIXED 4.2.1 TEXT/PLAIN 4.2.2多部分/ALTERNATIVE 4.2.2.1 TEXT/PLAIN 4.2.2 TEXT/RICHTEXT"
    },
    {
      "indent": 2,
      "text": "C: A003 STORE 2:4 +FLAGS (\\Deleted)\nS: * 2 FETCH (FLAGS (\\Deleted \\Seen))\nS: * 3 FETCH (FLAGS (\\Deleted))\nS: * 4 FETCH (FLAGS (\\Deleted \\Flagged \\Seen))\nS: A003 OK STORE completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A003 COPY 2:4 MEETING\nS: A003 OK [COPYUID 38505 304,319:320 3956:3958] COPY completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a UID MOVE 42:69 foo\nS: * OK [COPYUID 432432 42:69 1202:1229]\nS: * 22 EXPUNGE\n...More EXPUNGE responses from the server...\nS: a OK Done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A003 UID EXPUNGE 3000:3002\nS: * 3 EXPUNGE\nS: * 3 EXPUNGE\nS: * 3 EXPUNGE\nS: A003 OK UID EXPUNGE completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A999 UID FETCH 4827313:4828442 FLAGS\nS: * 23 FETCH (FLAGS (\\Seen) UID 4827313)\nS: * 24 FETCH (FLAGS (\\Seen) UID 4827943)\nS: * 25 FETCH (FLAGS (\\Seen) UID 4828442)\nS: A999 OK UID FETCH completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a441 CAPABILITY\nS: * CAPABILITY IMAP4rev2 XPIG-LATIN\nS: a441 OK CAPABILITY completed\nC: A442 XPIG-LATIN\nS: * XPIG-LATIN ow-nay eaking-spay ig-pay atin-lay\nS: A442 OK XPIG-LATIN ompleted-cay",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: o356 RENAME this that\nS: o356 NO [ALREADYEXISTS] Mailbox \"that\" already exists",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: b LOGIN \"fred\" \"foo\"\nS: b NO [AUTHENTICATIONFAILED] Authentication failed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: c1 AUTHENTICATE PLAIN\n[...]\nS: c1 NO [AUTHORIZATIONFAILED] No such authorization-ID",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: c2 AUTHENTICATE PLAIN\n[...]\nS: c2 NO [AUTHORIZATIONFAILED] Authenticator is not an admin",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: l create \"///////\"\nS: l NO [CANNOT] Adjacent slashes are not supported",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: k1 select \"/archive/projects/experiment-iv\"\n[...]\nS: k1 OK [READ-ONLY] Done\nC: k2 status \"/archive/projects/experiment-iv\" (messages)\n[...]\nS: k2 OK [CLIENTBUG] Done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: e login \"fred\" \"foo\"\nS: e NO [CONTACTADMIN]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: i select \"/archive/projects/experiment-iv\"\nS: i NO [CORRUPTION] Cannot open mailbox",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: d login \"fred\" \"foo\"\nS: d NO [EXPIRED] That password isn't valid any more",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: h search from maria@example.com\nS: * ESEARCH (TAG \"h\") ALL 1:3,5,8,13,21,42\nS: h OK [EXPUNGEISSUED] Search completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: m356 DELETE Notes\nS: o356 NO [HASCHILDREN] Mailbox \"Notes\" has children\nthat need to be deleted first",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: g delete \"/archive/projects/experiment-iv\"\nS: g NO [INUSE] Mailbox in use",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: m STORE 42 FLAGS f1 f2 f3 f4 f5 ... f250\nS: m NO [LIMIT] At most 32 flags in one mailbox supported",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: p RENAME this that\nS: p NO [NONEXISTENT] No such mailbox",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: f select \"/archive/projects/experiment-iv\"\nS: f NO [NOPERM] Access denied",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: n1 uid copy 1:* oldmail\nS: n1 NO [OVERQUOTA] Sorry",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: n2 uid copy 1:* oldmail\nS: n2 OK [OVERQUOTA] You are now over your soft quota",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: d login \"fred\" \"foo\"\nS: d NO [PRIVACYREQUIRED] Connection offers no privacy",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: d select inbox\nS: d NO [PRIVACYREQUIRED] Connection offers no privacy",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: j select \"/archive/projects/experiment-iv\"\nS: j NO [SERVERBUG] This should not happen",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: a LOGIN \"fred\" \"foo\"\nS: a NO [UNAVAILABLE] User's backend down for maintenance",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * OK IMAP4rev2 server ready\nC: A001 LOGIN fred blurdybloop\nS: * OK [ALERT] System shutdown in 10 minutes\nS: A001 OK LOGIN Completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: A222 COPY 1:2 owatagusiam\nS: * NO Disk is 98% full, please delete unnecessary data\nS: A222 OK COPY completed\nC: A223 COPY 3:200 blurdybloop\nS: * NO Disk is 98% full, please delete unnecessary data\nS: * NO Disk is 99% full, please delete unnecessary data\nS: A223 NO COPY failed: disk is full",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "C: ...very long command line...\nS: * BAD Command line too long\nC: ...empty line...\nS: * BAD Empty command line\nC: A443 EXPUNGE\nS: * BAD Disk crash, attempting salvage to a new disk!\nS: * OK Salvage successful, no data lost\nS: A443 OK Expunge completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * PREAUTH IMAP4rev2 server logged in as Smith",
      "zh-CHS": "S:*预授权IMAP4rev2服务器以Smith身份登录"
    },
    {
      "indent": 2,
      "text": "S: * BYE Autologout; idle for too long",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * ENABLED CONDSTORE QRESYNC",
      "zh-CHS": "S:*已启用CONDSTORE QRESYNC"
    },
    {
      "indent": 2,
      "text": "S: * CAPABILITY STARTTLS AUTH=GSSAPI IMAP4rev2 LOGINDISABLED XPIG-LATIN",
      "zh-CHS": "S:*能力标准TLS AUTH=GSSAPI IMAP4rev2可登录XPIG-LATIN"
    },
    {
      "indent": 2,
      "text": "S: * LIST (\\Noselect) \"/\" ~/Mail/foo",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * LIST (\\Marked) \":\" Tables (tablecloth ((\"edge\" \"lacy\")\n    (\"color\" \"red\")) Sample \"text\")\nS: * LIST () \":\" Tables:new (tablecloth (\"edge\" \"lacy\")\n    Sample (\"text\" \"more text\"))",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * NAMESPACE ((\"\" \"/\")) ((\"~\" \"/\")) NIL",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * STATUS blurdybloop (MESSAGES 231 UIDNEXT 44292)",
      "zh-CHS": "S:*状态模糊（信息231 UIDNEXT 44292）"
    },
    {
      "indent": 2,
      "text": "S: * ESEARCH UID COUNT 17 ALL 4:18,21,28",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * ESEARCH (TAG \"a567\") UID COUNT 17 ALL 4:18,21,28",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * ESEARCH COUNT 18 ALL 1:17,21",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "S: * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)",
      "zh-CHS": "S:*标志（\\response\\Flagged\\Deleted\\Seen\\Draft）"
    },
    {
      "indent": 2,
      "text": "S: * 23 EXISTS",
      "zh-CHS": "S:*23存在"
    },
    {
      "indent": 2,
      "text": "S: * 44 EXPUNGE",
      "zh-CHS": "S:*44删除"
    },
    {
      "indent": 3,
      "text": "(\"TEXT\" \"PLAIN\" (\"CHARSET\" \"US-ASCII\") NIL NIL \"7BIT\" 2279 48)",
      "zh-CHS": "（“纯文本”（“字符集”“US-ASCII”）零零“7BIT”227948）"
    },
    {
      "indent": 3,
      "text": "((\"TEXT\" \"PLAIN\" (\"CHARSET\" \"US-ASCII\") NIL NIL \"7BIT\" 1152 23) (\"TEXT\" \"PLAIN\" (\"CHARSET\" \"US-ASCII\" \"NAME\" \"cc.diff\") \"<960723163407.20117h@cac.washington.edu>\" \"Compiler diff\" \"BASE64\" 4554 73) \"MIXED\")",
      "zh-CHS": "（“文本”“普通”（“字符集”“US-ASCII”）零零零“7BIT”1152 23）（“文本”“普通”（“字符集”“US-ASCII”“名称”“cc.diff”）”<960723163407。20117h@cac.washington.edu>“编译器差异”“BASE64”4554 73“混合”）"
    },
    {
      "indent": 2,
      "text": "S: * 23 FETCH (FLAGS (\\Seen) RFC822.SIZE 44827 UID 447)",
      "zh-CHS": "S:*23获取（标志（\\Seen）RFC822.SIZE 44827 UID 447）"
    },
    {
      "indent": 2,
      "text": "C: A001 LOGIN {11}\nS: + Ready for additional command text\nC: FRED FOOBAR {7}\nS: + Ready for additional command text\nC: fat man\nS: A001 OK LOGIN completed\nC: A044 BLURDYBLOOP {102856}\nS: A044 BAD No such command as \"BLURDYBLOOP\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "S:   * OK [CAPABILITY STARTTLS AUTH=SCRAM-SHA-256 LOGINDISABLED\n      IMAP4rev2] IMAP4rev2 Service Ready\nC:   a000 starttls\nS:   a000 OK Proceed with TLS negotiation\n <TLS negotiation>\nC:   A001 AUTHENTICATE SCRAM-SHA-256\n      biwsbj11c2VyLHI9ck9wck5HZndFYmVSV2diTkVrcU8=\nS:   + cj1yT3ByTkdmd0ViZVJXZ2JORWtxTyVodllEcFdVYTJSYVRDQWZ1eEZJbGopaE\n     5sRiRrMCxzPVcyMlphSjBTTlk3c29Fc1VFamI2Z1E9PSxpPTQwOTY=\nC:   Yz1iaXdzLHI9ck9wck5HZndFYmVSV2diTkVrcU8laHZZRHBXVWEyUmFUQ0FmdXhG\n     SWxqKWhObEYkazAscD1kSHpiWmFwV0lrNGpVaE4rVXRlOXl0YWc5empmTUhnc3Ft\n     bWl6N0FuZFZRPQ==\nS:   + dj02cnJpVFJCaTIzV3BSUi93dHVwK21NaFVaVW4vZEI1bkxUSlJzamw5NUc0\n     PQ==\nC:\nS:   A001 OK SCRAM-SHA-256 authentication successful\nC:   babc ENABLE IMAP4rev2\nS:   * ENABLED IMAP4rev2\nS:   babc OK Some capabilities enabled\nC:   a002 select inbox\nS:   * 18 EXISTS\nS:   * FLAGS (\\Answered \\Flagged \\Deleted \\Seen \\Draft)\nS:   * OK [UIDVALIDITY 3857529045] UIDs valid\nS:   * LIST () \"/\" INBOX (\"OLDNAME\" (\"inbox\"))\nS:   a002 OK [READ-WRITE] SELECT completed\nC:   a003 fetch 12 full\nS:   * 12 FETCH (FLAGS (\\Seen) INTERNALDATE\n      \"17-Jul-1996 02:44:25 -0700\" RFC822.SIZE 4286 ENVELOPE (\n      \"Wed, 17 Jul 1996 02:23:25 -0700 (PDT)\"\n      \"IMAP4rev2 WG mtg summary and minutes\"\n      ((\"Terry Gray\" NIL \"gray\" \"cac.washington.edu\"))\n      ((\"Terry Gray\" NIL \"gray\" \"cac.washington.edu\"))\n      ((\"Terry Gray\" NIL \"gray\" \"cac.washington.edu\"))\n      ((NIL NIL \"imap\" \"cac.washington.edu\"))\n      ((NIL NIL \"minutes\" \"CNRI.Reston.VA.US\")\n      (\"John Klensin\" NIL \"KLENSIN\" \"MIT.EDU\")) NIL NIL\n      \"<B27397-0100000@cac.washington.ed>\")\n      BODY (\"TEXT\" \"PLAIN\" (\"CHARSET\" \"US-ASCII\") NIL NIL \"7BIT\"\n      3028 92))\nS:    a003 OK FETCH completed\nC:    a004 fetch 12 body[header]\nS:    * 12 FETCH (BODY[HEADER] {342}\nS:    Date: Wed, 17 Jul 1996 02:23:25 -0700 (PDT)\nS:    From: Terry Gray <gray@cac.washington.edu>\nS:    Subject: IMAP4rev2 WG mtg summary and minutes\nS:    To: imap@cac.washington.edu\nS:    cc: minutes@CNRI.Reston.VA.US, John Klensin <KLENSIN@MIT.EDU>\nS:    Message-Id: <B27397-0100000@cac.washington.edu>\nS:    MIME-Version: 1.0\nS:    Content-Type: TEXT/PLAIN; CHARSET=US-ASCII\nS:\nS:    )\nS:    a004 OK FETCH completed\nC:    a005 store 12 +flags \\deleted\nS:    * 12 FETCH (FLAGS (\\Seen \\Deleted))\nS:    a005 OK +FLAGS completed\nC:    a006 logout\nS:    * BYE IMAP4rev2 server terminating connection\nS:    a006 OK LOGOUT completed",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "SP              = <Defined in RFC 5234>\nCTL             = <Defined in RFC 5234>\nCRLF            = <Defined in RFC 5234>\nALPHA           = <Defined in RFC 5234>\nDIGIT           = <Defined in RFC 5234>\nDQUOTE          = <Defined in RFC 5234>\nOCTET           = <Defined in RFC 5234>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "address = \"(\" addr-name SP addr-adl SP addr-mailbox SP addr-host \")\"",
      "zh-CHS": "address=“（“地址名称SP地址adl SP地址邮箱SP地址主机”）”"
    },
    {
      "indent": 0,
      "text": "addr-adl = nstring ; Holds route from [RFC5322] obs-route if ; non-NIL",
      "zh-CHS": "地址adl=nstring；持有来自[RFC5322]obs路由的路由，如果；非零"
    },
    {
      "indent": 0,
      "text": "addr-host = nstring ; NIL indicates [RFC5322] group syntax. ; Otherwise, holds [RFC5322] domain name",
      "zh-CHS": "addr host=nstring；NIL表示[RFC5322]组语法；否则，将保留[RFC5322]域名"
    },
    {
      "indent": 0,
      "text": "addr-mailbox    = nstring\n                    ; NIL indicates end of [RFC5322] group; if\n                    ; non-NIL and addr-host is NIL, holds\n                    ; [RFC5322] group name.\n                    ; Otherwise, holds [RFC5322] local-part\n                    ; after removing [RFC5322] quoting",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "addr-name = nstring ; If non-NIL, holds phrase from [RFC5322] ; mailbox after removing [RFC5322] quoting",
      "zh-CHS": "地址名称=nstring；如果非NIL，则保留[RFC5322]中的短语；删除[RFC5322]报价后的邮箱"
    },
    {
      "indent": 0,
      "text": "append = \"APPEND\" SP mailbox [SP flag-list] [SP date-time] SP literal",
      "zh-CHS": "append=“append”SP邮箱[SP标志列表][SP日期时间]SP文字"
    },
    {
      "indent": 0,
      "text": "append-uid      = uniqueid",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "astring         = 1*ASTRING-CHAR / string",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "ASTRING-CHAR   = ATOM-CHAR / resp-specials",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "atom            = 1*ATOM-CHAR",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "ATOM-CHAR       = <any CHAR except atom-specials>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "atom-specials   = \"(\" / \")\" / \"{\" / SP / CTL / list-wildcards /\n                  quoted-specials / resp-specials",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "authenticate = \"AUTHENTICATE\" SP auth-type [SP initial-resp] *(CRLF base64)",
      "zh-CHS": "authenticate=“authenticate”SP身份验证类型[SP初始响应]*（CRLF base64）"
    },
    {
      "indent": 0,
      "text": "auth-type = atom ; Authentication mechanism name, as defined by ; [SASL], Section 7.1",
      "zh-CHS": "认证类型=原子；验证机制名称，如所定义；[SASL]，第7.1节"
    },
    {
      "indent": 0,
      "text": "base64          = *(4base64-char) [base64-terminal]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "base64-char     = ALPHA / DIGIT / \"+\" / \"/\"\n                    ; Case sensitive",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "base64-terminal = (2base64-char \"==\") / (3base64-char \"=\")",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body            = \"(\" (body-type-1part / body-type-mpart) \")\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-extension  = nstring / number / number64 /\n                   \"(\" body-extension *(SP body-extension) \")\"\n                    ; Future expansion.  Client implementations\n                    ; MUST accept body-extension fields.  Server\n                    ; implementations MUST NOT generate\n                    ; body-extension fields except as defined by\n                    ; future Standard or Standards Track\n                    ; revisions of this specification.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-ext-1part = body-fld-md5 [SP body-fld-dsp [SP body-fld-lang [SP body-fld-loc *(SP body-extension)]]] ; MUST NOT be returned on non-extensible ; \"BODY\" fetch",
      "zh-CHS": "body-ext-1part=body-fld-md5[SP body fld dsp[SP body fld lang[SP body fld loc*（SP body extension）]；不能在不可扩展的情况下返回；“身体”取回"
    },
    {
      "indent": 0,
      "text": "body-ext-mpart = body-fld-param [SP body-fld-dsp [SP body-fld-lang [SP body-fld-loc *(SP body-extension)]]] ; MUST NOT be returned on non-extensible ; \"BODY\" fetch",
      "zh-CHS": "阀体外部mpart=阀体fld参数[SP阀体fld dsp[SP阀体fld lang[SP阀体fld loc*（SP阀体扩展）]]；不能在不可扩展的情况下返回；“身体”取回"
    },
    {
      "indent": 0,
      "text": "body-fields = body-fld-param SP body-fld-id SP body-fld-desc SP body-fld-enc SP body-fld-octets",
      "zh-CHS": "主体字段=主体fld参数SP主体fld id SP主体fld desc SP主体fld enc SP主体fld八位字节"
    },
    {
      "indent": 0,
      "text": "body-fld-desc   = nstring",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-fld-dsp    = \"(\" string SP body-fld-param \")\" / nil",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-fld-enc    = (DQUOTE (\"7BIT\" / \"8BIT\" / \"BINARY\" / \"BASE64\"/\n                  \"QUOTED-PRINTABLE\") DQUOTE) / string\n                  ; Content-Transfer-Encoding header field value.\n                  ; Defaults to \"7BIT\" (as per RFC 2045)\n                  ; if not present in the body part.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-fld-id     = nstring",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-fld-lang   = nstring / \"(\" string *(SP string) \")\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-fld-loc    = nstring",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-fld-lines  = number64",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-fld-md5    = nstring",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-fld-octets = number",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-fld-param  = \"(\" string SP string *(SP string SP string) \")\" /\n                  nil",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-type-1part = (body-type-basic / body-type-msg / body-type-text)\n                  [SP body-ext-1part]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-type-basic = media-basic SP body-fields ; MESSAGE subtype MUST NOT be \"RFC822\" or ; \"GLOBAL\"",
      "zh-CHS": "主体类型基本=媒体基本SP主体字段；消息子类型不得为“RFC822”或；“全球”"
    },
    {
      "indent": 0,
      "text": "body-type-mpart = 1*body SP media-subtype\n                  [SP body-ext-mpart]\n                    ; MULTIPART body part",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "body-type-msg = media-message SP body-fields SP envelope SP body SP body-fld-lines",
      "zh-CHS": "body type msg=媒体消息SP body字段SP信封SP body SP body fld行"
    },
    {
      "indent": 0,
      "text": "body-type-text = media-text SP body-fields SP body-fld-lines",
      "zh-CHS": "正文类型文本=媒体文本SP正文字段SP正文fld行"
    },
    {
      "indent": 0,
      "text": "capability      = (\"AUTH=\" auth-type) / atom\n                    ; New capabilities SHOULD be\n                    ; registered with IANA using the\n                    ; RFC Required policy, i.e., in\n                    ; a Standards Track, an Experimental,\n                    ; or an Informational RFC.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "capability-data = \"CAPABILITY\" *(SP capability) SP \"IMAP4rev2\"\n                  *(SP capability)\n                    ; See Section 6.1.1 for information about\n                    ; required security-related capabilities.\n                    ; Servers that offer RFC 1730 compatibility MUST\n                    ; list \"IMAP4\" as the first capability.\n                    ; Servers that offer RFC 3501 compatibility MUST\n                    ; list \"IMAP4rev1\" as one of the capabilities.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CHAR            = <defined in [ABNF]>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "CHAR8           = %x01-ff\n                    ; any OCTET except NUL, %x00",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "charset         = atom / quoted",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "childinfo-extended-item =  \"CHILDINFO\" SP \"(\"\n            list-select-base-opt-quoted\n            *(SP list-select-base-opt-quoted) \")\"\n            ; Extended data item (mbox-list-extended-item)\n            ; returned when the RECURSIVEMATCH\n            ; selection option is specified.\n            ; Note 1: the CHILDINFO extended data item tag can be\n            ; returned with or without surrounding quotes, as per\n            ; mbox-list-extended-item-tag production.\n            ; Note 2: The selection options are always returned\n            ; quoted, unlike their specification in\n            ; the extended LIST command.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "child-mbox-flag =  \"\\HasChildren\" / \"\\HasNoChildren\"\n            ; attributes for the CHILDREN return option, at most\n            ; one possible per LIST response",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "command         = tag SP (command-any / command-auth /\n                  command-nonauth / command-select) CRLF\n                    ; Modal based on state",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "command-any     = \"CAPABILITY\" / \"LOGOUT\" / \"NOOP\"\n                    ; Valid in all states",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "command-auth    = append / create / delete / enable / examine /\n                  list / namespace-command / rename /\n                  select / status / subscribe / unsubscribe /\n                  idle\n                    ; Valid only in Authenticated or Selected state",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "command-nonauth = login / authenticate / \"STARTTLS\"\n                    ; Valid only when in Not Authenticated state",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "command-select  = \"CLOSE\" / \"UNSELECT\" / \"EXPUNGE\" / copy /\n                   move / fetch / store / search / uid\n                    ; Valid only when in Selected state",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "continue-req    = \"+\" SP (resp-text / base64) CRLF",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "copy = \"COPY\" SP sequence-set SP mailbox",
      "zh-CHS": "copy=“copy”SP序列设置SP邮箱"
    },
    {
      "indent": 0,
      "text": "create = \"CREATE\" SP mailbox ; Use of INBOX gives a NO error",
      "zh-CHS": "create=“create”SP邮箱；使用收件箱不会产生错误"
    },
    {
      "indent": 0,
      "text": "date            = date-text / DQUOTE date-text DQUOTE",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "date-day        = 1*2DIGIT\n                    ; Day of month",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "date-day-fixed  = (SP DIGIT) / 2DIGIT\n                    ; Fixed-format version of date-day",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "date-month      = \"Jan\" / \"Feb\" / \"Mar\" / \"Apr\" / \"May\" / \"Jun\" /\n                  \"Jul\" / \"Aug\" / \"Sep\" / \"Oct\" / \"Nov\" / \"Dec\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "date-text = date-day \"-\" date-month \"-\" date-year",
      "zh-CHS": "日期文本=日期日“-”日期月“-”日期年"
    },
    {
      "indent": 0,
      "text": "date-year       = 4DIGIT",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "date-time = DQUOTE date-day-fixed \"-\" date-month \"-\" date-year SP time SP zone DQUOTE",
      "zh-CHS": "日期时间=DQUOTE固定日期日“-”日期月“-”日期年SP时区DQUOTE"
    },
    {
      "indent": 0,
      "text": "delete = \"DELETE\" SP mailbox ; Use of INBOX gives a NO error",
      "zh-CHS": "delete=“delete”SP邮箱；使用收件箱不会产生错误"
    },
    {
      "indent": 0,
      "text": "digit-nz        = %x31-39\n                    ; 1-9",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "eitem-standard-tag = atom ; a tag for LIST extended data item defined in a Standard ; Track or Experimental RFC.",
      "zh-CHS": "eitem标准标签=原子；标准中定义的列表扩展数据项的标记；跟踪或实验RFC。"
    },
    {
      "indent": 0,
      "text": "eitem-vendor-tag = vendor-token \"-\" atom ; a vendor-specific tag for LIST extended data item",
      "zh-CHS": "eitem供应商标签=供应商令牌“-”原子；列表扩展数据项的特定于供应商的标记"
    },
    {
      "indent": 0,
      "text": "enable = \"ENABLE\" 1*(SP capability)",
      "zh-CHS": "enable=“enable”1*（SP功能）"
    },
    {
      "indent": 0,
      "text": "enable-data = \"ENABLED\" *(SP capability)",
      "zh-CHS": "启用数据=“已启用”*（SP功能）"
    },
    {
      "indent": 0,
      "text": "envelope = \"(\" env-date SP env-subject SP env-from SP env-sender SP env-reply-to SP env-to SP env-cc SP env-bcc SP env-in-reply-to SP env-message-id \")\"",
      "zh-CHS": "envelope=“（“环境日期SP env subject SP env from SP env sender SP env reply to SP env to SP env cc SP env bcc SP env in reply to SP env message id”）”"
    },
    {
      "indent": 0,
      "text": "env-bcc         = \"(\" 1*address \")\" / nil",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "env-cc          = \"(\" 1*address \")\" / nil",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "env-date        = nstring",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "env-from        = \"(\" 1*address \")\" / nil",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "env-in-reply-to = nstring",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "env-message-id  = nstring",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "env-reply-to    = \"(\" 1*address \")\" / nil",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "env-sender      = \"(\" 1*address \")\" / nil",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "env-subject     = nstring",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "env-to          = \"(\" 1*address \")\" / nil",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "esearch-response = \"ESEARCH\" [search-correlator] [SP \"UID\"] *(SP search-return-data) ; ESEARCH response replaces SEARCH response ; from IMAP4rev1.",
      "zh-CHS": "esearch response=“esearch”[搜索相关器][SP“UID”]*（SP搜索返回数据）；ESEARCH响应取代搜索响应；来自IMAP4rev1。"
    },
    {
      "indent": 0,
      "text": "examine = \"EXAMINE\" SP mailbox",
      "zh-CHS": "检查=“检查”SP邮箱"
    },
    {
      "indent": 0,
      "text": "fetch           = \"FETCH\" SP sequence-set SP (\n                  \"ALL\" / \"FULL\" / \"FAST\" /\n                  fetch-att / \"(\" fetch-att *(SP fetch-att) \")\")",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "fetch-att       = \"ENVELOPE\" / \"FLAGS\" / \"INTERNALDATE\" /\n                  \"RFC822.SIZE\" /\n                  \"BODY\" [\"STRUCTURE\"] / \"UID\" /\n                  \"BODY\" section [partial] /\n                  \"BODY.PEEK\" section [partial] /\n                  \"BINARY\" [\".PEEK\"] section-binary [partial] /\n                  \"BINARY.SIZE\" section-binary",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "flag            = \"\\Answered\" / \"\\Flagged\" / \"\\Deleted\" /\n                  \"\\Seen\" / \"\\Draft\" / flag-keyword / flag-extension\n                    ; Does not include \"\\Recent\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "flag-extension  = \"\\\" atom\n                    ; Future expansion.  Client implementations\n                    ; MUST accept flag-extension flags.  Server\n                    ; implementations MUST NOT generate\n                    ; flag-extension flags except as defined by\n                    ; a future Standard or Standards Track\n                    ; revisions of this specification.\n                    ; \"\\Recent\" was defined in RFC 3501\n                    ; and is now deprecated.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "flag-fetch      = flag / obsolete-flag-recent",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "flag-keyword    = \"$MDNSent\" / \"$Forwarded\" / \"$Junk\" /\n                  \"$NotJunk\" / \"$Phishing\" / atom",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "flag-list       = \"(\" [flag *(SP flag)] \")\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "flag-perm       = flag / \"\\*\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "greeting        = \"*\" SP (resp-cond-auth / resp-cond-bye) CRLF",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "header-fld-name = astring",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "header-list     = \"(\" header-fld-name *(SP header-fld-name) \")\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "idle = \"IDLE\" CRLF \"DONE\"",
      "zh-CHS": "idle=“idle”CRLF“完成”"
    },
    {
      "indent": 0,
      "text": "initial-resp    =  (base64 / \"=\")\n                   ; \"initial response\" defined in\n                   ; Section 4 of [SASL]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "list = \"LIST\" [SP list-select-opts] SP mailbox SP mbox-or-pat [SP list-return-opts]",
      "zh-CHS": "list=“list”[SP list select opts]SP邮箱SP mbox或pat[SP list return opts]"
    },
    {
      "indent": 0,
      "text": "list-mailbox    = 1*list-char / string",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "list-char       = ATOM-CHAR / list-wildcards / resp-specials",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "list-return-opt = return-option ; Note that return-option is the ABNF ; non-terminal used by RFC 5258",
      "zh-CHS": "列表返回选项=返回选项；注意，返回选项是ABNF；RFC 5258使用的非终端"
    },
    {
      "indent": 0,
      "text": "list-return-opts = \"RETURN\" SP \"(\" [list-return-opt *(SP list-return-opt)] \")\" ; list return options, e.g., CHILDREN",
      "zh-CHS": "列表返回选项=“返回”SP”（“[list return opt*（SP list return opt）]”；列出返回选项，例如子项"
    },
    {
      "indent": 0,
      "text": "list-select-base-opt = \"SUBSCRIBED\" / option-extension ; options that can be used by themselves",
      "zh-CHS": "列表选择base opt=“SUBSCRIBED”/option扩展；可以自己使用的选项"
    },
    {
      "indent": 0,
      "text": "list-select-base-opt-quoted =  DQUOTE list-select-base-opt DQUOTE",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "list-select-independent-opt = \"REMOTE\" / option-extension ; options that do not syntactically interact with ; other options",
      "zh-CHS": "列表选择独立opt=“REMOTE”/opt扩展；在语法上不与之交互的选项；其他选择"
    },
    {
      "indent": 0,
      "text": "list-select-mod-opt = \"RECURSIVEMATCH\" / option-extension ; options that require a list-select-base-opt ; to also be present",
      "zh-CHS": "列表选择mod opt=“RECURSIVEMATCH”/option扩展；需要列表的选项选择基本选项；出席"
    },
    {
      "indent": 0,
      "text": "list-select-opt = list-select-base-opt / list-select-independent-opt / list-select-mod-opt",
      "zh-CHS": "列表选择选项=列表选择基本选项/列表选择独立选项/列表选择修改选项"
    },
    {
      "indent": 0,
      "text": "list-select-opts =  \"(\" [\n                   (*(list-select-opt SP) list-select-base-opt\n                   *(SP list-select-opt))\n                  / (list-select-independent-opt\n                   *(SP list-select-independent-opt))\n                     ] \")\"\n            ; Any number of options may be in any order.\n            ; If a list-select-mod-opt appears, then a\n            ; list-select-base-opt must also appear.\n            ; This allows these:\n            ; ()\n            ; (REMOTE)\n            ; (SUBSCRIBED)\n            ; (SUBSCRIBED REMOTE)\n            ; (SUBSCRIBED RECURSIVEMATCH)\n            ; (SUBSCRIBED REMOTE RECURSIVEMATCH)\n            ; But does NOT allow these:\n            ; (RECURSIVEMATCH)\n            ; (REMOTE RECURSIVEMATCH)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "list-wildcards  = \"%\" / \"*\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "literal         = \"{\" number64 [\"+\"] \"}\" CRLF *CHAR8\n                    ; <number64> represents the number of CHAR8s.\n                    ; A non-synchronizing literal is distinguished\n                    ; from a synchronizing literal by the presence of\n                    ; \"+\" before the closing \"}\".\n                    ; Non-synchronizing literals are not allowed when\n                    ; sent from server to the client.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "literal8 = \"~{\" number64 \"}\" CRLF *OCTET ; <number64> represents the number of OCTETs ; in the response string.",
      "zh-CHS": "literal8=“~{”number64“}”CRLF*八位字节<number64>表示八位字节的数量；在响应字符串中。"
    },
    {
      "indent": 0,
      "text": "login = \"LOGIN\" SP userid SP password",
      "zh-CHS": "login=“login”SP userid SP password"
    },
    {
      "indent": 0,
      "text": "mailbox         = \"INBOX\" / astring\n                    ; INBOX is case insensitive.  All case variants\n                    ; of INBOX (e.g., \"iNbOx\") MUST be interpreted as\n                    ; INBOX, not as an astring.  An astring that\n                    ; consists of the case-insensitive sequence\n                    ; \"I\" \"N\" \"B\" \"O\" \"X\" is considered\n                    ; to be an INBOX and not an astring.\n                    ; Refer to Section 5.1 for further\n                    ; semantic details of mailbox names.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "mailbox-data    =  \"FLAGS\" SP flag-list / \"LIST\" SP mailbox-list /\n                   esearch-response /\n                   \"STATUS\" SP mailbox SP \"(\" [status-att-list] \")\" /\n                   number SP \"EXISTS\" / namespace-response /\n                   obsolete-search-response /\n                   obsolete-recent-response\n                    ; obsolete-search-response and\n                    ; obsolete-recent-response can only be returned\n                    ; by servers that support both IMAPrev1\n                    ; and IMAPrev2.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "mailbox-list = \"(\" [mbx-list-flags] \")\" SP (DQUOTE QUOTED-CHAR DQUOTE / nil) SP mailbox [SP mbox-list-extended] ; This is the list information pointed to by the ABNF ; item \"mailbox-data\", which is defined above",
      "zh-CHS": "邮箱列表=“（“[mbx列表标志]”）SP（DQUOTE QUOTE-CHAR DQUOTE/nil）SP邮箱[SP mbox列表扩展]；这是ABNF指出的列表信息；上面定义的项目“邮箱数据”"
    },
    {
      "indent": 0,
      "text": "mbox-list-extended = \"(\" [mbox-list-extended-item *(SP mbox-list-extended-item)] \")\"",
      "zh-CHS": "mbox列表扩展=“（“[mbox列表扩展项*（SP mbox列表扩展项）]”）"
    },
    {
      "indent": 0,
      "text": "mbox-list-extended-item = mbox-list-extended-item-tag SP tagged-ext-val",
      "zh-CHS": "mbox列表扩展项=mbox列表扩展项标记SP tagged ext val"
    },
    {
      "indent": 0,
      "text": "mbox-list-extended-item-tag = astring\n               ; The content MUST conform to either\n               ; \"eitem-vendor-tag\" or \"eitem-standard-tag\"\n               ; ABNF productions.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "mbox-or-pat =  list-mailbox / patterns",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "mbx-list-flags  = *(mbx-list-oflag SP) mbx-list-sflag\n                  *(SP mbx-list-oflag) /\n                  mbx-list-oflag *(SP mbx-list-oflag)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "mbx-list-oflag  = \"\\Noinferiors\" / child-mbox-flag /\n                  \"\\Subscribed\" / \"\\Remote\" / flag-extension\n               ; Other flags; multiple from this list are\n               ; possible per LIST response, but each flag\n               ; can only appear once per LIST response",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "mbx-list-sflag  = \"\\NonExistent\" / \"\\Noselect\" / \"\\Marked\" /\n                  \"\\Unmarked\"\n               ; Selectability flags; only one per LIST response",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "media-basic     = ((DQUOTE (\"APPLICATION\" / \"AUDIO\" / \"IMAGE\" /\n                  \"FONT\" / \"MESSAGE\" / \"MODEL\" / \"VIDEO\" ) DQUOTE)\n                  / string)\n                  SP media-subtype\n                    ; FONT defined in [RFC8081].\n                    ; MODEL defined in [RFC2077].\n                    ; Other top-level media types\n                    ; are defined in [MIME-IMT].",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "media-message   = DQUOTE \"MESSAGE\" DQUOTE SP\n                  DQUOTE (\"RFC822\" / \"GLOBAL\") DQUOTE\n                    ; Defined in [MIME-IMT]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "media-subtype = string ; Defined in [MIME-IMT]",
      "zh-CHS": "媒体子类型=字符串；在[MIME-IMT]中定义"
    },
    {
      "indent": 0,
      "text": "media-text = DQUOTE \"TEXT\" DQUOTE SP media-subtype ; Defined in [MIME-IMT]",
      "zh-CHS": "媒体文本=DQUOTE“text”DQUOTE SP媒体子类型；在[MIME-IMT]中定义"
    },
    {
      "indent": 0,
      "text": "message-data = nz-number SP (\"EXPUNGE\" / (\"FETCH\" SP msg-att))",
      "zh-CHS": "消息数据=新西兰编号SP（“删除”/（“获取”SP消息附件））"
    },
    {
      "indent": 0,
      "text": "move = \"MOVE\" SP sequence-set SP mailbox",
      "zh-CHS": "move=“move”SP序列设置SP邮箱"
    },
    {
      "indent": 0,
      "text": "msg-att         = \"(\" (msg-att-dynamic / msg-att-static)\n                   *(SP (msg-att-dynamic / msg-att-static)) \")\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "msg-att-dynamic = \"FLAGS\" SP \"(\" [flag-fetch *(SP flag-fetch)] \")\"\n                    ; MAY change for a message",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "msg-att-static  = \"ENVELOPE\" SP envelope /\n                  \"INTERNALDATE\" SP date-time /\n                  \"RFC822.SIZE\" SP number64 /\n                  \"BODY\" [\"STRUCTURE\"] SP body /\n                  \"BODY\" section [\"<\" number \">\"] SP nstring /\n                  \"BINARY\" section-binary SP (nstring / literal8) /\n                  \"BINARY.SIZE\" section-binary SP number /\n                  \"UID\" SP uniqueid\n                    ; MUST NOT change for a message",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "name-component  = 1*UTF8-CHAR\n                    ; MUST NOT contain \".\", \"/\", \"%\", or \"*\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "namespace         = nil / \"(\" 1*namespace-descr \")\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "namespace-command = \"NAMESPACE\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "namespace-descr = \"(\" string SP (DQUOTE QUOTED-CHAR DQUOTE / nil) [namespace-response-extensions] \")\"",
      "zh-CHS": "namespace descr=“（“字符串SP（DQUOTE-quote-CHAR-DQUOTE/nil）[名称空间响应扩展]”）"
    },
    {
      "indent": 0,
      "text": "namespace-response-extensions = *namespace-response-extension",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "namespace-response-extension = SP string SP \"(\" string *(SP string) \")\"",
      "zh-CHS": "命名空间响应扩展名=SP string SP“（“string*（SP string）”）"
    },
    {
      "indent": 0,
      "text": "namespace-response = \"NAMESPACE\" SP namespace\n                      SP namespace SP namespace\n                 ; The first Namespace is the Personal Namespace(s).\n                 ; The second Namespace is the Other Users'\n                 ; Namespace(s).\n                 ; The third Namespace is the Shared Namespace(s).",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "nil             = \"NIL\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "nstring         = string / nil",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "number          = 1*DIGIT\n                    ; Unsigned 32-bit integer\n                    ; (0 <= n < 4,294,967,296)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "number64        = 1*DIGIT\n                    ; Unsigned 63-bit integer\n                    ; (0 <= n <= 9,223,372,036,854,775,807)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "nz-number       = digit-nz *DIGIT\n                    ; Non-zero unsigned 32-bit integer\n                    ; (0 < n < 4,294,967,296)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "nz-number64     = digit-nz *DIGIT\n                    ; Unsigned 63-bit integer\n                    ; (0 < n <= 9,223,372,036,854,775,807)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "obsolete-flag-recent = \"\\Recent\"",
      "zh-CHS": "过时标志recent=“\\recent”"
    },
    {
      "indent": 0,
      "text": "obsolete-recent-response = number SP \"RECENT\"",
      "zh-CHS": "过时的最近响应=编号SP“最近”"
    },
    {
      "indent": 0,
      "text": "obsolete-search-response = \"SEARCH\" *(SP nz-number)",
      "zh-CHS": "过时搜索响应=“搜索”*（SP nz编号）"
    },
    {
      "indent": 0,
      "text": "oldname-extended-item =  \"OLDNAME\" SP \"(\" mailbox \")\"\n                    ; Extended data item (mbox-list-extended-item)\n                    ; returned in a LIST response when a mailbox is\n                    ; renamed or deleted. Also returned when\n                    ; the server canonicalized the provided mailbox\n                    ; name.\n                    ; Note 1: the OLDNAME tag can be returned\n                    ; with or without surrounding quotes, as per\n                    ; mbox-list-extended-item-tag production.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "option-extension = (option-standard-tag / option-vendor-tag)\n                   [SP option-value]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "option-standard-tag = atom ; an option defined in a Standards Track or ; Experimental RFC",
      "zh-CHS": "选项标准标签=原子；标准轨道或轨道中定义的选项；实验RFC"
    },
    {
      "indent": 0,
      "text": "option-val-comp =  astring /\n                   option-val-comp *(SP option-val-comp) /\n                   \"(\" option-val-comp \")\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "option-value = \"(\" option-val-comp \")\"",
      "zh-CHS": "选项值=“（“选项值补偿”）”"
    },
    {
      "indent": 0,
      "text": "option-vendor-tag = vendor-token \"-\" atom ; a vendor-specific option, non-standard",
      "zh-CHS": "选项供应商标签=供应商令牌“-”原子；供应商特定选项，非标准"
    },
    {
      "indent": 0,
      "text": "partial-range = number64 [\".\" nz-number64] ; Copied from RFC 5092 (IMAP URL) ; and updated to support 64-bit sizes.",
      "zh-CHS": "部分范围=数字64[“”nz-number64]；从RFC 5092（IMAP URL）复制；并更新为支持64位大小。"
    },
    {
      "indent": 0,
      "text": "partial         = \"<\" number64 \".\" nz-number64 \">\"\n                    ; Partial FETCH request. 0-based offset of\n                    ; the first octet, followed by the number of\n                    ; octets in the fragment.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "password        = astring",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "patterns        = \"(\" list-mailbox \")\"\n                  ; [RFC5258] supports multiple patterns,\n                  ; but this document only requires one\n                  ; to be supported.\n                  ; If the server is also implementing\n                  ; [RFC5258], the \"patterns\" syntax from\n                  ; that document must be followed.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "quoted = DQUOTE *QUOTED-CHAR DQUOTE",
      "zh-CHS": "quoted=DQUOTE*quoted-CHAR DQUOTE"
    },
    {
      "indent": 0,
      "text": "QUOTED-CHAR     = <any TEXT-CHAR except quoted-specials> /\n                  \"\\\" quoted-specials / UTF8-2 / UTF8-3 / UTF8-4",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "quoted-specials = DQUOTE / \"\\\"",
      "zh-CHS": "报价特价=DQUOTE/“\\”"
    },
    {
      "indent": 0,
      "text": "rename = \"RENAME\" SP mailbox SP mailbox ; Use of INBOX as a destination gives a NO error",
      "zh-CHS": "rename=“rename”SP邮箱SP邮箱；使用收件箱作为目的地不会出现错误"
    },
    {
      "indent": 0,
      "text": "response        = *(continue-req / response-data) response-done",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "response-data   = \"*\" SP (resp-cond-state / resp-cond-bye /\n                  mailbox-data / message-data / capability-data /\n                  enable-data) CRLF",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "response-done   = response-tagged / response-fatal",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "response-fatal = \"*\" SP resp-cond-bye CRLF ; Server closes connection immediately",
      "zh-CHS": "response fatal=“*”SP resp cond bye CRLF；服务器立即关闭连接"
    },
    {
      "indent": 0,
      "text": "response-tagged = tag SP resp-cond-state CRLF",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "resp-code-apnd = \"APPENDUID\" SP nz-number SP append-uid",
      "zh-CHS": "响应代码apnd=“APPENDUID”SP nz编号SP APPENDUID"
    },
    {
      "indent": 0,
      "text": "resp-code-copy = \"COPYUID\" SP nz-number SP uid-set SP uid-set",
      "zh-CHS": "resp code copy=“COPYUID”SP nz编号SP uid set SP uid set"
    },
    {
      "indent": 0,
      "text": "resp-cond-auth  = (\"OK\" / \"PREAUTH\") SP resp-text\n                    ; Authentication condition",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "resp-cond-bye = \"BYE\" SP resp-text",
      "zh-CHS": "resp cond bye=“bye”SP resp text"
    },
    {
      "indent": 0,
      "text": "resp-cond-state = (\"OK\" / \"NO\" / \"BAD\") SP resp-text\n                    ; Status condition",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "resp-specials = \"]\"",
      "zh-CHS": "resp specials=“]”"
    },
    {
      "indent": 0,
      "text": "resp-text       = [\"[\" resp-text-code \"]\" SP] [text]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "resp-text-code  = \"ALERT\" /\n                  \"BADCHARSET\" [SP \"(\" charset *(SP charset) \")\" ] /\n                  capability-data / \"PARSE\" /\n                  \"PERMANENTFLAGS\" SP\n                      \"(\" [flag-perm *(SP flag-perm)] \")\" /\n                  \"READ-ONLY\" / \"READ-WRITE\" / \"TRYCREATE\" /\n                  \"UIDNEXT\" SP nz-number /\n                  \"UIDVALIDITY\" SP nz-number /\n                  resp-code-apnd / resp-code-copy / \"UIDNOTSTICKY\" /\n                  \"UNAVAILABLE\" / \"AUTHENTICATIONFAILED\" /\n                  \"AUTHORIZATIONFAILED\" / \"EXPIRED\" /\n                  \"PRIVACYREQUIRED\" / \"CONTACTADMIN\" / \"NOPERM\" /\n                  \"INUSE\" / \"EXPUNGEISSUED\" / \"CORRUPTION\" /\n                  \"SERVERBUG\" / \"CLIENTBUG\" / \"CANNOT\" /\n                  \"LIMIT\" / \"OVERQUOTA\" / \"ALREADYEXISTS\" /\n                  \"NONEXISTENT\" / \"NOTSAVED\" / \"HASCHILDREN\" /\n                  \"CLOSED\" /\n                  \"UNKNOWN-CTE\" /\n                  atom [SP 1*<any TEXT-CHAR except \"]\">]",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "return-option   = \"SUBSCRIBED\" / \"CHILDREN\" / status-option /\n                   option-extension",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "search = \"SEARCH\" [search-return-opts] SP search-program",
      "zh-CHS": "search=“search”[search return opts]SP搜索程序"
    },
    {
      "indent": 0,
      "text": "search-correlator = SP \"(\" \"TAG\" SP tag-string \")\"",
      "zh-CHS": "搜索相关器=SP“（“标记”SP标记字符串“）"
    },
    {
      "indent": 0,
      "text": "search-key      = \"ALL\" / \"ANSWERED\" / \"BCC\" SP astring /\n                  \"BEFORE\" SP date / \"BODY\" SP astring /\n                  \"CC\" SP astring / \"DELETED\" / \"FLAGGED\" /\n                  \"FROM\" SP astring / \"KEYWORD\" SP flag-keyword /\n                  \"ON\" SP date / \"SEEN\" /\n                  \"SINCE\" SP date / \"SUBJECT\" SP astring /\n                  \"TEXT\" SP astring / \"TO\" SP astring /\n                  \"UNANSWERED\" / \"UNDELETED\" / \"UNFLAGGED\" /\n                  \"UNKEYWORD\" SP flag-keyword / \"UNSEEN\" /\n                    ; Above this line were in [IMAP2]\n                  \"DRAFT\" / \"HEADER\" SP header-fld-name SP astring /\n                  \"LARGER\" SP number64 / \"NOT\" SP search-key /\n                  \"OR\" SP search-key SP search-key /\n                  \"SENTBEFORE\" SP date / \"SENTON\" SP date /\n                  \"SENTSINCE\" SP date / \"SMALLER\" SP number64 /\n                  \"UID\" SP sequence-set / \"UNDRAFT\" / sequence-set /\n                  \"(\" search-key *(SP search-key) \")\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "search-modifier-name = tagged-ext-label",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "search-mod-params = tagged-ext-val ; This non-terminal shows recommended syntax ; for future extensions.",
      "zh-CHS": "search mod params=标记的外部值；这个非终端显示推荐的语法；用于将来的扩展。"
    },
    {
      "indent": 0,
      "text": "search-program     = [\"CHARSET\" SP charset SP]\n                    search-key *(SP search-key)\n                    ; CHARSET argument to SEARCH MUST be\n                    ; registered with IANA.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "search-ret-data-ext = search-modifier-name SP search-return-value\n                    ; Note that not every SEARCH return option\n                    ; is required to have the corresponding\n                    ; ESEARCH return data.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "search-return-data = \"MIN\" SP nz-number /\n                    \"MAX\" SP nz-number /\n                    \"ALL\" SP sequence-set /\n                    \"COUNT\" SP number /\n                    search-ret-data-ext\n                    ; All return data items conform to\n                    ; search-ret-data-ext syntax.\n                    ; Note that \"$\" marker is not allowed\n                    ; after the ALL return data item.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "search-return-opts = SP \"RETURN\" SP \"(\" [search-return-opt *(SP search-return-opt)] \")\"",
      "zh-CHS": "搜索返回选项=SP“return”SP“（“[search return opt*（SP search return opt）]”）"
    },
    {
      "indent": 0,
      "text": "search-return-opt  = \"MIN\" / \"MAX\" / \"ALL\" / \"COUNT\" /\n                     \"SAVE\" /\n                     search-ret-opt-ext\n                    ; conforms to generic search-ret-opt-ext\n                    ; syntax",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "search-ret-opt-ext = search-modifier-name [SP search-mod-params]",
      "zh-CHS": "搜索ret opt ext=搜索修饰符名称[SP search mod params]"
    },
    {
      "indent": 0,
      "text": "search-return-value = tagged-ext-val\n                    ; Data for the returned search option.\n                    ; A single \"nz-number\"/\"number\"/\"number64\" value\n                    ; can be returned as an atom (i.e., without\n                    ; quoting).  A sequence-set can be returned\n                    ; as an atom as well.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "section = \"[\" [section-spec] \"]\"",
      "zh-CHS": "section=“[”[section spec]”"
    },
    {
      "indent": 0,
      "text": "section-binary = \"[\" [section-part] \"]\"",
      "zh-CHS": "section binary=“[”[section part]”"
    },
    {
      "indent": 0,
      "text": "section-msgtext = \"HEADER\" /\n                  \"HEADER.FIELDS\" [\".NOT\"] SP header-list /\n                  \"TEXT\"\n                    ; top-level or MESSAGE/RFC822 or\n                    ; MESSAGE/GLOBAL part",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "section-part = nz-number *(\".\" nz-number) ; body part reference. ; Allows for accessing nested body parts.",
      "zh-CHS": "截面部分=新西兰编号*（“”新西兰编号）；身体部位参考；允许访问嵌套的身体部位。"
    },
    {
      "indent": 0,
      "text": "section-spec = section-msgtext / (section-part [\".\" section-text])",
      "zh-CHS": "截面规格=截面msgtext/（截面部分[“”截面文字]）"
    },
    {
      "indent": 0,
      "text": "section-text = section-msgtext / \"MIME\" ; text other than actual body part (headers, ; etc.)",
      "zh-CHS": "节文本=节msgtext/“MIME”；实际正文部分以外的文本（标题等）"
    },
    {
      "indent": 0,
      "text": "select = \"SELECT\" SP mailbox",
      "zh-CHS": "select=“select”SP邮箱"
    },
    {
      "indent": 0,
      "text": "seq-number      = nz-number / \"*\"\n                    ; message sequence number (COPY, FETCH, STORE\n                    ; commands) or unique identifier (UID COPY,\n                    ; UID FETCH, UID STORE commands).\n                    ; * represents the largest number in use.  In\n                    ; the case of message sequence numbers, it is\n                    ; the number of messages in a non-empty mailbox.\n                    ; In the case of unique identifiers, it is the\n                    ; unique identifier of the last message in the\n                    ; mailbox or, if the mailbox is empty, the\n                    ; mailbox's current UIDNEXT value.\n                    ; The server should respond with a tagged BAD\n                    ; response to a command that uses a message\n                    ; sequence number greater than the number of\n                    ; messages in the selected mailbox.  This\n                    ; includes \"*\" if the selected mailbox is empty.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "seq-range       = seq-number \":\" seq-number\n                    ; two seq-number values and all values between\n                    ; these two regardless of order.\n                    ; Example: 2:4 and 4:2 are equivalent and\n                    ; indicate values 2, 3, and 4.\n                    ; Example: a unique identifier sequence range of\n                    ; 3291:* includes the UID of the last message in\n                    ; the mailbox, even if that value is less than\n                    ; 3291.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "sequence-set    = (seq-number / seq-range) [\",\" sequence-set]\n                    ; set of seq-number values, regardless of order.\n                    ; Servers MAY coalesce overlaps and/or execute\n                    ; the sequence in any order.\n                    ; Example: a message sequence number set of\n                    ; 2,4:7,9,12:* for a mailbox with 15 messages is\n                    ; equivalent to 2,4,5,6,7,9,12,13,14,15\n                    ; Example: a message sequence number set of\n                    ; *:4,5:7 for a mailbox with 10 messages is\n                    ; equivalent to 10,9,8,7,6,5,4,5,6,7 and MAY\n                    ; be reordered and overlap coalesced to be\n                    ; 4,5,6,7,8,9,10.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "sequence-set =/ seq-last-command ; Allow for \"result of the last command\" ; indicator.",
      "zh-CHS": "序列集=/seq last命令；允许“最后一个命令的结果”；指示信号"
    },
    {
      "indent": 0,
      "text": "seq-last-command = \"$\"",
      "zh-CHS": "seq last command=“$”"
    },
    {
      "indent": 0,
      "text": "status = \"STATUS\" SP mailbox SP \"(\" status-att *(SP status-att) \")\"",
      "zh-CHS": "status=“status”SP邮箱SP”（“status att*（SP status att）”）"
    },
    {
      "indent": 0,
      "text": "status-att      = \"MESSAGES\" / \"UIDNEXT\" / \"UIDVALIDITY\" /\n                  \"UNSEEN\" / \"DELETED\" / \"SIZE\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "status-att-val  = (\"MESSAGES\" SP number) /\n                  (\"UIDNEXT\" SP nz-number) /\n                  (\"UIDVALIDITY\" SP nz-number) /\n                  (\"UNSEEN\" SP number) /\n                  (\"DELETED\" SP number) /\n                  (\"SIZE\" SP number64)\n                    ; Extensions to the STATUS responses\n                    ; should extend this production.\n                    ; Extensions should use the generic\n                    ; syntax defined by tagged-ext.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "status-att-list = status-att-val *(SP status-att-val)",
      "zh-CHS": "状态附件列表=状态附件val*（SP状态附件val）"
    },
    {
      "indent": 0,
      "text": "status-option = \"STATUS\" SP \"(\" status-att *(SP status-att) \")\" ; This ABNF production complies with ; <option-extension> syntax.",
      "zh-CHS": "status option=“status”SP”（“status att*（SP status att）”）；本ABNF产品符合以下要求：<选项扩展>语法。"
    },
    {
      "indent": 0,
      "text": "store = \"STORE\" SP sequence-set SP store-att-flags",
      "zh-CHS": "store=“store”SP序列设置SP store att标志"
    },
    {
      "indent": 0,
      "text": "store-att-flags = ([\"+\" / \"-\"] \"FLAGS\" [\".SILENT\"]) SP\n                  (flag-list / (flag *(SP flag)))",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "string          = quoted / literal",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "subscribe = \"SUBSCRIBE\" SP mailbox",
      "zh-CHS": "subscribe=“subscribe”SP邮箱"
    },
    {
      "indent": 0,
      "text": "tag             = 1*<any ASTRING-CHAR except \"+\">",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "tag-string      = astring\n                  ; <tag> represented as <astring>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "tagged-ext-label = tagged-label-fchar *tagged-label-char ; Is a valid RFC 3501 \"atom\".",
      "zh-CHS": "tagged ext label=tagged label fchar*tagged label char；是有效的RFC 3501“atom”。"
    },
    {
      "indent": 0,
      "text": "tagged-label-fchar  = ALPHA / \"-\" / \"_\" / \".\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "tagged-label-char   = tagged-label-fchar / DIGIT / \":\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "tagged-ext-comp     = astring /\n                      tagged-ext-comp *(SP tagged-ext-comp) /\n                      \"(\" tagged-ext-comp \")\"\n                      ; Extensions that follow this general\n                      ; syntax should use nstring instead of\n                      ; astring when appropriate in the context\n                      ; of the extension.\n                      ; Note that a message set or a \"number\"\n                      ; can always be represented as an \"atom\".\n                      ; A URL should be represented as\n                      ; a \"quoted\" string.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "tagged-ext-simple   = sequence-set / number / number64",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "tagged-ext-val = tagged-ext-simple / \"(\" [tagged-ext-comp] \")\"",
      "zh-CHS": "tagged ext val=tagged ext simple/“（“[tagged ext comp]”）"
    },
    {
      "indent": 0,
      "text": "text            = 1*(TEXT-CHAR / UTF8-2 / UTF8-3 / UTF8-4)\n                    ; Non-ASCII text can only be returned\n                    ; after ENABLE IMAP4rev2 command",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "TEXT-CHAR       = <any CHAR except CR and LF>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "time            = 2DIGIT \":\" 2DIGIT \":\" 2DIGIT\n                    ; Hours minutes seconds",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "uid             = \"UID\" SP\n                  (copy / move / fetch / search / store /\n                   uid-expunge)\n                    ; Unique identifiers used instead of message\n                    ; sequence numbers",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "uid-expunge = \"EXPUNGE\" SP sequence-set ; Unique identifiers used instead of message ; sequence numbers",
      "zh-CHS": "uid expunge=“expunge”SP序列集；使用唯一标识符代替消息；序列号"
    },
    {
      "indent": 0,
      "text": "uid-set         = (uniqueid / uid-range) *(\",\" uid-set)",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "uid-range       = (uniqueid \":\" uniqueid)\n                    ; two uniqueid values and all values\n                    ; between these two regardless of order.\n                    ; Example: 2:4 and 4:2 are equivalent.",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "uniqueid = nz-number ; Strictly ascending",
      "zh-CHS": "唯一ID=新西兰编号；严格上升"
    },
    {
      "indent": 0,
      "text": "unsubscribe = \"UNSUBSCRIBE\" SP mailbox",
      "zh-CHS": "unsubscribe=“unsubscribe”SP邮箱"
    },
    {
      "indent": 0,
      "text": "userid          = astring",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "UTF8-CHAR       = <Defined in Section 4 of RFC 3629>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "UTF8-2          = <Defined in Section 4 of RFC 3629>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "UTF8-3          = <Defined in Section 4 of RFC 3629>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "UTF8-4          = <Defined in Section 4 of RFC 3629>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "vendor-token = \"vendor.\" name-component ; Definition copied from RFC 2244. ; MUST be registered with IANA",
      "zh-CHS": "供应商令牌=“供应商”。名称组件；从RFC 2244复制的定义；必须在IANA注册"
    },
    {
      "indent": 0,
      "text": "zone            = (\"+\" / \"-\") 4DIGIT\n                    ; Signed four-digit value of hhmm representing\n                    ; hours and minutes east of Greenwich (that is,\n                    ; the amount that the given time differs from\n                    ; Universal Time).  Subtracting the timezone\n                    ; from the given time will give the UT form.\n                    ; The Universal Time zone is \"+0000\".",
      "raw": true,
      "zh-CHS": " "
    }
  ]
}