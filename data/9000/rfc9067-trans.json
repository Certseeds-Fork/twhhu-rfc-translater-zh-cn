{
  "title": {
    "text": "RFC 9067: A YANG Data Model for Routing Policy",
    "zh-CHS": "RFC 9067"
  },
  "number": 9067,
  "created_at": "2021-10-28 02:59:40.525982+08:00",
  "updated_by": "",
  "contents": [
    {
      "indent": 0,
      "text": "+--rw routing-policy\n     +--rw policy-definitions\n        +--ro match-modified-attributes?   boolean\n        +--rw policy-definition* [name]\n           +--rw name          string\n           +--rw statements\n              +--rw statement* [name]\n                 +--rw name          string\n                 +--rw conditions\n                 |     ...\n                 +--rw actions\n                       ...",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 4,
      "text": "+--rw routing-policy\n   +--rw defined-sets\n   |  +--rw prefix-sets\n   |  |  +--rw prefix-set* [name]\n   |  |     +--rw name        string\n   |  |     +--rw mode?       enumeration\n   |  |     +--rw prefixes\n   |  |        +--rw prefix-list* [ip-prefix mask-length-lower\n   |  |                            mask-length-upper]\n   |  |           +--rw ip-prefix           inet:ip-prefix\n   |  |           +--rw mask-length-lower    uint8\n   |  |           +--rw mask-length-upper    uint8\n   |  +--rw neighbor-sets\n   |  |  +--rw neighbor-set* [name]\n   |  |     +--rw name       string\n   |  |     +--rw address*   inet:ip-address\n   |  +--rw tag-sets\n   |     +--rw tag-set* [name]\n   |        +--rw name         string\n   |        +--rw tag-value*   tag-type",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "+--rw routing-policy\n   +--rw policy-definitions\n      +--rw policy-definition* [name]\n         +--rw name          string\n         +--rw statements\n            +--rw statement* [name]\n               +--rw conditions\n               |  +--rw call-policy?\n               |  +--rw source-protocol?\n               |  +--rw match-interface\n               |  |  +--rw interface?\n               |  +--rw match-prefix-set\n               |  |  +--rw prefix-set?\n               |  |  +--rw match-set-options?\n               |  +--rw match-neighbor-set\n               |  |  +--rw neighbor-set?\n               |  +--rw match-tag-set\n               |  |  +--rw tag-set?\n               |  |  +--rw match-set-options?\n               |  +--rw match-route-type\n               |     +--rw route-type*",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "+--rw routing-policy\n   +--rw policy-definitions\n      +--rw policy-definition* [name]\n         +--rw statements\n            +--rw statement* [name]\n               +--rw actions\n                  +--rw policy-result?   policy-result-type\n                  +--rw set-metric\n                  |  +--rw metric-modification?\n                  |  |         metric-modification-type\n                  |  +--rw metric?                 uint32\n                  +--rw set-metric-type\n                  |  +--rw metric-type?   identityref\n                  +--rw set-route-level\n                  |  +--rw route-level?   identityref\n                  +--rw set-route-preference?      uint16\n                  +--rw set-tag?               tag-type\n                  +--rw set-application-tag?   tag-type",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": "+--rw apply-policy\n|  +--rw import-policy*\n|  +--rw default-import-policy?   default-policy-type\n|  +--rw export-policy*\n|  +--rw default-export-policy?   default-policy-type",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "module: ietf-routing-policy\n  +--rw routing-policy\n     +--rw defined-sets\n     |  +--rw prefix-sets\n     |  |  +--rw prefix-set* [name mode]\n     |  |     +--rw name        string\n     |  |     +--rw mode        enumeration\n     |  |     +--rw prefixes\n     |  |        +--rw prefix-list* [ip-prefix mask-length-lower\n     |  |                            mask-length-upper]\n     |  |           +--rw ip-prefix            inet:ip-prefix\n     |  |           +--rw mask-length-lower    uint8\n     |  |           +--rw mask-length-upper    uint8\n     |  +--rw neighbor-sets\n     |  |  +--rw neighbor-set* [name]\n     |  |     +--rw name       string\n     |  |     +--rw address*   inet:ip-address\n     |  +--rw tag-sets\n     |     +--rw tag-set* [name]\n     |        +--rw name         string\n     |        +--rw tag-value*   tag-type\n     +--rw policy-definitions\n        +--ro match-modified-attributes?   boolean\n        +--rw policy-definition* [name]\n           +--rw name          string\n           +--rw statements\n              +--rw statement* [name]\n                 +--rw name          string\n                 +--rw conditions\n                 |  +--rw call-policy?       -> ../../../../../..\n                 |                           /policy-definitions\n                 |                           /policy-definition/name\n                 |  +--rw source-protocol?      identityref\n                 |  +--rw match-interface\n                 |  |  +--rw interface?      if:interface-ref\n                 |  +--rw match-prefix-set\n                 |  |  +--rw prefix-set?     -> ../../../../../../..\n                 |  |                        /defined-sets\n                 |  |                        /prefix-sets\n                 |  |                        /prefix-set/name\n                 |  |  +--rw match-set-options?\n                 |  |                        match-set-options-type\n                 |  +--rw match-neighbor-set\n                 |  |  +--rw neighbor-set?   -> ../../../../../../..\n                 |  |                        /defined-sets\n                 |  |                        /neighbor-sets\n                 |  |                        /neighbor-set/name\n                 |  +--rw match-tag-set\n                 |  |  +--rw tag-set?        -> ../../../../../../..\n                 |  |                        /defined-sets/tag-sets\n                 |  |                        /tag-set/name\n                 |  |  +--rw match-set-options?\n                 |  |                        match-set-options-type\n                 |  +--rw match-route-type\n                 |     +--rw route-type*     identityref\n                 +--rw actions\n                    +--rw policy-result?         policy-result-type\n                    +--rw set-metric\n                    |  +--rw metric-modification?\n                    |                        metric-modification-type\n                    |  +--rw metric?                uint32\n                    +--rw set-metric-type\n                    |  +--rw metric-type?   identityref\n                    +--rw set-route-level\n                    |  +--rw route-level?   identityref\n                    +--rw set-route-preference?        uint16\n                    +--rw set-tag?               tag-type\n                    +--rw set-application-tag?   tag-type\n<CODE BEGINS> file \"ietf-routing-policy@2021-10-11.yang\"",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "module ietf-routing-policy {\n  yang-version 1.1;\n  namespace \"urn:ietf:params:xml:ns:yang:ietf-routing-policy\";\n  prefix rt-pol;",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "import ietf-inet-types {\n  prefix inet;\n  reference\n    \"RFC 6991: Common YANG Data Types\";\n}\nimport ietf-yang-types {\n  prefix yang;\n  reference\n    \"RFC 6991: Common YANG Data Types\";\n}\nimport ietf-interfaces {\n  prefix if;\n  reference\n    \"RFC 8343: A YANG Data Model for Interface\n               Management\";\n}\nimport ietf-routing {\n  prefix rt;\n  reference\n    \"RFC 8349: A YANG Data Model for Routing\n               Management (NMDA Version)\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "organization\n  \"IETF RTGWG - Routing Area Working Group\";\ncontact\n  \"WG Web:   <https://datatracker.ietf.org/wg/rtgwg/>\n   WG List:  <mailto: rtgwg@ietf.org>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": " Editors: Yingzhen Qu <mailto: yingzhen.qu@futurewei.com> Jeff Tantsura <mailto: jefftant.ietf@gmail.com> Acee Lindem <mailto: acee@cisco.com> Xufeng Liu <mailto: xufeng.liu.ietf@gmail.com>\"; description \"This module describes a YANG data model for routing policy configuration. It is a limited subset of all of the policy configuration parameters available in the variety of vendor implementations, but supports widely used constructs for managing how routes are imported, exported, modified, and advertised across different routing protocol instances or within a single routing protocol instance. This module is intended to be used in conjunction with routing protocol configuration modules (e.g., BGP) defined in other models.",
      "zh-CHS": "编辑：瞿英珍<mailto:Yingzhen。qu@futurewei.com>杰夫·坦特拉<mailto:jefftant。ietf@gmail.com>Acee Lindem<mailto：acee@cisco.com>刘旭峰<mailto:Xufeng.Liu。ietf@gmail.com>“说明”此模块描述用于路由策略配置的数据模型。它是各种供应商实现中可用的所有策略配置参数的有限子集，但支持广泛使用的结构，用于管理如何跨不同路由协议实例或单个路由协议实例导入、导出、修改和公布路由。该模块旨在与其他型号中定义的路由协议配置模块（如BGP）结合使用。"
    },
    {
      "indent": 5,
      "text": "This YANG module conforms to the Network Management Datastore Architecture (NMDA), as described in RFC 8342.",
      "zh-CHS": "该模块符合RFC 8342中所述的网络管理数据存储体系结构（NMDA）。"
    },
    {
      "indent": 5,
      "text": "The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED', 'MAY', and 'OPTIONAL' in this document are to be interpreted as described in BCP 14 (RFC 2119) (RFC 8174) when, and only when, they appear in all capitals, as shown here.",
      "zh-CHS": "本文件中的关键词“必须”、“不得”、“必需”、“应”、“不应”、“建议”、“不建议”、“可能”和“可选”在所有大写字母出现时（如图所示）应按照BCP 14（RFC 2119）（RFC 8174）所述进行解释。"
    },
    {
      "indent": 5,
      "text": "Copyright (c) 2021 IETF Trust and the persons identified as authors of the code. All rights reserved.",
      "zh-CHS": "版权所有（c）2021 IETF信托基金和被确定为代码作者的人员。版权所有。"
    },
    {
      "indent": 5,
      "text": "Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (https://trustee.ietf.org/license-info).",
      "zh-CHS": "根据IETF信托有关IETF文件的法律规定第4.c节规定的简化BSD许可证中包含的许可条款，允许以源代码和二进制格式重新分发和使用，无论是否修改(https://trustee.ietf.org/license-info)."
    },
    {
      "indent": 5,
      "text": "This version of this YANG module is part of RFC 9067;\nsee the RFC itself for full legal notices.\";",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "reference \"RFC 9067: A YANG Data Model for Routing Policy.\";",
      "zh-CHS": "参考“RFC 9067：路由策略的数据模型”；"
    },
    {
      "indent": 2,
      "text": "revision 2021-10-11 {\n  description\n    \"Initial revision.\";\n  reference\n    \"RFC 9067: A YANG Data Model for Routing Policy.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "/* Identities */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity metric-type {\n  description\n    \"Base identity for route metric types.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-type-1-metric {\n  base metric-type;\n  description\n    \"Identity for the OSPF type 1 external metric types.  It\n     is only applicable to OSPF routes.\";\n  reference\n    \"RFC 2328: OSPF Version 2\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-type-2-metric {\n  base metric-type;\n  description\n    \"Identity for the OSPF type 2 external metric types.  It\n     is only applicable to OSPF routes.\";\n  reference\n    \"RFC 2328: OSPF Version 2\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity isis-internal-metric {\n  base metric-type;\n  description\n    \"Identity for the IS-IS internal metric types.  It is only\n     applicable to IS-IS routes.\";\n  reference\n    \"RFC 5302: Domain-Wide Prefix Distribution with\n     Two-Level IS-IS\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity isis-external-metric {\n  base metric-type;\n  description\n    \"Identity for the IS-IS external metric types.  It is only\n     applicable to IS-IS routes.\";\n  reference\n    \"RFC 5302: Domain-Wide Prefix Distribution with\n     Two-Level IS-IS\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity route-level {\n  description\n    \"Base identity for route import level.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-normal {\n  base route-level;\n  description\n    \"Identity for OSPF importation into normal areas.\n     It is only applicable to routes imported\n     into the OSPF protocol.\";\n  reference\n    \"RFC 2328: OSPF Version 2\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-nssa-only {\n  base route-level;\n  description\n    \"Identity for the OSPF Not-So-Stubby Area (NSSA) area\n     importation.  It is only applicable to routes imported\n     into the OSPF protocol.\";\n  reference\n    \"RFC 3101: The OSPF Not-So-Stubby Area (NSSA) Option\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-normal-nssa {\n  base route-level;\n  description\n    \"Identity for OSPF importation into both normal and NSSA\n     areas.  It is only applicable to routes imported into\n     the OSPF protocol.\";\n  reference\n    \"RFC 3101: The OSPF Not-So-Stubby Area (NSSA) Option\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity isis-level-1 {\n  base route-level;\n  description\n    \"Identity for IS-IS Level 1 area importation.  It is only\n     applicable to routes imported into the IS-IS protocol.\";\n  reference\n    \"RFC 5302: Domain-Wide Prefix Distribution with\n     Two-Level IS-IS\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity isis-level-2 {\n  base route-level;\n  description\n    \"Identity for IS-IS Level 2 area importation.  It is only\n     applicable to routes imported into the IS-IS protocol.\";\n  reference\n    \"RFC 5302: Domain-Wide Prefix Distribution with\n     Two-Level IS-IS\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity isis-level-1-2 {\n  base route-level;\n  description\n    \"Identity for IS-IS importation into both Level 1 and Level 2\n     areas.  It is only applicable to routes imported into the\n     IS-IS protocol.\";\n  reference\n    \"RFC 5302: Domain-Wide Prefix Distribution with\n     Two-Level IS-IS\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity proto-route-type {\n  description\n    \"Base identity for route type within a protocol.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity isis-level-1-type {\n  base proto-route-type;\n  description\n    \"Identity for IS-IS Level 1 route type.  It is only\n     applicable to IS-IS routes.\";\n  reference\n    \"RFC 5302: Domain-Wide Prefix Distribution with\n     Two-Level IS-IS\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity isis-level-2-type {\n  base proto-route-type;\n  description\n    \"Identity for IS-IS Level 2 route type.  It is only\n     applicable to IS-IS routes.\";\n  reference\n    \"RFC 5302: Domain-Wide Prefix Distribution with\n     Two-Level IS-IS\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-internal-type {\n  base proto-route-type;\n  description\n    \"Identity for OSPF intra-area or inter-area route type.\n     It is only applicable to OSPF routes.\";\n  reference\n    \"RFC 2328: OSPF Version 2\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-external-type {\n  base proto-route-type;\n  description\n    \"Identity for OSPF external type 1/2 route type.\n     It is only applicable to OSPF routes.\";\n  reference\n    \"RFC 2328: OSPF Version 2\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-external-t1-type {\n  base ospf-external-type;\n  description\n    \"Identity for OSPF external type 1 route type.\n     It is only applicable to OSPF routes.\";\n  reference\n    \"RFC 2328: OSPF Version 2\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-external-t2-type {\n  base ospf-external-type;\n  description\n    \"Identity for OSPF external type 2 route type.\n     It is only applicable to OSPF routes.\";\n  reference\n    \"RFC 2328: OSPF Version 2\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-nssa-type {\n  base proto-route-type;\n  description\n    \"Identity for OSPF NSSA type 1/2 route type.\n     It is only applicable to OSPF routes.\";\n  reference\n    \"RFC 3101: The OSPF Not-So-Stubby Area (NSSA) Option\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-nssa-t1-type {\n  base ospf-nssa-type;\n  description\n    \"Identity for OSPF NSSA type 1 route type.\n     It is only applicable to OSPF routes.\";\n  reference\n    \"RFC 3101: The OSPF Not-So-Stubby Area (NSSA) Option\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity ospf-nssa-t2-type {\n  base ospf-nssa-type;\n  description\n    \"Identity for OSPF NSSA type 2 route type.\n     It is only applicable to OSPF routes.\";\n  reference\n    \"RFC 3101: The OSPF Not-So-Stubby Area (NSSA) Option\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity bgp-internal {\n  base proto-route-type;\n  description\n    \"Identity for routes learned from internal BGP (IBGP).\n     It is only applicable to BGP routes.\";\n  reference\n    \"RFC 4271: A Border Gateway Protocol 4 (BGP-4)\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "identity bgp-external {\n  base proto-route-type;\n  description\n    \"Identity for routes learned from external BGP (EBGP).\n     It is only applicable to BGP routes.\";\n  reference\n    \"RFC 4271: A Border Gateway Protocol 4 (BGP-4)\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "/* Type Definitions */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "typedef default-policy-type {\n  type enumeration {\n    enum accept-route {\n      description\n        \"Default policy to accept the route.\";\n    }\n    enum reject-route {\n      description\n        \"Default policy to reject the route.\";\n    }\n  }\n  description\n    \"Type used to specify route disposition in\n     a policy chain.  This typedef is used in\n     the default import and export policy.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "typedef policy-result-type {\n  type enumeration {\n    enum accept-route {\n      description\n        \"Policy accepts the route.\";\n    }\n    enum reject-route {\n      description\n        \"Policy rejects the route.\";\n    }\n  }\n  description\n    \"Type used to specify route disposition in\n     a policy chain.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "typedef tag-type {\n  type union {\n    type uint32;\n    type yang:hex-string;\n  }\n  description\n    \"Type for expressing route tags on a local system,\n     including IS-IS and OSPF; may be expressed as either decimal\n     or hexadecimal integer.\";\n  reference\n    \"RFC 2328: OSPF Version 2\n     RFC 5130: A Policy Control Mechanism in IS-IS Using\n               Administrative Tags\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "typedef match-set-options-type {\n  type enumeration {\n    enum any {\n      description\n        \"Match is true if given value matches any member\n         of the defined set.\";\n    }\n    enum all {\n      description\n        \"Match is true if given value matches all\n         members of the defined set.\";\n    }\n    enum invert {\n      description\n        \"Match is true if given value does not match any\n         member of the defined set.\";\n    }\n  }\n  default \"any\";\n  description\n    \"Options that govern the behavior of a match statement.  The\n     default behavior is any, i.e., the given value matches any\n     of the members of the defined set.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "typedef metric-modification-type {\n  type enumeration {\n    enum set-metric {\n      description\n        \"Set the metric to the specified value.\";\n    }\n    enum add-metric {\n      description\n        \"Add the specified value to the existing metric.\n         If the result overflows the maximum metric\n         (0xffffffff), set the metric to the maximum.\";\n    }\n    enum subtract-metric {\n      description\n        \"Subtract the specified value from the existing metric.  If\n         the result is less than 0, set the metric to 0.\";\n    }\n  }\n  description\n    \"Type used to specify how to set the metric given the\n     specified value.\";\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "/* Groupings */",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping prefix { description \"Configuration data for a prefix definition.",
      "zh-CHS": "为前缀定义分组前缀{description“配置数据。"
    },
    {
      "indent": 7,
      "text": "The combination of mask-length-lower and mask-length-upper define a range for the mask length or single 'exact' length if mask-length-lower and mask-length-upper are equal.",
      "zh-CHS": "“遮罩长度下限”和“遮罩长度上限”的组合定义了遮罩长度的范围，如果“遮罩长度下限”和“遮罩长度上限”相等，则定义单个“精确”长度。"
    },
    {
      "indent": 7,
      "text": "Example: 192.0.2.0/24 through 192.0.2.0/26 would be\nexpressed as prefix: 192.0.2.0/24,\n             mask-length-lower=24,\n             mask-length-upper=26",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": "Example: 192.0.2.0/24 (an exact match) would be\nexpressed as prefix: 192.0.2.0/24,\n             mask-length-lower=24,\n             mask-length-upper=24",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "     Example: 2001:DB8::/32 through 2001:DB8::/64 would be\n     expressed as prefix: 2001:DB8::/32,\n                  mask-length-lower=32,\n                  mask-length-upper=64\";\n  leaf ip-prefix {\n    type inet:ip-prefix;\n    mandatory true;\n    description\n      \"The IP prefix represented as an IPv6 or IPv4 network\n       number followed by a prefix length with an intervening\n       slash character as a delimiter.  All members of the\n       prefix-set MUST be of the same address family as the\n       prefix-set mode.\";\n  }\n  leaf mask-length-lower {\n    type uint8 {\n      range \"0..128\";\n    }\n    description\n      \"Mask length range lower bound.  It MUST NOT be less than\n       the prefix length defined in ip-prefix.\";\n  }\n  leaf mask-length-upper {\n    type uint8 {\n      range \"1..128\";\n    }\n    must '../mask-length-upper >= ../mask-length-lower' {\n      error-message \"The upper bound MUST NOT be less \"\n                  + \"than lower bound.\";\n    }\n    description\n      \"Mask length range upper bound.  It MUST NOT be less than\n       lower bound.\";\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping match-set-options-group {\n  description\n    \"Grouping containing options relating to how a particular set\n     will be matched.\";\n  leaf match-set-options {\n    type match-set-options-type;\n    description\n      \"Optional parameter that governs the behavior of the\n       match operation.\";\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping match-set-options-restricted-group {\n  description\n    \"Grouping for a restricted set of match operation\n     modifiers.\";\n  leaf match-set-options {\n    type match-set-options-type {\n      enum any {\n        description\n          \"Match is true if given value matches any\n           member of the defined set.\";\n      }\n      enum invert {\n        description\n          \"Match is true if given value does not match\n           any member of the defined set.\";\n      }\n    }\n    description\n      \"Optional parameter that governs the behavior of the\n       match operation.  This leaf only supports\n       the 'any' and 'invert' match options.\n       Matching on 'all' is not supported.\";\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "grouping apply-policy-group {\n  description\n    \"Top-level container for routing policy applications.  This\n     grouping is intended to be used in routing models where\n     needed.\";\n  container apply-policy {\n    description\n      \"Anchor point for routing policies in the model.\n       Import and export policies are with respect to the local\n       routing table, i.e., export (send) and import (receive),\n       depending on the context.\";\n    leaf-list import-policy {\n      type leafref {\n        path \"/rt-pol:routing-policy/rt-pol:policy-definitions/\"\n           + \"rt-pol:policy-definition/rt-pol:name\";\n        require-instance true;\n      }\n      ordered-by user;\n      description\n        \"List of policy names in sequence to be applied on\n         receiving redistributed routes from another routing\n         protocol or receiving a routing update in the current\n         context, e.g., for the current peer group, neighbor,\n         address family, etc.\";\n    }\n    leaf default-import-policy {\n      type default-policy-type;\n      default \"reject-route\";\n      description\n        \"Explicitly set a default policy if no policy definition\n         in the import policy chain is satisfied.\";\n    }\n    leaf-list export-policy {\n      type leafref {\n        path \"/rt-pol:routing-policy/rt-pol:policy-definitions/\"\n           + \"rt-pol:policy-definition/rt-pol:name\";\n        require-instance true;\n      }\n      ordered-by user;\n      description\n        \"List of policy names in sequence to be applied on\n         redistributing routes from one routing protocol to another\n         or sending a routing update in the current context, e.g.,\n         for the current peer group, neighbor, address family,\n         etc.\";\n    }\n    leaf default-export-policy {\n      type default-policy-type;\n      default \"reject-route\";\n      description\n        \"Explicitly set a default policy if no policy definition\n         in the export policy chain is satisfied.\";\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "  container routing-policy {\n    description\n      \"Top-level container for all routing policy.\";\n    container defined-sets {\n      description\n        \"Predefined sets of attributes used in policy match\n         statements.\";\n      container prefix-sets {\n        description\n          \"Data definitions for a list of IPv4 or IPv6\n           prefixes that are matched as part of a policy.\";\n        list prefix-set {\n          key \"name mode\";\n          description\n            \"List of the defined prefix sets\";\n          leaf name {\n            type string;\n            description\n              \"Name of the prefix set; this is used as a label to\n               reference the set in match conditions.\";\n          }\n          leaf mode {\n            type enumeration {\n              enum ipv4 {\n                description\n                  \"Prefix set contains IPv4 prefixes only.\";\n              }\n              enum ipv6 {\n                description\n                  \"Prefix set contains IPv6 prefixes only.\";\n              }\n            }\n            description\n              \"Indicates the mode of the prefix set in terms of\n               which address families (IPv4 or IPv6) are present.\n               The mode provides a hint; all prefixes MUST be of\n               the indicated type.  The device MUST validate\n               all prefixes and reject the configuration if there\n               is a discrepancy.\";\n          }\n          container prefixes {\n            description\n              \"Container for the list of prefixes in a policy\n               prefix list.  Since individual prefixes do not have\n               unique actions, the order in which the prefix in\n               prefix-list are matched has no impact on the outcome\n               and is left to the implementation.  A given prefix-set\n               condition is satisfied if the input prefix matches\n               any of the prefixes in the prefix-set.\";\n            list prefix-list {\n              key \"ip-prefix mask-length-lower mask-length-upper\";\n              description\n                \"List of prefixes in the prefix set.\";\n              uses prefix;\n            }\n          }\n        }\n      }\n      container neighbor-sets {\n        description\n          \"Data definition for a list of IPv4 or IPv6\n           neighbors that can be matched in a routing policy.\";\n        list neighbor-set {\n          key \"name\";\n          description\n            \"List of defined neighbor sets for use in policies.\";\n          leaf name {\n            type string;\n            description\n              \"Name of the neighbor set; this is used as a label\n               to reference the set in match conditions.\";\n          }\n          leaf-list address {\n            type inet:ip-address;\n            description\n              \"List of IP addresses in the neighbor set.\";\n          }\n        }\n      }\n      container tag-sets {\n        description\n          \"Data definitions for a list of tags that can\n           be matched in policies.\";\n        list tag-set {\n          key \"name\";\n          description\n            \"List of tag set definitions.\";\n          leaf name {\n            type string;\n            description\n              \"Name of the tag set; this is used as a label to\n               reference the set in match conditions.\";\n          }\n          leaf-list tag-value {\n            type tag-type;\n            description\n              \"Value of the tag set member.\";\n          }\n        }\n      }\n    }\n    container policy-definitions {\n      description\n        \"Enclosing container for the list of top-level policy\n         definitions.\";\n      leaf match-modified-attributes {\n        type boolean;\n        config false;\n        description\n          \"This boolean value dictates whether matches are performed\n           on the actual route attributes or route attributes\n           modified by policy statements preceding the match.\";\n      }\n      list policy-definition {\n        key \"name\";\n        description\n          \"List of top-level policy definitions, keyed by unique\n           name.  These policy definitions are expected to be\n           referenced (by name) in policy chains specified in\n           import or export configuration statements.\";\n        leaf name {\n          type string;\n          description\n            \"Name of the top-level policy definition; this name\n             is used in references to the current policy.\";\n        }\n        container statements {\n          description\n            \"Enclosing container for policy statements.\";\n          list statement {\n            key \"name\";\n            ordered-by user;\n            description\n              \"Policy statements group conditions and actions\n               within a policy definition.  They are evaluated in\n               the order specified.\";\n            leaf name {\n              type string;\n              description\n                \"Name of the policy statement.\";\n            }\n            container conditions {\n              description\n                \"Condition statements for the current policy\n                 statement.\";\n              leaf call-policy {\n                type leafref {\n                  path \"../../../../../../\"\n                     + \"rt-pol:policy-definitions/\"\n                     + \"rt-pol:policy-definition/rt-pol:name\";\n                  require-instance true;\n                }\n                description\n                  \"Applies the statements from the specified policy\n                   definition and then returns control to the current\n                   policy statement.  Note that the called policy\n                   may itself call other policies (subject to\n                   implementation limitations).  This is intended to\n                   provide a policy 'subroutine' capability.  The\n                   called policy SHOULD contain an explicit or a\n                   default route disposition that returns an\n                   effective true (accept-route) or false\n                   (reject-route); otherwise, the behavior may be\n                   ambiguous. The call-policy MUST NOT have been\n                   previously called without returning (i.e.,\n                   recursion is not allowed).\";\n              }\n              leaf source-protocol {\n                type identityref {\n                  base rt:control-plane-protocol;\n                }\n                description\n                  \"Condition to check the protocol / method used to\n                   install the route into the local routing table.\";\n              }\n              container match-interface {\n                leaf interface {\n                  type if:interface-ref;\n                  description\n                    \"Reference to a base interface.\";\n                }\n                description\n                  \"Container for interface match conditions\";\n              }\n              container match-prefix-set {\n                leaf prefix-set {\n                  type leafref {\n                    path \"../../../../../../../defined-sets/\"\n                       + \"prefix-sets/prefix-set/name\";\n                  }\n                  description\n                    \"References a defined prefix set.\";\n                }\n                uses match-set-options-restricted-group;\n                description\n                  \"Match a referenced prefix-set according to the\n                   logic defined in the match-set-options leaf.\";\n              }\n              container match-neighbor-set {\n                leaf neighbor-set {\n                  type leafref {\n                    path \"../../../../../../../defined-sets/\"\n                       + \"neighbor-sets/neighbor-set/name\";\n                    require-instance true;\n                  }\n                  description\n                    \"References a defined neighbor set.\";\n                }\n                description\n                  \"Match a referenced neighbor set.\";\n              }\n              container match-tag-set {\n                leaf tag-set {\n                  type leafref {\n                    path \"../../../../../../../defined-sets/\"\n                       + \"tag-sets/tag-set/name\";\n                    require-instance true;\n                  }\n                  description\n                    \"References a defined tag set.\";\n                }\n                uses match-set-options-group;\n                description\n                  \"Match a referenced tag set according to the logic\n                   defined in the match-set-options leaf.\";\n              }\n              container match-route-type {\n                description\n                  \"This container provides route-type match\n                   condition\";\n                leaf-list route-type {\n                  type identityref {\n                    base proto-route-type;\n                  }\n                  description\n                    \"Condition to check the protocol-specific type\n                     of route.  This is normally used during route\n                     importation to select routes or to set\n                     protocol-specific attributes based on the route\n                     type.\";\n                }\n              }\n            }\n            container actions {\n              description\n                \"Top-level container for policy action\n                 statements.\";\n              leaf policy-result {\n                type policy-result-type;\n                description\n                  \"Select the final disposition for the route,\n                   either accept or reject.\";\n              }\n              container set-metric {\n                leaf metric-modification {\n                  type metric-modification-type;\n                  description\n                    \"Indicates how to modify the metric.\";\n                }\n                leaf metric {\n                  type uint32;\n                  description\n                    \"Metric value to set, add, or subtract.\";\n                }\n                description\n                  \"Set the metric for the route.\";\n              }\n              container set-metric-type {\n                leaf metric-type {\n                  type identityref {\n                    base metric-type;\n                  }\n                  description\n                    \"Route metric type.\";\n                }\n                description\n                  \"Set the metric type for the route.\";\n              }\n              container set-route-level {\n                leaf route-level {\n                  type identityref {\n                    base route-level;\n                  }\n                  description\n                    \"Route import level.\";\n                }\n                description\n                  \"Set the level for importation or\n                   exportation of routes.\";\n              }\n              leaf set-route-preference {\n                type uint16;\n                description\n                  \"Set the preference for the route.  It is also\n                   known as 'administrative distance' and allows for\n                   selecting the preferred route among routes with\n                   the same destination prefix.  A smaller value is\n                   more preferred.\";\n              }\n              leaf set-tag {\n                type tag-type;\n                description\n                  \"Set the tag for the route.\";\n              }\n              leaf set-application-tag {\n                type tag-type;\n                description\n                  \"Set the application tag for the route.\n                   The application-specific tag is an additional tag\n                   that can be used by applications that require\n                   semantics and/or policy different from that of the\n                   tag.  For example, the tag is usually\n                   automatically advertised in OSPF AS-External Link\n                   State Advertisements (LSAs) while this\n                   application-specific tag is not advertised\n                   implicitly.\";\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "<CODE ENDS>\nmodule: ietf-routing-policy\n  +--rw routing-policy\n     +--rw defined-sets\n     |  +--rw prefix-sets\n     |  |  +--rw prefix-set* [name]\n     |  |     +--rw name        string\n     |  |     +--rw mode?       enumeration\n     |  |     +--rw prefixes\n     |  |        +--rw prefix-list* [ip-prefix mask-length-lower\n     |  |                            mask-length-upper]\n     |  |           +--rw ip-prefix            inet:ip-prefix\n     |  |           +--rw mask-length-lower    uint8\n     |  |           +--rw mask-length-upper    uint8\n     |  +--rw neighbor-sets\n     |  |  +--rw neighbor-set* [name]\n     |  |     +--rw name       string\n     |  |     +--rw address*   inet:ip-address\n     |  +--rw tag-sets\n     |  |  +--rw tag-set* [name]\n     |  |     +--rw name         string\n     |  |     +--rw tag-value*   tag-type\n     |  +--rw bp:bgp-defined-sets\n     |     +--rw bp:community-sets\n     |     |  +--rw bp:community-set* [name]\n     |     |     +--rw bp:name      string\n     |     |     +--rw bp:member*   union\n     |     +--rw bp:ext-community-sets\n     |     |  +--rw bp:ext-community-set* [name]\n     |     |     +--rw bp:name      string\n     |     |     +--rw bp:member*   union\n     |     +--rw bp:as-path-sets\n     |        +--rw bp:as-path-set* [name]\n     |           +--rw bp:name      string\n     |           +--rw bp:member*   string\n     +--rw policy-definitions\n        +--ro match-modified-attributes?   boolean\n        +--rw policy-definition* [name]\n           +--rw name          string\n           +--rw statements\n              +--rw statement* [name]\n                 +--rw name          string\n                 +--rw conditions\n                 |  +--rw call-policy?\n                 |  +--rw source-protocol?          identityref\n                 |  +--rw match-interface\n                 |  |  +--rw interface?        if:interface-ref\n                 |  +--rw match-prefix-set\n                 |  |  +--rw prefix-set?       prefix-set/name\n                 |  |  +--rw match-set-options?\n                 |  |                         match-set-options-type\n                 |  +--rw match-neighbor-set\n                 |  |  +--rw neighbor-set?\n                 |  +--rw match-tag-set\n                 |  |  +--rw tag-set?\n                 |  |  +--rw match-set-options?\n                 |  |                         match-set-options-type\n                 |  +--rw match-route-type\n                 |     +--rw route-type*     identityref\n                 |  +--rw bp:bgp-conditions\n                 |     +--rw bp:med-eq?       uint32\n                 |     +--rw bp:origin-eq?    bt:bgp-origin-attr-type\n                 |     +--rw bp:next-hop-in*  inet:ip-address-no-zone\n                 |     +--rw bp:afi-safi-in*  identityref\n                 |     +--rw bp:local-pref-eq?  uint32\n                 |     +--rw bp:route-type?     enumeration\n                 |     +--rw bp:community-count\n                 |     +--rw bp:as-path-length\n                 |     +--rw bp:match-community-set\n                 |     |  +--rw bp:community-set?\n                 |     |  +--rw bp:match-set-options?\n                 |     +--rw bp:match-ext-community-set\n                 |     |  +--rw bp:ext-community-set?\n                 |     |  +--rw bp:match-set-options?\n                 |     +--rw bp:match-as-path-set\n                 |        +--rw bp:as-path-set?\n                 |        +--rw bp:match-set-options?\n                 +--rw actions\n                    +--rw policy-result?         policy-result-type\n                    +--rw set-metric\n                    |  +--rw metric-modification?\n                    |  +--rw metric?                uint32\n                    +--rw set-metric-type\n                    |  +--rw metric-type?   identityref\n                    +--rw set-route-level\n                    |  +--rw route-level?   identityref\n                    +--rw set-route-preference?        uint16\n                    +--rw set-tag?               tag-type\n                    +--rw set-application-tag?   tag-type\n                    +--rw bp:bgp-actions\n                       +--rw bp:set-route-origin?\n                       |                    bt:bgp-origin-attr-type\n                       +--rw bp:set-local-pref?   uint32\n                       +--rw bp:set-next-hop?     bgp-next-hop-type\n                       +--rw bp:set-med?          bgp-set-med-type\n                       +--rw bp:set-as-path-prepend\n                       |  +--rw bp:repeat-n?   uint8\n                       +--rw bp:set-community\n                       |  +--rw bp:method?      enumeration\n                       |  +--rw bp:options?\n                       |  +--rw bp:inline\n                       |  |  +--rw bp:communities*   union\n                       |  +--rw bp:reference\n                       |     +--rw bp:community-set-ref?\n                       +--rw bp:set-ext-community\n                          +--rw bp:method?      enumeration\n                          +--rw bp:options?\n                          +--rw bp:inline\n                          |  +--rw bp:communities*   union\n                          +--rw bp:reference\n                             +--rw bp:ext-community-set-ref?",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 2,
      "text": "<config xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n  <routing-policy\n   xmlns=\"urn:ietf:params:xml:ns:yang:ietf-routing-policy\">",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 7,
      "text": " <defined-sets>\n   <prefix-sets>\n     <prefix-set>\n       <name>prefix-set-A</name>\n       <mode>ipv4</mode>\n       <prefixes>\n         <prefix-list>\n           <ip-prefix>192.0.2.0/24</ip-prefix>\n           <mask-length-lower>24</mask-length-lower>\n           <mask-length-upper>32</mask-length-upper>\n         </prefix-list>\n         <prefix-list>\n           <ip-prefix>198.51.100.0/24</ip-prefix>\n           <mask-length-lower>24</mask-length-lower>\n           <mask-length-upper>32</mask-length-upper>\n         </prefix-list>\n       </prefixes>\n     </prefix-set>\n     <prefix-set>\n       <name>prefix-set-B</name>\n       <mode>ipv6</mode>\n         <prefixes>\n         <prefix-list>\n           <ip-prefix>2001:DB8::/32</ip-prefix>\n           <mask-length-lower>32</mask-length-lower>\n           <mask-length-upper>64</mask-length-upper>\n         </prefix-list>\n       </prefixes>\n     </prefix-set>\n    </prefix-sets>\n    <tag-sets>\n     <tag-set>\n      <name>cust-tag1</name>\n      <tag-value>10</tag-value>\n    </tag-set>\n  </tag-sets>\n</defined-sets>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 6,
      "text": " <policy-definitions>\n  <policy-definition>\n    <name>export-tagged-BGP</name>\n    <statements>\n      <statement>\n        <name>term-0</name>\n        <conditions>\n          <match-prefix-set>\n            <prefix-set>prefix-set-A</prefix-set>\n          </match-prefix-set>\n          <match-tag-set>\n            <tag-set>cust-tag1</tag-set>\n          </match-tag-set>\n        </conditions>\n        <actions>\n          <policy-result>accept-route</policy-result>\n        </actions>\n      </statement>\n    </statements>\n  </policy-definition>\n</policy-definitions>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "      </routing-policy>\n</config>",
      "raw": true,
      "zh-CHS": " "
    },
    {
      "indent": 0,
      "text": "<config xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n  <routing-policy\n   xmlns=\"urn:ietf:params:xml:ns:yang:ietf-routing-policy\">\n   <policy-definitions>\n    <policy-definition>\n     <name>export-all-OSPF-prefixes-into-IS-IS-level-2</name>\n      <statements>\n       <statement>\n         <name>term-0</name>\n         <conditions>\n           <match-route-type>\n             <route-type>ospf-internal-type</route-type>\n           </match-route-type>\n         </conditions>\n         <actions>\n           <set-route-level>\n             <route-level>isis-level-2</route-level>\n           </set-route-level>\n           <policy-result>accept-route</policy-result>\n         </actions>\n       </statement>\n      </statements>\n    </policy-definition>\n   </policy-definitions>\n  </routing-policy>\n</config>",
      "raw": true,
      "zh-CHS": " "
    }
  ]
}